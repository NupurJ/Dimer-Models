(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    660109,      12563]
NotebookOptionsPosition[    629110,      11996]
NotebookOutlinePosition[    647838,      12413]
CellTagsIndexPosition[    647795,      12410]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["", "CodeText",ExpressionUUID->"ec0c784a-ce9d-4c5a-b232-cf84abfadbcd"],

Cell[TextData[{
 StyleBox["WARNING", "Subtitle"],
 ": The dimension of the cube should never be even! The initial cubes will be \
invalid. I should probably introduce a check to prevent accidents..."
}], "Text",
 CellChangeTimes->{{3.912416699794735*^9, 3.9124167114307404`*^9}, {
  3.9124167607999697`*^9, 3.9124168075457*^9}, {3.9154126043786182`*^9, 
  3.915412605049501*^9}},ExpressionUUID->"1c0f1225-b49f-4433-89f2-\
3809bd6fabfe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Ideas", ":", "\n", 
  RowBox[{"-", " ", 
   RowBox[{"ListPlot3D", "[", "]"}]}], " ", ":", " ", 
  RowBox[{"plot", " ", "height", " ", "function"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"-", " ", "try"}], " ", "colours", " ", "\"\<Tomato\>\""}], ",", 
  " ", "\"\<Gold\>\"", ",", " ", "\"\<LawnGreen\>\"", ",", " ", 
  "\"\<SteelBlue\>\""}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"-", " ", 
    RowBox[{"Image3D", "[", "]"}]}], " ", "with", " ", 
   RowBox[{"Image3DSlices", "[", "]"}]}], ":", " ", 
  RowBox[{"prints", " ", "all", " ", "slices"}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"ListDensityPlot", "[", "]"}]}], ":", " ", 
  RowBox[{
  "useful", " ", "if", " ", "we", " ", "want", " ", "to", " ", 
   "blur"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"-", " ", 
    RowBox[{"ListContourPlot", "[", "]"}]}], ":", " ", 
   RowBox[{"gives", " ", "contours"}]}], " "}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"ListVectorPlot", "[", "]"}]}], ",", " ", 
  RowBox[{"ListVectorPlot3D", "[", "]"}], ",", " ", 
  RowBox[{"ListStreamPlot", "[", "]"}], ",", " ", 
  RowBox[{"ListStreamPlot3D", "[", "]"}], ",", " ", 
  RowBox[{
   RowBox[{"ListSliceVectorPlot3D", "[", "]"}], ":", " ", 
   RowBox[{"for", " ", 
    RowBox[{"flows", "?", " ", 
     RowBox[{"(", 
      RowBox[{
      "look", " ", "at", " ", "density", " ", "functions", " ", "also"}], 
      ")"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"ArrayPlot3D", "[", "]"}]}], ",", " ", 
  RowBox[{"Raster3D", "[", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"Graphics3D", "[", "]"}]}], ":", " ", 
  RowBox[{
  "example", " ", "on", " ", "website", " ", "tells", " ", "you", " ", "how", 
   " ", "to", " ", "space", " ", "your", " ", "cell"}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"RegionPlot3D", "[", "]"}]}], ":", " ", 
  RowBox[{
  "shows", " ", "only", " ", "region", " ", "for", " ", "which", " ", "pred", 
   " ", "is", " ", "True"}]}]}], "Code",
 CellChangeTimes->{{3.8961935040712976`*^9, 3.8961935381558247`*^9}, {
   3.896194936842407*^9, 3.896194938170011*^9}, {3.8961976953367853`*^9, 
   3.8961977638117313`*^9}, {3.896198335144771*^9, 3.896198366856309*^9}, {
   3.8961986608628683`*^9, 3.896198674854718*^9}, {3.896198716270617*^9, 
   3.896198716661545*^9}, {3.896198782094411*^9, 3.896198791070257*^9}, {
   3.8961989110295343`*^9, 3.8961989204212313`*^9}, {3.896198964157205*^9, 
   3.896198979236967*^9}, {3.89619921442766*^9, 3.896199283091106*^9}, {
   3.896199362138769*^9, 3.896199418306302*^9}, {3.896328007182756*^9, 
   3.8963280077184763`*^9}, 3.912310676550824*^9},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[1]:=",ExpressionUUID->"e646de66-4019-4a45-9f24-b862c681f906"],

Cell[BoxData[
 TemplateBox[{
  "ListPlot3D", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"ListPlot3D\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) arguments; 1 argument is expected.\"", 2, 1, 
   1, 34808859521578452723, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913938676697691*^9, 3.915376130563591*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"4e896bef-be97-4176-9320-885695276cad"],

Cell[BoxData[
 RowBox[{"Ideas", ":", 
  RowBox[{"-", 
   RowBox[{"ListPlot3D", "[", "]"}]}], ":", 
  RowBox[{"function", " ", "height", " ", "plot"}]}]], "Output",
 CellChangeTimes->{3.913938676706901*^9, 3.915376130568557*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"16f1a296-eb73-47de-b328-a8609255a50c"]
}, Open  ]],

Cell["\<\
Ideas for visualisation:
- layers with slider. all three dimensions. either together or separately. \
maybe make both for safety. also have height plot. 
- translucent cells? - DOES NOT WORK
- get max height cell from both max and min grids and scale.\
\>", "Text",
 CellChangeTimes->{{3.912187496858489*^9, 3.9121875178478317`*^9}, {
  3.912187612260333*^9, 3.912187642990597*^9}, {3.9122412710676527`*^9, 
  3.912241278745646*^9}, {3.9122413209842653`*^9, 
  3.9122413417334547`*^9}},ExpressionUUID->"7def9534-b5ec-46ec-afcf-\
1dbb61179113"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<DarkMode\>\"", "]"}], "[", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Off", "[", "\"\<Packing\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.915376906617364*^9, 3.915376937834733*^9}, {
  3.915413053933343*^9, 3.915413054268485*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"5bd8729e-1b5d-4b5f-b063-cb7f0991f434"],

Cell["Output Locations", "Text",
 CellChangeTimes->{{3.9120763950365133`*^9, 
  3.9120763988073053`*^9}},ExpressionUUID->"8a942dd6-5ed6-43b7-bf58-\
29d355d7d106"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"currDir", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"logDir", " ", "=", " ", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"currDir", ",", " ", "\"\<3D output files/\>\""}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.912076419771578*^9, 3.9120764205557737`*^9}, {
   3.912310139246233*^9, 3.912310139990097*^9}, 3.912311323635508*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"25294259-c6c3-46b8-9874-58800bbfe360"],

Cell["\<\
Colour Templates
(uncomment displaySwatches[] to pick a colour!)\
\>", "Text",
 CellChangeTimes->{
  3.9120763846005793`*^9},ExpressionUUID->"137fda44-2f58-466e-b9cf-\
77f14954051f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rybColourRules", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "->", "Red"}], ",", 
     RowBox[{"1", "->", "Yellow"}], ",", 
     RowBox[{"2", "->", "Blue"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rybDarkColourRules", " ", "=", " ", "\"\<DarkRainbow\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"fancyColourRules", " ", "=", " ", "\"\<CandyColors\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"blueColourRules", " ", "=", " ", "\"\<DeepSeaColors\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"pinkColourRules", " ", "=", " ", "\"\<ValentineTones\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"orangeColourRules", " ", "=", " ", "\"\<SolarColors\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tigerColourRules", " ", "=", " ", "\"\<SunsetColors\>\""}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaySwatch", "[", "colourFunction_", "]"}], " ", ":=", " ", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"i", " ", "+", " ", "j"}], " ", "<", " ", "21"}], ",", 
           " ", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"i", " ", "+", " ", "j"}], ",", " ", "21"}], "]"}], ",", 
           " ", 
           RowBox[{"21", " ", "-", " ", "2", " ", "-", " ", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"i", " ", "+", " ", "j"}], ",", " ", "21"}], "]"}]}]}], 
          "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "0", ",", " ", 
           RowBox[{"21", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"j", ",", " ", "0", ",", " ", 
           RowBox[{"21", " ", "-", " ", "1"}]}], "}"}]}], "]"}], ",", "3"}], 
      "]"}], ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "colourFunction"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaySwatches", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gradients", " ", "=", " ", 
        RowBox[{"ColorData", "[", "\"\<Gradients\>\"", "]"}]}], ",", " ", 
       RowBox[{"len", " ", "=", " ", 
        RowBox[{"Length", "[", 
         RowBox[{"ColorData", "[", "\"\<Gradients\>\"", "]"}], "]"}]}], ",", 
       " ", 
       RowBox[{"swatches", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", " ", 
       RowBox[{"i", " ", "=", " ", "0"}]}], "}"}], ",", " ", "\n", "\t", 
     RowBox[{"Grid", "[", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{"Nest", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", " ", 
             RowBox[{"displaySwatch", "[", 
              RowBox[{"gradients", "[", 
               RowBox[{"[", 
                RowBox[{"i", "++"}], "]"}], "]"}], "]"}]}], "]"}], " ", "&"}],
           ",", " ", "swatches", ",", " ", 
          RowBox[{"len", " ", "+", " ", "1"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Ceiling", "[", 
           RowBox[{"len", " ", "/", " ", "6"}], "]"}], ",", "6"}], "}"}]}], 
       "]"}], "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"displaySwatches", "[", "]"}], "*)"}]}]}], "Code",
 CellChangeTimes->{{3.913939429836048*^9, 3.913939434143519*^9}, {
   3.913939710772131*^9, 3.913939713044446*^9}, {3.915376141586418*^9, 
   3.915376157521748*^9}, 3.9156761026744547`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"27a3c9a8-323b-4c69-ac0d-666ac9c09b77"],

Cell["\<\
The following codeblock contains functions that will be evaluated either at \
the beginning or at the end of the simulation. They generate min/max height \
grids, and go between 3-coloured grids to height grids.\
\>", "Text",
 CellChangeTimes->{
  3.9120770127480183`*^9},ExpressionUUID->"ba87411f-0479-4ab8-9fa6-\
a40adbcfb0e3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"initialFaceGrid2D", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", " ", "+", " ", "j"}], " ", "<=", " ", 
       RowBox[{"n", " ", "-", " ", "1"}]}], ",", " ", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"i", " ", "+", " ", "j"}], ",", " ", "n"}], "]"}], ",", " ", 
      RowBox[{"n", " ", "-", " ", "2", " ", "-", " ", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"i", " ", "+", " ", "j"}], ",", " ", "n"}], "]"}]}]}], "]"}],
     ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "0", ",", " ", 
      RowBox[{"n", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"j", ",", " ", "0", ",", " ", 
      RowBox[{"n", " ", "-", " ", "1"}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"initialCubeBorder", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cube", " ", "=", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"n", ",", " ", "n", ",", " ", "n"}], "}"}]}], "]"}]}], ",",
        " ", "\n", "\t", 
       RowBox[{"top", " ", "=", " ", 
        RowBox[{"initialFaceGrid2D", "[", "n", "]"}]}], ",", "\n", "\t", 
       RowBox[{"bottom", " ", "=", " ", 
        RowBox[{"Reverse", "[", 
         RowBox[{
          RowBox[{"initialFaceGrid2D", "[", "n", "]"}], ",", " ", 
          RowBox[{"{", "1", "}"}]}], "]"}]}]}], "}"}], ",", " ", "\n", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "top"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "bottom"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "1", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "top"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "n", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "bottom"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "All", ",", " ", "1"}], "]"}], "]"}], " ", 
       "=", " ", "top"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "All", ",", " ", "n"}], "]"}], "]"}], " ", 
       "=", " ", "bottom"}], ";", "\n", " ", "cube"}]}], "\n", " ", "]"}]}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Takes", " ", "a", " ", "grid", " ", "with", " ", "a", " ", "filled", " ",
      "in", " ", "height", " ", "function", " ", "as", " ", "input", " ", 
     "and", " ", "converts", " ", "it", " ", "to", " ", "its", " ", 
     "corresponding", " ", "3"}], "-", 
    RowBox[{"colouring", " ", 
     RowBox[{"form", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"to3Colouring", "[", "grid_", "]"}], " ", ":=", " ", 
   RowBox[{"Mod", "[", 
    RowBox[{"grid", ",", " ", "3"}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Helper", " ", "function", " ", "for", " ", "toHeightFunction"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"findListHeight", "[", 
    RowBox[{"first_", ",", " ", "list_", ",", " ", "len_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"initialList", " ", "=", " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", " ", 
          RowBox[{"{", "len", "}"}], ",", " ", 
          RowBox[{"-", "1"}]}], "]"}]}], ",", " ", 
       RowBox[{"k", " ", "=", " ", "0"}], ",", " ", 
       RowBox[{"prev", " ", "=", " ", "first"}]}], "}"}], ",", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "remember", " ", "that", " ", "list", " ", "is", " ", "of", " ", 
       "length", " ", 
       RowBox[{"(", 
        RowBox[{"len", " ", "+", " ", "1"}], ")"}]}], " ", "*)"}], "\n", " ", 
     
     RowBox[{"Nest", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k", "++"}], ";", " ", 
          RowBox[{"newList", " ", "=", " ", "#"}], ";", " ", 
          RowBox[{"prev", " ", "=", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"list", "[", 
                RowBox[{"[", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", " ", 
                   RowBox[{"k", " ", "+", " ", "1"}]}], "}"}], "]"}], "]"}], 
               ",", " ", "1"}], "]"}], ",", " ", 
             RowBox[{"prev", " ", "+", " ", 
              RowBox[{"list", "[", 
               RowBox[{"[", 
                RowBox[{"k", " ", "+", " ", "1"}], "]"}], "]"}], " ", "-", 
              " ", 
              RowBox[{"list", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ",", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"list", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], " ", "==", " ", "2"}], ",", 
               " ", 
               RowBox[{"prev", " ", "+", " ", "1"}], ",", " ", 
               RowBox[{"prev", " ", "-", " ", "1"}]}], "]"}]}], "]"}]}], ";", 
          " ", 
          RowBox[{
           RowBox[{"newList", "[", 
            RowBox[{"[", "k", "]"}], "]"}], " ", "=", " ", "prev"}], ";", " ",
           "newList"}], " ", ")"}], " ", "&"}], " ", ",", " ", 
       RowBox[{"Normal", "[", "initialList", "]"}], ",", " ", "len"}], 
      "]"}]}], "\n", "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Takes", " ", "a", " ", "3"}], "-", 
    RowBox[{
    "coloured", " ", "grid", " ", "as", " ", "input", " ", "and", " ", 
     "returns", " ", "the", " ", "corresponding", " ", "grid", " ", 
     "labelled", " ", "with", " ", "its", " ", "height", " ", 
     RowBox[{"values", "."}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Edit", ":", " ", 
     RowBox[{
      RowBox[{
      "we", " ", "now", " ", "convert", " ", "our", " ", "grid", " ", "to", 
       " ", "a", " ", "3"}], "-", 
      RowBox[{"coloured", " ", "grid", " ", "before", " ", "computing"}]}]}], 
    ",", " ", 
    RowBox[{
    "so", " ", "it", " ", "gives", " ", "the", " ", "correct", " ", "output", 
     " ", "on", " ", "every", " ", 
     RowBox[{"grid", "!"}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Note", ":", " ", 
    RowBox[{
    "this", " ", "starts", " ", "with", " ", "the", " ", "initial", " ", 
     "border", " ", "grid"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toHeightFunction", "[", "grid_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"Length", "[", "grid", "]"}]}], ",", " ", 
       RowBox[{"heightGrid", " ", "=", " ", 
        RowBox[{"initialGridBorder", "[", 
         RowBox[{"Length", "[", "grid", "]"}], "]"}]}], ",", " ", 
       RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
       RowBox[{"cgrid", " ", "=", " ", 
        RowBox[{"to3Colouring", "[", "grid", "]"}]}]}], "}"}], ",", "\n", 
     "  ", 
     RowBox[{"Nest", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k", "++"}], ";", " ", 
          RowBox[{"nextHeightGrid", " ", "=", " ", "#"}], ";", " ", 
          RowBox[{
           RowBox[{"nextHeightGrid", "[", 
            RowBox[{"[", 
             RowBox[{"k", ",", " ", 
              RowBox[{"2", " ", ";;", " ", 
               RowBox[{"-", "2"}]}]}], "]"}], "]"}], " ", "=", " ", 
           RowBox[{"findListHeight", "[", 
            RowBox[{
             RowBox[{"heightGrid", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
             RowBox[{"Normal", "[", 
              RowBox[{"cgrid", "[", 
               RowBox[{"[", 
                RowBox[{"k", ",", " ", 
                 RowBox[{"1", " ", ";;", " ", 
                  RowBox[{"-", "2"}]}]}], "]"}], "]"}], "]"}], ",", " ", 
             RowBox[{"dim", " ", "-", " ", "2"}]}], "]"}]}], ";", " ", 
          "nextHeightGrid"}], ")"}], " ", "&"}], ",", " ", "heightGrid", ",", 
       " ", 
       RowBox[{"dim", " ", "-", " ", "2"}]}], "]"}]}], " ", "\n", "]"}]}], 
  " ", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculates", " ", "the", " ", "sum", " ", "of", " ", "absolute", " ", 
    "differences", " ", "between", " ", "the", " ", "heights", " ", "of", " ",
     "corresponding", " ", "sites", " ", "in", " ", "the", " ", "input", " ", 
    "grids"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkHeightDifference", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"cube1", " ", "-", " ", "cube2"}], "]"}], ",", " ", "3"}], 
    "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Format", " ", "time"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"displayTime", "[", "time_", "]"}], " ", ":=", " ", 
  RowBox[{"DateString", "[", 
   RowBox[{"time", ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Hour\>\"", ",", " ", "\"\<:\>\"", ",", " ", "\"\<Minute\>\"", ",", 
      " ", "\"\<:\>\"", ",", " ", "\"\<Second\>\""}], "}"}]}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.9120775054307423`*^9, 3.9120775067779837`*^9}, {
   3.912236781613709*^9, 3.912236784533803*^9}, {3.912236856073638*^9, 
   3.912236858110496*^9}, {3.912236890690868*^9, 3.91223689407804*^9}, {
   3.912236933342312*^9, 3.912236950895697*^9}, {3.912238117368524*^9, 
   3.912238135414617*^9}, {3.91223818189043*^9, 3.912238216275185*^9}, {
   3.912238254847288*^9, 3.912238282381641*^9}, 3.91223831988457*^9, {
   3.912239306719515*^9, 3.912239306965551*^9}, {3.912239965731444*^9, 
   3.912239973579812*^9}, 3.912240790010014*^9, {3.912315528465104*^9, 
   3.912315530338512*^9}, {3.912315569715016*^9, 3.91231559464865*^9}, 
   3.9123184634983463`*^9, 3.912318654468335*^9, {3.912318858454385*^9, 
   3.9123188625075274`*^9}, {3.912414084111382*^9, 3.912414090690804*^9}, 
   3.9139386821532*^9, {3.915744166076812*^9, 3.9157441667225*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"fcac06f5-8334-4b9b-ad54-5a70c0e8fdd2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"generateMaxCube", "[", "dim_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cube", " ", "=", " ", 
        RowBox[{"initialCubeBorder", "[", "dim", "]"}]}], "}"}], ",", " ", 
      "\n", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cube", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], 
        "}"}], " ", "~", " ", "Join", " ", "~", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"generateMaxHeightGrid", "[", 
          RowBox[{"dim", ",", " ", 
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}]}], 
          "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "2", ",", " ", "6"}], "}"}]}], "]"}], " ", 
       "~", " ", "Join", " ", "~", " ", 
       RowBox[{"{", 
        RowBox[{"cube", "[", 
         RowBox[{"[", 
          RowBox[{"7", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], 
        "}"}]}]}], "]"}]}], "*)"}], "\n", " ", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"generateMaxCube", "[", "dim_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cube", " ", "=", " ", 
         RowBox[{"initialCubeBorder", "[", "dim", "]"}]}], ",", " ", 
        RowBox[{"depth", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dim", " ", "+", " ", "1"}], ")"}], " ", "/", " ", "2"}]}],
         ",", " ", "nextLevelTop", ",", " ", "nextLevelBottom"}], "}"}], ",", 
      "  ", "\n", " ", 
      RowBox[{
       RowBox[{"Do", "[", "\n", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"nextLevelTop", " ", "=", " ", 
           RowBox[{
            RowBox[{"cube", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "+", " ", "1"}]}], 
          ";", "\n", " ", 
          RowBox[{"nextLevelBottom", " ", "=", " ", 
           RowBox[{"Reverse", "[", 
            RowBox[{"nextLevelTop", ",", " ", 
             RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i"}], "]"}], "]"}], " ", "=", 
           " ", "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "2", ",", " ", "depth"}], "}"}]}], "]"}], 
       ";", "\n", " ", "cube"}]}], "]"}]}], " ", "\n", " ", "\n", 
   RowBox[{
    RowBox[{"generateMinCube", "[", "dim_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cube", " ", "=", " ", 
         RowBox[{"initialCubeBorder", "[", "dim", "]"}]}], ",", " ", 
        RowBox[{"depth", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dim", " ", "+", " ", "1"}], ")"}], " ", "/", " ", "2"}]}],
         ",", " ", "nextLevelTop", ",", " ", "nextLevelBottom"}], "}"}], ",", 
      "  ", "\n", " ", 
      RowBox[{
       RowBox[{"Do", "[", "\n", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"nextLevelTop", " ", "=", " ", 
           RowBox[{
            RowBox[{"cube", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "-", " ", "1"}]}], 
          ";", "\n", " ", 
          RowBox[{"nextLevelBottom", " ", "=", " ", 
           RowBox[{"Reverse", "[", 
            RowBox[{"nextLevelTop", ",", " ", 
             RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i"}], "]"}], "]"}], " ", "=", 
           " ", "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "2", ",", " ", "depth"}], "}"}]}], "]"}], 
       ";", "\n", " ", "cube"}]}], "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.895851743137969*^9, 3.895851743139699*^9}, 
   3.895924359871799*^9, {3.89592453810701*^9, 3.895924578194954*^9}, {
   3.8959252186688757`*^9, 3.895925220809202*^9}, {3.895925524859675*^9, 
   3.8959256363294773`*^9}, {3.8959256734090548`*^9, 3.895925702131855*^9}, {
   3.8959258099186487`*^9, 3.895925816806987*^9}, {3.8959259730488577`*^9, 
   3.895926282836673*^9}, {3.8959265493100758`*^9, 3.895926662644783*^9}, {
   3.895926706278529*^9, 3.895926786482958*^9}, {3.895926821613821*^9, 
   3.895926844925844*^9}, {3.895926900435109*^9, 3.895926936672982*^9}, {
   3.895926973114499*^9, 3.8959269735383453`*^9}, {3.895927198189516*^9, 
   3.895927215223157*^9}, {3.895927252199391*^9, 3.895927286790578*^9}, {
   3.895927406293037*^9, 3.895927410636898*^9}, {3.895927797828179*^9, 
   3.895927846144252*^9}, {3.89592793271642*^9, 3.8959279929073544`*^9}, {
   3.895931126242578*^9, 3.895931154621812*^9}, {3.8959313015059223`*^9, 
   3.895931377045375*^9}, {3.8959323011157093`*^9, 3.895932313219329*^9}, {
   3.895932461177787*^9, 3.8959325714721403`*^9}, {3.895932678723037*^9, 
   3.895932757580627*^9}, {3.8959328868123503`*^9, 3.895932888159932*^9}, {
   3.895935459823525*^9, 3.895935511447383*^9}, {3.8959357274782267`*^9, 
   3.8959357371406116`*^9}, {3.895936585436318*^9, 3.895936664508355*^9}, {
   3.89593717123914*^9, 3.895937174638939*^9}, {3.895937700482608*^9, 
   3.89593781260238*^9}, {3.895937851834051*^9, 3.895937883000745*^9}, {
   3.8959385051235247`*^9, 3.895938554533948*^9}, {3.89593860441994*^9, 
   3.895938624564167*^9}, {3.895938669851734*^9, 3.895938702339554*^9}, {
   3.895938816474195*^9, 3.895938875201742*^9}, {3.89593897753822*^9, 
   3.8959390346086817`*^9}, {3.895939281351036*^9, 3.8959394332172203`*^9}, {
   3.895939477153347*^9, 3.895939545154372*^9}, {3.895939589287294*^9, 
   3.895939606036065*^9}, {3.8959396848508453`*^9, 3.8959397130195103`*^9}, {
   3.8959398017319927`*^9, 3.895939804211789*^9}, {3.8959398409789457`*^9, 
   3.8959399341642437`*^9}, {3.895940025532848*^9, 3.8959400487644033`*^9}, {
   3.895940116780529*^9, 3.895940226988255*^9}, {3.895940507003642*^9, 
   3.8959405075474253`*^9}, {3.8959405866897993`*^9, 3.895940671176176*^9}, {
   3.895940703692581*^9, 3.8959407116663027`*^9}, {3.895940754848997*^9, 
   3.89594075729636*^9}, {3.8959407924797487`*^9, 3.895940922519642*^9}, {
   3.895940955351569*^9, 3.89594096823952*^9}, {3.895941016398425*^9, 
   3.8959411012133713`*^9}, {3.8959416217422657`*^9, 
   3.8959416510212517`*^9}, {3.895941751587575*^9, 3.895941811835779*^9}, {
   3.8959418894383717`*^9, 3.895941941232431*^9}, {3.8959420049647017`*^9, 
   3.895942005128944*^9}, {3.8959420661853848`*^9, 3.8959420678330383`*^9}, {
   3.895942138071947*^9, 3.8959422674461203`*^9}, 3.8959423198197193`*^9, {
   3.895942374462367*^9, 3.895942384931842*^9}, 3.895942746413762*^9, {
   3.8959427883930693`*^9, 3.895942810457045*^9}, {3.8959428545690527`*^9, 
   3.895942859976574*^9}, {3.895942894983653*^9, 3.8959428979759197`*^9}, {
   3.895942937507091*^9, 3.895942937591359*^9}, {3.895943262735242*^9, 
   3.895943267316884*^9}, {3.895966917004333*^9, 3.8959669469986143`*^9}, {
   3.895966997823306*^9, 3.89596704386239*^9}, {3.89596809177496*^9, 
   3.895968142191331*^9}, {3.8959682178881483`*^9, 3.8959682261725473`*^9}, {
   3.896029050033618*^9, 3.896029068137042*^9}, {3.8960291353107023`*^9, 
   3.896029139532143*^9}, {3.89602917515187*^9, 3.896029247645176*^9}, {
   3.8961074083514023`*^9, 3.8961076271262617`*^9}, {3.896108202159047*^9, 
   3.896108217674529*^9}, {3.89612133484925*^9, 3.896121334879374*^9}, {
   3.896333926923399*^9, 3.896333957460273*^9}, {3.8963342115459137`*^9, 
   3.8963342124743032`*^9}, {3.896334412981388*^9, 3.896334437790207*^9}, 
   3.8963344724866858`*^9, {3.8963347829749804`*^9, 3.896334788763483*^9}, {
   3.896337232426865*^9, 3.896337241139146*^9}, {3.896337276290044*^9, 
   3.896337298000836*^9}, {3.89633757679998*^9, 3.8963376254077663`*^9}, {
   3.8963376957588987`*^9, 3.896337842910202*^9}, {3.896337873366638*^9, 
   3.896337890286662*^9}, {3.8963379309026833`*^9, 3.89633795526123*^9}, {
   3.896338010019981*^9, 3.8963380326993437`*^9}, {3.8963381139954643`*^9, 
   3.896338122499373*^9}, {3.896338203438754*^9, 3.896338210235207*^9}, {
   3.8963382822578373`*^9, 3.896338305210328*^9}, 3.8963383916974993`*^9, {
   3.8963483268507853`*^9, 3.896348424583952*^9}, {3.896348514567173*^9, 
   3.896348516114107*^9}, {3.896348558057222*^9, 3.8963486335051517`*^9}, {
   3.8963487681597023`*^9, 3.896348850607461*^9}, {3.8963489171436357`*^9, 
   3.896348921088109*^9}, {3.8963489775137453`*^9, 3.896348990512315*^9}, {
   3.896349024592252*^9, 3.896349031358507*^9}, {3.896349186133471*^9, 
   3.896349204749407*^9}, {3.8963716164542627`*^9, 3.896371655926025*^9}, {
   3.896371756413437*^9, 3.896371790636338*^9}, {3.896372567219589*^9, 
   3.896372571050908*^9}, {3.896373316915986*^9, 3.896373358291664*^9}, {
   3.896407376844158*^9, 3.896407406656273*^9}, {3.89640745709867*^9, 
   3.8964074616951942`*^9}, {3.896407601239127*^9, 3.89640761911943*^9}, {
   3.896407650855463*^9, 3.896407652271559*^9}, {3.896407682339316*^9, 
   3.896407714302945*^9}, 3.8964078818960533`*^9, {3.896408474561571*^9, 
   3.8964084797293053`*^9}, {3.8964085304903517`*^9, 3.896408576912929*^9}, {
   3.8964088431539507`*^9, 3.89640886725655*^9}, {3.8964089190345383`*^9, 
   3.8964089912410507`*^9}, 3.896411364032544*^9, {3.896411555775547*^9, 
   3.896411560210909*^9}, {3.8964116249414473`*^9, 3.8964116268667393`*^9}, {
   3.8964117236814823`*^9, 3.896411733209247*^9}, {3.89641176893865*^9, 
   3.896411788777835*^9}, {3.896411829490048*^9, 3.896411854225235*^9}, {
   3.896413117100971*^9, 3.896413457913006*^9}, {3.89641348873833*^9, 
   3.896413593256999*^9}, {3.896414227715905*^9, 3.896414261627845*^9}, {
   3.896414345804163*^9, 3.896414366524419*^9}, {3.8964144449315357`*^9, 
   3.896414482055689*^9}, {3.896414532026331*^9, 3.8964145387787027`*^9}, {
   3.896414661241715*^9, 3.896414875292243*^9}, {3.9123161381909027`*^9, 
   3.912316140315507*^9}, {3.915383365664874*^9, 3.915383385956131*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"34a5ce17-7bbe-4b28-b8dc-8f3c89a7e4af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Alternate", " ", "code"}], ";", " ", 
    RowBox[{
    "works", " ", "slower", " ", "and", " ", "more", " ", "complicated", " ", 
     "to", " ", "use", " ", "colours", " ", "with"}]}], " ", "*)"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"cubeToImage", "[", "cube_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Image3D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Max", "[", "cube", "]"}], " ", "+", " ", "1"}], ")"}]}], 
        ",", " ", 
        RowBox[{"Magnification", "\[Rule]", "Automatic"}], ",", " ", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
        RowBox[{"ColorFunction", "\[Rule]", "blueColourRules"}]}], "]"}], 
      "\n", "\n", 
      RowBox[{"cubeSlicesSingleAxis", "[", 
       RowBox[{"dim_", ",", " ", "cube_", ",", " ", "axis_"}], "]"}]}], " ", ":=",
      " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"image", " ", "=", " ", 
           RowBox[{"cubeToImage", "[", "cube", "]"}]}], "}"}], ",", "\n", 
         "\t\t\t\t\t\t\t\t\t\t\t", 
         RowBox[{"Manipulate", "[", 
          RowBox[{
           RowBox[{"Image3DSlices", "[", 
            RowBox[{"image", ",", " ", "i", ",", " ", "axis"}], "]"}], ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], 
            "}"}]}], "]"}]}], "]"}], "\n", 
       RowBox[{"cubeSlices", "[", 
        RowBox[{"dim_", ",", " ", "cube_"}], "]"}]}], " ", ":=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Manipulate", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Image3DSlices", "[", 
               RowBox[{
                RowBox[{"Image3D", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", "cube", "]"}], " ", "+", " ", "1"}], 
                    ")"}]}], ",", " ", 
                  RowBox[{"Magnification", "\[Rule]", "Automatic"}], ",", " ", 
                  RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
                " ", "i", ",", " ", "1"}], "]"}], ",", "\n", 
              "\t\t\t\t\t\t\t\t\t\t", 
              RowBox[{"Image3DSlices", "[", 
               RowBox[{
                RowBox[{"Image3D", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", "cube", "]"}], " ", "+", " ", "1"}], 
                    ")"}]}], ",", " ", 
                  RowBox[{"Magnification", "\[Rule]", "Automatic"}], ",", " ", 
                  RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
                " ", "i", ",", " ", "2"}], "]"}], ",", "\n", 
              "\t\t\t\t\t\t\t\t\t\t", 
              RowBox[{"Image3DSlices", "[", 
               RowBox[{
                RowBox[{"Image3D", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", "cube", "]"}], " ", "+", " ", "1"}], 
                    ")"}]}], ",", " ", 
                  RowBox[{"Magnification", "\[Rule]", "Automatic"}], ",", " ", 
                  RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
                " ", "i", ",", " ", "3"}], "]"}]}], "}"}], "}"}], "]"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], 
           "}"}]}], "]"}], "\n", "\t\t\t\t\t\t\t\t\t\t", "\n", 
        RowBox[{"cubesSlices", "[", 
         RowBox[{"dim_", ",", " ", "cube1_", ",", " ", "cube2_"}], "]"}]}], 
       " ", ":=", " ", 
       RowBox[{
        RowBox[{"Grid", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"cubeSlices", "[", 
             RowBox[{"dim", ",", " ", "cube1"}], "]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"cubeSlices", "[", 
             RowBox[{"dim", ",", " ", "cube2"}], "]"}], "}"}]}], "}"}], "]"}],
         "\n", "\n", 
        RowBox[{"cubeToImage", "[", "maxCube", "]"}]}]}]}]}]}], 
   "*)"}]}]], "Code",
 CellChangeTimes->{{3.912252328502087*^9, 3.912252402584948*^9}, {
  3.912252650618332*^9, 3.9122526787291117`*^9}, {3.9122531051650753`*^9, 
  3.912253150927306*^9}, {3.912253230768302*^9, 3.9122532863435707`*^9}, {
  3.912254001008072*^9, 3.9122540834580603`*^9}, {3.912261514870071*^9, 
  3.912261580410975*^9}, {3.912261701293288*^9, 3.912261725431531*^9}, {
  3.912261828728067*^9, 3.912261864242016*^9}, {3.912261904423257*^9, 
  3.912261912727086*^9}, {3.9122622152929*^9, 3.91226222689668*^9}, {
  3.912262260868675*^9, 3.912262280349835*^9}, {3.91226232504403*^9, 
  3.912262347229721*^9}, {3.9122626266737328`*^9, 3.912262639718912*^9}, {
  3.912268256667344*^9, 3.91226827857467*^9}, {3.9122707786212473`*^9, 
  3.912270794814865*^9}, {3.91231449065786*^9, 3.912314521883709*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"43c9ca43-dc34-48cc-ba70-58f0db2b1acf"],

Cell[TextData[{
 StyleBox["Display Functions\n", "Section"],
 "We have the following display functions for single cubes:\n- \
cubeLayers[cube, <colourFunction>]: displays concentric layers of a cube.\n- \
displaySlicePlot[cube, args, <colourFunction>]: displays a 2D slice of the \
cube along a specified axis. Here, args takes the form {{depth}, All, All}, \
{All, {depth}, All}, or {All, All, {depth}}, where depth is the layer number \
of the slice you want.\n- displayHeightPlot[grid]: takes a 2D grid as input \
and displays a plot of the height function.\n- sliceGridWithHeight[cube, \
args]: displays a 2D slice of the height function of the cube, its \
corresponding 3-colouring, and the plot of its height function. Here, args \
takes the form {{depth}, All, All}, {All, {depth}, All}, or {All, All, \
{depth}}, where depth is the layer number of the slice you want.\n- \
cubeSlicesSingleAxis[cube, axis]: a dynamic plot of \
sliceGridWithHeight[]--allows you to drag a slider to move between the \
layers.\n- cubeSlicesAllAxesSimultaneouslyGrid[cube, i]: displays the 2D \
slice of the layer of the cube at depth i along all three axes.\n- \
cubeSlicesAllAxesSimultaneously[cube]: a dynamic version of \
cubeSlicesAllAxesSimultaneouslyGrid[]--allows you to drag a slider to move \
between the layers. The layers at the same depth are displayed for all three \
axes.\n- cubeSlicesAllAxesSeparately[cube]: like \
cubeSlicesAllAxesSimultaneouslyCube[], but you can pick the depth of the \
layer along all three axes separately.\n\nWe have the following display \
functions for two cubes:\n- cubesLayersSeparately[cube1, cube2, \
<colourFunction>]: displays two copies of cubeLayers[] side by side, one for \
each cube, with separate sliders.\n- cubesLayersSimultaneously[cube1, cube2, \
<colourFunction>]: similar to cubesLayersSeparately, but with a single \
slider, so you see the concentric layers at the same depth for each cube.\n- \
cubesSlicesSeparately[cube1, cube2]: displays two copies of \
cubeSlicesAllAxesSimultaneously[] side by side, one for each cube, with \
separate sliders.\n- cubesSlicesSimultaneously[cube1, cube2]: similar to \
cubesSlicesSeparately, but with a single slider, so you see the layers at the \
same depth for each cube."
}], "Text",
 CellChangeTimes->{{3.912409148835154*^9, 3.912409175079817*^9}, {
   3.912443386415956*^9, 3.912443657985716*^9}, {3.912443760749338*^9, 
   3.9124439385990963`*^9}, {3.912444135217409*^9, 3.912444305168536*^9}, {
   3.912444379101831*^9, 3.912444435214204*^9}, {3.912444763363852*^9, 
   3.912444916672462*^9}, {3.912444961750602*^9, 3.91244496454106*^9}, {
   3.912445000212619*^9, 3.912445036184997*^9}, 
   3.9124466184289513`*^9},ExpressionUUID->"b80fafbb-a30b-4188-b067-\
42d643f41c2b"],

Cell["\<\
TODO: set initial values of Manipulate functions to the middle of the slider\
\>", "Text",
 CellChangeTimes->{{3.915740026287611*^9, 
  3.915740047711556*^9}},ExpressionUUID->"6a96f75d-b63c-4ba2-8b45-\
4bd36c7e4e16"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displayCube", "[", 
    RowBox[{"dim_", ",", " ", "cube_", ",", " ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"ArrayPlot3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"dim", " ", "+", " ", "1"}], ")"}]}], ",", " ", 
     RowBox[{"ColorFunction", " ", "->", " ", "colourFunction"}], ",", " ", 
     RowBox[{"OpacityFunction", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"Mesh", "\[Rule]", "False"}], ",", " ", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubeLayers", "[", 
    RowBox[{"cube_", ",", " ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"displayCube", "[", 
        RowBox[{"dim", ",", " ", 
         RowBox[{"cube", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"i", ";;", " ", 
             RowBox[{"-", "i"}]}], ",", " ", 
            RowBox[{"i", " ", ";;", " ", 
             RowBox[{"-", "i"}]}], ",", " ", 
            RowBox[{"i", " ", ";;", " ", 
             RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
         "colourFunction"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"dim", " ", "/", " ", "2"}], "]"}], ",", " ", "1"}], 
        "}"}]}], "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubesLayersSeparately", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube1", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"cubeLayers", "[", 
        RowBox[{"cube1", ",", " ", "colourFunction"}], "]"}], ",", " ", 
       RowBox[{"cubeLayers", "[", 
        RowBox[{"cube2", ",", " ", "colourFunction"}], "]"}]}], "]"}]}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"threeCubesLayersSimultaneously", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", "cube3_", ",", " ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"Length", "[", "cube1", "]"}]}], ",", " ", 
       RowBox[{"cube13", " ", "=", " ", 
        RowBox[{"to3Colouring", "[", "cube1", "]"}]}], ",", " ", 
       RowBox[{"cube23", " ", "=", " ", 
        RowBox[{"to3Colouring", "[", "cube2", "]"}]}], ",", " ", 
       RowBox[{"cube33", " ", "=", " ", 
        RowBox[{"to3Colouring", "[", "cube3", "]"}]}]}], "}"}], ",", " ", 
     "\n", "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"displayCube", "[", 
             RowBox[{"dim", ",", " ", 
              RowBox[{"cube1", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
              "colourFunction"}], "]"}], ",", " ", 
            RowBox[{"displayCube", "[", 
             RowBox[{"dim", ",", " ", 
              RowBox[{"cube2", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
              "colourFunction"}], "]"}], ",", " ", 
            RowBox[{"displayCube", "[", 
             RowBox[{"dim", ",", " ", 
              RowBox[{"cube3", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
              "colourFunction"}], "]"}]}], "}"}], ",", "\n", 
          "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"displayCube", "[", 
             RowBox[{"dim", ",", " ", 
              RowBox[{"cube13", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
              "colourFunction"}], "]"}], ",", " ", 
            RowBox[{"displayCube", "[", 
             RowBox[{"dim", ",", " ", 
              RowBox[{"cube23", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
              "colourFunction"}], "]"}], ",", " ", 
            RowBox[{"displayCube", "[", 
             RowBox[{"dim", ",", " ", 
              RowBox[{"cube33", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
              "colourFunction"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"dim", " ", "/", " ", "2"}], "]"}], ",", " ", "1"}], 
        "}"}]}], "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"threeCubesLayersSeparately", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", "cube3_", ",", "  ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube1", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"cubeLayers", "[", 
        RowBox[{"cube1", ",", " ", "colourFunction"}], "]"}], ",", " ", 
       RowBox[{"cubeLayers", "[", 
        RowBox[{"cube2", ",", " ", "colourFunction"}], "]"}], ",", " ", 
       RowBox[{"cubeLayers", "[", 
        RowBox[{"cube3", ",", " ", "colourFunction"}], "]"}]}], "]"}]}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubesLayersSimultaneously", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube1", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"displayCube", "[", 
            RowBox[{"dim", ",", " ", 
             RowBox[{"cube1", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", ";;", " ", 
                 RowBox[{"-", "i"}]}], ",", " ", 
                RowBox[{"i", " ", ";;", " ", 
                 RowBox[{"-", "i"}]}], ",", " ", 
                RowBox[{"i", " ", ";;", " ", 
                 RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
             "colourFunction"}], "]"}], ",", " ", 
           RowBox[{"displayCube", "[", 
            RowBox[{"dim", ",", " ", 
             RowBox[{"cube2", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", ";;", " ", 
                 RowBox[{"-", "i"}]}], ",", " ", 
                RowBox[{"i", " ", ";;", " ", 
                 RowBox[{"-", "i"}]}], ",", " ", 
                RowBox[{"i", " ", ";;", " ", 
                 RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
             "colourFunction"}], "]"}]}], "}"}], "}"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"dim", " ", "/", " ", "2"}], "]"}], ",", " ", "1"}], 
        "}"}]}], "]"}]}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Slices", " ", "the", " ", "cube", " ", "along", " ", "a", " ", "specifed",
     " ", "axis", " ", "and", " ", "returns", " ", "a", " ", "2", "D", " ", 
    "grid"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sliceGrid", "[", 
    RowBox[{"cube_", ",", " ", "args_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube", "]"}]}], "}"}], ",", " ", 
     RowBox[{"ArrayReshape", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{"cube", ",", " ", 
         RowBox[{"Sequence", " ", "@@", " ", "args"}]}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"dim", ",", " ", "dim"}], "}"}]}], "]"}]}], "]"}]}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Plots", " ", "a", " ", "slice", " ", "of", " ", "a", " ", "cube"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaySlicePlot", "[", 
    RowBox[{"cube_", ",", " ", "args_", ",", " ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"sliceGrid", "[", 
      RowBox[{"cube", ",", " ", "args"}], "]"}], ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "colourFunction"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayHeightPlot", "[", "grid_", "]"}], " ", ":=", " ", 
   RowBox[{"ListPlot3D", "[", "grid", "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{"add", " ", "labels", " ", "to", " ", 
     RowBox[{"grids", "/", "plots"}], " ", "in", " ", "the", " ", "following",
      " ", "functions"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Places", " ", "colour", " ", "plot", " ", "of", " ", "a", " ", "slice", 
    " ", "above", " ", "a", " ", "height", " ", "plot", " ", "of", " ", "the",
     " ", "slice"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sliceGridWithHeight", "[", 
    RowBox[{"cube_", ",", " ", "args_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"displaySlicePlot", "[", 
        RowBox[{"cube", ",", " ", "args"}], "]"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"displaySlicePlot", "[", 
        RowBox[{
         RowBox[{"to3Colouring", "[", "cube", "]"}], ",", " ", "args"}], 
        "]"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"displayHeightPlot", "[", 
        RowBox[{"sliceGrid", "[", 
         RowBox[{"cube", ",", " ", "args"}], "]"}], "]"}], "}"}]}], "}"}], 
    "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Allows", " ", "to", " ", "move", " ", "between", " ", "colour", " ", 
     "plots"}], " ", "+", " ", 
    RowBox[{
    "height", " ", "plots", " ", "of", " ", "different", " ", "slices", " ", 
     "along", " ", "a", " ", "single", " ", "axis"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubeSlicesSingleAxis", "[", 
    RowBox[{"cube_", ",", " ", "axis_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"args", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"All", ",", " ", "All", ",", " ", "All"}], "}"}]}], ",", " ", 
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"Length", "[", "cube", "]"}]}]}], "}"}], ",", "\n", 
     "\t\t\t\t\t\t\t\t\t\t\t", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"args", "[", 
           RowBox[{"[", "axis", "]"}], "]"}], " ", "=", " ", 
          RowBox[{"{", "i", "}"}]}], ";", " ", 
         RowBox[{"sliceGridWithHeight", "[", 
          RowBox[{"cube", ",", " ", "args"}], "]"}]}], ")"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], "}"}]}],
       "]"}]}], "]"}]}], "\n", "\t\t\t\t\t\t\t\t\t\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubeSlicesAllAxesSimultaneouslyGrid", "[", 
    RowBox[{"cube_", ",", " ", "i_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sliceGridWithHeight", "[", 
        RowBox[{"cube", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "i", "}"}], ",", " ", "All", ",", " ", "All"}], 
          "}"}]}], "]"}], ",", " ", 
       RowBox[{"sliceGridWithHeight", "[", 
        RowBox[{"cube", ",", " ", 
         RowBox[{"{", 
          RowBox[{"All", ",", " ", 
           RowBox[{"{", "i", "}"}], ",", " ", "All"}], "}"}]}], "]"}], ",", 
       " ", 
       RowBox[{"sliceGridWithHeight", "[", 
        RowBox[{"cube", ",", " ", 
         RowBox[{"{", 
          RowBox[{"All", ",", " ", "All", ",", " ", 
           RowBox[{"{", "i", "}"}]}], "}"}]}], "]"}]}], "}"}], "}"}], "]"}]}],
   "\t\t\t\t\t\t\t\t\t\t\t", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"View", " ", "the", " ", "colour", " ", "plots"}], " ", "+", " ", 
    
    RowBox[{
    "height", " ", "plots", " ", "of", " ", "slices", " ", "at", " ", "the", 
     " ", "same", " ", "level", " ", "along", " ", "all", " ", "axes"}]}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubeSlicesAllAxesSimultaneously", "[", "cube_", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"cubeSlicesAllAxesSimultaneouslyGrid", "[", 
        RowBox[{"cube", ",", " ", "i"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], "}"}]}],
       "]"}]}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Allows", " ", "to", " ", "move", " ", "between", " ", "colour", " ", 
     "plots"}], " ", "+", " ", 
    RowBox[{
    "height", " ", "plots", " ", "of", " ", "different", " ", "slices", " ", 
     "along", " ", "all", " ", "axes"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubeSlicesAllAxesSeparately", "[", "cube_", "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cubeSlicesSingleAxis", "[", 
        RowBox[{"cube", ",", " ", "1"}], "]"}], ",", " ", 
       RowBox[{"cubeSlicesSingleAxis", "[", 
        RowBox[{"cube", ",", " ", "2"}], "]"}], ",", " ", 
       RowBox[{"cubeSlicesSingleAxis", "[", 
        RowBox[{"cube", ",", " ", "3"}], "]"}]}], "}"}], "}"}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubesSlicesSeparately", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cubeSlicesAllAxesSimultaneously", "[", "cube1", "]"}], ",", 
       " ", 
       RowBox[{"cubeSlicesAllAxesSimultaneously", "[", "cube2", "]"}]}], 
      "}"}], "}"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubesSlicesSimultaneously", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube1", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cubeSlicesAllAxesSimultaneouslyGrid", "[", 
            RowBox[{"cube1", ",", " ", "i"}], "]"}], ",", " ", 
           RowBox[{"cubeSlicesAllAxesSimultaneouslyGrid", "[", 
            RowBox[{"cube2", ",", " ", "i"}], "]"}]}], "}"}], "}"}], "]"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], "}"}]}],
       "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubesSlicesSingleAxisSimultaneously", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", "axis_"}], "]"}], " ", ":=",
    " ", "TODO"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compareThreeCubesAlongAxis", "[", 
    RowBox[{
    "cube1_", ",", " ", "cube2_", ",", " ", "cube3_", ",", " ", "axis_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"args", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"All", ",", " ", "All", ",", " ", "All"}], "}"}]}], ",", " ", 
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"Length", "[", "cube1", "]"}]}]}], "}"}], ",", "\n", 
     "\t\t\t\t\t\t\t\t\t\t\t", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"args", "[", 
           RowBox[{"[", "axis", "]"}], "]"}], " ", "=", " ", 
          RowBox[{"{", "i", "}"}]}], ";", " ", 
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"sliceGridWithHeight", "[", 
              RowBox[{"cube1", ",", " ", "args"}], "]"}], ",", " ", 
             RowBox[{"sliceGridWithHeight", "[", 
              RowBox[{"cube2", ",", " ", "args"}], "]"}], ",", " ", 
             RowBox[{"sliceGridWithHeight", "[", 
              RowBox[{"cube3", ",", " ", "args"}], "]"}]}], "}"}], "}"}], 
          "]"}]}], ")"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], "}"}]}],
       "]"}]}], "]"}]}], "\n", "\t\t\t\t\t\t\t\t\t\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compareThreeCubesAlongAllAxes", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", "cube3_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"compareThreeCubesAlongAxis", "[", 
        RowBox[{
        "cube1", ",", " ", "cube2", ",", " ", "cube3", ",", " ", "1"}], "]"}],
        "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"compareThreeCubesAlongAxis", "[", 
        RowBox[{
        "cube1", ",", " ", "cube2", ",", " ", "cube3", ",", " ", "2"}], "]"}],
        "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"compareThreeCubesAlongAxis", "[", 
        RowBox[{
        "cube1", ",", " ", "cube2", ",", " ", "cube3", ",", " ", "3"}], "]"}],
        "}"}]}], "}"}], "]"}]}], "\t\t\t\t\t\t\t\t\t\t", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compareThreeCubesAlongAllAxesSimultaneously", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", "cube3_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube1", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube1", ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "i", "}"}], ",", " ", "All", ",", " ", "All"}], 
              "}"}]}], "]"}], ",", " ", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube2", ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "i", "}"}], ",", " ", "All", ",", " ", "All"}], 
              "}"}]}], "]"}], ",", " ", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube3", ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "i", "}"}], ",", " ", "All", ",", " ", "All"}], 
              "}"}]}], "]"}], ",", "\n", 
           "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube1", ",", " ", 
             RowBox[{"{", 
              RowBox[{"All", ",", " ", 
               RowBox[{"{", "i", "}"}], ",", " ", "All"}], "}"}]}], "]"}], 
           ",", " ", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube2", ",", " ", 
             RowBox[{"{", 
              RowBox[{"All", ",", " ", 
               RowBox[{"{", "i", "}"}], ",", " ", "All"}], "}"}]}], "]"}], 
           ",", " ", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube3", ",", " ", 
             RowBox[{"{", 
              RowBox[{"All", ",", " ", 
               RowBox[{"{", "i", "}"}], ",", " ", "All"}], "}"}]}], "]"}], 
           ",", "\n", "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube1", ",", " ", 
             RowBox[{"{", 
              RowBox[{"All", ",", " ", "All", ",", " ", 
               RowBox[{"{", "i", "}"}]}], "}"}]}], "]"}], ",", " ", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube2", ",", " ", 
             RowBox[{"{", 
              RowBox[{"All", ",", " ", "All", ",", " ", 
               RowBox[{"{", "i", "}"}]}], "}"}]}], "]"}], ",", " ", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube3", ",", " ", 
             RowBox[{"{", 
              RowBox[{"All", ",", " ", "All", ",", " ", 
               RowBox[{"{", "i", "}"}]}], "}"}]}], "]"}]}], "}"}], "}"}], 
        "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], "}"}]}],
       "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"compareThreeCubes", "[", 
   RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", "cube3_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"threeCubesLayersSimultaneously", "[", 
       RowBox[{"cube1", ",", " ", "cube2", ",", " ", "cube3"}], "]"}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"compareThreeCubesAlongAllAxes", "[", 
       RowBox[{"cube1", ",", " ", "cube2", ",", " ", "cube3"}], "]"}], 
      "}"}]}], "}"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.912264406032669*^9, 3.912264407411809*^9}, {
   3.912266616300103*^9, 3.912266636080381*^9}, {3.912266783498019*^9, 
   3.9122668318250113`*^9}, {3.912267031331131*^9, 3.9122670330469217`*^9}, {
   3.9122673628898687`*^9, 3.912267395223302*^9}, 3.9122674254591417`*^9, {
   3.912267489260343*^9, 3.9122675033739357`*^9}, {3.912267533446159*^9, 
   3.912267553784122*^9}, {3.91226759392774*^9, 3.912267610948339*^9}, {
   3.912267954925317*^9, 3.9122679807820597`*^9}, {3.9122680344937572`*^9, 
   3.912268084845128*^9}, {3.912268284517149*^9, 3.91226833228021*^9}, {
   3.91226836499653*^9, 3.9122684599894753`*^9}, {3.912268505569618*^9, 
   3.9122685120518208`*^9}, {3.912268552753704*^9, 3.912268583420809*^9}, {
   3.9122686193107967`*^9, 3.9122686712850103`*^9}, {3.912269479663116*^9, 
   3.912269519288001*^9}, {3.91226960563202*^9, 3.912269647276249*^9}, {
   3.9122697907911673`*^9, 3.912269851937456*^9}, {3.912269978887829*^9, 
   3.912270022212962*^9}, {3.912270052870801*^9, 3.912270089606448*^9}, {
   3.912270131594943*^9, 3.912270159581514*^9}, {3.9122702372248087`*^9, 
   3.9122702931336193`*^9}, {3.912270332214175*^9, 3.91227045240093*^9}, {
   3.9122705625160007`*^9, 3.912270621791396*^9}, {3.9122707574806643`*^9, 
   3.912270862778894*^9}, {3.912270942473834*^9, 3.91227098524856*^9}, {
   3.9123128383139467`*^9, 3.912312878915883*^9}, {3.912313022608423*^9, 
   3.9123130611073503`*^9}, {3.9123131179412746`*^9, 3.912313169989504*^9}, {
   3.912313433965732*^9, 3.912313448461694*^9}, {3.912313498071694*^9, 
   3.912313499807131*^9}, 3.9123135697889214`*^9, {3.9123136877244463`*^9, 
   3.912313713464583*^9}, {3.9123144303868637`*^9, 3.912314458008833*^9}, {
   3.912314573514515*^9, 3.9123146467024508`*^9}, {3.912314677108584*^9, 
   3.912314686346047*^9}, {3.9123147195335407`*^9, 3.912314778497026*^9}, {
   3.91231484830643*^9, 3.912314904667511*^9}, {3.912318437387354*^9, 
   3.9123184392785053`*^9}, {3.912318471354505*^9, 3.912318472048452*^9}, 
   3.912408888251107*^9, {3.912409022900834*^9, 3.912409033762897*^9}, {
   3.912409445276288*^9, 3.9124095181272297`*^9}, {3.9124110203524427`*^9, 
   3.912411020790317*^9}, {3.912413199845172*^9, 3.912413210239479*^9}, {
   3.912415080632885*^9, 3.912415362226597*^9}, {3.912417311389412*^9, 
   3.9124173408818083`*^9}, {3.91241737900045*^9, 3.9124173939527073`*^9}, {
   3.9124174288891573`*^9, 3.912417463293626*^9}, {3.912417514903767*^9, 
   3.912417547683485*^9}, {3.912417587736187*^9, 3.912417634396227*^9}, 
   3.912421732863694*^9, 3.912429929362864*^9, 3.912444930324613*^9, {
   3.912445819379607*^9, 3.912445820139661*^9}, 3.9125865077932158`*^9, 
   3.913942662798163*^9, {3.9154131880471897`*^9, 3.915413199081361*^9}, 
   3.915413344706855*^9, {3.915413524932474*^9, 3.915413552529479*^9}, {
   3.915413602388781*^9, 3.915413620273315*^9}, {3.915413676107534*^9, 
   3.91541369111143*^9}, {3.915413739202641*^9, 3.915413777870476*^9}, {
   3.9154138370369377`*^9, 3.915413847976371*^9}, {3.915413884510582*^9, 
   3.9154138877670813`*^9}, {3.915413936677662*^9, 3.9154140355860567`*^9}, {
   3.915414074702133*^9, 3.9154141207255487`*^9}, {3.915414159138879*^9, 
   3.915414333877137*^9}, {3.9154143702110147`*^9, 3.9154143731365232`*^9}, {
   3.915414422906352*^9, 3.915414457588675*^9}, {3.915414525341547*^9, 
   3.915414669055232*^9}, {3.915677150929544*^9, 3.915677159423347*^9}, {
   3.915683104953697*^9, 3.915683183905149*^9}, {3.915683505686676*^9, 
   3.915683515682147*^9}, {3.915683699903619*^9, 3.915683709231238*^9}, {
   3.9156837703564377`*^9, 3.9156837730901213`*^9}, {3.915683841799931*^9, 
   3.915683849507044*^9}, 3.915683888705361*^9, {3.915683990592554*^9, 
   3.915683992193791*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"1cb6fad7-3d75-46e5-bdfd-cc2c5aa8136f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"compareThreeCubes", "[", 
  RowBox[{"minCube", ",", " ", "outCube15", ",", " ", "maxCube"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.9154146497539253`*^9, 3.915414658671762*^9}, {
  3.915683031064588*^9, 3.9156830342939873`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"f4ba13d1-148e-4edf-aee7-cb940163b900"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 8, 1}}, Typeset`size$$ = {
        645., {169.861484375, 174.818515625}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Grid[{{
              $CellContext`displayCube[$CellContext`dim$28745, 
               Part[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

                "], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"], 
              $CellContext`displayCube[$CellContext`dim$28745, 
               Part[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                "], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"], 
              $CellContext`displayCube[$CellContext`dim$28745, 
               Part[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
                "], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"]}, {
              $CellContext`displayCube[$CellContext`dim$28745, 
               Part[$CellContext`cube13$28745, 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"], 
              $CellContext`displayCube[$CellContext`dim$28745, 
               Part[$CellContext`cube23$28745, 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"], 
              $CellContext`displayCube[$CellContext`dim$28745, 
               Part[$CellContext`cube33$28745, 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"]}}], 
          "Specifications" :> {{$CellContext`i$$, 1, 8, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{686., {211.021484375, 215.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TagBox[GridBox[{
        {
         TagBox[
          StyleBox[
           
           DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
              Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
            496., {241.021484375, 245.978515625}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
            
            DynamicBox[Manipulate`ManipulateBoxes[
             1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
              "ControllerVariables" :> {}, 
              "OtherVariables" :> {
               Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$,
                 Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
                Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
                Typeset`initDone$$, Typeset`skipInitDone$$}, 
              "Body" :> (
               Part[$CellContext`args$28746, 1] = {$CellContext`i$$}; Grid[{{
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

                    "], $CellContext`args$28746], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                    
                    "], $CellContext`args$28746], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
                    "], $CellContext`args$28746]}}]), 
              "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, 
              "Options" :> {}, "DefaultOptions" :> {}],
             ImageSizeCache->{537., {282.521484375, 287.478515625}},
             SingleEvaluation->True],
            Deinitialization:>None,
            DynamicModuleValues:>{},
            SynchronousInitialization->True,
            UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
            UnsavedVariables:>{Typeset`initDone$$},
            UntrackedVariables:>{Typeset`size$$}], "Manipulate",
           Deployed->True,
           StripOnInput->False],
          Manipulate`InterpretManipulate[1]]},
        {
         TagBox[
          StyleBox[
           
           DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
              Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
            496., {241.021484375, 245.978515625}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
            
            DynamicBox[Manipulate`ManipulateBoxes[
             1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
              "ControllerVariables" :> {}, 
              "OtherVariables" :> {
               Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$,
                 Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
                Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
                Typeset`initDone$$, Typeset`skipInitDone$$}, 
              "Body" :> (
               Part[$CellContext`args$28747, 2] = {$CellContext`i$$}; Grid[{{
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

                    "], $CellContext`args$28747], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                    
                    "], $CellContext`args$28747], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
                    "], $CellContext`args$28747]}}]), 
              "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, 
              "Options" :> {}, "DefaultOptions" :> {}],
             ImageSizeCache->{537., {282.521484375, 287.478515625}},
             SingleEvaluation->True],
            Deinitialization:>None,
            DynamicModuleValues:>{},
            SynchronousInitialization->True,
            UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
            UnsavedVariables:>{Typeset`initDone$$},
            UntrackedVariables:>{Typeset`size$$}], "Manipulate",
           Deployed->True,
           StripOnInput->False],
          Manipulate`InterpretManipulate[1]]},
        {
         TagBox[
          StyleBox[
           
           DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
              Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
            496., {241.021484375, 245.978515625}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
            
            DynamicBox[Manipulate`ManipulateBoxes[
             1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
              "ControllerVariables" :> {}, 
              "OtherVariables" :> {
               Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$,
                 Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
                Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
                Typeset`initDone$$, Typeset`skipInitDone$$}, 
              "Body" :> (
               Part[$CellContext`args$28748, 3] = {$CellContext`i$$}; Grid[{{
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

                    "], $CellContext`args$28748], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                    
                    "], $CellContext`args$28748], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
                    "], $CellContext`args$28748]}}]), 
              "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, 
              "Options" :> {}, "DefaultOptions" :> {}],
             ImageSizeCache->{537., {282.521484375, 287.478515625}},
             SingleEvaluation->True],
            Deinitialization:>None,
            DynamicModuleValues:>{},
            SynchronousInitialization->True,
            UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
            UnsavedVariables:>{Typeset`initDone$$},
            UntrackedVariables:>{Typeset`size$$}], "Manipulate",
           Deployed->True,
           StripOnInput->False],
          Manipulate`InterpretManipulate[1]]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.9156830346650743`*^9, 3.91574262780812*^9, {3.9157579594413223`*^9, 
   3.9157579795639057`*^9}, 3.915758044269305*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"3d095aeb-e7d5-4e73-b9a7-92289c1d2ffb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"compareThreeCubesAlongAllAxes", "[", 
  RowBox[{"minCube", ",", " ", "outCube15", ",", " ", "maxCube"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.91541380067704*^9, 3.915413814619228*^9}, {
  3.915413852090974*^9, 3.915413857322632*^9}, {3.915414343129243*^9, 
  3.915414344835981*^9}, {3.9154143969613934`*^9, 3.915414398248785*^9}, {
  3.915414459184134*^9, 3.915414459761259*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"e4a19d2d-941b-4e72-be2b-a9812fd4f8fc"],

Cell[BoxData[
 RowBox[{"compareThreeCubes", "[", 
  RowBox[{"minCube", ",", " ", "outCube15", ",", " ", "maxCube"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.915414043537991*^9, 3.915414054519403*^9}, {
  3.9156772675623837`*^9, 3.915677268142682*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"9795074e-43fb-4107-b494-babd7733eaec"],

Cell[CellGroupData[{

Cell["Example: max and min cubes of side 15", "Subsection",
 CellChangeTimes->{{3.9124451534856033`*^9, 
  3.912445186010397*^9}},ExpressionUUID->"3cf80991-5947-4fae-80f3-\
2de0a0a27c13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cube2", " ", "=", " ", 
  RowBox[{"initialCubeBorder", "[", "21", "]"}]}]], "Code",
 CellChangeTimes->{{3.915376272065592*^9, 3.915376278881859*^9}, {
  3.9154129437814817`*^9, 3.915412943967523*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"4010bd6b-b10a-4a65-9a18-a530dbaa938a"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack1", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"21\\\", \\\",\\\", \\\"21\\\", \\\",\\\", \\\"21\\\"}], \
\\\"}\\\"}]\\).\"", 2, 44, 95, 34809098522299453303, "Local", 
   "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.9154129826721*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"5cba76dd-9b79-44a9-8f94-ae878b8ba7fe"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6",
                ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12",
                ",", "13", ",", "14", ",", "15", ",", "16", ",", "17", ",", 
               "18", ",", "19", ",", "20"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7",
                ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", 
               "13", ",", "14", ",", "15", ",", "16", ",", "17", ",", "18", 
               ",", "19", ",", "20", ",", "19"}], "}"}], ",", 
             TemplateBox[{"17"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              RowBox[{
              "19", ",", "20", ",", "19", ",", "18", ",", "17", ",", "16", 
               ",", "15", ",", "14", ",", "13", ",", "12", ",", "11", ",", 
               "10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", 
               "4", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "20", ",", "19", ",", "18", ",", "17", ",", "16", ",", "15", 
               ",", "14", ",", "13", ",", "12", ",", "11", ",", "10", ",", 
               "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", 
               "3", ",", "2", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}], ",", 
           TemplateBox[{"17"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{46.18359375, {2., 6.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{41.015625, {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{49.25390625, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 44, 34809098522299453303, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{46.18359375, {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{55.44140625, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 44, 34809098522299453303, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{34.640625, {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 44, 34809098522299453303, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{62.40234375, {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[34809098522299453303 === $SessionID, 
   Out[44], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.915376279556222*^9, {3.915412936910104*^9, 3.915412944256081*^9}, 
   3.915412982691272*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"f4a347de-8587-41f9-97f0-6fdeeedea021"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Developer`PackedArrayQ", "[", "maxCube", "]"}]], "Code",
 CellChangeTimes->{{3.915376559145597*^9, 3.9153765638280582`*^9}, {
  3.915377034200305*^9, 3.91537704846084*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"52c139c6-ba1f-4750-b7c4-512e8ca86c1c"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.915377044234379*^9, 3.915377048875984*^9}, 
   3.915412995281107*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"a61ac58d-31b8-4dfd-89a5-771a2f2dc211"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dim", " ", "=", " ", "15"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cube", " ", "=", " ", 
   RowBox[{"initialCubeBorder", "[", "15", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"maxCube", " ", "=", " ", 
   RowBox[{"generateMaxCube", "[", "dim", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"minCube", " ", "=", " ", 
   RowBox[{"generateMinCube", "[", "dim", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"MatrixForm", "[", 
       RowBox[{"maxCube", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "All", ",", "All"}], "\[RightDoubleBracket]"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}], "\n", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"MatrixForm", "[", 
       RowBox[{"minCube", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "All", ",", "All"}], "\[RightDoubleBracket]"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], 
   "*)"}]}]}], "Code",
 CellChangeTimes->{{3.8963315301595716`*^9, 3.8963315999490423`*^9}, 
   3.8963316511910553`*^9, {3.89633391267474*^9, 3.896333913798381*^9}, {
   3.896333984558095*^9, 3.8963339860371017`*^9}, {3.896334238850512*^9, 
   3.8963342404267263`*^9}, {3.9124104286872063`*^9, 
   3.9124104560692463`*^9}, {3.91242985221181*^9, 3.912429857993331*^9}, {
   3.912445480937314*^9, 3.9124454888452053`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"2148de09-ed05-4808-bed8-2a80b8dfc5bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cubesLayersSimultaneously", "[", 
  RowBox[{"minCube", ",", " ", 
   RowBox[{"to3Colouring", "[", "minCube", "]"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.912251791004142*^9, 3.9122518038093777`*^9}, {
   3.912317759236363*^9, 3.912317794709379*^9}, {3.912409523098621*^9, 
   3.912409523384006*^9}, {3.912410487525897*^9, 3.912410487935278*^9}, {
   3.9124161580195208`*^9, 3.9124161791368017`*^9}, {3.9124171557617702`*^9, 
   3.912417159303616*^9}, 3.912421721995995*^9, {3.91242988374607*^9, 
   3.912429936431622*^9}, {3.9124449376275883`*^9, 3.9124449391817493`*^9}, {
   3.915757972070293*^9, 3.9157579726959553`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"57af5111-0f01-4f8c-80d8-9d8ac3a7ab54"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 8, 1}}, Typeset`size$$ = {
    418., {82.521484375, 87.478515625}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          $CellContext`displayCube[$CellContext`dim$10321, 
           Part[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

            "], 
            Span[$CellContext`i$$, -$CellContext`i$$], 
            Span[$CellContext`i$$, -$CellContext`i$$], 
            Span[$CellContext`i$$, -$CellContext`i$$]], "DeepSeaColors"], 
          $CellContext`displayCube[$CellContext`dim$10321, 
           Part[CompressedData["
1:eJzFltFxwzAMQ2l2gM7QlTpCFsj+f805pgQ8yupXr3dJHMSIRAigrK/H8/vx
ERGf8o4j9bVF4Si3KBzlFoWj3KJwlFvU9DkORXEo/XUrFSn5HPhQNMlVsqIi
V1lvsuhTdJJFQ1AfMDyiIruvC1KqLnRpLqTks4pBrlljokGuki9Vh5LFElPQ
9MJfpo4eUdFNSgvXjddlkN8/a9T810keJWnUkM+uF/4u+FovU0ePqMjyXArP
Dy3HnIOvQh4jLPrP/DR/kedF/+rOwD5i6ugRFVmexwJr76EzlTz+D73wF3lG
/8JD1zct9fmx3sgX+gn7h4/f9s8/nu9ufqw38oUrWBiDM/zrfIHVwFphJVd9
tEjdcn6sL9yAV3ASPiMF8AyJbc8jSzt6AZ2y6iOkDh5B0ewXdLcWOmUfaUNo
pEUV9LUnrBR+hUOsV2bTu+gjpA4eQREqra8S0VGfKlz9T/xrZ4bbJ2zXC3+R
595HSB08giJ1RlG28xU8dH3DgpkvDR70wl/kGf1r2Wz7ZUsdPIKiVBU4faUr
/O3cagp5ZvA883mUirlfcmdAHyF18AiKoAkI/m0x/Ga+HafjY4tXO8Mtbh7t
8A99/w8M
            "], 
            Span[$CellContext`i$$, -$CellContext`i$$], 
            Span[$CellContext`i$$, -$CellContext`i$$], 
            Span[$CellContext`i$$, -$CellContext`i$$]], "DeepSeaColors"]}}], 
      "Specifications" :> {{$CellContext`i$$, 1, 8, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{459., {124.021484375, 128.978515625}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.912421723350317*^9, 3.912421736275527*^9}, 
   3.912429861544059*^9, {3.912429912039249*^9, 3.912429936855916*^9}, 
   3.9124301569180937`*^9, {3.912444939780517*^9, 3.912444945292884*^9}, {
   3.912446600279335*^9, 3.912446625004259*^9}, 3.912446729272571*^9, 
   3.912446859074316*^9, 3.912585196864328*^9, 3.913938691789893*^9, {
   3.913938973890571*^9, 3.9139389814690657`*^9}, 3.91394262286057*^9, 
   3.915376229528883*^9, 3.915376595277919*^9, 3.915413000619128*^9, 
   3.91541306233659*^9, 3.915676826485053*^9, 3.915676902091442*^9, 
   3.915742780513618*^9, 3.9157579731973763`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"2cbfa9f8-b5ef-4f8f-bce8-f3395ae79830"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cubeSlicesAllAxesSimultaneously", "[", "minCube", "]"}], "\n", 
 RowBox[{"cubeSlicesAllAxesSeparately", "[", "minCube", "]"}]}], "Code",
 CellChangeTimes->{{3.912254090814623*^9, 3.91225409850528*^9}, {
   3.9122626197887173`*^9, 3.912262635065693*^9}, 3.912266838845381*^9, {
   3.91226743894987*^9, 3.912267451869739*^9}, {3.912267618897295*^9, 
   3.91226761911683*^9}, {3.912268468866748*^9, 3.9122684720184383`*^9}, {
   3.912268678959939*^9, 3.912268689916807*^9}, {3.91227002852654*^9, 
   3.912270033277396*^9}, 3.91227109937913*^9, {3.912410406453114*^9, 
   3.9124104096680193`*^9}, {3.912410491664907*^9, 3.9124104952239122`*^9}, {
   3.912417164300827*^9, 3.9124171672657537`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"1c71fc96-a296-4b0b-ab7f-73c9848f5424"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
    496., {241.021484375, 245.978515625}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> \
$CellContext`cubeSlicesAllAxesSimultaneouslyGrid[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

        "], $CellContext`i$$], 
      "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{537., {282.521484375, 287.478515625}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.912254098961012*^9, 3.912261732964941*^9, {3.912261845109248*^9, 
   3.9122618673733587`*^9}, 3.912261906632366*^9, 3.9122623704304457`*^9, 
   3.9122624080775127`*^9, {3.912262607107293*^9, 3.912262642199815*^9}, 
   3.912266839283944*^9, 3.91226703766444*^9, {3.912267431943881*^9, 
   3.912267452347896*^9}, 3.9122675229003057`*^9, 3.912267556992798*^9, {
   3.91226759769552*^9, 3.9122676195664177`*^9}, 3.912268091243443*^9, 
   3.912268472371093*^9, 3.912268515066235*^9, 3.912268690382292*^9, 
   3.9122697360651503`*^9, 3.912270033905272*^9, 3.9122701114791193`*^9, 
   3.912270164057863*^9, 3.9122743433164177`*^9, 3.91231016958733*^9, 
   3.912312895668007*^9, 3.912314851576214*^9, 3.9123148823273363`*^9, 
   3.912399690371847*^9, 3.912399822882844*^9, 3.91241041079039*^9, 
   3.912410495555201*^9, {3.912413223498426*^9, 3.912413236181161*^9}, 
   3.912421755662983*^9, {3.912430119366959*^9, 3.912430148765983*^9}, 
   3.912442987188569*^9, 3.912446632176406*^9, 3.91244673886714*^9, 
   3.9124468624530687`*^9, 3.912585209190012*^9, 3.913938869188645*^9, 
   3.9139389579561853`*^9, 3.913938988845853*^9, 3.913942624795439*^9, 
   3.915413017328333*^9, 3.915413065159481*^9, 3.9156768308751907`*^9, 
   3.915676911152454*^9, 3.91574279096285*^9, 3.915758035945458*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"1f2525b1-cb7c-4305-8418-60a92a3a8ca5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        162., {240.70148437500004`, 245.65851562500004`}}, Typeset`update$$ = 
        0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$25180, 
              1] = {$CellContext`i$$}; \
$CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

             "], $CellContext`args$25180]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{218., {282.021484375, 286.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        162., {240.70148437500004`, 245.65851562500004`}}, Typeset`update$$ = 
        0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$25181, 
              2] = {$CellContext`i$$}; \
$CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

             "], $CellContext`args$25181]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{218., {282.021484375, 286.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        162., {240.70148437500004`, 245.65851562500004`}}, Typeset`update$$ = 
        0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$25182, 
              3] = {$CellContext`i$$}; \
$CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

             "], $CellContext`args$25182]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{218., {282.021484375, 286.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.912254098961012*^9, 3.912261732964941*^9, {3.912261845109248*^9, 
   3.9122618673733587`*^9}, 3.912261906632366*^9, 3.9122623704304457`*^9, 
   3.9122624080775127`*^9, {3.912262607107293*^9, 3.912262642199815*^9}, 
   3.912266839283944*^9, 3.91226703766444*^9, {3.912267431943881*^9, 
   3.912267452347896*^9}, 3.9122675229003057`*^9, 3.912267556992798*^9, {
   3.91226759769552*^9, 3.9122676195664177`*^9}, 3.912268091243443*^9, 
   3.912268472371093*^9, 3.912268515066235*^9, 3.912268690382292*^9, 
   3.9122697360651503`*^9, 3.912270033905272*^9, 3.9122701114791193`*^9, 
   3.912270164057863*^9, 3.9122743433164177`*^9, 3.91231016958733*^9, 
   3.912312895668007*^9, 3.912314851576214*^9, 3.9123148823273363`*^9, 
   3.912399690371847*^9, 3.912399822882844*^9, 3.91241041079039*^9, 
   3.912410495555201*^9, {3.912413223498426*^9, 3.912413236181161*^9}, 
   3.912421755662983*^9, {3.912430119366959*^9, 3.912430148765983*^9}, 
   3.912442987188569*^9, 3.912446632176406*^9, 3.91244673886714*^9, 
   3.9124468624530687`*^9, 3.912585209190012*^9, 3.913938869188645*^9, 
   3.9139389579561853`*^9, 3.913938988845853*^9, 3.913942624795439*^9, 
   3.915413017328333*^9, 3.915413065159481*^9, 3.9156768308751907`*^9, 
   3.915676911152454*^9, 3.91574279096285*^9, 3.9157580360546427`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"fd6d0a73-99dd-4715-9ab8-d3163c0e7d4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cubesSlicesSeparately", "[", 
  RowBox[{"maxCube", ",", " ", "minCube"}], "]"}], "\n", 
 RowBox[{"cubesSlicesSimultaneously", "[", 
  RowBox[{"maxCube", ",", " ", "minCube"}], "]"}]}], "Code",
 CellChangeTimes->{{3.912314463602271*^9, 3.912314466831243*^9}, {
  3.912314540429406*^9, 3.912314547984791*^9}, {3.912314786181971*^9, 
  3.91231479931944*^9}, {3.912410539943325*^9, 3.912410542472999*^9}, {
  3.912417171258238*^9, 3.9124171737988577`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"af9d4561-7cad-4ed1-ba9c-ad923ed74cc4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        496., {241.021484375, 245.978515625}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> \
$CellContext`cubeSlicesAllAxesSimultaneouslyGrid[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
            "], $CellContext`i$$], 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{537., {282.521484375, 287.478515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        496., {241.021484375, 245.978515625}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> \
$CellContext`cubeSlicesAllAxesSimultaneouslyGrid[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

            "], $CellContext`i$$], 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{537., {282.521484375, 287.478515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.9123145483787947`*^9, {3.912314787836027*^9, 3.912314800148036*^9}, 
   3.91239982854112*^9, 3.9124105428419743`*^9, 3.9124132416768713`*^9, 
   3.912414582626873*^9, 3.912421773283187*^9, 3.9124301387267838`*^9, 
   3.912443010767949*^9, 3.912446748427058*^9, 3.9124468661192427`*^9, 
   3.9125852132989492`*^9, {3.913942645368856*^9, 3.9139426695599957`*^9}, 
   3.91541306822081*^9, 3.915742716970235*^9, 3.915742804490348*^9, 
   3.915758028093794*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"244abbb1-4eed-4004-a6b1-72c11e9aa06f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
    997., {241.021484375, 245.978515625}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          $CellContext`cubeSlicesAllAxesSimultaneouslyGrid[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
           "], $CellContext`i$$], 
          $CellContext`cubeSlicesAllAxesSimultaneouslyGrid[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

           "], $CellContext`i$$]}}], 
      "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1038., {282.521484375, 287.478515625}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.9123145483787947`*^9, {3.912314787836027*^9, 3.912314800148036*^9}, 
   3.91239982854112*^9, 3.9124105428419743`*^9, 3.9124132416768713`*^9, 
   3.912414582626873*^9, 3.912421773283187*^9, 3.9124301387267838`*^9, 
   3.912443010767949*^9, 3.912446748427058*^9, 3.9124468661192427`*^9, 
   3.9125852132989492`*^9, {3.913942645368856*^9, 3.9139426695599957`*^9}, 
   3.91541306822081*^9, 3.915742716970235*^9, 3.915742804490348*^9, 
   3.9157580282960863`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"819c8f4b-3857-4126-bb36-7d9772e3be9f"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Don\[CloseCurlyQuote]t run", "Section"],
 " the following codeblock! The cubesSlices function has since been commented \
out and so does not work anymore. I\[CloseCurlyQuote]ve kept the following \
visuals because they\[CloseCurlyQuote]re pretty and I like playing with them \
when my code breaks and everything else stops working. They remind me there \
is still some good left in this world."
}], "Text",
 CellChangeTimes->{{3.9124452555080767`*^9, 3.9124453582446117`*^9}, {
  3.912445393927196*^9, 3.912445401968899*^9}, {3.912446562355707*^9, 
  3.912446578275989*^9}},ExpressionUUID->"00cba1b4-7863-4035-b775-\
b728565720c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cubesSlices", "[", 
  RowBox[{"7", ",", " ", "maxCube", ",", " ", "maxCube"}], "]"}]], "Code",
 CellChangeTimes->{{3.912252444092494*^9, 3.9122524530987253`*^9}, {
  3.9122534318234177`*^9, 3.912253432661413*^9}, {3.912253532371214*^9, 
  3.912253535336838*^9}, {3.9122536324392633`*^9, 3.9122536384850597`*^9}},
 CellLabel->
  "In[565]:=",ExpressionUUID->"8a6f1077-1d8d-412d-b17e-7e387e7a6104"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 2, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 7, 1}}, Typeset`size$$ = {
        982., {159.521484375, 164.478515625}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Grid[{{
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 1], 
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 2], 
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 3]}}], 
          "Specifications" :> {{$CellContext`i$$, 1, 7, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1023., {201.021484375, 205.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 3, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 7, 1}}, Typeset`size$$ = {
        982., {159.521484375, 164.478515625}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Grid[{{
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 1], 
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 2], 
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 3]}}], 
          "Specifications" :> {{$CellContext`i$$, 1, 7, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1023., {201.021484375, 205.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.912252454018835*^9, {3.912252653140688*^9, 3.912252680770763*^9}, 
   3.912253117257453*^9, 3.9122531526212883`*^9, {3.912253237361538*^9, 
   3.912253264268676*^9}, {3.9122534174316597`*^9, 3.912253447631917*^9}, 
   3.912253545564445*^9, 3.91225363904545*^9},
 CellLabel->
  "Out[565]=",ExpressionUUID->"20f7c4cb-b0db-4a16-82ed-b1c3b2f82431"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"7\\\"}], \
\\\"}\\\"}]\\) in call to \
\\!\\(\\*RowBox[{\\\"System`Private`PackedList\\\"}]\\).\"", 2, 53, 1796, 
   34809098522299453303, "Local", "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.915413044456685*^9},
 CellLabel->"",ExpressionUUID->"eb7999d1-0e6f-4802-8d3d-1e74b4723a73"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"7\\\"}], \
\\\"}\\\"}]\\) in call to \
\\!\\(\\*RowBox[{\\\"System`Private`PackedList\\\"}]\\).\"", 2, 53, 1797, 
   34809098522299453303, "Local", "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.915413044461091*^9},
 CellLabel->"",ExpressionUUID->"3c20dc61-67a9-4faf-a1cc-174ff023f5ce"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"7\\\"}], \
\\\"}\\\"}]\\) in call to \
\\!\\(\\*RowBox[{\\\"System`Private`PackedList\\\"}]\\).\"", 2, 53, 1798, 
   34809098522299453303, "Local", "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.915413044520075*^9},
 CellLabel->"",ExpressionUUID->"24cb0583-3aa6-4852-a107-8a0feebcafbb"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \
\\!\\(\\*StyleBox[RowBox[{\\\"Developer`FromPackedArray\\\", \\\"::\\\", \
\\\"punpack\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 53, 1799, 34809098522299453303, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.915413044572693*^9},
 CellLabel->"",ExpressionUUID->"72f7c2e6-06bc-4260-9684-24b69d4742b5"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"7\\\"}], \
\\\"}\\\"}]\\) in call to \
\\!\\(\\*RowBox[{\\\"System`Private`PackedList\\\"}]\\).\"", 2, 53, 1800, 
   34809098522299453303, "Local", "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.9154130445944223`*^9},
 CellLabel->"",ExpressionUUID->"ea0c4d14-b57c-4889-b608-dddce031db83"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"7\\\"}], \
\\\"}\\\"}]\\) in call to \
\\!\\(\\*RowBox[{\\\"System`Private`PackedList\\\"}]\\).\"", 2, 53, 1801, 
   34809098522299453303, "Local", "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.915413044650177*^9},
 CellLabel->"",ExpressionUUID->"1e477417-0ef8-4681-8e43-6d9bfe1a5981"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"7\\\"}], \
\\\"}\\\"}]\\) in call to \
\\!\\(\\*RowBox[{\\\"System`Private`PackedList\\\"}]\\).\"", 2, 53, 1802, 
   34809098522299453303, "Local", "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.915413044703813*^9},
 CellLabel->"",ExpressionUUID->"6deb6a29-72c6-4415-b107-f1cd625960e0"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \
\\!\\(\\*StyleBox[RowBox[{\\\"Developer`FromPackedArray\\\", \\\"::\\\", \
\\\"punpack\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 53, 1803, 34809098522299453303, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.915413044755574*^9},
 CellLabel->"",ExpressionUUID->"df309c55-5be4-4a3e-95d6-8760f17f36c2"],

Cell[BoxData[
 Graphics3DBox[{GeometricTransformation3DBox[{
     {RGBColor[0.405188, 0.204349, 0.343389], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{0, -7, -7}}, {{
       6, -1, -7}}, {{6, -7, -1}}, {{0, -1, -1}}}]}, 
     {RGBColor[
      0.6333770000000001, 0.23392566666666667`, 0.37273666666666666`], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{1, -7, -7}}, {{
       0, -6, -7}}, {{6, -2, -7}}, {{5, -1, -7}}, {{0, -7, -6}}, {{
       1, -6, -6}}, {{5, -2, -6}}, {{6, -1, -6}}, {{6, -7, -2}}, {{
       5, -6, -2}}, {{1, -2, -2}}, {{0, -1, -2}}, {{5, -7, -1}}, {{
       6, -6, -1}}, {{0, -2, -1}}, {{1, -1, -1}}}]}, 
     {RGBColor[0.7996756666666667, 0.3505163333333333, 0.48605733333333334`], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNzsENwjAMRuGkpN2jN+ZhBAaA+bHlGFt6h/9g9VOVvPh+f1+fxxjjWTNr
2kfNLzN7+p/h4nB8lQOf5Y1XOeVuf427hg/xpGl0Ai+axltbzqQ0u++yp9N3
vGi67Ok0U9yd4IzhRSdoBp50gh1S7nZnc9fwJT5pbjqBB83NW1vOpDS7n7Jn
0nc8aKbsmTRh/gEOKUA5
       "]]}, 
     {RGBColor[0.831283, 0.533131, 0.662656], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNk2sOwjAMg7t12z04Dn85AgeA89NHTCPZmpEqPnWu40Tt4/19fWop5bnW
tlbl+gHItS9u5PzeyQvLIF/G5+JJPhYHOT1hnvnfuN/Ihf6NGvFG/0Z/8cFa
jRmmeYZpYD5Zt7NWI+/G6rHTp5tmkA/jyrrdepcmyJfxyTzKkHkGNeKNeQb1
Ys1k0F9cmUeaaZppnmGe4sI8ygDTZJ5Jn0a+jDWfSb1Ys9JZ8cY8OisuzKOz
YXqYT+YJuzNhcwhmE+vOhN2ZYK1J3o11Z7QP28+6sDnA+gXutwDcbwHWL6wv
4H4L+fsDFoxG/g==
       "]]}, 
     {RGBColor[0.742797, 0.6702466666666667, 0.8056613333333333], Opacity[1], 
      EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNktFtwzAQQ+XE8R5dqQPkowO089eSjrEAEn4fgp+FI48+39fP3/fvs7X2
vs52ncX7df4lrbPeT/Pj4m4+wEs3zC/whW2ad/DyLHgK9+t5uv40P93rtH+4
uddpnwFt+ABvzhDPCW3hXrhfebp9wplJd55wc7buDOHMJ9oBbfjhPOk1oS1o
C72EXkL9yjnsH27OOdwrvIMP8Ob8A/OPZ4fPgM+AdkI7oZ3IU/Ap+BTyFDwF
H8FnfeO0Nrz5Wyb+18QOT+xw6gfqwy9w9jm9JuoL9YVeQi+hfuUs/IvCzAsz
L917nvrwDj7AmXlh5qkv1AieK48wK+neZ+neZ2FWwnyke4ele4fjWfAx6gNC
ie4s
       "]]}, 
     {RGBColor[0.680889, 0.7972306666666666, 0.8930633333333333], Opacity[1], 
      EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNk9ttxDAMBHW+k/u4lq6EFJDUHz3IiMAuMgYEz8eIXCzs99fP5/vZWvuc
8zinuJ/zm5l1XoeH+AaXN8UdfB1euGuu2Rt3zQdb4G7AT8yp91AGc1eeIWfC
MT+VYWjXFl/gh/baSTiJObV3aq/Z/Uz0Y2eKmzLYMbsTOyG+wO5hKkPCqQwL
/Sw5Q9yUYaGTpZlL3MHux/7GzBC7E+9NzKwMG11tzRziC/xQHjtLfIO7Mmzt
CjiBXQk/MbMyBLoK7R1i92PH7G8mtHeLb3BXBjsJJ7Gr9iZ6SPSQ6CHz/5+y
s8QvsP+dRD92QnyD3Uk9f6gQjqQ=
       "]]}, 
     {RGBColor[0.659388, 0.872053, 0.882048], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNkMERwyAMBIWJ6cMpySW4gKT+IOAizeyDh4Z9LHeC6/nen2pm75gSk9xi
fpJyzuAOv4IdTm/AR/CEM2PBgaYtJ8/MamR2nAUX/E5X+o7vsNHl9Aqu+ANn
wG3jij+4m/7Ed7iRP9lBcMFf+B1u7L94ozYnfXG3wwdd2v5QdE34JFPkg/oD
/50QdQ==
       "]]}, 
     {RGBColor[0, 0, 0], Opacity[0], EdgeForm[None]}}, {{{1, 0, 0}, {0, -1, 
     0}, {0, 0, -1}}, {0, 0, 0}}], 
   GeometricTransformation3DBox[GeometricTransformation3DBox[
     {EdgeForm[GrayLevel[0.2]], FaceForm[None, None], 
      CuboidBox[{0, 0, 0}]}, CompressedData["
1:eJxdl0uO3DAQQ223W/eYK2WTfQ6QnD/WhxkBetDrNGYQwqBoVRVZPfn69efH
79dxHD/P4/j+OSaen79J5m/5xhGe/87PsZ7Pzyn+fP6IPxZ+Swf9Z519Fn4v
/qP3PnrvWJxn4XPxh+4Dh3uWxefOQ3fm/pfuf+r+k19VS1ct1HWrrlN1Harr
Ej6XJvX2he//ah/iRJpTv+qedenXhe+lWXXPqn6Cp05XP/s6Wxe+lk5Xn7v6
zFnmcmsuRfi9NJlX17yY3SXMXNBkjtyTmVbNtGumzPfSfF+aL7NgXsx36jTN
GsyMmDVzf2nu+OdZz5k1/sED4HPpM18ws8MDXZpDnEgHP+A3/ACmxrp0qjhN
nmni2D9dHHtpiBPdYd6nyWMt26tNc2zqScv2Xlt3aOJ0cbo0hzTB+JM7RBw8
j1d7tle7+oO3nYWms2D8zFkw3ubsED/SITt4Bs+Tl3J8ZqdlZwqM/8lRl6bz
FT0nU/QhqjfZWUh2FqJ6o7qSnQU0yRp1kRHvUjB1kTUwdZG7Ls0hzeg5GaQu
suN9C6ZGsukMgoswtaPZdXboefScbBZhekJ2wOwKsgamP5xtOgtm7ryr6+zQ
2aF3Re+K+GT2LcxuIY/gW7gIs3PIcpVmlU6TTtPZrrNdZ7vuM6QzpDN0nyHN
SCfS8U4As6/INRgPszeq+E188FsYP/Mu740hvvdG9K6Iz95gFuwHdsVLGJ/D
B9/CRZies2e6+EOcSJN9Qq+S7edk+znqVdSfZHs42R5Gc0gnOsuewYfsFjB9
YLeA6QNnwXiPs2D8xtkhfqTD/inCZJzdUsUB4xn2kncLmCzDiTiRDnvmLUx/
2A/eP+wZfAIHTE/gsEMuYfrAnok47JBbGJ+QQXZCEcYnZLaJ38X3rvBOiN4b
aZLxlzD7jdyByRQcslyOz4w710OcoXdF/EjTWQazf8hvFccZd5bJaTk+8zvE
iTjRu/x/OvJ7CdOHZGcKDvm9hclO1B84ZLkI0xOek2uyQ77IL7WTR3JKRshs
pONs+u9zMoWHyam/u50RsoDH8Ly/K/FqEcYD+NPe83eKvZRsH+INZsQcmS89
hMNM8RLz8hw9O8/LM2Iu/wB0HKvr
     "]], {{{1, 0, 0}, {0, -1, 0}, {0, 0, -1}}, {
     0, 0, 0}}]},
  AxesLabel->{None, None, None},
  DisplayFunction->Identity,
  ImageSize->{284.01868362701134`, 330.7019899375626},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
    "M10DefaultGradient", 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "RelieveDPZFighting" -> False},
  PlotRange->{{0, 7}, {0, 7}, {0, 7}},
  PlotRangePadding->Scaled[0.02],
  Ticks->{{{-0.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}, {{7.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}, {{7.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}},
  ViewPoint->{2.156208890178604, -2.5645049459612124`, 0.4733683597952597},
  ViewVertical->{-0.21986842944689844`, -0.9741864309765242, \
-0.05117295607814849}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.896330176088093*^9, 3.896330192665531*^9}, {
   3.8963303631655607`*^9, 3.89633038976855*^9}, {3.896330423233328*^9, 
   3.89633043410995*^9}, {3.896330509216579*^9, 3.896330517282062*^9}, {
   3.896330627519936*^9, 3.896330636247086*^9}, 3.89633073077172*^9, 
   3.896330781069508*^9, 3.8963314621825953`*^9, 3.896332227841249*^9, 
   3.8963381893310957`*^9, {3.8963729778830233`*^9, 3.896372986594284*^9}, 
   3.896373047968767*^9, 3.896373149514886*^9, 3.8963732109932213`*^9, {
   3.896406898297853*^9, 3.89640691466749*^9}, 3.896408665498767*^9, 
   3.896415387910993*^9, 
   3.8964154184164343`*^9},ExpressionUUID->"0cf7af11-1c17-42bb-9958-\
8cd8ecfaa108"]
}, Open  ]],

Cell[TextData[{
 "The images that the following codeblock produces can be ",
 StyleBox["manipulated", "Section"],
 "--click on a cube and play around with the tabs that appear. You can even \
clip along a custom normal vector!"
}], "Text",
 CellChangeTimes->{{3.9124455171566877`*^9, 3.912445547501302*^9}, {
  3.912445609614478*^9, 3.912445620988151*^9}, {3.912447048377124*^9, 
  3.912447097979877*^9}},ExpressionUUID->"d7acfd83-2905-4c91-8de5-\
560bb0ab3d78"],

Cell[BoxData[{
 RowBox[{"Image3D", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"maxCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
   RowBox[{"Max", "[", "maxCube", "]"}]}], "]"}], "\n", 
 RowBox[{"Image3D", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"minCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
   RowBox[{"Max", "[", "minCube", "]"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"minCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{"Max", "[", "minCube", "]"}], ")"}]}], "*)"}]}]}], "Code",
 CellChangeTimes->{{3.8963316730691643`*^9, 3.896331746094306*^9}, {
   3.896334624808174*^9, 3.8963346560064697`*^9}, {3.8963348102956*^9, 
   3.896334818678288*^9}, {3.896334880560091*^9, 3.896334900623008*^9}, 
   3.896415066154051*^9, {3.89641525094273*^9, 3.896415289726448*^9}, {
   3.912445463231304*^9, 3.912445464626943*^9}, 3.91244723400909*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"4a151634-84be-4917-bc9d-83c658b41256"],

Cell[BoxData[
 StyleBox[
  Graphics3DBox[
   TagBox[Raster3DBox[CompressedData["
1:eJztmzFOAkEUhjeaEAsSEyoqEwsau9XESnZjrKhMsLSCRG1AEygMVlYegAN4
ADgAB+AAHoAL2OsBnJfNKggx8n/MEBIKZXeZLxln5t/33j/jYfOhfrsTRVF3
z/2qNx7PO51G76pgNzeN1slxa9dd7k/9xMWLalwcVyu1UuKuk+pbN6nU+slw
MHD342TUnrhnH0mzXEhdm/S9d5AOB0fp/eQ0VTn7VDm7Vzl7rnLZ9xpn7VTO
2q+Ds/6qnI2TymXzo3G2LlTO1qPKmQ5UjuhP1ZFrn39KnN2rXDY+KldKVc7a
qVw+j6E566/KZetN5fqJytm6UDlbjypH9RsyHhEdfZ5dfvMqZ89VLvt7Nc7a
qVw+j6E566/K2TipnM2Pytm6UDmqXxJ/Q+V1JB4RHY3a1zO8ytn3KmftVO4n
Dw7LWX9VzsZJ5Wx+VI7ql8Rfkj+HqI9IXkfiEdHR0+vdHK9y1k7l8vEKzVl/
Vc7GSeWofkn8Jfkzq3/9+gykPiJ5HYlHREduTBfyKpf3OzRn/VU5ql8Sf0n+
TOpf4l/59OuIX0DqHJKfkbhC9BBFz3/yoTmqXxJ/Sf5M6l/iXxH/eau/zdZf
s/yy1eGG69DH/hGJ+yTfIHkOya9IXkd14JMn7x3yviPvWfJ+J3GFxLNV78OS
+pfU3aTeJz4DrY9oPPHJk/qX1N2k3ic+A/E3SF3H/JzV7cMS/5n43tSvoz4D
zct88iF0tIgnvjfx24nPz/YXVnMuaBn9/d4PXc4/7q90/4j63tSvo/WNTz5E
PKI6ms+f9X1nst8dg30+VX+VqfM5y+ovnjoXtKz+qH5J/CX5sy+fwCcfIq+j
8YjqaDb+6ue+KuC8i6q//Jyqoj+qXxJ/Sf7sY//oP7xPv476DLQ+onkdjUdU
R1P5s3zuU9Wfu64SnuifxG+Sf5P6eV37R4QnPgOpj0heR+IR0VEM/v/hC5iJ
2c8=
     "], {{0, 15, 15}, {15, 0, 0}}, {0., 1.},
     ColorFunction->(Blend[{{0., 
         RGBColor[0.16791, 0., 0.301671, 0.0441387557208916]}, {0.1, 
         RGBColor[
         0.22307159999999998`, 0.02430488, 0.42178180000000004`, 
          0.13972488014880244`]}, {0.3, 
         RGBColor[
         0.2917374, 0.11413975999999999`, 0.6482166, 0.3308971290046241]}, {
        0.66, 
         RGBColor[0.26544316, 0.54154952, 0.92275724, 0.6750071769451031]}, {
        1., 
         RGBColor[0.772061, 0.92462, 0.998703, 1.]}}, #]& ),
     Method->{"FastRendering" -> True}],
    BoxForm`ImageTag["Real32", ColorFunction -> (Blend[{{0., 
         RGBColor[0.16791, 0., 0.301671, 0.0441387557208916]}, {0.1, 
         RGBColor[
         0.22307159999999998`, 0.02430488, 0.42178180000000004`, 
          0.13972488014880244`]}, {0.3, 
         RGBColor[
         0.2917374, 0.11413975999999999`, 0.6482166, 0.3308971290046241]}, {
        0.66, 
         RGBColor[0.26544316, 0.54154952, 0.92275724, 0.6750071769451031]}, {
        1., 
         RGBColor[0.772061, 0.92462, 0.998703, 1.]}}, #]& ), ColorSpace -> 
     Automatic, Interleaving -> None],
    Selectable->False],
   AxesStyle->{},
   Background->None,
   BoxRatios->Automatic,
   Boxed->False,
   ClipPlanes->{{0, 1, 1, 0}, {0, -1, -1, 30}, {1, 0, 1, 0}, {-1, 0, -1, 
    30}, {1, 1, 0, 0}, {-1, -1, 0, 30}},
   ClipPlanesStyle->{None, None, None, None, None, None},
   DefaultBaseStyle->"Image3DGraphics3D",
   ImageSize->{345.0679272319402, 350.48585202455183`},
   ImageSizeRaw->15,
   Method->{"ShrinkWrap" -> True},
   PlotRange->{{0, 15}, {0, 15}, {0, 15}},
   ViewPoint->{-2.9353056314934878`, -1.0789785073393152`, 
    1.2922020857522396`},
   ViewVertical->{-0.6242164435920198, -0.6586486316638882, \
-0.4201616493168059}],
  Raster3DBoxOptions->{PlotRange->{{0, 15}, {0, 15}, {0, 15}},
  PlotRangeClipPlanesStyle->{None, None, None, None, None, None}}]], "Input", \
"Input",
 CellChangeTimes->{{3.9124469007662783`*^9, 
  3.912446900770895*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzUvWdglFXXNXy9k0p6SCAgqNiw3d5KC+l9rpkJgtIEVHoPvRNCIAQSeu9F
QBEbYgFpSlE60pv03iEJLUDKlHftc85VZjL4PO/37/uxZyaTgJhZa++1y9mn
ccfBPbr26Ti4Z+eOtUwDO/bv0bPzoFpyv4F4y+P/SNL/WQZbWUvyxGuHJFV4
WC5J/79+XZ+99DBIUo73u1JLMqmn7vtvsW9XipYGSB6+SVIH+gG/elJjyRDU
UPrMEBonfWoIi5TaSZ5V6kgdIxpKbegrzyQpqYfub6lBDwb685J3QFKVjOC0
0GGaScMiUqV+hhdipd6GmklSH8nrlQTf3q9H+2Qo9mqcbyfJUBP/RcnvxQZS
x1pRUodXG0idyF6Plj6vjf8mXn9K36N/A/6F3fT//SD+f+mFt4MslXPIJI+w
1MBMySsi1T/vlYTgsbWSQnLeTA4c+kZC0BDJ8HZCQH+P9+P8B0o+kdFBAxrG
VRrcIMarX51orz7/bejd84MYrwx8nSF5NIzy6iV5x0R7ZjSM8+qGrzrWj/Rq
+1496bP/1pXaGT7AP8pQpz5+Pz716kqf0pdv1pc+p39rtQZSh5APpA70u5K6
6/6xBv6PDWwS/kVY0xpfhsYFj5cMVWMiJku+NVLCpr2SEDG7dmr4nDppVWY1
SK02Izq16vT6xuCJdVOCcwwxKYHjJJ8U/P/IKdwapwSOaZwYOsqSGDQiPTYo
U/Iwx/kPkfwax/kN/jg+cGjz+IAhH8f7Dfo42q9/4yifAY1ifPqboj17W6I8
ejaK8ehpaBzlkSFV/qihd3e86m6O9uxsbOjZIbWBZ/uEBp6fJjbwbEPPSfU9
P09uyJ9j63t+Rv+39FugT4Y+N6CjJSFG/I8Ws8dKvkm1lkWkvvKNYi+lvfrD
q41eWlk7vcaX/2n04ldRlhpfS4ZUc43lko85veayxpYXvvrEVG15YzliQXpy
tTlNU6rOaZlSZbZkaJMSPsvQMQ0vPbqmVJ7aMaXyxPZJYfmSR5ek4FxDRmLQ
OMmrZ2Lo2F5JoWO6JwSP7BofnNkjPmC4ZOgaHzjY0D0hYLDk2yshYEjPeL8h
XWJ9B3WO9R2A576dor16tceH3LahVw8DXvSUwjs29OrZLtKr+6eR3t0+aeDR
FdapWV2PDh/V92gH+/TDuh6fNW7g0SYdr9Pwu6HfS2R9L/bpv9tAav9yHe3T
J+J147+T2+zRMyw1cvMr8n/XvGCs8ys9G96S662VPGPkD34zm+quky3vr21i
fnO1R2tz7Z8k77am2qs748sepjd/7Gl5/Ye+6bVW9kp/8SvDwPQayyTfoZaa
y+lVZnqN5VmWGktHGCMWDk+LmJ+F31RmapWZHjlpVWdK3nmpVWblplaePi4l
dGJucsjEUckhE3JSQvIMOUlBYyXfvMTgcfnJwWPGgiNjE0JGw7LHxAdl5SQE
DB8dFzDUkB0bMFTyHhkXMGRknN+gkXG+g0bg1zc8zrvfkFiffoaBMT69JI+B
UZ49B0R5ZfSN8uohGXo19Opm6NbAq4sU0qWeR8f23Nq1q+/x+acfeHzWCr9D
+l1a6nt8Bqx9FlXX67P6daTWhCmF6eRpyKeI3985jqmqctNdL6c0U+0tufnu
/8jyNqOc+meSOW1bS7Nxi2RoZ0rbKnlnmFO39pQT/xhijtzUR663fqC53rqR
MEOuqd5vkme+XG/dePP7ayZY3v1pavo7PxkmW978UfKdZam9ep7lTbIfF1pe
+26hpdbK+ekvfTXLUvOrueYaXxoWWV74UvJZht/5UssLS5fLLyz8Qq4Gi5i7
BLY0LQKAXZ5adbb04orUqjO+TA2bujw1bMry5MoTl6aETFicEjL+i+SQcYuT
gsctSwoatyQpeMyi5OCcBUmBo+YnBGXNiw8aMSchaMTMuIDMOQkBmbMB41mx
fkOmxVYaMiWu0qApMZUGTMKvfUKMb7/xsb69x8Z494L1GRPt3TO7oTd+95kN
PbtK4cMbeHYZ3MCz88B6np361/fq1KeeoUPvuoZ23WEdPvBo26aOx+fN63u0
ISjL9Tw/i4/0/Jw+Br0TI2erwLgr/xgOCfcV2+n066aM86+ldDsuGd6xdDxp
qGvqeFSq/Zml0+HWcuejGeYOh/vILfb1MjXdPcjUbFe2sdnuHLnZrummZrtn
4L1Jcvr2+SbTX9NN8rYFZuPWL/CJfWlJ27oStsKctOUHc/Smlaao9d+YI9f9
aKq/bjWMnteYYZY6a361vPfLess7P/1qeWv1r/i0fkt/a/Umy1s/brS88cOG
9Ne+35D+yjfrLC+vWGd5CVbzS8NG8wvLpPgNeNxorr54kxyxcD0+tbVyxLx1
xmpz1+JTW2eMmP0b3O6a1PDpa1PDp67Bp7Y2JWzSr6DNL8mhE1Ynh+T/DNrg
OW8V/M6qxOCcVYmBo79PCMr+NjFg5HcJAVl4HrESn9qK+MBhX8b5DVkKP7wk
1nfgohjfgQtjfPsviPbptzDap++8KJ8+c6J9es1A+JsCroxv6N0tL9Kzy7hI
z85j8KmNru/ZaVQDz44j63l2zIQNrufZvk8dQ7uudT3aflbX4/OW9Tw+/bie
RxtTJHdA5JTr1pM+V5wyOSByyhQqJfHRbece6EV53I06admXa6fmXKdnQ4yc
dVmK+Sht2KUuxv7n+hn7Xhhk7Hc+U+57bjxsutzv3Gxj71Nz5c7H55s6HVlq
7Hj4K2OHQ9/KHY6sktsfXiO3Pfiz/Mm+9XKLPWvkZns2yU13rzc13bMNtt30
8a7Npg+37zCb/9xplrf9ZTJu3YkPe485betefOB7zIl/7LfE/r7XErVxr6Xh
xr/NDdb/ba5Ptu6Ape5vBy3vrzmED/oAGHrQ8vZP+/FhH4QdSa/940HL698f
SH/1u4Og54H0l74+gA/6oOWlrw5aXlx+IL3m8r2mGkv3maov3otP+W9jtfl7
jRHz9hqrzjXgYY7UcG9a1dm7UqvM2IEPeldK2JSdKZUn7wRFd+CD/is5dPyf
SSH5sLwticG5vycG5cBGbcIHvSE+cOS6hMCReM78Ld5/xJo4/+G/IKisxgf9
Q2ylgd/HVhrwHT7sldG+/b6O8e27Isq37/Jo795Lo7x7LYny6Tk/yqv77Civ
rjMaeHWe3sCr02R82JMiPTtMaODZYVx9z4459T07DK/n2WFAXUPbjHqGdm3r
eLRtDaMPXIk4FJGViENUJW9JHzjTbKCq1IV/4Os4V0M+Xnb/P63mF0W1mlco
GdhjG3PTuQ8/TJ1a1M84pTDbOLUw1zj53gTj1ILZaZMLFhvH3f5Czr663Djy
6mpj9rVfjdnXN6SNvLrJmHn1D3nQhc2mfue3yv3O7AYytst9zx4ASvbJvU4f
MnU7sV/ufOyo3OnoYaDjBOyoqf3hU/JnB4/LrfefNrXcd0pusfcsUHIG6DgL
O2dqsuu8udGO80DIeZPpz3NwB+fhxi/CLsENXDDH/37JHLvpgiV6w0Vzww2X
zJFk6y9Y6q+7aK6z9pLl/V8vASEXgJCL6W+vvmh+e/UlIOQSnPf59De+P2d5
9dvzQMgFy8tfnwc6LlheXHEG7uAsIudpc42lp4EQ2ILTpmoLTslkEXNPy1Xn
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
pWIQ1FxxJEcxFQv/a9sWFC1BBBnMu+JgdcIUvPOd6/EWkgOGaWHSVgqYkwhV
6ocFQMpV6rUEVu4CVog13h3iwS8RYm8YIjR2KXvlEuk53soR6W81Ir1IuEpY
iBGBnzkVerPA8yfCDh+6LCZmBfpf5BDobfMwZsQtzwxfaO6/1CStJ6yw1USq
XqUxhZo4BXWEKMlKW+DbsyhGGKXqKeB/vf9L9ZTW16E+Ogb4o/T1dOrf+wCT
auHPOwCftgAmrU1n3l6WzryzOJ1958+pK959EuqxaamrFv8y1e+9zhV93oto
kEqot6cjAURLFY7SSAK48JLETYIAomVq+LrORXdVAfHb3a109L5uzcYLcJp+
vKcqnjAa6qH6FAITXBnWotrpgWLlR3iKiielRf0xisgUOf1rJ0tcOqe+LywK
l+hM3845XJ69QlY5ycE+npjB55faIfdFTqJ357pwoocHh8GJ83sf0IMzU3xz
eoucq1fCzJ5XB82eDFI0XZznZh9gWYVjNDpY/H8qqVw/qAZeqoU8iEroNTOb
JdLhIz0aaNT2dWwmdZSvEk+z19XZPSGa/V1qZ0yYXB+XepSdJXQoYHgyFrtI
b/o8Ev06px/15s+lTt+kPUzL9Akr0wdz1k0iDe+PuNZbTUN4FtgNyvilLKnK
BiF1+p/L1JmmnPIfylXDnPVX6IXOiJEhbapAID2h+dRYQi/XTUYz+LyYHtaB
HwY11xKLZ07NBViWQiz7z1F4fxiuA4Bl+wDDdkMltz2d+c9GwMsv05f/51O4
/gmPfyXdd/H8TN8ld6b6Lx6Y6rsEa65zJJyd5vNDdLKjBcvnhx9dVnQ7Ngah
5rpH1Vxdy8YAJ5x4WGlXUGvpeCmCMpVyJ6CM4qWgxvq9rrEUlEUIy1pDjfV8
E471N+yCF2W34iFlLyMh+ZYNb+n9rpbbm9vpP8Q0VBtsDpvOS7CLXVSlFRxU
DgKZ6P85U4DTGMgKnPCWvkEwI89VETlBFZbV2AWZ7qpvxLOYj2dME7EDKXuD
6qMC62AvDPqtGKm5Dcg6nId4sVy20pFKYFd4JVSwsqACdrf2yfqjiaMEG71j
jfJb5bMUZvUvM+oT1OrDp3sk2iiZ3TFmJVyt/rerGC5DtPovuNIKLLq5fpld
CIHARQAWEdVc3JXarl8ulkXkSF9n/zzrYHZBRECx99ORdfKWVOwL3WxkBimp
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
1qQpII3i+AMljhV78Rb52oSn1F1EFL5ZktVd/J9xoSUbUyqCaPSWoqCcK5ci
OTMKW0hlaipCe5gMnfWjPoz9aLMX9SE2MdEovkls9CboFU6QvDt0jY2YPJF9
mGhRcGGJaH875mFp4pPM6nPTHQpASb5LkW5198QVu5TIYys//ShiYmztjjhd
FjW9oUnHe2hEOUUgirdX4BefNKqL0KUB/k1WLoguULm8fyTVDyuXJXsAQXbD
322B9+uhklkGH78Hf/86fP4CLaKw7S5yBsFLqXr7A5/8zO6oyU/nouG4NvZz
qFo2dC0dva1b2fgagJX9ACuHeraYerRnyxlq4qCi9YP1SeN90YmIKNOe+rTt
R/sy7Q90Z0iSn17/tivOOAVjwPvyRxIecShHNQvcRYtcqfiLFgtzEx1rczFz
BLSvmioVkyi90GT0xBSwJFRXSAVhLDQxYxgUxBVLkYMHqnoIpzjhTSNWcYHB
qOYyPkdldUJKrr2nqni2caK/tgfnh+OSdvSV85jUGLH/ES910IkoljZl1hu5
Xh1+/C2Eel/YZ6xtyEU5OkTrOfLaKUzyuH4J3hqhaYQqqPDvtPlOxJ/JXA0n
hdbdNRLjJXA2pCgW1uLmx98sEh9jXtlTYPcrqSxzL87jhhVWxfXx4qcc9fgJ
O2vC/HpOgeP5gqXs8hP2BcND2wCmfNoINyZcQTY0SFUsiCt1cB2D13NkRFSx
9FtSCxXQTsCYral+S7+Ez/s01f/9t+D9C6n+SxfCx7cCs+qa+uUnDqR8n8lQ
8pL4zdd3TNxy36V5v0Uy9KJLhu7DDdQ7u5VP2NOj+RTctHikV6uZxytazz2e
bD0PIGV+Q6qtaDZ3eILSC0+3K8sqz9EVCwuzSIYu8yoWJkPS9j/wA7tRmiHl
5hzdnN985TEfZ/Q7gCdqwLKp7T+FpkJxfHMLnZwK+C27oNJfr3JFYbaFHa+M
iUJBHfIJ2/DvEEzwi8/YTQs3glwHIUhotzG/vmEImWSMLpGg6jKFe0HbwhTb
KIswvCuNrzFbsXGcIz/xbmPYDZdrRxoQCZFrXVsLdZUTtl1dGOLp2+AbYaRc
m7BKijr0nyvvP6OFZkV2zNPKtIIW2cWPvhevOMTVtyo4B0W8itIVVZKKMOJd
bzrI1y+jz9DKiy1ZeHvkCQnPNR9w1qLaW6s1GM+Hx3OcFk1+9glVKMh/UKXt
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
ouqwJuh2c62PAgWDZpZYxP1JkqhSAqzSyerFoEUhSqczujpbq5BNzaUZMJnP
427hOIJ+rULRO0nPIkqitRH4mSvrN1klCoNJfypbh4ZV9dl3x+anmkj0/12v
GK+jD2Ua+hTHCUp6BbdhXU8F5+qICIyCcA1zI4cWY50ftbaKRJitIpKzEBGz
I/EmpQlTpoieiPBztjbYoMwOt3yB2AB48HkDUIz65K+/rEv+5stj8Dp/GB5y
EDBhL1y7AAsQG76E62P4M9YCjwEmoMLQPn3HRsYF8lVe/J0uxWNvBm4wA65n
ezSf/F7PVtNX9mwxfUPPFtN2Qg2wBzAB6oC5UAfMZ3WhPtPhd8AVRB3gD2Tw
ngAv9U6FefMSaZljZWbCPw6ZCV8V5Ap+wAQJjxEuLnkNvbrm1NABi6lDNUC3
LhMhbOEajy3gwzOztMaPKsjM6kAVoLIr5uvXaAKGsmA/lGsLcWM+o6xAwGlv
4ZmyKOG3xpE1+2lTVmFYTcC7lq58qLaJ0bT8gFrRh26qvnwuU4ZK55pdbQUL
z9KpttwSkFUK2HEki1zTZLRPQbdIJ4gW6ZRd+YFaQW6Ho2gLR5goNvKmqRCV
0iScXdadRaJEsSNz4mmmdEW9LCFHvJYyWa711q7k+bnm2q9xgsGSNZ67wrnZ
SLE/jpZPKVsFwoOlFQoikrd80QC1cwNQjAb4cz38ex2UDEcBBhAisHSoBXqw
Dd6vgRdZVBNQgEQ1YTxcqCa48PBDpgrDejSbuKBH+aQ3ARbeB3qwGqBha69W
s6sr2szdX9FmHkkJ7TU8tAd4ULMYomw4L4Qq+P5qzvnvrd/30RSh3xLc5iQ8
1jkGMViBlFQhzM1QqJ6a6uVfV/uKlc+rIXggnZBeqD2GwK+WzBAKmmIIiA1w
rOIWGsqDDVIBC1igi4aBuY9m9eT8zvdGyvG71rl8wqlJ7CbhvMIr7ZKjOk+g
TMSahJe5MngnZnXQAqfqECGjbK+wYaAcx+WGBYtdszqCTwTysFY5ozqEQVg9
wrou8GV+7FbrxXIH0MJIiNnYRA/OoUaMrfLUiKgaWo9/E5tFzHmQsnS6syM2
2pNIR3FQfJDmX0YiNd6mk8ojrfAoNAIyNCpkADRI/farBigUGuDv6+HvsWg4
AihwAE6/LhpWs4DgtyW+0+v2VeSI1PPh3dr2Kp6EXGJ8j2YTnurRbNLferWY
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
LK7HFmQlpQ5FQEqAWchTxOzqWiSzzA/ItpUJ/wBWn15DrBKnpXHtVt9Dsbfj
A1bcjG+z4hpqfwX1uoTfZ1Hu6YS2K//o/kTJbwntVh8BZvfCLMwStoFJtSyB
OJ0XL7HKpJdZApNeZglesU+vVaegVcZLrLLp9jmweva9RQ9KX827V43mWr15
zt0GU9oNMSNtLDNe+8/pNmmqiUxXTPQ/6AQ/fPGJ3cxN9k/grQNm/2c3P/T5
utpyi7N/lULyrPULX+r7o/I9Cm+70Vj/9RmNDI0kWRtOVeMW2ZAqaBMo8qeA
PiVYl7JarcGurZdAANjWi/4ytV4IAC+UIPbXQLxMpWZbG1BDL0Rv7wv/37Qt
adXQmLEdVX4OKNIyG9XldI352SDgLfJoQZiAmkTlU3ZJgUCpIFNyaTFfhgso
lkgNAFIDiNhi9iqg/KfrcFgNAE+pRhFVUCpRSoRW4HdZPPOBJ1fZobToOsq4
GN+m+ByqfxpyPCFgxR8o8xCY9gBqvhto3Y7m4Fagnk0z5gRFWDOPZU5AlPaM
b/8lm2f/Qr7rHNluuZzZUpkglq4Bby65N/L9RQ/2v73gwe34nLsVAGgt0oF6
Y+oNTjMuP/2ifX3WS7bIRtnNdaE9TOF0+/2P2V70115qsE21r8gh3e7WId2C
TK3zXKidyY2nOLa9ouVsx6NaY2y9fHVHdpvKRoxBZnbCqMXWZFX/X7HZeikr
pOGyFbDYCphsVQB8LgA2FwiMmlWM4hSJPi2l0P9XdnZows6FogZNM5LHcmhJ
zQaVmgslNbdZRuiK3YLhtY7sYoO1OAeBaFcmIoBjsSUuoFjCFiQqmlvsC3ty
FbC5knyqJ1D1RKjiWIdlXZxNakHuNeTqajYAn6hMaLeqEoRIMkXaqsK0HWD6
BNLWgBWE6FVAlDA9i+1TCQHFR3FvhyEHsf0LitqZ8MTKreD7TQlPl3yN1h2b
W4Xdn7P2+7LJxbSVgb9zgoSpnFtSmSSW3oz7m17Lu3/ePOdeqXH23SrE+zpw
aINx6hVL7MRLFjFwb7w6GYU9h8oMVccoz2ccapy3fg1CPO/QBmRr4/XkYGz5
rbom07CE/mibgkVMPdVJvGhu/fzJBtv7aI0e+q3RYrzaujFIjEr+tIeSv4QS
h5VYGRPSSkPnAj3hqSM+CbLW9uhcooFMi/Qqoy5TZJneAsFmqyxpzMhN0G4W
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
qCtiqYdePtWupvarKn9xUfT/7rbyf/4vtmxzQw==\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"cabde1b3-64e9-4f2a-bb8d-089c9750c524"],

Cell[BoxData[
 StyleBox[
  Graphics3DBox[
   TagBox[Raster3DBox[CompressedData["
1:eJztm7FOwzAQhiOQEBsSb4DUvgBIbDRi7FpGpiLB1BapDIiNlTUP0z5MX4ZY
xarl2vH5PjcI0QFaJ/mb1Pbn/+6SXj29Tl5Oqqp6O2//Tabv98vl9OPhzDSe
p7Ob69lp+/bC+RuOm7vh+HK0nj+O2vejxWbVvt+M2l11u70eN4N6sbmtm8G4
bo+pN6t5XVWfbfur1urMq1Zn2lqd2a7VbffrdOY4rc4c/xs6c71aneknrW47
PjqdmRdanZmPWp3hQKsj/O040vLbZOvsq/0eOTrb3o2zXGe3237M0dn9dhxy
dPa4FE8p/nJ19jrd65fqbP+4/SbV2XFxxytnXptXd57k8dCoOaL8Uj+iHGnO
7/d7Sufq/fFO6dy2P89SOne7P79TOnd/isOU/8U47OLPtEPfQ8KfaYf6T8Kf
ae+vmzL+tv6r4YDzS/yXxnXUjyhHivhZzKGvj823kM4/f2yeh3Rd21M68rn+
dcXWkxR/ZnsojpDwt/XfvHlcil/ivyR+pvkRjeuoH1GOcr5/at65vrOv757v
uX5FfDKkC11PLK6W9UNO/leOX+K/JH5m+S+rM9D8iMZ11I8oR/L4Oe07JN8j
eWa8/2TzqDS/xH9J/Ezy3xxuNPNHkr+XHn+yfpP4i+RPGo5K1EuP4/d3x+/Q
40/WbxJ/kf3kukh/0HE4jt//Gz/rv9p1g6xXZJ0snR+VjOsOMf5k/SW+QfyK
+CTxZxIXED/T8mfz0Nxx9/NfKX+xvDvFXyrfj/FH6gyl+S3tR4SjPupX0vOF
9NLrDOlJfYPkdVr+bD02lz+/DizlL1Z/TvFH6t4l+S2ZH5G4jvgR4aiv+0ek
3k7q/Oz+AnsuKJc//36olD9yH7YUv6XqdYQTwieJ64gfEY76fH6D3O8m9/m0
/K1/ns/J5W+Nngvi/BL/JfFzl99I40USp5L8iMR1xI8IR+uen5/UnM/V9/2c
KuWX+C+Jn0n+25V3STgk9RpSZyD5EYnriB8xjvr//QJ53pvoCf/Ev0n8TfJn
Uv/S1tuontQZSH5E4jriR4Qj8vuHbxZmmyQ=
     "], {{0, 15, 15}, {15, 0, 0}}, {0., 
     1.},
     ColorFunction->(Blend[{{0., 
         RGBColor[0.16791, 0., 0.301671, 0.0441387557208916]}, {0.1, 
         RGBColor[
         0.22307159999999998`, 0.02430488, 0.42178180000000004`, 
          0.13972488014880244`]}, {0.3140914351851852, 
         RGBColor[
         0.2877702100694444, 0.12918308854166666`, 0.6612564195601852, 
          0.34900868055555556`]}, {0.66, 
         RGBColor[0.26544316, 0.54154952, 0.92275724, 0.6750071769451031]}, {
        1., 
         RGBColor[0.772061, 0.92462, 0.998703, 1.]}}, #]& ),
     Method->{"FastRendering" -> True}],
    BoxForm`ImageTag["Real32", ColorFunction -> (Blend[{{0., 
         RGBColor[0.16791, 0., 0.301671, 0.0441387557208916]}, {0.1, 
         RGBColor[
         0.22307159999999998`, 0.02430488, 0.42178180000000004`, 
          0.13972488014880244`]}, {0.3140914351851852, 
         RGBColor[
         0.2877702100694444, 0.12918308854166666`, 0.6612564195601852, 
          0.34900868055555556`]}, {0.66, 
         RGBColor[0.26544316, 0.54154952, 0.92275724, 0.6750071769451031]}, {
        1., 
         RGBColor[0.772061, 0.92462, 0.998703, 1.]}}, #]& ), ColorSpace -> 
     Automatic, Interleaving -> None],
    Selectable->False],
   AxesStyle->{},
   Background->None,
   BoxRatios->Automatic,
   Boxed->False,
   ClipPlanes->{{0, 1, 1, -6.}, {0, -1, -1, 20.}, {1, 0, 1, 0}, {-1, 0, -1, 
     30}, {1, 1, 0, 0}, {-1, -1, 0, 30}},
   ClipPlanesStyle->{None, None, None, None, None, None},
   DefaultBaseStyle->"Image3DGraphics3D",
   ImageSize->{345.0679272319402, 350.48585202455183`},
   ImageSizeRaw->15,
   PlotRange->{{0, 15}, {0, 15}, {0, 15}},
   ViewPoint->{0.7476874819186882, 0.10952416869897241`, 1.8517472521521101`},
   
   ViewVertical->{-0.4722714408614868, 0.8703907912525777, 
    0.13921047607607284`}],
  Raster3DBoxOptions->{PlotRange->{{0, 15}, {0, 15}, {0, 15}},
  PlotRangeClipPlanesStyle->{None, None, None, None, None, None}}]], "Input", \
"Input",
 CellChangeTimes->{{3.912446965137061*^9, 
  3.912446965141261*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
7hI51mP//ZoHWseNyiHbPvhxsjr86ZWPJiT+3XLGS+lQviquOjm0frPyc8iZ
H2shcylC2znKzaVFV7QKaRLGbEfovAVa+bkr7OVmbbCHTKXFWVtsZSbuoFVL
ttK0emn8SVuZ8adwemcx4NBxYNqxb2Da8c/wfnImInRCMgYcOh7OnJAOk2TS
AFiy8Hd2XJnxcON4+BLUHJCLrcs0rG7i6gBypidWjJjgsYHMk3k93P7kyRGs
0UTkyUkWdT/5EspeeFOMgYa0kQQrJKkpNhUenFZsx8oAxWs4LfjW69eyU1j3
hIp1kq7Mp6ziEBmU5M+7K41gFRLWCNaDuvr5Ue5Xzra6/ferur3DVXqkYPXY
u95yo+rIQgZ94Rz55MjnUxI/+XpGkjKQ+5avB6xGWZSClTTQ146QueRXGaxD
8TgTgUp+XeoInb8KIwG+3qmFzNhlLzNtn73s5EP20pOP2MpMOoOseyG2zMRL
OL0rtjITEKgT7sL+8Ot4M/M+hyG8zMt9O4F8m0F+BWay7GWn0txuTlyZSajU
EcZWmptUrDSTBodOcFMatrJtoCe29Dg2LWFyr8L8ayHXKqVYeRdTchhzMNOq
xTj3RhbtJ5zb38+xQ9/g2FFG6gxmrsXXVDUCVQ6fLgzSaAXhVOrGUJn/DoK1
6nJen7yH+qTuBpFSSdfu4CmVgvbjQzyVckmkq79e1pFKdXsnjG63PPbud9xq
jzsu+8BHmeqwJ88/HPNs69czX7AiZQB3Ll8B+W5lteIsycIUuJ21CvN6YhAL
y8CVjt3gKD9vm1p+3i7g8aBabtYxe7mZJ+0hM84gmC8Ar1fglBtw9G083okr
O/EeTvcB/PEITnyCx6cIdFpv9DoLl5lIzs2CabLtZadlqyHT+SxzyNRcvIY8
ClfTZiK8Wgae9sSWmQDP0oDgIh+DfYV3xeA5lpw82so8XVj3D+NILyHD0/By
dPFBPvpIpFaujaxmbaRwJrZyBwcz5+Iv2ubHdqKP7kVocCdXWsRZ+Z3l1Bd4
b7VSmqdbKmCkBqYiNHa3N4K1z6hoOe1NtfaO13R75xs6Ile39f3XY//7X7e9
7/0c+7CnaY4RT29/NunFrK9m8JTbnzt6Pp8IJoYmZ1MUk6NlJPdGBJOjx2vl
vJFMzt4EbO7A831IKgfx/ATedw5Ov4hTukLr6Ozlpt20lZt2D6f5IC5kyiNb
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
EAd2CzZDJMosjODRDJ39OD+etCA6XtoUxlaBxH66yoDHmD/3/PpcNbTgFUqr
IvSFxU7KASwdadU0mAMAo59IiY73FFc3Mg8KMty4rn3xRnIvzQNB+yIt8+wT
mQe7NTEOcM/i1q7b5h2hlCoyD2Ghk6rXQ31v2/O7muki84h9LPp/+bE3lpZf
N2t+62xKpa9Oebv5s2vmNm2Y9Gbz9omvN+2dSDlxwutNLWFOnCAwzACHgGEz
3ZaoYifodQUWqhPGYNfGKbBpTko32rCglgaNBe5gUiUoAokZ9DnpxkUcuZSQ
ikw7QiF5jsExK3D0kMz6ZNmDk+XAwPEJrJivJmibeM23kr+w2qm63XQpdcp7
d4UKuyhiuQN6t/i3wY0Nl97j45qWlkh78ZcfH8wKbe6+Y2JJ85otfkgosMsT
MrM26IBS9obtyTVzvKO0fEruaXN3aJIAj5dIO2NVrJlQ9/qo4STc9cPZcbUt
LL2UsCobtAShF2p1eZbmyxChAxxCdUdNApfWRrSpgnAC2ki37YIMjWbeFp0p
w1Zjx1Y3OraaMc46SYW0qzfjY/T4EzdVwhd6/ClBqLvWCAShX30gyROCkB3+
itryd6WCEAbfgtEEWD75pgfFxGwB0TlsWLuuhtKAovbnIs4CtRfOWtD6yl0L
WhbfNf/I1ze/f3jt1Leb9xF6Gye/3tRMFXDLVa83t9Mr65jIV3MnM1hlsUic
E15rzgKydB+P0xwKRJ7/dCNvaAyAyz/s+U8ZkU0mToZrBjGAbkEsAOYnUWY7
XASn70mhFZxCAVjgzwGULwVoTyWwDtV3lqRKA6fOtErbBc3Lcm2X0+9v4I8n
kBqoVL3SbZert5R3FtgMn3e+adsl9gN8hk68MnMpTEwPNZVwW4Nn7eh1kpvH
aoLFx5CM+DQHcWWzWYdB6kht7Ogse3tiNXVfuAK+HOQ15LdhX/gRU49OGf4+
WdcX2oypnNUG5NZ9hNY/sNo/yJ027ORxGgkPz/uzhC8KMMv0Q7G63vCqWM36
ypIJ7aYYCTUHZAKfttdsyjY3XdfdaqqEJvS237T7wKc+q+pxUaEkhCE7G3y4
72NpnoSSEGXVw5RZlvSZvusfamfsVfdo9I+SVU+7c0HLrTMXtAGfC2cuaNlA
f26/Y/6RPdN+d/gQvYqWq99sbqXr6KTXmzsIpwXCKOHxUIYemvDQnFdkIi8i
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
sIaw0BIz9NnRJRT7PoT9T39UI76vRA0R9W/kGhEOHsjX5MGJ7hy/XIELprh4
aONA4q7fVYJC15MnbP+RlS625FrO+ST3pxdHZQ8b/ffTDx0dqDXK4OMKbGKC
wMdSNr4rTEwnhCt8cx+usGKf48Lg+zAEaF7S9ykhFUPE32I9z959CfLL3aAg
uD64OLDJSWp1Uz6pMYVUqPlZNUY7YnMkeoNYEaz1mWVSM0RJ44m3djMRtWQM
jEtYDKK/DIv1YHh8zJQRHmSQoWZUfN9ner5UUWeeTBBISPCDMM7IFHfmBfvu
1a1M9OrKOBBt3HhC8qi4xMUs5XJnLzRM1jZxj41titZuXZmvWcZWCK8Kc44d
o9dY47fqxoGgesLmsScs5qO4f8/kjgI4YZ7TBzN03lEWqiJMZEoawgxDxMSR
OEZeyAzv2EQWHz3tdrZz/uYOXucrn5FMXpISRl/nGneCXopbTMMaI01lwKcs
WpdXKuqZZFGFw1fndNfdJvV0dtaJbNmaS99HXX9H7tS53+f+MG1h9lfP3pE7
dFTFWfuPCn6dMEk4SEjrLWXziTpIS9mYrrb+krSUz05dQVH9mzl+lc5yu1yp
5wtZj1M8v9xMsJGa4NRPa1gdgAO2iiolj/mzosennglGvgkGoeRlJvIN0jRk
gyyIoufn0eLvSG4UH49yUI3sBU5R7bUBWvch6SKJcYvxeGLPAtcTm9EGGDwK
PKLtRbr7pfoNbqx1vSV2hjpq6z+3w5axvg4Xry1HPlsNzXxKO+5wSzo/7YSt
1wHjWWE5O0841zauvS25lL2V3xirg3ZNK4vjjq89iZwK7XqsQcWw19qgRP30
OvWDP/Lr0G5Vuh+ZXwQ3H7AHFP8nh0iGI04yd5BD1A8hzC/kraWlDFVdX4pH
oNgCOwggKQ7MSBXNMzxcSjAwkLT9cU1G7BZbOGfoFK6qpEGyBjbtC9nbaaYa
gMfJGpyPzp/mq6/5WOqMJ87ZmPvj9E9yR06ZWH3YqOrWh41Sw5M9IhW5xRud
L1yqPS2Wq3EjNhucqBfFuZqMTMH4VjrXvKp9RZFuZp/y1VKdi4eWFvhO64jH
V/wsPja2Pc/udNxFjcu5sL1x8Z8uEnN6dhCBpWcEFDbjk4p42+goPjJ8dLA6
S6FwGX46j6rj7xHZ9Ynb0BtsS4lEADuAa/6w0e6qpUk2pqfF9SW7TAOvzbTE
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
8RsSoKFAj96ALf3tND72X7C726ZJ2hQhERMEmF+GkRBIibkIEBwg3zvlEy/L
ECZcF9kc8B0WFyKYVrvj7N96YVBQRWyQWY+N+KI6TC7g9fGB+ALObu7qZM8s
Xkw/b7UGUPGypzYWqntotRriLSxjvvhf+ey5b9flqhbUZE+YvS37Py+tImc3
P/erZ5Gh2C976Mjgl75FNkaPj3m795bUn5Vb7O2EHpbmF28o5Gd/n+c3/ep3
Is7y5lsWr/mDZZ6rjt3pS76SGTbmD6epD2SFs6QoyI7pRMmDiSNFBz2ykC98
pR7wUza/QOwvw2gJ1MSBjw4UhILciH2fzB6F5dFBd8FtBfs9WKYsMa/RliJP
3dxAsx2bbegaf6SxPa0dPztcl53U2aDsqnS9BxYIX6+ddug5AHG5XFSDbICg
lcofI0/nbCu4wngtcDkbteUvLve67RIdQE9sdM0/cU+7M0hZbFlZT+kM3aWl
/91GnbgRAfYpG3bpF+mYVMZL8CDklMVW5W6K5AVPyh5d3kyoyT6cAwASgZOV
6WGa98zYzkKdcs8m8anIRGThlFNBJ8kcU+wB0+b9+MC4ZbFIssUQkTznsXUO
g6QHLaZnk0zhSkvzldeC/8GS9P5ouQE6eAzxOJrsLh2+MdZsgXtj6eDVywrV
51OMduYSZDV2ZyWrgST9pOxhYy5tfehYtcP9xTOiYP2o9tp94WU1tnmDp2LP
WJZfvL6Qf3VlXZ7eYh7uDVlzgM08tUOyFTqJ9dvUz1Ua4HQmusYGGQw7K4th
v0wRlqAjz86Lmi7uOVMtECaLDwFqLFd7/sjGdY7j2QCieWbHF8hYz1I2OesF
sr53a7szmTMWAWv3nTnEx990KmfPAhvyhCmYovTdNeP0IWtPVFuJJModL0i+
EN4AkY313SGNgasS7s6bhRLI+tzKZClbY8Nrx4uiHdbXUO+dNKM/ZhMlYE2y
OBe3TZ3V2WGz1i4UkQkbs1WvW6uWUlvw8FU2YzEtZePUPdc8/z7Yz3ZRusN2
UQIHePiLvuF/PrPZZUOk0VwafOEaH3l9J5sg74TxRLLjNbYT6SMbIdxhxneH
fCC7zCY463u6oeuM/od93ToIlSTq07aecof4WOKUT+H3IS7L4KB6GZNHtaaK
jAlafZymmUVc34mIC8u6Ln0/nz2PrDG7cG/2xNnImKzO/X7aW7n/Go+MyW+r
Dh0WHO6b48FWrEbaxIZA7XOE/Jwf8vlXvq5lW5z2WW3+uU9rmWbaXHjrOV/U
0C7Lc7UXwaQm2CGBUTAwuDJngHxCUgxM5XymXjc/+KXQ0EmwwuWuAAarC5GG
D2S6lmZH1OfxqmFZXGl+b7lWslNFpjf8Hd1XU6+9p4EWPN42I9TTeUHY3pwd
EZxgpO09SEnCrmwXnJV9OMUoNif65aJ+npT288Dj3ejsTnrMrfnGtd49Lv08
DS29x0Exn/TRBZEMSkGjG0eTiCzTbMPoLWC3J0YXRM7ZBfB263xzK1orvz65
Vl4WNJUxI4bvA1oYD2UBDKENUn4PvraDUNYta8ww5zCAnKAez4V7aQn3vkw4
PN/ZRc7ZweRCuq7q6KN96WtXTGXhgxnfYo6pkl5Qqk7sCdfigsXtwZylQP/Z
q9/Vb4/FHMYOY4vUzNBwoXx/PTZifVyovuhdyfef+vqe3HGvbckd/cKX5Blf
yh0+tnP2kBHlZx4yPDhM7PGAWNpsE1j9Ce1uYBPx0b30Rmpf/KqubvoXsEOi
5fmpn8LjI0uC2hdYtTdlLV7TcJ63NM4qbI1c1TDlwIh+iVDRTgnM1Ma9INtf
ZH+BGGC5apqTLQH42W825wKBayloxLwVHbJPevcbtLh+O0Ff9ngI+yK/u4d+
R7ehNNWhv6fMrXjUFkzmohYI3iibA4NQp33p5jb9nfX5hLHA0jX7eH0+jZnG
WQxpDXY281C66uIeHzJCid4ippnnDd6g8kk3ZL1UWqwHe9zzkbW+1irUVEyf
+pRTFrXLLlW3qJ1uy90eRRx4fbYXDWaIsAr5KzrB5W4LCq9KpKuIIVPbxfGJ
8W72zykMbCgCxG0pAzR5PDm+E0tcrENB6W+s5QtYwKdb3utc4MMNoszCIrlM
8cuUu/z0SKtB4p4wY3gbS+Q8u2wvwwd0Y3hzpnI+e5Cn4rr580I1EjlXfJDP
xiUFJHJQUng3d8T4fqceOPjPVQf0TRpk5c/OQqdXtpt82R46C7WEVnV0qurI
QPIoDtCNnRrwVYsbi/Y8s1leGRfu0w2FyoFHDsrYGqFRQW50EhchZcvqGFUn
D3/XVlBk2JKgi0Sd2oIJ+hRKYgtszvd3LXY6+gEesAELFK9nSRfrP9dJDw9Z
dx3ddn/V2V8Q6ZxcFCi6zYwFlHfFS5OgfKjXTJBoRI9i82vu5JQoy8l+pKQJ
snxy4AbX0WOr2a2jB6Gekk71gw1Im7F31HwjmXGuz7q4587L0giX1eAv4qdK
eEQe8SJc2A5hyLK1EE8JaoASDCo5MgqWTn2J8468nCh0A8TpTugbkZGCNRyZ
PP8lKlKSCmUG+i0fATvHiH1iypWhpn7GadaUEzrQAyI4mq/ZCCv9hs45hrLl
DFdfGq6VH8oOPDiLoYMDXUl84KJdrgRrhT1krBjW/Da8jsvFRaJs0Wp+TfaE
WZuzf37h0+yREyaceuCAzqc179ukVbPeh4pBHpj0kPPfjEcnraFXsY3exA6K
EHeTR6whQ6wlI6yd8mltfgqyJjDJkE0yHbvIWE0ZKBG3CcZslmdrc49kSPN2
CDtN+4RBvOQanInXmXrA6sFWbWoL7Auf2pO8eRYrYzLJwtFy13EXMljGTXjS
Ayt9P3g4mxlR7GhtFJLX95N2fT+9PBuVwVhNnI/0m396zokHmuL/ZdXhNn8V
SSx6jpyvjPt9KArl4Ya6zQy8j5cQjYhbxuGQrG28obYfWfrdjgXO1mhX6UZO
GFfN6T1iObIGln3VPTL/lZFo4hIzsgNocOwWz5VtiiGvESxhx4FLFgUKG9k8
YKEtmRxku0JlCZBtDZMdgo1l6rdO/kYsgSnT0z6X9PuLXnQIosrBIfnJgC8l
zsLDqdG/Rw18+CltUNG5g5zxMDdpzgLuctE6sdS0Z6nsK/XAevMIshayVGRC
4BMQuUBsZLm6y0dtSiqgoQZDiRWpHpTjz38HqZ692ZZzdmT/PuPb7K+eXljV
4olHT23e94RWB/RPWGoTW1c4lmzp/UUbCp/NXpX/hrz2xuc+3buVGOuOqZ/U
7ia73DtlhbPWOiL+ed5NzMZKEfZXtWyw7D/jeWYxpy01TrtBhN6LzZq9hNAb
PLeQbs/Uf37D/nm9nssIpw9RwNriKKBJTDr0QLgL6FX6y4aMj5+prpIma59N
qeIo0b9QziEO7j5K15EVN/DBBpnXShMKDzGbtSNulpWxWmnXTITLVZuINGqV
7WI2YKJrspEoVm1q04IdEL74SjN4WjvYnieIgIaI+9XjtH9lSMx7/QEukHbh
9yLOhJNN+U5WVxNqBwPRA1tsKFmfNU7irGtAQ3hz+jeP6jrHeo6sCxcdwQVc
FtVJEWDqge0JhwgP1Xs+WQvchObQedqUmrXt7IG3jXQf8Fu8DPBtySTg08WF
iSvhFXW2KXWFyOyD5MKQU+6Dl7R9ivtcZmhrG11rodK7xesTdDc0E15T39mm
2NkeIltvtDCAqNnEnQ+rqgY5LSerHuLp0KzpT8so1ee+XZutnr8r+49X1mf/
a+zyqkOGPX/agY/eTSbd4uQD+v5CTPogMWmMohi0cH3h9emf7X2PzPgzMtVV
ZLabyFi3kRnvIvOtIRogJm3mvMI36TRH05YuUnP2/G/aW1UKnTX+24LZheu9
xYM4bbF94zjDWXc+ad30pC6gWCtH7K0bMz8HxtgB/oSMAz7mcVJXYb4lqXgd
ShDFYu1PtE3eM/EylybGA0DthgDX74+QnaKw75S4adYVcB3TRlfCI+vIF27a
VnlPqMpRT6etHffSPWi7w+58sf5G0nqbBFMs9qlwU6LsgNfm7ghbHTjI7R1l
36kxrIqx44YkN2nYrQeIdCkIrNR2COIw+tymvyaRdMcvMkgpPAd9amCN8b7j
Tchey7IdusUQbiz05k1q6qZDc9OLd5mrDuqv+vVcNWpehNuRLukAnMOoYKLw
1K9pMItkieZwpS2GP+8SfN6RWjauBPBr2CldYJxQSrEdR2zH6kXo5eD2cH6K
l1SMDHIADo6n90OvYl2pa1IaJiNlpKbs5Zyu+ohddPbMN/bk/jZjW/a3E1dW
/WLE21Uthjx16v4Dzjx1/94Je67cf8JnhSsnf1w7YvKK2rfJTj+gK/vLKStq
N5KlbqFjO9myuei99LMSaqbSe4MyGDTH4UapG4hw/a5dWexlw4eBkrwQYA0A
bx2H/d66cYuOzxRCzoHIovV6TksS2Kj0hg2Xzis95ctf14YKwUj9IWeoWqJQ
FSSedDVoqN8pch9uBFtmqRG9AaT//E7DfiLbli6nyO9yCiJ10nfpWjjWH/lO
Whb/lSX2gDa0wetWGzajHU7qmel3caevdjdJp6+owcv5WkFVBYGxRp6sCL90
RGKxzz77KVKJNaBx0vnsR+MuX5gx56Sk5kIvgIyY3tTZ2pqEA/eJJd4iWUCD
iGzqLmNaAopiy/OUdXP6Qk1Z2HaRc9aNWkMSKzhloR6FSDoUDJ3kEMDgAoER
0gWSSaJ1ZNNPPqlhq5+3Gka7AO6ZrrKQvQSH0eYhgpBvM/zYpucE2KvxSt/o
AW6Qv68tsq18Z/Rbn0hPVV27QkYqnv3mXrLdXbnfT/2x+ldPf1Z1yPBXTztw
cA/yx78+9cC+wSFiwC3EIf/uuc8K90xdXjeDjBIGDIf8PVmlOeSd/1uHbDmq
hItlh0wO0uAPA5Fhvb7GCPjlR9MLTRSxD/ecFvfsCUGEa2OkesS8SE+0pBUi
mHLQVFWANQnxID4N0C8RHKoi/TM3vrFeNxW9JBRwJy53B3f2yyjo/ZmQI0lm
B7z242+px9YWf7+nCnZuPVW4gmG+vDZAbDxyJi79U7I63F/9JzNstpr+lrv3
g8gR7xvMuOmcFbtnSH2kq6iMLRzqQussgsoJPX+elQcNd/BfKOt+ZW9XihVN
5dxTiGKPjUbkRcG6JpRFFYN17LgIEIEN6NOCwI+XY/JuTLIN9s+aT1CqLUx7
8BKXZi7yxrYuC/tydtNLwehpFOfAoSCdBmvE9edFWK6MXhKTr8b1WuXwsc/U
EpEpB8yB0O/EJ5ewITif/LUE7rgSkLBhxM6oYfsapfrydV3hfec3kuXq8GE+
23pRbe6412pyR0/flj1q8qrqw0a/X3Xw0GdO3X/gZac175f+SzA8OFgMW76U
wSs/SwHyQjLWf9HFDMOGV95MX80rByHMOig3rwyj1oNg6Yu4GDTft8vShF3C
IbP9xKp0GXxTwj/ijCQkT3GEre7ZWfWPBVfq1tQYZx3zCjCalGTeQ8YciHtu
Kn3Nq33lvDzO69ouyeqpL0UE9VyiWSs27JR0JLvmrCainNfY/DHtN0DiGlF0
96LmLKhvbCX8ANsZLp90UxeR24ErGneE4bv2LL0KbpoqFM3aTa6fuCXUhVzX
ejp6G8R6OdriiWMT+0YWGyZucTi+h17oyjGbi/d5uKaTUENobToWe2wW797S
Az4fFNt69s2cWbCoTSkmVcJTaCui2jEvxKGfbTlGP42bBynBfsxCZPqUjU8P
iXl1YPttUeLjGd8foFIPwYwMCUQSiudBYBKnDGQpdcQrHfeYpxidjWOTs2J1
RUrdMJyAuWGYPhazcg6dYRjguz+TrLtfTPZn4X2fpcNwpPHxS9Rt89k2b9Tl
Tpxdmztmxu7Wv39uU/aIZ7+q+sXw+a1aPDHw1P37okyUsFZ2w3dOXbHX3PBy
OlaRFW50bniF54Y/2duAG454XPgs4cN03py9ZhIbsjxRfRi36pcyE5mj6JaY
++9t1z3Wy34lGywz/H9+RhtISc8pRKfcNS7bgWQkXO1r37lSnivkSUmZn2Wu
GfHXnhH7HtqIdkp7nH09P5D36Q/x2UNZXM7+mPuc3xB/jIZKfzJVj1k8QiDT
UJ9YU3ZDZrxdX4rXZ+6jT6y4TzmSsRXEnumU4Xc8knvaVqdXvLWBNVs23FxN
NtH74vnceGGebKjHbSP2w7Y0EwQbBWUh00KocfHihWAKXonbTUd39FZY8XGf
9tLhnA3URfaPOQb9xJsN7q+P2AVn2P2O4TG5e9zov8FLdtnkWyiHPT1pJtE5
u7yoczalczvQiwxuBreACBvXtm6mQUmZRcW41nERCIgYIPOCRPW/PXXOKk+G
Hy+Jrnj+8WquMlFAXMietSSfPeX1Ova/f3phe+6oyWurDx+9rOrgYc+ddsDA
a0/bvx8LMYRRK79ufC5FwdPJQudMFv+LqHjD5JhY70lY9Ke1Icw5qHDul43j
e0l0+fYI1vGy3yBjzTHWTfZzIo6ilPaxbtSCWPF+CStGAg21YpgoohoAJ2wR
T8CC0s/2OucrczXzhgxprx1nlma8ufO6gda1QHYT4AKYYB80GXIxmYYhR9zC
1oiz3tacgwMX5SOv7+RMNhdBF7rQLwj9boDEvFcpdjlRcjnzciS7Oe+VbGnj
rpzrWIS8OdJW6Q7aKo0s16UjpSnn5ikySzKEWYfamsMDtieI377Ss+x2TzW8
OM9zxyk3ZVKPFM9eVuPur3OTH5GasU74YZE0npNXTk7fJgmvULZL34EFONhN
l2EaY7QFQbLqNjgcjlgFENkOK1Woyi0ymQigXbsTzPidhEonzn2kil2wfJas
fA1Z/NOIM+K448tf60UGcYI2OkKgMOq93YXHJTAOMs4lyyKJA3SRRP0cF7KH
mIVbhSliGBfWgUy57dtEpRfnsyfNqc0d+8ru1n+Ytjn76wnIcb3ZqsWQx089
oN8pp+0/IGnKlXDO3Scv3zNdnTOSXGsmf+KSXPtyzn6SC0vtZnnLK2FUL37p
3LE/g0B8scXT+/LFjbxctbX08B9+jT9wM85+2uEDg4Zb50zXDy7LxU+Dcz6d
JQCaeSzu8Pkx7vARhUkJc/nZq5KLwLTBLog77NQZj18WO2S9iuhDT3ObDxyy
HaI6YZECxsyWyPrjpfEmrsFL4q6ClIbGehVIO88Bbt0WpHX36so8v73O5h0Y
ge6g62qttQ4SJxt0ynlzNl9p62loz5a/q0d3bKVkja2nZPbmNktuS6QepY5M
X0hmC3hIbJREddxccgir9XZJZpiHok0ClSiA32BZORepaBXWOOJf8UEWzLhq
1gtnPdCSiGbCg3SLju6VzriQKM1el0kUU254cKLdspM2w2YPTAc9w4cMyOAp
3Za9EJ97iK89d3ogfGIQJfsJLlN7nN57LQ8Y0+bUQvacN/PZ0+bX5U6YtTf3
f1/akfvdlPXZ/3r60+pDhr3S6qDBtxOxPji7/yDJTAe/iN0wwmAj1t+Q3a6b
8p/ccEnCDQvNqLMQNzDevEI3Tf6MIqR+EiujfQWv678vXO9yZvVs/Ag3O6Kp
bgkCTYb5wVR5noIqm7nPkV7eKzprT8VzUdxKL87Yys8cCXwhzniy35iXSTBo
k56MRWMQWWwKF5gYaDk3mEz4OF79M6xIAa3G2tC6rdjtiunu50wXPBOJEemO
FTSP1/4IO+6gXXgwWwS+aOpR44mcBlO6fsrcjq1450+yFe98drjkZa359Vy3
iwRU+hwuI53pxGBytGbtpIzSukhptNvPNy1uhgid503FnjeS2dQvyoIrWS2Q
YSUNCIgNbwX8cSaLjDlgMu1tfsat9C7D1LVBpLTIkNkfL5NO50QJwnPBzqhH
4cMVg35SNXzWZanpjyLPK6TpIFEazNvp1AJGmrDbDkqQtuSCs3d8ZerJQvb8
pfnsGcSoW86tzR336p7Wf5y+NffbSauqDx31XquDh448Zf8B551yYB/OaB3o
mzLXmnpOWb4XbhhZrX/T8YO6YWS1fDeMWlPSDbOe0jRVzDnBm6H/hOqMDi7B
OhcMv/YzsssorkmVsc+0blcYF5BggVdxTua7fol7cbteE4UCEG3OWX8nYQxe
JHjQfBmaWenErWR0rCZfWcvNIF5bn1BojZekj/1D7WPfjw0TH6IdoMyemFM2
ldD3ro3hrV3+ngSTU8ddfNLEYKu7RFYdOr2J9PE14g4iZLlgDNxB5HleC2yR
bpakNZlLid+tB2/QWW3X+tkvGlZvV5dztdhgOWiDFI8ybh2JHa1lyFaoqyLB
D9HT21ls1lak8HAzVbhw4iqUJa9wus2KFjjHE19RdIJvM+XWU+/GS5zhbRH5
AiOFUZtXTOmAUK08m5ovrWslvfCHzi/duuE3mvQaKZxJWr6W7nat6KgDAlvw
tc88Nx5YF5QO+Jmm6BRAODjQ+jH5sIRX50mbeaDaeYPWS7HY+mjb/auQPfet
fLZ6IRJee3N/nbGz9e+mbsoe8cyX1b8YPvu0gwZ3PaV5n9+cXHmrGrNIvPY/
/bkVBd8vf02GbJza0tMNJrwmLa/JEwPJ43yBQ/KqdkE5WXPXoEGnnGhEXXTI
PjrS4Xyewiv09vG9/LXXdKtGmeDk65OAcJjz15G0Idk0G4zY1GzWazrJRRue
eQ53ZZF8vZz9O6AAeS8RAxX1DloEhf3gEkHZXBd/YgXqIrhgJixPLGRQ+QFc
wYe2Z2V33EG/eFdx41I/a1xK6X4U6xS0o8cs28KQdv27N1jX4DM23oGVYW4J
Ueg6l+jjKRKSSQeTTBeyBWIoScF7J5aHPb4xsPalwaga24YU5637xV24p/dd
T5Q9XhUrm3W3uHWx3p7nQJ120l/fbf5a5HOS1YbTw/GwbqKE2Y/+N7w0otuU
0qM91spZ6twok6Ag5WSiGkPzMATyCgicjIuNM2+tVYnR5q3T4q3fFJDGJyGc
wvBsq+4iV8qlC1L6x+NJUvF4kpRT5/eWrmwPzfePZ/5N3VJoP3pT4XSMcZNZ
fzLiAuH1Be8ks2VHT9+WO2ry6urDx7xbdfCQgS2b9jj9+PLbSk8O2h/go0E5
XHvvqSvqzLUvI4uHa7eEmVWhpV7VmMFgwrKaPJ3r/NClu/LIDgx9O25TkFV5
exkNyMWn4s3uGSc3KfLsXr1a9x1hRucXRRE6+qbBDH5IaMoa1Ise4gbzRJ7Y
9o14Ykalt3Dwdc2hzdfsOWv4FnFfmU64iWdspOIWR+Ee4Ak8bErFBGhxnBBf
OdpeVcZpMwy6NoSAf7eB9vjfSbauhSEi0gbHCdqqbHsGrb0j0eCou8vcCiXp
KI54mn1ic0vE0rQythzYPOwPbcWgjG4tizRVBVGyoSrUrfW3POcG1vs9VRag
X16vyVH4PGpWZ0lHMZAhrQ0X+BdeyPAUpr4DGMo0qNjCSnTbI63L3y05HqRk
9ndXLAeT1Zlg8LqZQTTyEaqF2uqJkBtpcFgxEIKXWe1jXGoqTm+VOKIFImab
B0Dan/5ojxADyajw710vXchkI+OIAe6MjwFA1mWajtpKcdTNkhlR7EfK7QY0
zAxkD48ifyBT0Q9UafF2N9II7dCdnv0p7tWAXPQGk4u+V8ie93Y+m1tUl0MK
7hiRqWR/M/7jqoOfnHhys143ndD49qNPanSX4oP0Uh3UbuoKlphN96J4Ywvb
pogK3LEFClbr6ELND3lrZ54u8Tz5tDxvRnlHVwR/JFmpCbo7PnTbqH2u4OlZ
hCuU+VzBLWzxhtV7SrBSGd5bXPsuogsHO7oQd06Gjjg0crtL8zx0ADQAz8jY
tVrm8SxoCCakOTUfaZ+qqWRU4q8DD1BdL+XHetFryjTWqVP2rQtMV4ryRexG
SihMsERZWgzKXRtYEifqtYG5Psz5xddT2t/rZJvWVAhXxraHa8y6Srq+XK8L
TFhF6HWW3IL9howTELuVMSXhVU4jkqucbGa+5OnacOeVzdhBhh0pKYBEKYNE
Izdi1FahetusXQVNiUNg+wNta1K82TPNKqDu3tGT11vJRk+cOxg99k56kyxL
GhrLV+ISajhkAohs+RnjZmdGbAD4PchDqBTCQggUAXDfe2eg3U5qF9A3wMT7
6Jrmfjpi3UWBoA0L6tMGXlMZHMQCW9ZKzMRMTgkGO4z5iVvoXNWcZ4F8yrNA
mEJIoq+WAoo9uT89vyV31KRvqg57av7JzXr2P6nivgtOaHxHk1bN7tIRBIoR
BxuHQFSBotsHyiEs2wdp+R4iBDV0ce+lt1v32Js784MX78wTacsP4mNX/ok3
dxOpoBD6A8OJvYYTQAnurFEm0fhnhasL1kqO/4W4TBfKWKTJjkUUldv3lTE8
IJ7wFzfs6BHZ/BKPJHDqvlSL84u19M9JQsnRc34BCUDpuq1jpUxR955BifGa
9W6KWFFnqbyAZtbAJocqaqdrgylnET+S/IKN7QI6FEUnQYlTVZJ5cY/4shqm
dMMablVze8P31a0m+xqBIBVseqaFv2fGNha7A5Zw0cLs4Lnv0ZU5d7zwH7rU
RFXXmLOS7cdqg6I2l53DfSzJ1jTgCPGPCADC+CHrgCs4EcHzfDBFRXP/CfCI
l3OzHk5kwXhHaRb7c1OPHrIsoe985F5wJixPAfNFds507iohdslYr5oW+Y26
kteJtIUI9xj27m4FDgQ4ZfzZDJeO4QTVAKbjVbv6SaTU7R5tQsBJ55xRPyOM
BlxoP5y/UxeP+xGm8owIRINohzUVIixDSAJVMsRzWRtReJ+s3qi+dkWh+rJ/
F7JtkXZ8A7Rjb/bYmduz/z1lTfWvRr9/cvNHprZs+tBdJ1TcedJJjbsopMiM
k8qOU5bXDZ76CYclbyrtsIzjNoKHXcOW7tpDV3INxR+1BCN1DCOLdoR53lDK
iDL8HRnB+syHNYYoIdOOiG3DchUlqiD3Sn+i4dHOW05FfB7L6zK62Wvq/0pj
x5nGymTwwL1+QVrGNSctXyAko8I8nqCiBCRebA7xXRnDCmAEUDdXYWSBdsjo
gwoFcf1x9aZkVCaU+Cz4WSnvdYJ2v4CNPK4KT0QhE7zhR43i0kXcFceb1t+x
rrhdiRHpvdHcKpd0r7mixS3qiovY6nDNSaJM5g7210Ui96vG3utm9ddqRZK9
QE4zXa8DDjPUpf2tnK2eJWRDN7qhtWdoQd8GG7V7ahNDRuhvT+WFOCMRpqCk
YbETnh4vx1IVbPwey+j2SpJlEHgoy6jgzAXsHrJiLXvy43UtAg+PgQRpVwOQ
4KCynsH2o3vgU2NJvaZDh78bgwQeibhPqcMHWRifiTFrnqaYbRmocQt64Q8X
x5XBLxI0A9VfZD8g2wDd4MGpGhSyKMBvfEEu85pl0kkuMwFrsye8tqv6T9M2
Vh024svTDhiwiCKTISdVdrvy+Iouh51UdpsOBVScOPiIaR856jFD1Xvf0SW5
dswHNRuHvr1rB52HXUSidxNG1BDLqh20aGctXZiKF0I9Hgf1+Ncej3rU7It6
lDqRj7XBIVnx/Oe1Zp+2ug4M5T8JCcq8/lfVzgbWVrhoXcwGEsFJPHUjTEzd
SLYhplTEa8RCA6CUFiSXqIwQzwAZFwPMZ/4qBctCSBMOOIsCTQikCVKWK7EA
J5IGHwG2+T4lWeM3P5YwnFoLLvb7AVZU5x0wmjQqWt5X6oBlaP0+PMmTyY5o
gAq8scsCaAMPe/bnt3KsLJk4N5Ytw2QEl/z92nnH4PLCtgZXg+mqPpb509/8
bvkbJhnGYEdRYzd029aCoe0GXXLAGZHs/uRWbhHClMjiH0MYXrlFbxwcBbUb
C3BsL7puowyBG/SUiGOUigS6uRBcJOI3B5vswgMZu0zTIR0Z/qX00ybwJQTW
Si4i7deZtNSoq/XE6tMcYCBmxIMMXuJEidzRg/qHBh0S0PjFJUshgXZh0JYt
rgXsaGAa2Wcqkw+YeoR8m2GkMb6Iz4anFDyl4wb246iSO2b9Dp3rVmASsJRA
z1pSmz1l7p7sX17YWn34qDWntXhi2SnN+7xIXKT7CY3vtjSpjNrWUaQVSINY
mnQpecfPiBivpDe8dvCSnZsHvbFrO2HJroGLdu0ZuHjX3oGCMUEIlAlKHM4M
W6oJpA9diBPsm5GkWLn0ija0IgWLf0rH2ZJ0Q2LDBhOiJW5XYN6pNnFf66ua
t8YrmzZESKxcs8F2SySoTKg5DYtAbPaWQcRiH3zS/IweqYp3BgbJ6QmiUSzl
oMnSL/6r1Veakhkn89capao/4wRN3uX8GDpCxaVWOb3/kWwUHS86yNAp2Yu3
pTXiGJ7j9WQLISNIj9k74h5C5/8jWVFJpiARu+sdLE+sJrzHrcBI9A7K9Ppb
ijaD+v2CuqDXb05AWHSJrk8/n/gNuM7l3jh/2xqDlEqE39jKzZEEQdhDUcIC
S2R18RLu0IAIL9HhDX0sgFsrVspG1B3cIqVDSUo002nNgUAJMu6MP4bWO4Au
YvSNnNFbIso6tsCW+sjD8M/IVMdBDuebUjoBATCDhSTAqF66B41esORG4oFG
RlgArDi1HeTUeXvC9xPiMlibgyytKpvopQv/PCIu2QV7s397aUf2V+M2VR08
9JvTDhz05sn79Rrdskn3605sfMdRx1fcqXjyK0mrAkuGjX5v9wTyZ8sGLd7x
FWHEdwMX7/yRYpht9P0OwgvgSc2g/8BZxnmcZWK9tKotiLG11KL35ml47Gwb
FGLIncr+kxAD2kcp3Ka1cGt9P9zQpzt5YOhcAF5luJAss4SO3bDI0UtzbHAJ
Vm+imBCPoKnfAuYe24GCx51sh870GGwAAHEbqe4PMoYzm0GGBWLWAm6FHowm
5LZSOqFz6s8dCKTfsZwxBkChra5c6EHiDxTmGUcv3Th219e4ws239Bpbk8Pa
UXSo9FAo2d3ItqIdUpyYnS5OEtbJxQ0DH2msKXHEx3Uua5ZG5gzELY03TPYX
oCZbGnXNiLY0ljPyAIlu0GUiHbSl8TJvmcjF8NbGeAJeeMgJ3ct5ZxRuK7kS
ZOuwoBTF0BKdAejgSMIpBYpZbOVCfVL8axRZtM8jE+dCMrpBz1DL5cajoty4
TMZmMgLUKBdMmhWvoL1X0zwmvMLLYxn6rc9JdT1li56fK1r0LAOXMrzGDTCF
R8aHIRRWUy0x0+nKY5y38vmm81vKyNTcLcyzebKJkT8deJ5AvvqMN2pzf315
T+63E7dVHTpiXasWT3xy6v59Z57c7KG+J1bcg4xuo+rgdt1cpfBU+Zf+83Z0
H7Rw10gKmebSVbNs0MId3xI8rRm4aIfRnZ2DQHcW7TS6A3gKgU+afgHbQfrF
2A7hTkNkJ6VoAxNALDDkrZ2Fp7Re9PSHcTA2cbmSpZQPbP8f8s/Qy8uCBL34
ZUNr5GrYfCH+eM1DLT9HK9kUg66ULHuIEzoW8yQnrMmkknlFIDVbU7USO9Zv
jC31Jd14bfa68PplIgUa3GNJqzWOABWBxvoiItBIbdjUsSfMeoYqlRm0yNqL
JHHgqp0f7lEdVY2woCLEsl4hkTc29Vu/nMTxKU48SPa4oTZO5FZ7SOdI1EBZ
tmgPkiZY758ZD0ZKtHFOEd0qwOc6S/lY1wjiMe7IHLnJoRRXrBAepdn/41ft
x9q/AYx4ZyXKThF3coJDXWaYRbe86U4WtAa8CjPFS+5KCx11PD7YUFeFql5q
4QxTUqW/+0XH9yROklJ7qQ0ZZvMHOkju1o1wtFxtb12hYYfm3jmnJvFSOZe9
7ESh2wqvGVkZoCqyNDhht6gUL+WYlDe2sczfgs0HfsbDAnhB7sAIQ7ApOo/3
6h44j08FNhRO184rq+Ks8cNFrArF6kveQ5RWl/vHzL2530/dVX3EMz9VHTLs
+9MOHPzuyc0fntCyyYN3nFhx57HHV96msCXLxCq7DFy4s8+gRbufoyvo/YEL
d3xGX79NsCqJ0sCq9g4Es/JhqwT16oKRKssaq5BFSBVd44xbn8QHpAXD3kGK
dCe3NyLzOeJdER75daz6gpjSfQliEkmigJPBLhWMtO80a/ae/MleSwcDyUDY
Zn7rBUqr8y4tvGid5ZaiuC7tqkgpJ3/RQ+YrlTMAWgv4DG1aMTqHnRpoFpry
aY3fTmbhW1lyCgtdGYC5l76SbXOzBVnpNc35wUZ04D0SugU8iYtOT2LOztcy
OwC5TE0uy9onVnVxQeupf0mHhPCsPSbjkn1T0tOoWt1gn+zKb1gdrsWy/guS
veO46PvbiinFqIXxPCeTkYSSUUG4Uykjol4VplWvfVWNC7YJQb3Fc9a6qjCD
ZNDNU4FprsGtEdsuWJaBlsV3F+sACR+zUtK27na4V8hU83GyWeAaHbB/neab
gEyAWUnMCLJAhRdnc9LME9OMLQZvpimQBHfjRF0Quw0e8unTDIl7wTp5ZtUI
HWeTcQtFseL2+gmEpJO3yNirn+VTvKqKIY1iV/oDbsv59CCWBWlUkZAjVbco
qaITU2qLIHV0zn486oWnKfbQjPUdXztqlT37zXz2+Ndqc396oSZ75KTt1YeP
3tDq4Cc/P+2A/nNP3q/n4ydV3ouM9YHHNb69qQ9RjX1mNY/gCszqK7qOVxNM
/URQZMxqNx1gViEwSvCpjGnVUKNVHxitchjFCMUhHJ15MxaRmwk2QSSJ5OmQ
t3bzFf60Xxn72WgwxYmoeireci8YLLhm9wSzEpiMnGAFOkCiPK/wmC6JtzQu
jLx4y+QyUirLxF2xyUK3kKvKRI+7Nasjbz1+ma7aWVbjVJ2GAxOVX0nPc2W9
wSM2ovdlfaXQ+VnSjKdWyXqSEG9F39Rk3bwJBHrirbgHJ63JZpx7cC60VY7V
yXTPQkHNMmqRn0/42L1U6cgNvdbrcfFWSf4AR7r2PbSflTCBQzvuQ7NcwsXy
uypDjXysCkJPka6y1MDrMalgu+2mqmJb+Omvy+vkLZqUBiHwIEzGSDEvukEj
Nq7muwR0CWMe7ssDb7x2ezCtsCgqlE3CWPaY5uajDvE2YdU2g9+VODkQbyog
2gVjB25DI8i0KiZYUZwrkgi3q+C6VrQyLhjDVxwaZQqlSvMpsYBZRdKBlzRK
sWLfkmgEXpEQrFt0UlBcQUjSqutdVk/EUrZoHWcageydaMui+1wzbnMRrUrr
YALr0dCDF3RSzJPIh2OCZMePC9Xnv53Pnji7LnfMK7W5303dnf3NhC1Vhwxf
3eqgx98/tfkj01s2ffD+ExvflT2xUZfUyUH3oIngmGw6rvzno4t2gWq9RNc0
qNYKoligWhvo5y103W9PUK36ESKoFq5go1oyQUQjxAxHiIgghqEN9U2HXmgp
R3/jYly00KYoy4KlLLMmBIUwv2wnG2/9dLmvPcZwO81JP/9FvDLPCmHxKFC6
yJhjraxLJKMFmFTbF3F9LO16BZOZaMRhFUxmLA57RvpTOEaSnm9hMZay02xR
YMMKJ8YZ8obG3JW4O/Gk0y9rXa/wyzyigV5AiB9D3byIJSoaBtKLdljVSDv5
d7L/GK6vyzJYz3pwOn6ZNs0EujL6Q1PD4rYJvxd80LpfiR/rMR2UiMQLx4Kv
ShgBttBnXgxZIo3J1Jvkoz+LCq5JQ7lkNl5kd22dmc0H6cSpqy3WyRgIFUpx
QAhj1f1lHBRaCttIli5QcvGg8CoMFQh4gbM8Fm+kNVpFf6DbFDQHuikUkhkc
10+UF8LNi1O2BqHbxBvHYPQxxFFtkiwCVK0FCmiPGYYhDwkv0TUaktm2wgJo
nQSpBBklNtqXaBawpLOgFGHTlC1RzKfSbhC4HShuGtz+09ZRjSCoG01cjY7L
R/IQamFwkSNTMkd0fxlEqFsXz3FagB9YC8AT5VGeO3UeMatZtbn/ebEmd9Tk
Hdlfjt1YdfDQr047cCC0ACNaNunW6fjGd7b4W6Prk4j028ELd4NZPUaotIQQ
qZhZWVo9LtEJKgkiNXaSIW5tcuRKArcJy0RD94SSKfKzUQxFZXwxc+D3LyFV
z9QP/AIv8quoN2cAUZ9tz2UMSo7KihsEmLIovUPKSPq/ZXrDbMUkPxukS2Ak
UZThEAvQhSSSERoCCBkuXuEl4XY56TF3M70l4dVoPTceCAQcX5UUjeRLFYqm
iIgKtjGjEsJenkmie/Cw7Weq6qBBf+IYT3rZS+PmuTKuNEPYAg5l0Z5fxXtm
Wdy29+Ge0PXLcwO1jt6FgdgEMMhsOaqbJRGMSm5UfS+USWW3cdeQFrBUdlu0
R7GRm81/k7dDkVNLY4ztbGL5UBeGl/+wPBEWj3/2JxMhrLtMFzKCZhGN0kXY
kurqPCmmQjdwVpo3o8oQpDTfBezLFsrI7HCJrYpmDStNEsbShAOsGyfHW6EQ
iXndF05Sja9Iv1sjOaAwcgRJkkAlusljY+FqZkoS5uG/b+IJqfSdjDhu4sZH
4LDpTiBGiA+BQVdg+L1mwrHNCV/bPr4BAx4C7AjY6CaubeLhTdp9AiwCQRKa
1Jy3L2O4mkuo3/d9oarzJ5ANFLKtF2F4ST7795m1uT885yfUPzxl/z4vtWz2
0D0nVnQ55q/pq9N/CToGlQJOv5Zmq3Z02QGcQJeWegn1jYPecPqB3aBLyYT6
Lq337XR8yc+o47Ifym3/cWgHvTqPlhioxkNXA4gSUM0TQjquxaiULtI2gSS9
vkZk1M9/IaEUIVGTeGhyOSMTF86+3suoxaHR9xIayTqvPFiVrNJL858Q872i
c9df+NLmCKaZAoH+cNczEGexjcIvdRu/oV2zBI9LSy9DdZ7RZkI8xyjmQmmd
ohD33I9lJT56s0vd4uoputcVaArNvpKTyHXee01B5RLCvS2fBf57tEHQB3GP
4JgPdMCONH5Zv7BJ8Iz9gKJIX6PLQpdwRIEk0QM6UMnyvqIKFtGu3z8cOSGg
n3JB2dtWSd6rFSqdoZSY40C/b7SPrZG2wQ7QgxrcJVq/M9iB2XUYR7BzNQ/2
tvWodnTmcqHkqwA1ECHIHFPZJwAuBSvuLBAUSoDkiE/kEx/GAh13XpLAArxo
W0gUd3ukGEjam/hQ+Q7TkZBzO2WiwRq+sXDVGEkwgQHdqIntm1y183ouIaje
QrtpBWBBfgA+ID/tID9/dH2hTZ+1EWADy6P7r2PphQw/3yjPKlvgdbR6ELrx
j5gnN8Sb0vz4j7wHPuK1gE3j7XQ3f249GoVsq/n57Amz6ogk7aXYbWf1Ec9u
qjoEJGnQvJbNeg44seLeM/8WXX3Q34NrEjhU2fzhuVuRJX900MKdCxSHkCVf
NcgnSYt2GklClrxuoIVtpQxFT2l2e4w2FSA2U+gpV6t1XOiDBrlQKiEz+Frm
ISFnY+vpJnwcf52gQyO8me1s73Sp41+keC8d4qKHFiyaozNa8HukbwjLOOaR
KXVpR3W8zXUSAJGRy5jMuBYGneJYFW456sOjPRh8XCgk2WTrDQTwxL2B4wQP
vPXqI7UhFLgAmS4gvn+8J70/w48Jfi094/UOeNss5wv9HK6POup97U9P8weF
lw9OhYMwlF7xk0t3s0hvBzvv223JAL11j4bwgTQw6FJcg9oh9SeplTuRoL1u
esre85LMyCn5iBn1mJXoL2PDBQQAPpCN5v2a0hAu0p7QSbvj9IlUpUrdLj9k
ijlZpJIBMINrntksthq5Lo8bmFXgNsV2bnUwy6GAGI2SmTZWFiPeFESSeXbP
m3Ik6AZ/UGy5ddy7A/2YvKMXEd9kVUMPI5tvN8yrhaU8ROKOWMRk2L35LHLx
ckY6TzREomcKOQorddMqjf9cQnB29kDhP616rE4xFKULVT1WF85iOAIdYkgS
7MEG0ScT2SJewJJiLpR2XMgO7HYIwYyCZoUz+q0TSLrtSxTrMNytkD3jDUyW
qcsdS/zoj9P25I6ctDV7+KgfiB8tPaV5n7EnVdzb6Zj0tcf9LdWh7B/BrUGF
4NJvRF9Z9egbHLy9QAZowZvpofatr9SynfIjBibWxCyMO+U4w1muRAiN6mP/
XZMI0RogQo2ZG4jrFqux5IcBgGGT1pOsRJ8YUe52QNk0L8GFctkt9ZUkq2dq
BwfPQv9a5FIzpOMj1LuDYYAdDfaqXhldP/DEm3EwBCsf516jSx655Mx4by6r
zDFK+z2JNskikFFmZTraUVqMH/JkdL3nNZxTtgCpJK57NU80KJrQ2BYuAa1G
KI0C/slMFekWlilW8jGy1O95nVpRqjkZLMdGjuOhWYl6umWPtJ9pnul54ggN
t2lXj7KaFHK/0oMipXdeMy00xiIk/r0pe4LkitE4UKIgWtI0MkMHOGBBmwZq
jHMdbSD8eNNyClUCXlwpxEWokiBTGVOHy+hBQDyMrNw8ReZe4avUv+il0mVe
nFaWRP2WSIED8HilAseV9NoQfV321EbeL3zhk7xTbWPGVcOiOIFT7gdNhXZD
hT51fFqCyevGb5ZywDM6pzPNSTAk1hDjofej9SNr6OURLoWo+dMJr+65unAO
YdYFAk4Ro1NasfBHd7Tl8WDnufXkPM/+UVmYup6usjZYIN5nbaH1w2sKuYd+
KFTd8oW0tF70LmbkFLLVC5DqhhAKgoId2V+P39DqF8NXnHbAwGknVHTtdWx5
5/P/Hl1zxN+Cq5K45PjScMKmBaoqQKobQqifNNW9g74Cl/xUt0BTeZ6uuzx6
l3rN3c6ZBbjcfvN3+A09WBVT6vOmdxFN1CjRqM+bZNpspRvpy5GTkpghb0s7
oIweNLV5TVJ26AArrolLatlT8ljQ9OyyeMDVVE01vaTa7ee/iHfkARBtYplN
sWlIzuPNQUoVp5Y1YUPYRX9DOudpTeuMw1StsR8YnUEYaPGUDD0eyBnr3kpn
bJgFaswAL5x/j7rEoZSf3qk/dcFveJIxEDu1vaGUz7EN3MNXnHdAFuKuO57f
Wu6rDYERFtEhW4uwjwd2Secs19dfdzkkbUIHW2rqRNCml7JkbhetmIO9wL5g
Z0ArzudMlvwyIVbG0aYozuGU1+tbYSuFRnyUKi2f3iw8AzGcSM5vnLJFS231
d1GkDSo2YrDPyE28UQFgcIPClGV0mHXRv/sBnAalmlQuY0ziUHGojncn9gLr
BnowPsmKuKEbtdYlEdWmmEilExtvFK8UPCoKF9NdkKu+ZhyQlLDrmZ9YqeXz
KIR0ABlWJvVYTW+KACtiwMoUsgRY5w5cV7jgsQ2FC57ADkreQwnSpBBlhCmQ
te4tuJ0QCSU+sNqy99pC9sFVhex93xWyd31dqLrh07hXFokmHuMzry533Ku1
uT89vyt31OSfqn455pvTDho876Qm9484rvyWW48p6dSSiFSzo4PrGgte/ZZv
Dzh2wBsuz2Q8aiV9v35QLC9I8qhFO+vo+s8/+Nq2/D0ztuXvemlbnnxqXrz9
dlbT+nmHgXIEgljpwhB0kicp1b6V5dLZwuzExDXepLvA8lWwLhj5qPcT+R4Z
z5ROki8NEEMpg+1rgHU8/Has5msmKqDJ4GtworQLBwdJDi0eWh3Foul4MtcA
m6ZJWMziSS2WyQC6+JUrgrlRMfhexsjxshSCtid5dCwoEc4wimFSbrdljyUc
lSFJ7RfKNMySXvHSomjQy0rjnwVQyqy1lp9nsM4k9PtYkI5qFCefhQuhTesu
VQOZ4E+1PmEs9rFyuVahWMJsS6MTvTCIr+JMUIaxBPYHO2RmwwCGPNBUv04f
h116pLRQztvcCQRhv9cIdCkIbuWfMet7H1ssU47gYLYIgHSsQFdnLyWEr4SE
DWnfNQ0tyk+6DPASLif4AHJxbYvQC3nkKkINzNQ9Z9B6SQsRalwkqSHJAjHt
sm0+ko1OYcIaV8oUVARPIr7z5U8x96InpldM/3rpcIHMtgRL1T3XMGSlAFkR
6mt0kltTUHge4db5g+UVAEvbYqb5ebywAISKpzQRF8OB/FXrR4RQtaYX35rw
imeF3PgZPSchFjkn1wODQYQyWkimex/zSk32v6duq/7Ns6tbtXj8vZOaPjjt
+PIu/Y8tu/GSYzId//jX4OowCLo38nHrEPAsSApQvAPPQo4cPGvdwMU7LEdu
xTvOkdMVV9ftlW35u1/amr/zha352+no+vL2fA9gF3cmMXY1TLRK2FiNaJkK
KqEyF7yikO7jeiwrCJ2wJ9RiuWSnZWD7WBkRJegTF/A9Uc8Eh1J+5kjG7CMu
k6mCNp4bebShS23CGlGyjyVxpT1oWpAq1vDwrBoXiGXcTEI8ko3J5DQRBpRJ
kMmV+vf5jcjs2wzzGp1xy9norrI6Jx4Ppk3jDyRwSRu9wLNSzLi84nwYw0a5
H31Jqlon8QLF8JQPCyTFyeFMsttL9t3ux9B4z0symNtaKbzCuKTDZ8erv7hX
XbNPqFAhO0S2m2aUKGGUuFgRRSSRmqeerNmguEbe0A7OjrLki3XmiPnwPdgZ
eA84lvb+BvH6zZStIijOD1vcBU6CpBD4CuPTxM2ctpa4y9XFLDt9tWanwaSg
RFI8CiFlJKQzWGJoou8xUPBcQBOhx4VP/Mh5oSDyiRRXyDCO2fDIDuz6THEU
limcM2BdoR2B02XD5cDD5R5ZU+YCPgYjunlgFT3S6b1WO0QCbLV9HJTJ4VyZ
4lDMm05/ZE2h+sEfmDdVKxalGYuaFKo7rcCS63iG0anEn45/bW/uzy/szB05
6cdWh4/49ORmDy04saLruOPLb7n32NLrq/6augb58UCB6Ei+bQECdd+jC3dB
Qm4Jcp9AIUG+q9+CXXsenLVj770zttXe9eLWOrqG6m5/fmuerCLfhb4++Bqi
vh08X70vZz4cEIUxCsXkadwHxeSp1JEnBEEgS262txTI0jH8VLpcNczVBVSO
OMV6HRTa7Hv6Khu30q5uZYcMmsH2p9KEXMcQppc1HEgUs8NPBvd36WnpIk9I
dxZ4JXTOy5CxcXFvqeifhiswxZEdxI0lLsQCzALEOHH9Mkd5QpFKtIjF1TPl
SQCUnoZJr+9wQOTUQvN2Gofy5malGZQs4NKgK8BMUlu6jQ1D12t9XYpTnjLZ
RpDL3s99qJUlEGsk+XWFre76ih94Ne53xe9Uw8MMapuWxXQ3qCuoC2gNE1uH
KklokKNTUktnIVPcfM+zlKSpuPPEoiWkjCMhU5tSJ1iweZFXJFuJ97meMHT1
NqlyVUiV64n4QPoZ0ZhlkBg8NSJTEbxSK5kbfQUBKtLY1b3WMpRxKoneOjDs
DGAY4IQxTFLdFJwBxoYIowrjNJKXQDoHo6mx/LSUgaZNn3VMes7uvaZwbu/V
HKhBodTqwdWR4ZgwqxQzK0Yzbryjgx6uVbfv6TJp02NV4dz+xLgeXV84T8PB
iFGypEFqVY1ZKARnEeAsBWYFfoW5bB2XW4Idm82YX2WPfWVP7r+nbG11xJjv
T97v4X9TTPjyCY3uePwfZTdefUz62r8ek76q5DfBjeU+rHEeCxoEyM5nUfy3
RPNY4FecYyeT2nH/K9t3dX152x7iUzUEZ7UoS9ehLJ1hZLvbCw1ZJQPDEe4x
wCJDJlcCbkyx/hVTLJmnPZHlneOXSa19yFsJUOMAsIxBrcTFJ5CAWg5eBT+I
2D7aEyp82Zhed3CRHyDWlMNIG83M40OWyIysbl4TwH1eI5MPFgQUKVnabTyK
52PYaIwF/miMndrxUMn3Zt2kruUaqoEufsZSFStQsPbxNVljeLvW/8tUHY3U
MrgJEtxCrbYb6GoGu1RzRjv9yaD8P34HGKKwV7cXzT1sxFzGWnIRPVnU1NkK
4FPiIlxRYT5KLDrdGk8lUDjD+TQtULdXBL7u0yVvt+tcA8kNG/eJtDY/DCB2
mYIXKBQ4jvWaSfFL0kfckOxltqXXQ5SJJkVvPxY6TCBHI063W1Ls2vFSZryy
qCE5sZix/h500Qw1YwADA7IDUAKZEbLnV2sqHKklaCohcAAHA1witNSUEj04
IVfKBWhYcdF3LU9355zS45xX4iqcyACI3ZxrM3Q1OgOdQ1KsNYWUrR9RGOku
OxC5/7frtwJJBFBGvB5cHXAOS9BM/tAdIEZkrAywxWInzG7DUU3HmQRi5/Rd
w7Tu7IG8Hbr/OrLdM+jlIoeV6yFcjJ/xxs9SwK4Q2JVClwy9bJ5NffWyQrWR
slYYLDmrJvs/03dU/9fYDaceOOjzlk0fWnJixX0TT2h064N/L78RooVfHRu0
DxS9jpLoEKSsF0WHRsqQhV/Zb+HOtQ/N3raRLrHNRMJ2EmLtJpjaQ5dZDX2t
vW36VoBX/rbpWxi+6JJkUvbwHNn1C2LWYHQYMc8QGag13afjIHCJSxAFJX4z
fQNFet6dNXQpIkZZaj3q/ZhleeJFLtaLZOgAxkwQPktx6/Ryfjw0z95TtGYc
AQznhmZKuttXDVm6O+2NGe+7wOt4BwcrrddFyl0Ps6ViwZ1sUGRlZPugZoxw
JjUVHWe7bdO5jTCTSUwUkQm3ipw2SfJEPTkn1Z2lANsc37IEN+wVgUy8A1ly
NIYRYAwmQxRh9dYYrIKUjWuyI+UUjAnocOoe/IyuEa4ePL81MQMSRTeJ0NoN
Q8qqXTKNZNwncluZ6W0hgAS4XvvMZn6OG+JUknw/CYxMUlhexx8fPMFFM/Iq
9g5EIFbKxT7oSQFjRsUujiEsMgRLNoJwVV/wpMTK+Rx2XTrsx8IV9FTgVpeP
3CRCdujhh+s6RjS/9ZCMUhjznlShzcMSv10wmMt3IR4tlJwSmFWpxG8YeYWc
dx8p0FWjONd1JQp0zHXocbir7p6VAkHdV3GMyE8U6nfdV4VAM+ZWIdCJbu79
joCdt0R2/aZw1kPfF84ivnYmPQGCROS6WhM4tX7we0mwE7NKxcxqf27iAzjJ
saJQhegRTMumVaL3uOXs2uq/v7yr6tfjtrQ66IkfTmnee1nLpt1nn9D4ruHH
ld9y3d9KOp3wl9RVlX8PbiwTrPqdNPi1ITY1XlnWYootVpAT/+7OF7etpsBw
A32Q229/fssOOnbdLlgVAqiCRg6qCMqYZcFMlGXxQD/bVRAn3yWLJaJQmdY6
dOkulxYKveJWYudipmj5QFqm0b8dy4fG8A4Fwiq6uyWGnvrXbkWxMplarOHY
kx6pAs/Q4Yx0wnHRlrnMdTelMkjPWPyomaJABm9kEhPH+sTUKoqjs3IXmVma
yIgbr7zRpXOcM+YuL63Ue9LqKFkTo9cJHMUQAkkeEaVFK0Uph4F+3shmjSB3
RC7HMtp4v4iKyFwDlz8aton3qktZTkKxGyaarFk0RTdrKHaLBYWhyCBvnCyZ
ZoGGxq6xDlnzW7zmOx0FwnaONDKek8Apo2ltwoDKYgzgn2HnoCiQFyGDdL0r
xG22JBbX4qzzGDCD33cxkXqoQjFEtXhRHbSDz234Si7LlQxWRqjTExsT1Ilw
KNJkz9m6HgAZ8ouGCKO6aNjGeJhbzzXgLz3WpGPmVKZcZlV8EIa06bWaYq+1
hfMp9mo7GLSFIjBCi3Ml5ItT3FqWExJFRy8jUV9oWonhgtPerQiyBIKILUX6
dD8oEEo6i/mWsic+CKJSgCi6lNDekqXjjPtXcmjI2fS7vzXmxEgYOeYUApeC
/WJkwoGpCBiUiWV85xKVqppfmz1uZk3VUeO3Vx385MbTDnr0q5bNer5zUmU3
5Nof+UfZDRf+Lfrn7/4SdEygEzfJ9Bwwf9dYsqFZFHq8SQj0BSHT92St6+jY
RC5wu6LTbvp+rzIpiQPLmUihTAiE4vE5r/8MkRJ9EkBK8i0CaG7Sn1+Kbwit
SiXuwv+Uuxn2gLcn3pZJ1pYusmnrvLQNdKuMdUTW6GpzprvafGndglOigHCP
MBUYv5KSlOt611gwFIF1H67Y9/ajrblWsZdwS5ZaW7iFcWklTGaKh2fA/Bvq
utAskkZbMoOpMYc8NhAE3ARR1QNKlyxxBEDsxp3122QSR0p24U2TDtXLRv2U
ivVEpa5BlfPb453E0ATQjEaWH7oppkwqik67ZZ52xGWwEs7fXDl6ExfIz3tM
CvcXOOnhRSyFhnFbuijWQXr7dzlxY81l0F0/DVoiminJpxM5jPh5I95HCPAh
JPbk9BkdqwIM7jAubjT2l4dykv180z3627w5GS3JbQELOUKMFac3iSAMuiYA
Wa5PvOoISMXZqUS+yPLezQgoBKeq7gdW/VA4t9+awrkD1nKYBSkUEPCcQTKR
GCuUTNuURdKeeBIFeT6bSQmb6fKVRH3dvo/wDIxUKc5GZQyO+N78CHd/U6i6
65sQ1AtQBxSCtvyWzwunE13K3fYFanydP+FgTnJSgoT0k/wuXUShmEZBztVp
BQTraC5GYfDKD6SjD8O/j5u5N/vfU3ZXHz5qa6sWT645Zf++K1o2e3D+CRVd
Rx9XfvPNfy+5/rS/pa7e7x/B1aUCWL8XOnXu7dO2Pn7btC1TCIRe6zJty3L6
cL+mrz/QV9CpbV2mOzpVA/fEdKqc6RTA6g5Ox0vkZ3QK6fj+Qqc4HZ9RARGA
p5cO+rBmJishxerHHTr43prEONNdIiDGBS4AVhn/Ix7QyJWN0X5SVwDF01JL
WEHfa44X2k2Pt+CW6qQPW5HVNUYrl97maWVzDVp1o4eOLus5x/SOFmDFSW2g
YClTivbaEMJUw7SPkj2W5HFkbCWGKKmFOQ1kXBSTUnmp04931TAKwAhRVldJ
vMn2nrRbG22JmHbD4tS2ppHpwXhL8AjJqVyr2mgDrBsnCXMKUhZa8UFIJTO/
0271iBdhaVBZwhaGaj2+gocgY4saOdLHXJpvWHAkWSHeOkxcC6CBQb+owl85
CkoCCv9Gy8vVwQhulB3XFektMAm1TWymuHA711ApHPGT41JcjQM42urFlPaH
8FYlAIUemMOPUebIGuFOZ+tWhKyON2/FwgQnTkhxbihdn0vdvyoQBKl0KaE2
D60qnNt3deHsfms5a4WyHPLZLhlFkVe2m5bnbvo87VJCEaeESgUqOEO1UmCp
2/eaPF+lBMvCu6YSJxKmuQNJ8i6a4brlC9FNXfURRW3vF6ovfa9QffVHxJeW
C29iGtX5EwYqwBWet9MKdxCfokuMYj7AFaAK3OpqGURefc5b+ewpc2tzf5ha
k/31szuqDxn+02kHDv725Ga9LNc+4Niymy78W+af9eCq8ohbp23ufvu0baNu
m775RYKpJXR8Rh8x+NUaMufNBFfgVzvBr+h3P8OvXC66AX4lo4+a8K/6KL2x
nQy2x6urDInmoMVyQgYSIozuq+NYbROwCYZ66/GwDu7BMyDlhXgLX3XYs5uf
+PBcwUyFrsaMWBVOIH27JqiMZz1YBKmWve7pJsprEe61+JDtG2BVsoXsGswL
GukVoEqd/qdTMZuRPo4S5lspZl6sSJQj0gJ+56KuMhvCayO3cUZFa72V4zrR
ExFUlcQg1UgbWkWUCeu3SMvXFNmgD0CTdM5tTjApgSaJviAh4H09PTT8IceC
aj3IBwKato8ps2J2Jf1mKh5QRREzKmY4EW9ZbuxvWS5cTATmMnqtl1K4Be1j
e9ZACkOSBbFb4v2wAvqVfP7BSJGFAq2Cvh1Rn42jRMymHArbYS3dFHGZLcPE
BptZsKEFeIV/5VOIU5rmU8iQRX/O9mZOJXwqiES0gBUjUnnj9NADkh6KAB30
7kB0BDlWFqqJ7CCLfWbPVZyuAo06XWXivKXk9q8iBGBhMgCjaMPhBXOrLyVa
A2bd+12MW/d9F4FPMVQpPN2hB/APY8fBnAAv7T9gmRRnwunANjbAFcI6gitG
x5R8BwoVSbyHjNQ/P8ZP1yyDxuGqDwvVHT5knUN1Wyx+XVCX++P02tyRk3Zn
fzlmW6sWQ9adekD/z1o2fWjhSRX3DT2+/NZLjy29vumfg/aBgtR/i8bhitum
bwGneva2aT/5nAog9aPjVNNdispAKkGq7n91u8tR+el0I1XWwOuTqrtfSmwM
E6KOynqZyxFZBtuGiXkzD4Vz0SViuSGXK7I2DxkgXcm5a3+TmT0YXh9LmWbv
cD36Xr97lEgaqfLx1ml+RIZVaLrro5ti6wOeLLInT64GjCGJVM6/x7uyA+/S
5lV2miAJXN4tIhCGEAaaHZAEQEGn8bEMkbHqZi7jS/legkieN2sBW0ooDwps
jV3zGBLGnBWbKsjFhEKzQZI54ib8tNMgOZIjlIfeBqwasQ60jYC0a58RKZL1
qOF10vchvtHONPAeS2UDxYAoyPsQ0WIgC7l2n2HilSN7PIPMHaFPWxFWs8wx
iKRDbYh0plmzLMsHYoE3742HhpHwDPtn7QA2XvSkYNwlHO0KYdRxC9PjRh4v
9vbC7kYCcHSvS0ZKvIjTIAHiRkVQl1KiF0dYFqTd7indO6VyiHaWmM/wg+BO
RtWUjoUaLfqYZnICRhwN3jiA6/otArE7v6Grsfqubwpndv+u0JqoWQ70Cwop
BHiAnxs/wwLIwJXmQIoEaeg7IE2al8PzIll6HEU5PPY9K0N+mnKLFmPqdZPi
GqI8UK+L3i1UX/hOCHCj15O9YGkhe+E7rFpgdgaIA5Jep2hKgWKI3/ALSAHl
ImAhiBj+HTHj5f+mA4/8Tp6nLvx1Rm3r303dm/3N+F1Vv3hqU6sWj39zSvPe
b5/c7MFxJ1Xc0+n4xl1anNzojgTGVYCI3UXYVUzEvo2J2NZiIhZI8Njc4RxR
KJfp2gcTcwO4H/Ao2J3eKtWU5pqktiS5G8slKwvSmn7K716TbUlAtpTLmumR
ire5ljPD66Kqp7tfko1c0nART8O1yphqkRJ5Jr3+E41skhkvlbTTVOFA9+mw
RttmxMPQutlONH73EChJTCf7TW/UuJIALqPlfi7yA+FA1gBGHZPpp4CxjC5L
gJb14t/kendRM8u4oUT+QJBrTK9U7hDHZqMYHZEsFDLhzJPSbiyIRXZPFtX7
y0WkRHdBVwsHc2M8/Htag7txm3nGE72xK7X/GG8Qj+bqZw+tFvaWUtDLYkQJ
2f/ZROPOQ2eLCC9DBr206qSs/W2j6ZYwF4Bgh6A9sWob0khddgdcQcnU8oW3
PmfDrPxtvkW9i15rcykLJHACAdfM5TQfps8oUilBOcSY+AoUvGhYol1RmnAA
f6f3dSgXhNqRzJHmAz9o0LfKlFMa+QF3AD53fUtowkRKCVX1XV8XsghMMZSl
ixKsmz4HmiiF41CTcc7SYpadUrgJOfBLM7XivwP48BR3fYOHuftboOrXiFON
xEFRAeTySdyF76TA4uj6YLBDyw44HbAQCAZc9ECPnpb5HH3s1f9cJpGmHaCA
HT4MgXogeFcQ7l3CTyBMMbcwnz3utbrcn16ozR01eU/2iKe3VB08dNVpBw56
/+TmD2N5XqcTG9+NGaNG8P7At4dd3OX57X27TN8M8DOCZ1n+DfR1q0ahu1Qr
kSB4KELe8cLW/H0zt8UET8HPgK/fAlEAQNqja2DpBGJxYxQnr2zRfKQZLPxB
NhdJKdAEmjZr0XLu0qfbW3PtO93YbBygVZJrb+rn2hn+WJw5QfrZrtFgCrni
6z1pk+bdRYVZHxJTsUX4U9ckodWU7wn6d7cms3iS7Yx4T6RM97Vx5Fv8KFUA
0KW2vNw3bptxPp4b8DiK/cnVDTtPSKig3JASfG81OwXDICWyTYSOZQyBeN4z
KXyEBcISEUpK2Cgqo5D76VIypsT6UTRwjFQFzkXEWAVucWSa74A+FJ79hrbB
MWA67UdvUiREHAnehQdFcoiDN45gAQOlHMih/xcl+7P7r2MJVNtHnQwqRA6O
Hko7VSSihJaS/sxLxR8FKGJlcCPerCWQJO8TqIURWVa8vFGXBDvqV7Sl2Nss
WsLJRWhMQIKZ7T0m8EdxK70/WV1+OhJfdDIl1q4vgE1kLpnxDRYs5AoBXIJE
sUb1ViFN381L0d+jua+7vomY6DUWOOJQ9BtJmfVYLUPTEXdqCr/qps+U9AkW
cgnzE4E6Obi4KHjU1CJMPZYJZOFh8DR4uju/ESQETFo4C0gT2hcyCkYa1QIF
l9JPuC0TVGwr6OiQEZCn6Ehf6cQhAdfCS8B9JP/HQe4Hgofggbh/O2KZ571V
yJ65BLhYyJ48F2LYutzfiBv+4bma7JETt1cfNmptqxZPLKMgeNop+z3csWWT
7lhWnIDGisNvnrLJeCFqCkvIXo0Xoqaw2aspFPHCSiclAy9EUeGRuUmNBtAM
hCzejL0VqJdxKMhkiy4JY2zSUidr6x6KtVtShcw4oUTP2U42BQQU7tdMFr0q
2oJAXe3VuGxHNmKwjvGgAddhp7xQ9J2KeLfEh9cw3Mw1DNsUSDzODZOFQbD6
TIcD21vG6zErUqyDNmKYl9BnhXhwEMPelQp5aMg1WULnCfL1OpUoyNNqpKkD
4LjLRUPMK7UJEE8H3lH9sGWNGvHiptP7rONqPwakuPz+E5Y4E/ST3uILkdM3
zbh24XltvdadwiKF4RtZO9Veu4Yv1nZs0Dok1cvi/Hq5zLmk4KxN7zWFs/qt
LZw7YB1rFM5/TBpv8KrOg4QKGq2MdOQ9KnvRcSjVMwDCWnT8C3Z4hXyb4dN9
tSLeDZPkozT2Z6sM41A3rtnIx1zpj7RxshBcOvAiTKIfk5AXTNOI34XDNv5c
b6W0hUvQe9YgWbHKAa/AnwS4qVh6ytXJb4X9VcZhZxdlgYhPkYFjT6I9TNgd
gbvFOBWa4gs1yxj6Uo4Bhgw/jYWPIet/lQIPARFj3K36nHhuPAhw8ooPIolz
CfRwszQFcAPUYfjNeXrQ91yLAIQB0gRZURq9ZhldBAxrV+oBeLtY6R7gEoMq
WjO00efbck5QhjmobsRX7tfjN1QdMnwFRb/TTm3ev/PJzXuX/ePQgcb8/si3
B4P5Wf1hJsHYh7dP32b1h40EYlu6PO/CXpRL6zE/wBuYH6fM5koNACglOfCt
8cjKtAsq3KCDqVtdA043jQkfhBJdBFUPzZKAV9RaO1yHi/YJi6BqPxnYKypx
turLirbWteMel01s9SwVfybudTFtpc2y9XBNGZ0UM5Mi8lja4E1XwoWPqQdu
NPdEMQZg6kWm8oxcAo0OGXorYgZfPC5pq1JGCFbbj5UOF06eacsgJ89YeiWR
JKCNI8mR8mZBwCyMSmkXHzJnEC4hc8aB5GAldmgwtmAy4vhVsmiqKt9Xzy+g
EV2AFzyxgfNmIF0IUiFbMLH4g6vTFs0agTEpeVAhQR397vSHVxfO6iMQ13bQ
OmZ1aIXBkDxIG0yGhVgyZAqXkQqlVi5B79pxD6asXiYjw1WAVByw/8bJsRrG
2/8c91s1PDmwsXMcduCzvFCXQJs8DD9rg2Zxf2a9T1a0bSUcp6OqwZ9QD8Ek
bgu69zvIJziXRhyuREDKypgEblxGUFoMb7U61I4mh2pAIdQ6b/rMZBgB5/Dw
uNc5bVgQB7Yfe4zuY6AbCFqHD5EpbC/1A4ZDq5/id8AgSeLR42Qlul0apJTD
vW1HCgiF5wClA8YBy65mWofnuOojPAdw78p/SwoPjwvahoc5YzFmFhZyJ88N
GNxCsDcg3Emz63J/n7k398fpu3JHTtqU/dXTn1cdMuzlVgcNBsKl/xIMTyLc
oUbgrIDxDn3vi0JiAjd9CxRsfnzrEA4iW8IdJnJdKKC75TkdzJ0c9SSz57g4
7zE4ushaCKZMEX0VUn3gPlbg7G7opmvpNDnGoSJvR1KF+62qzepQtASBl4/b
tYehKqN+clotm7SkyvfA12jdNMXa/XCbcVrRIoceSZgoc8/tcWFv5w8ReYEO
pPQSYmk3xbK4qy/D1OBCoU+FS7nuyb3KITJkKG9it4yOW0G+rP3oeJuDZZnO
IOPXPLiMW6FbKwoA2qCL8kJDVAIe51epwjJOlgHy2nJkanTtnFjyGUTa5Aci
mHtEpAuQMeTu/044BSsRVoVWW3xQzfhBaaFZbZL0WM1FQVtJoZrg7gyCOzTK
nDdAWhAxbe8shjZ6YpGLpbgmANIEnGBZLH3QGQY3QftOE6Sj1Ae2Wy0h64Fa
/PmmEzVr1e4GoQ7SsSFfaCOAlr+9LCnzOzfrRa4X7qt1s3Fi8BcOZB2rMGjQ
oO6elbFgg7Vlt3+F6o6yNj67D6423Yk1bjIn7royTuchdpWAFTB3HZdCWZz/
sYsYP04x1kSKNcyl8AfCuBJJ7CG85FTae5KvwxAwwTYKV1Nx0k6OENiGX4O+
gYLhOOdNQqmz3wRW0Y/Vl77vPUu5oKahHJ6FGByDJCazVi8AyhVyLecw0EUM
dKWyaeP4WXtzf52xO/f75zZnfzvpi+pDR84gsGtf1WKQqnSP5tvmZ97+3FZj
cbMJy973ihcbFeO2ez0EjsURJgLj6Ou2/PWTtuS5Ny6PTXgl9PPW4ujPcC4I
BdosM1JUFJNM2f4qnZCxwPjb7bqKk7VdL29XjZeoTqy5UkLhuJvHW0Qcyh5Q
tzUlwymjqwgM/6kqtOslYA0N6WLChmIA3pXDN38yuOhRbbeDqEMBNefyADnJ
YIP5ACPausqAL/YyqIszYCKh1xpkM0nLq5wd4Ici46UwMwoFO4wREOSk2Nif
3IAalAXwVTcfICZ0ibCqhzAhZg1jB5SgQDtMRiDEixAe0stAyKpBYsBRIktT
I8aXcsY0GKIzpTu+kvjJVyw8sCp07TVpv9b4wA9Bc6dMtSMLhepDqwpnPyL4
dlaR4gtPCcrTpp/ttGfKBtVaUCIfMBb5lHMRiKfy6HVjpM3j5bgqI52wc339
WRoqiGnMrhIfLz52PBSr5Z6WQnoDDZ2hRaJa0mnkhupYDwI+jNbEVat6yCoK
1oXc/a2VBIi2RYxire75Lq7jpOORYCUyCBVnmoujn8VZsk4rAgs3//kx0v/X
eOGm5bjaa/q/EdaK8b8wP7NNiPgXpL+MS13IAhJg2flLI0auTBK5GL3eAniF
mCRGrJxTZme+wb/m8gKw8Up9XMVIRq82MUcLgV8EirmTZheIosng+5PmpABj
BCXZE2bV5o57dU/uTy9syf1uyjfZI8a/VnXIiM50BAkkO7TZ3TO4DItqhM/W
UI1AGfYnQi2rRuwprkbQNVFHUFDXYczmuitGbc7T1ZTvMG5z/p/PbslfO2EL
IxpdMvkbtc7pmv8i50KlCKFd1bHSw0m5FM7Qwzx5i6ov7b62IYLXCE9nYV2o
czZRVmBvOkJ3hCKrL4uN43lTKa13csQ6QtJxV4+TEZ6a51IYi9wMctkABRlF
JPOE3RgEmewCjS7gTCBto4UdIUeGGU7NgEydPXADRzSa6grBlDggFEzLuIKn
FERdhl+SXk1ZyXre4/Fxjj7WxU/K7KmLh4muAnzvMq12IlvFO9JV9V7qvgt1
CFU15jT0Xku8a53MamCQQ9fgoyBobZFh4xAR3IkCRcKCs2LhvWEOjOrhtWQw
rWCmN34WH5y61rT1PSrWEloXmCBeOwqlbcerQKLvsNv30I/B/u8R7djp3b8v
nAXtWM8fpMcaIxsgc6WzDOzgGFE+fN1dxoQuozGr2w80UoohnQwCp/lbtm+y
qy85goOuReCc5TitaR3XUGfpCLWGUFzSnXWM45X1G0JDTb8WN4NdwNlOfNyV
XkNWTJxxxlFPYYaHfgWCuGpoQbi5fJV+rjqEw+sMLZM11IhyEWTic8HOxE7L
BdAk1x+I5kNJ3BU+ieNQkkkc6rjSJZqRUgVAC4FnDISMg/TmJAf3lhxC4EDp
GATPeCME/iFT13oRczRmhVps1dHVhWyWeNuprwPzCPkiIJ+gHgFeyLflko5z
x2u1dOzJHfPK1tZ/mP5N7qgpM7KHP31N9tDRioD/J+ZyVnAAlwMCGpf70YtX
dyqXq6HPs6bzxK176fPce/nozbWXjfqplj7TOl74VodFnmV58qj5a57Z7FCw
HqezQleQ8VuLHPRxJgxBRGVMoGxPjXbY3BQ3KMqoG/racbwo9enySoumyYGd
BBFeD7JUv1gP4OSwiP/QxxOiK5qQ0aSxUIB01IptR2l41PENGUY6PC6yzUgO
aY9N5GXBoOlEcv8cT7x/vgxSSDlJxY+mI9MpDuByCBcrHMB54SJf/cAipPnP
l+lU/Bh4+GyvNUEcJ/6gsSJ0Haqkj3/n1KqGOmiAbsPpsTWFc/oRbp83ANEh
ap/IkJ3D0x3WhRw/Zrh1mgGHj3Uy2r3rt6EbFuPAL5CpfNrNA+ODmQoIBiwm
A+TBbB9YZdAXuSYhE3zduxJnlGC1mo7T711ZaEMICM0FChdnDdwgsaGOHlJ3
h9pDSkSMdJWmeNOsiHAgcLxp6lZryZWcq5WuJZ1qbs2iVbg3QJ7SO29lZJof
7uqnE03vMq9Do1XrHOOPNYw3aEhzqclkELRW0Ttqfe+3hewD3wvvs+ZSm5nv
Rf82M0M/wfJ43g8cBcJbeB3QtU7LNf3G4o4I1A7ZMiN6+Ho1szvExfRZlccT
FC1aRaRq0SmKp1xVeCsyODtriZK5JfjeoK3NYvKF2dMXC4FDuHrxvwQIswsB
aRqOckhKsDYH5O6k2UETg7f/R9l3x0lVZ/neT1U1GQR0Zndnc5h9b9/G2dmJ
O7szuwPVTU4Gck6iIAgKoigoJlQUxwRNBgnGcZRkloyCgihIzrGhq7qbpmNV
vfM94Xd/txpn3/vjVjdN03Tde873d8L3fI9cv6D0FAtFfg5Y21DP4mn/vqG2
8GcEcT9dV1H4g9+dLPo/r68v+v7qfh3+ZHEQwbg/R5Q3ZuLrFchZLcqzzgOm
SlPaeWCcG7u6/Co5eBU96+oBC9I19CxryXzqyJDq6ZlmcBFgAOky9PfZYYRz
BDxZAqfsbavKIzgny7ImvuGPUHoT1apOo2UwOVtHCUV1mYwEmh77YF7ZJ4u1
2KRuCsOkF6NCD0LkmOeIHHNN88p2zMS1ZsI5nxbEhi2WYYBhi014OM0qMTi0
h8n2ZWb760GNbl+SUisWEXU1/+ZcXQYIJDGuxHMAMjTIqGeSxIx8XCRjTWKT
+7yRCR8iom70/K5Pa5mKfl1AHvPy9ULhDdWyQoKsCO9dUCRm489RtIuHqqOt
ZI7ogfBqTw4HompXyiihsNVdUDDX/UmZf9SZohjeG8ASvoo7gPCDFSPGHmhk
o9nItCZqjgvCGOj/cSFRqBqXhHRx+bMQ9gMZLmojxXXEj3bdrYSvSUdzHe+j
0I9CPdwgLm7qeD0//HzUC3QP5ALZsR3Da0y2REJIoylbFyJ5lJYR+RkKqii/
ZrcoVzRiK0S0iCKvRYluD2V0NCw6x3rZQ79rr+8Ia6BNHRbi4uD6CXniDUZY
g4Jw5MJd/NCnc8EglD4L59/v1XLeWA8ShzmuW9gB1Q4pT2wJU8VGWhtJ+ox/
BPYH0lMwTG7cHgMiIuHtvk1qbbi6GShuZkBEyQ442HEjI2Ocv9ZMgkLAKbgj
SHL/y8PF/yRcJAws+o/3JNJrlR/p1RX9fANd62sLf05w+LN1VXRdKfoJweJP
153o8I9vrS/6+zf7dfiblxUV/5lfb/jnO99IWafi/WjkV4bR1cv0iEvpmabo
mZbTM71ChnSFnutVMrDq3nNT1WRktXQxMqKcQrCYClpnBi5MZwctTnEAOJoD
wLIs6Bis+p7fF8vLdW9HmYWHBKC63kgPVJnh4TmeF5m3aVrDcAGZbLTSV+MQ
D+fquKann2XqMzdFkw2ZsG7NPwrFaIhQoFI2aL5WynSN3wCPtmusgy5PlXCV
qf3DkuUWKFv+obPAQ+aQnWNxZYAHeGToYfaa48pnjIc3ctOgF9fREMoh0XH6
f8F1oVaNEmqdN8zUSaE7D3tooywESS+DBqoQM7Qj6jRPTwdtvXTzlA9ILDnR
+aEzuW4PU4RFgWEXXASNnSBkg3zzUenyFgI+Jxxu6kaV4CbAQCRZk5QbAVAD
gxZIVyBYaLPfKknB7UhyXTexZBeTXQ/J1ykkwh3nGHgOP3x+kCwxYhhY7BZR
CgLSQ1cM5Cc4AHIDQkQcKptw3WSdvxRT9dhQqV2MkJ/XP73mcUcLwp5bU/4b
HORuPHZeBP+4dSXsRLFc7XDrCRd3T7bjExcCYTI342SAZ1PohASN0Eb586Zk
Y3q26Ry/HC1NI6P17Scfl1uIdDektGlamxC0A5dYpjIY8IK4z1LR1m5TN37G
INlPGwzWje2xzVoTXbcIvgniEdpJNHidJLr4GoAR3w9ayk36M/A1igwLXWT4
XoiAv+Bk9xcbglYZjQJdJEgQiEgQ0FfJEeHP1pcW/WTtBbqOdfjRmvc6/uNb
XTr809sKgf8igaEFhca0+1zIyBXH6DEeJew5MXBR6mzf4tKLZE+Xya7Sveel
rtBjvdpnbqnAYAiBdWRvgMFMP1wUHA5aJMEhkmDKJxgDERwy693V/aJkXgo+
47C84A8Y+vxV8ijhANu66/BhkVZ6UN6GK4CFJXgoo0eiqFMacYvfh4NMnYWJ
XudGMLmI9KJ0DgaoCBfKaTySNVcMG/9tEeMfB0MAGs1+E84wYTJ0Thc+jPqa
0Mu6z74g8sraSLhRugasaMExQSiFw64gfYTmUvJ5QNXex2lLDh9h2Xe5eMvy
SvKC5qo1qGGeC/lMavC0FyecDkIZL8q822vXEDKCnWYQEM5Ax4GuhyRLllDz
jMDvbfuN/hBq89zuLuG7tvXFKkLXwkfjtQLsJss0pxUJ7deQfJkFMmLcAGgk
sMpxodLB8K2o/WMstQkjBVCj+zVgkkeTOS8mUIxzNHgdJ7m+0Rk4ovJhu+9k
H55w2PE9+Fyq2k7puMU113VyFXCpP5BruEhhISuakG1bA8zGcGHq3YT4EriV
DPQWeOpj9kV3FLqZvQJfRtJIzMG1NNrcFAfSZLIhKQAqKw4FvjH75HlFpW9b
NlQX8WWQEEBCEvcmTZCl24H8mNPhjptQDwT4ARjR96AIMdlrO3D45k+D77kh
XNfzaK/h4C/fyxIQIgyUdJgBUFNhxH4/09jv5+srCfTKi366FgB4kcDwdIcf
rz3S4cdrviAgfLvDv779q6J/iALh920cDX0QxIIfU+y3aeSy1HYKvr7sV1y6
n6zlMN38U73nXj5H10VCkyggziut6lNcWkNAWUsAaGDIlUGyr2y/BaksGVd2
xPI0wNCpIvr9NgSIzGlbbdwRrKWXeU09tPlCg98ePTcXUG9vyakBD20/KWAI
o7ccyeTF8sBQsuIg7mbDpYeKaPC6kNX/rFzdlOpqxDQkteDn9tZehUNCCv1i
8EJOi5VUIImyVAUTEYV7pxfWJFc08ywHVgiwkHNCJ6znUwKUFDbGkEvTL4s5
VLx/YfxjrrOR4OJMITwwKIxnun2CjbexhGHcewhDMU2YtfwWz4dB09fwQ8I4
8AfMV6FRSCuDro5T6ZomHQm0ZRkQkV3d6k1W3rY/boo9tynoSQXd08Fgduuh
cK6KQC6BXxjfBlQUxn8g/I24/D/4Phaq5RActtCID0VUZCOgp4CnoaBnUdy9
5W48Z7oxKXfA+BJMJAdwjV6hajOiHmjqpnqFRNN4OKHbho90iwjBdPEQL2JS
eJou+lMWDv5Ohlo8WSzYoyGjm9UIVQdExEkfm4XX951M8NhsgT6yo6EWwLgD
4XkVmc/wBtbw76JDGiwAF9eptVFfg1c3UquEPtOkm/Z1Od3dJImvlQlRBiSA
pO+Pc8P4e+GUBmJAVAcRI/76wyxlwAx7Anlc/ZPK38/XW7x3hT4a3CHeO03X
wQ4/Wbu76MdrPir6t3feKPrR2ueKfrTuJx3/aY3C3g/49Q+gNIAY8Cl61g8N
WJia13ve5Tfo+oCurQRzewjWjtDtP6bQd57g7lKfualS+nMZ/V1lX4I+ynqr
+4awV0eQh6YImiEL0Ayhn5slA8jS/8EFQuW9IwbkozGcHW0mfIIlcu6K0SDn
LdUSsRDUCfIK2MybcD8zP/7r9ZyVhZxmhSUiJip204uGcnFppeqmjBjPbzYR
tUOd3+SUU6UwOOx8mFCsPYuezjhjmhciwhrEHMbJUdwqrFTrUdwel6aaHQnt
OmO46nGptPXQqYOus87HUfOhX8QaC+6QZ4GxQxLxjTvQmNGtRRQyDN1cd/VU
6A7y54RoYyDTbCzfj8DxriNhlulGN0FQTYRTQTIzKWmQN7skcJZwMhkyvN5K
/hI/a7z3+1k2a5/frdQM/L/48/QzjeDacT3VCjXMRwwE78fz0/Atsu8cNYlB
ssGTngrFZfTcLXKzS5aeC5MAh+/duoVwmopeqTgqtC+8ychrTGAnwvp1S64S
op8SShBI9oCGDIJPtiKdgIOhyhbfqH5WY7ZBfGehJbcPRrpT95/Wzm2kamCs
PjsahBRDB0RjwbqpJ6Tbe48+Y3m2eSO5ojpgk2ciEWf6JsZXRq6MoA7gJAGd
l9hqHAdco68nUQhEKJfwJ89wxbkb/AcoFQIds5TmZgv/6wMZFPvFBoE2P4r7
6bqyoh+vvcyw9tN1J4t+su6bDj9aiyjuY/r6G0U/Xjer6F/eHt3xB2t+UfTD
dW06/eKdIIpvaHz88y0vpW7p/dJlXDNumXd5DuHYy72LS6+FcycoLD/ncK44
BYyrIIyrpBCwqv/8Um6GUDhXx7Xk+gEL08ENmYELUpnByHWXGsaVZbVIwuHd
2LC/wZ1blhjTyQkevJkdTkfS0+esBSVRULdwDj5T4up8imuu1M29DthPnFNZ
mQYHtvVk/q0bUJpdIjmkDiehcjad4yS4+D3HkUghrxIOmlXJNH2VgM2VW84Z
tyoqWI+QiVGRfghmpe+XLLHrI2dy3R8TflqXRyW6gzg9uHTtLQicdsqbkDyI
k3XcgbjTrAe+3WEJriaHYTFNyn9WQcOcEhfYCNriYRNB3IJeWwv03HlI4kPC
LRGy+Ew+InXhOaO93pi4KZbtc1JAQUKyHhcNABFH88SmJUEj9RrlMih5A1yn
VH009+cj8svPPJcA8DXm59/CUfcE+OS59zbQm6+Ap4p1ZH4ymnKdTlVL6e5W
nbmZoCtOMb3NUvU8Hn6FRSPuUc0fhHWx6Oytannli7THdJ+E0TplGFfGNIB7
nbVQ20UTbzlnr7WFxjpyMdWxgZl3fMKfwlXz8gqy9HzjHM7F9ejiUI7j42Oo
dUw7pUmHzp7dowWC8YfCekk4qeFJETg13wQHdY3D1ojJAUDgCQFeTySrWuMD
CAIMXQJbECaw7tohhMDgDwX6ZCAtW9hzRzaJj122ZIrafVhf9Kv364v+493a
wn9/t4rgDg2MMvpYSnB4keDuBMHeN/RxZ4efrPug6EdrVhT98J0nO/zwnZH0
518V/RvB3z++rLuy/k0GMoB8nei+33HLvNRvyHQM+dYTCn7SZ27pNZCv9BKZ
V4quMorq0PAA6lUPmJ+qoXO2dtDCdB0lxPWDFqWBeBk6ZbNDFktSO/aVcqAe
j2uMXR2iHSI6mCk6F8gYwU5F2xKhDTNUHxGWKn1sBMuP4U8gzNLfAxn90o1B
X595Ts1MwriCSKLK0+BM8EeGeJ3rm4ElkYQoPdQqyPuSEw6bvIRK3GuIFOKf
dHZj9mmksAKwewC9g/YUzAE72wOKIMVIP6fDfSdynafLlo4uBIIseP/wWebY
gd/AyailG+O4hse4F+GOSOkskDSkaVgrG38ozPxCXSDTHSLsa8SQKFmqNVE5
c4zhP4bJs7T1N5K09P4sBgxEHgPmFdj0YM6DRa9Tl14AGKg6kAvzEi7LFRLZ
V5wUyURlYwkZDQHN9wjO27GOkcrG0eHCz4el5Og1gUcWl9oGRfwEhoi+uz8T
HoCsxOWBoNXqlKEEGkGZRHqysx35BrTHEqp6Bt1p01z1Vc+0FOPrp4arwUAF
TES2tzsFUynSWE8MRgj06/a0MK8bDqsx7PHa+CjrD2Ysue05P/qT3rmVQqcc
U7grCDNZmC+sssGkGmwNduCPcNzuSg88dstPa8RXeFrWBR6iz97ltAxhBHIC
bzqP5vjOMpJWYE2QLLY0JLGpoQfBYjbZY1vQJkOQlynsuLGu6L8+rCn6j/eq
Cv99Q0XRT9dfIpg7x/D207UHOgDefrzmfUpYl1Ly+hhFe8ML/2XNPxX9w1tN
fvUXH9ny9x/z63fz8W1x7+LLrxG2Ad8205939pmXMnw7TXh3njDtMmFbOUVz
lYRrVygzrQLFhfCslvCslqyonvAsnsFR2pKDuXGvlmcnvFGRnfB6BVPhYGBD
yOBQ9II0EMMZy6tyAIeEheCrKX+NT2/NSg2+jBMQFtoSbpZcpj1LUNK6GLTh
kxBKREkKzZIUvRfeeUhgC+5vAYTBl41e368l/hlnQzp8Q/gC1eN0nGO11gJb
93qiFgQVkCjrdN/xXMf7RVmWbQ//l5XvzaUZscZhpvsa2GXFLpHMLwjDoFDA
QqoyQCTLBYWqH8NbxJdVVV+vBANVEyHcD1CiPM7lYV+6srUTEopLDc6fwYzz
nFLrqKaF6VoYDQxDSvj1CSNlMOpMmOVzHfN8PMxQ424sFkjFeCUzZY0YtPBc
b9QeJiI3SlFjuqp9mC7SGuNk2wVwgEcP89pmwqoCXhbShGUmAFb35IGV9hl0
ySHLpIxRxroTgFd2elz69nN54EyYMMKRcXRkN9OYCFdEvOQtb2/WYHk73p4b
q52uTGQRieLNCpOPhaKbGKi1RTKiECBzZk3FIO/2RjRszkwXwPijGvT4CnR2
Vh8bYxb3cQfzHO1QxS6bAvPmKLw5Wi665c2aCXZpWEaoJZjVY1t9YfetdZT3
1tLH6sLkx1eLfvl+uugX716gbBVh2X4Kx7YTbq0t/MnaZUX/9g5wa2CHf1v7
v5M/2wDcus6DrVjr7k+ngu9fC7vepo8b6QJ27aa/20/x2fG+xaVn6DpPp10p
4VU5PcNKyjirKBarJryqIVuqG7okVT98WbqeACsz+uV0hk6kLJ192XGvlCEe
44yUz6cXhSErxXOtaSmdDOAVR0TGARh/BlgPbTu07JYc3iPKwnHl99TMPLi+
O0caVF1cpT7J69WS9LALyRYKCQQKJxyKAdPAKh8v6Ib9HjF+beyIsoxQlpxq
YBbzVSo9uR4/GgNl9qSV6302Gf3XSfz39PPx0aVt+HirFrS4ODJW4E1yUjs8
A7cb6bZITVjioabyI/Ct47WnedfREPJEuQxv8c7DAD/LBpEt8hTRTtyp3p81
0pCs8ObPxHwHakiGMaRhe8OwbKSNlyfCr8lHp0yLbzdl2sF7wqklMB54M8EJ
SZ2nn84HO4nHYtF4jK0gwcWElhyf23QZanHDtOZmoja360Z41NWgKCZ7RByy
tXB6ZayTvT5cA5I/hXaHP4XW1g1M2yTaMBVxN4oyokGe2lgpOl9Oq2Jewwm0
oMFGQeGIxt1K1JCP3pwjO8Y8GB1X106EFmYdBtxSoR1FxtF0+sLEUBzO7fNL
B4FMpLX1RehCSBuqY7U6jsYBNooTOOrwfTaOdkt0CkPCt+/48CYQx/C2rY6y
WMBbDX28muy2taKw86bSonYfnaWMdF+Hn63fVvTDNWsI2hCWTSVo61X4g9/9
ZfKfXuGwrI3g208lLAPA/Xnf+anCm+eVfRvE7aILodkhgrZT/eaXnqcwrGTQ
4nRq8OJ0BT3GSjCQhy0tq6FHWTtyWVkdHWqxepxszTJkEJlJFJIh2yRLy/ab
V5q98blLWbLELM4jAZwLVu3q8Lgj6fPxDAwSODuvF9kyfZNI97Rx2IYy7s2K
bYjcVOmRcU00/bVs98i5XOHU47miu4/kiiYeQpiGgRgCsOZhjcfnp1mlzWWZ
rnngyO3tDccEy5QW1tor1nuUMLDUh+qYDms+eDJeIZjpJqNxHKCNzUsupazV
gjM5/nejwnEgVh0b+42gGQP0Yfmcg7Q7DiLZhO2apISAGCAszhCWEDMMLxv0
5u+0ZJNlFod9GbPpoxGOqR/I19o2TE5YpEfpqlgucJv+ktZtmHpcUvrpZywe
ljPD9UnlfINWE5Yv0CUsm+tcD9IuPG8U6GEHGBMGuGjoxnkgVLagnyPbswnc
GjG4tY6s14Z+IqQmEN8BDd3chcpF3746KgUx+mXVik7w0DWCNwAZC01P5InJ
25VQYutSvbGycPTisuky32Rxm2gEyLbBFm7bIEsGILyF7WHCzobJ7lNblduX
P0/WxKTaoxJ0btoCegDDvkRuKeO0GrPtDfdB+GNkRiCJjJHtEADLovB2PYHW
donLuntxWY9t1YVdt1QWdtlaTh9TdJ0v7Lz5eFHHTXsoVttQ9LN1iynHnFL0
gzU9i/71HcRlzbr88O3gegGun/Pr3/jANbj3vNQUuo8ArpV0Xw24vug7r/QA
xcxH6aw7PXhx6sLgJelSMoc0PagrZBJXR72crqZzr2bs6vI6Oq7q6anWT3i9
PEPPCvUydAuyfeeXZnsDtV64nKXkEKiV7SI1+jAumwUEezxEMA7T5E8CbW0Z
gnwz5aWRXkgWqoKht6QwiOGaKUdzRfTEOASDGwOzyOmQYBJSJXnDEBCsNf+5
vX+Z1heHZae4luUpR7i2FSMYTy7ddzL4LvuiWxSCSUX9cUmyGfh64QAN1Pup
nqCdcMCAUUqkCIHMuvUWoYWsCtgeS1gnb/XFxJqHcl+AMyOe4achrgtFE2F2
uBV9duLVUgaCsZhKKlL20EQJ72HekDRFbdjtoN1xm5Qc9qVNlOPfD2U3CGUx
dMz7C05T6AxHRElJb1O50ZbZI/u2uFczUCmUhQjGx9njfMU1LIMJ2WAu2j+i
pyBz9YAIhEMAGURWaIFiLVEBkCsO5EoAuHhxEuV8CM4e+SCslUFmzObFrBhG
Vi/KXI1kR8ailBvd0UaENyvW2DHh/AWp4aCOm9Ep0NgrspIwiOsCUwMtHOIo
qxZhegXbbTAQ43MwhV7UMrpCx8g+Ng8xTgdhbQh2hHtsQ3hObKh3+AxjprDO
iX2v4ZzYzf6c2HYJt7prqNVDQ61uW4BYCLWuFHbZnKJw6xwh1jH6fA9dHxYW
fbK0sP3H9xf+7N1uhT9Zj1DruwJWv+DXvwZY/bLPPAdWaG0iwhKwKi7dTFHV
V3R/D1E0dYoSxHPDlqQvjVxelqZnUXHrynTlbavSVfT0qye9WVFLj7KOIq46
isLAWGPmGv1snvOiZ5K9+aXLWQKTLOV7DcCqM7O1O3Gs1VkXoqkK6ywo7gtI
XWAAQj8TemIxRFh09qCka1aJyNu0wLlxCZb9/SdzHe45JonapCMxZGsoMwK3
JNQSwKKvxvAZf0NMQ5OJR4LvhIQvMgzGKhiHr02I0sM0qdu3t+Vr+N9wEc7x
jyfIKCRXLRSAQujS/3O4Mp63E06NgFQQi8KTUSbcnLVorHKgg7hr2JfubORM
0H4q/Y9MorxJoicFqNi34RPuzc2RzhP3nWJcwG3CP4q/HzAFxDWpCUkORenC
O6kNlOlbOMUYfxAZ6/hDkp83FceBfJBVHjXKQjE/KX0dqYgFCUftQlWTzEB6
My0dNtnVS5dHwBoQ1gBsUKiH7P6TsjBSIqwYPo3l7cpt7fYdIdC6W6UKxyqF
TUa6hLg7dEmYJrL+ycoyYXxMfF0XTwhFxKFUcSrUYfJaTzbP1eMa81wxneeC
t+BtcyQJJb+npOyCwDP5/zzP1eaa8ynt7tGphtu/Cfm7Ns812PDqSylqjv5a
OIbC4/0DAbzhNsf1GShpXLZ35S8FKwKpas4Lu24pK+y85XJhFwqvum45VtiJ
wKrjpg+KOm5eluy0eUZh4cZuhe02ti382frgDwWt/pNf/8rQaljv4jTCKkOr
tymaXjNgYXorhUb7RyxPH6MQ6vTIZemL9LzSFDqVjX+17ApdV+m5VQ1aVFrV
f0G6uk9xCjzbOjrHIhOplNozWt304uUsPR9GK39gvAvMrsuT2A7ZWZexuejp
CRfoo20IrkQ33t5mBFq7uEnzzEXp6dGBg8wPkXLy7mOKGRRW4UJ4NQmh1cTD
BlsKVdJ/xDWROZyTjlj5+x7DqTOSDDbnlqVA1ClJHK3OgH8O9KPErJDAonDA
56iKEyw11+bdbrfBKBI7jTuYX8kSXGJMctUj0QtsGQ1WYCQAlc7K9QHHEdiE
+Md6QlK9InBKePVW1veKqxq1NzwdyMBgXChFwKbejGP9duFmWWYYRob4u/6A
X8j9cwTI3LKD3CtIwA1ivH6zpcu1GZgseNIuowDTBaf4poBEvwZhUdDKRUoI
NyyY5t2ly2ToE8Ly0Eh99IOrPipxTYvjJvrln9Sall2zPtINSPS7IQ2c+V64
kQ1hlD9vZa1MWRRRFmpFJPJnrRB84beycbybvVkrIV2ABnSDkwzxVyvzaazM
SSZzP3vJjbS49V6Png+pGGFsH1exUZ4xtmGRFmF7crJst+Fagr+7T5k1OmN1
ja3K+4LrYbRZetRZiqgJijjTQ8xUm0TlHRleV87wLhMMIV46TBD0OX3ckOy4
eXlRh43Tk503tU92/PhPk8lPg+8JBP2KX//QhyDAz6w+c0uX0a1bM3hRehvd
+B10PHxDsHOc4AbSRyXjVpcjsyujTI95YJSxVfYGzX9eaf7oJ6AnlgG3ulmG
fiyjD9lOttdzl7LCcw41XFky50nVkIhrgM40H7JvjMNdzw/LyAwoQ92iSy3x
EQ+KHw4FMmBZoTsHMRwmNkwREEK4BBAquguF5qJJhzGUO+kwg1JykgdCIAQQ
YsV5rQYEnaWTzMGQdJN5cInJYtNORaqcALNCQo1CTncGfIFwxMTgyUn5TxR/
8Z8HeqEGg9JXISiFyZwTo0HbJyyHegxEicEDt5ADPxvhDliIyY9leBhCC4xO
2xw6ceTE/cOdfo1d0zlhJTYLdaKjMl2Cc5bj9d4ZQ4gPfOr9mVuipMgacD0s
rrPw3NXgYpnkulrybxnKvgGYOFo657I4G2jrrJzRrk/biCT4yQXuCAKbBkmW
qBNhsUcB52aQMwXAKDBJpZ0QE3yHJ8NalO70Dte1eeuLmCchex6bsFygCRhB
XUal+ziUMu1yGXlqfc2RJ0h/5Y88SYPokk7ZuXkS211jxOuO2j2X4pUsYPPR
KTIFKtG8U30JEzwZaHPbB40wa40gVDLw8FAUGKVMv0i9VDFK4vfvuo6k0cUo
pMrSP8xSqJUp7LOrngyljoyohowH0VI5pXKIls7Qx4NkprsKO2wkqNq4qLDj
xjuLOm76VdGvPkIh6k8Eqf6bX6/zkepBunMLBi9JvzF6RXrDuFcrdtCRsJeQ
6QA9jcMD5qdO9ilmxuolgh0MIwWxCtyqtoRUKUxn8kBS3+IG05lZ+nfZWyit
o1tqqR3LU/cMVb4AVzxtoxyFHnPknGDpFjyWtq7KBHsFm8tRrejBJGcYQgk6
FeICtwCLglAsJ5TiovldlNgRXKH+J6AUZl93Ya8QdmzwyN/UEyCDAojgNgAn
ANP9ou/H33ubhEMSszDqxABOMXxWgM/i+AwZl2HRSMWi/OBozH6P0/S11KAb
hQfZwFBEmZ5vAUZ2KaxkWYMuij69toe4IQkaxUUFpncaJmo38lqOXpBP6LGN
/MgBT5ctoTigBVz4gQiq6P9ngw15GPLrK/7EXDSU4ERY95NMkXoSTyDQ7cPT
sjVRnU3JbTZPjhmFGAUY2zY67tXyRoo1CFwgDo9UC1iDsEc2SsYd1iAh84Cm
Ea9PAwX1EV2bgbxuJtZlYF9QY278GVcaWKKsVN7SFvvWIaPWbsgIOJM/ZMSb
aHTICKlXR4v7eXaemzzhKmsFGJacnKWpWXS+yGkJGBF/2kmhZ8VtwugeBRVj
stzN1NTxfBYY/dTkoK65A0bIxPtiWXkZ+XXQKkPJWz098Voypapkz21XyEIu
USB0uqiTC4DeJSt5ujD5yYRk0cZftu+w8fpf99jxZ4Iqv+bX76CybcgyceTy
8kdGrShfSsHlO6OWp94dsDAFRigYU2AdyLzPvAiyUPyTquyt8heIf1hcEbgS
tIiMOXJ1e66iCwVCEL1huS+6eokIvkw6N+dHoNo3fOH2m3JKD11lAYIoPYpA
ZnobsZ4Ea+wQyANeCgleKAuLAVvAYCAbL5rMyILYZzJFOIW8MwybGDlLY6G8
4wxJ/Lgk4BHmelOCk1OOLMpFbMRSAAFjAA+2ACQedp8GcfhDwJIIu1IS9MT5
W1uGnQ/DG4t7tAXs4p1RX1m/XhktHF2J8xPGxPm1jcQ6kAko0suQR8jIfsQS
tuTyUMelX2G0o8TmVr5sgXyOn99zm7yPhielANAdkoox+MRdFU6GFVtL4/Lu
o2FVGxHmTGH/4kFDScTmSxEXGG0K2oxjVpQ1ZehpKnt51snS2Mc1/wKp/Skl
ts/62NtE+2G4Lfsxybvo/T60wTYz2sZ7XWEtH9+JUEJ//yCQrGK8ztXCDb+G
NJgHKnExXRebCaLLceML/FkgWwuPuxLOAtmYBWaB4qGgz1Qm0k49IZTQliEN
wcJM48VMOR7dV9CACV/gDXZziAMMCmIIcILrAEUZisTrKYero6uGHKKysN+u
dPLGHWfJOg8Udt28Ldlx0++KOmx6jqLwiWQ5P+3QZTP32f5CkKg9v/4RkOgf
hi2t+PW4V6+MJ8RAJmaTh+ix7SB0MSQCL/0MfR0TORi4zp865IkcunjqEOXr
AQvTmQGYPsTcYdA0i3SMouUsVp31foFyqedkalk2Cpns1i0vmpwYEmmk/bb/
tfARbRZfxwcCjsykIJJ8nHmWGw5Q4cPkbxGhUdHU47kOuAiKUL3uMAUTuwRM
SMMQAN0j6CMp23Gkb8JUai7BDR6WzQrOlCCHS0fWnFeNzpgvtC60niBuyDRI
063BuwWtInp31oElLFJZk3EHwNZDDXG095/ge2zRFzNIOmwEXBRtNNgBXBQp
KMnEKn2HfF9BGAhxAXuHBUG9EQQVWhBkVWqpBvECC/43fuzTaTP+ruNGkGsJ
ihjWBmiPUHeWCRx9E0oujjtgk4fKJisIh29sZZHQsO5ibDJcYi7tMSFoaIRk
c3vWqAAugQQAP4fE+qQ3KjgsivMMTVMmL9kCaitdPyVFIv6IMpCsjm3EoPTw
e+E1k5fvXInxBrEWTqkd9SbDuVkfVereaqUShGzQ/3F0hx5y/qIwFI+86R3J
wniRqQkGyAT2790g1ZwhCwFWZIPUAypYfp8b3WFeKE/u2PaBu5VlYIwYj7p+
/6lQuDuPui752PXRPGz0PkAVoiW6CKhGfl3bfsRX1WTGlRTqlyWHfXUpOXTv
0eTNn31KgPUW2dWcZOdN/ZLJj/624683BX8tIFXIr38HkPr7PvMqMDYIBlM+
SIHB9BWBxQH6M0DqLH1+nkDrch8ZnskfGawlcGK92IEEUIMWyvDM4MWpLD2A
LIS1+s+j2OfFS7m+rNt8mYW4WMO5WIh1WPAtqg9uYAa7DmRIllAIBaEiQiFu
g95/UmTy7j3O2gRQ0wQiFVkadi8OjSS9JnhaJUl3ny9ohEC5oRnFP2eFeQ7k
ATeT7n5yzL5cnlIws3aChCeazlfC0Giw4+soXrWOzlSxjvA34YF0676GQ6dd
NPwAvnTcKPCSEBjqoFeRfFlgok0YtXSTGnXSemdMjNvpR0FhzcelXZtZlC5m
U/v085MQaOq7S4vTzUKKgtHOR/sldgc9MasCWT9fEAeNTE0MUHCbwtNHOrnT
RLqUBD0SEl3kNAakbTirWxeHNa66w/pNXe3KygwJUUHHvtfmHMnMNABS8JnF
67Cl4POIVqIfpHgoxklYgYuIsCAMf48kTopITGnSzbIR9LEFdhMaChkH8XBz
Zzgw6CibOuDPvZXfhF3gPibeea2Bwd+/5omFOR/RZaa2LuBevbluaMYipKkn
o0MzcaMTs0L2ManeudVO+3mnU9CGQGYfoiGJiEZ9jYioNgmgGf7V1fYj9paT
mV8koz9GH3cT4Kwja3k22X3bLckOn/xTUdeNHBH9jYBNB379U4DNv988v9Qa
+QCbfLokoqHDOql3QSdZUpSDVfSbX3q1/4JSFmslgOEpvUE8pZfKDF2czkB7
ATpcw5enwQLPYnxl0HzczkELoCY0CLpwBDJ4BF3CTa1MLdFpYY16AhvOc0N7
eqH0Ax5kEWEQFPMgFtXpfsqpOk3DoCagqANhCQVH+BHTMM3EsENQlWQ5viRr
KWAiGPmX9vPHM4XSJl0Mg25VtfKRX0fbC8MUYRJKJhzKom7DvgyxZsReGf9o
TEC2XziN44Syxj8IHf5e22WoE5Ga6HZ418YQYgoUjby/En03+qctJVlDEuYl
YA5yrMzMEiFbpbIjcMOwplAjPfp+uxLc+GoqMZiiTXujMPmBjtDm7zyMeoLx
zOWKucQgFEfkC7EmimeE9Di20YpHTdm28U5w4r0JiXPedIgTF6y5G85PoQ5Z
xBQNeB4VzBCs0cKy1XpmbKiUwCbB3wqomSGkyVjImWwsk8lrQp6kI4K/putQ
Y6E+eiLCmOT9gLw8CwNcTUUPQnXNZV2fW+DVgCdp2VcifyZPRPgbMTq5hMxG
XThyp2DGtGUi+vvS1C9whEldIsyPZXyE/c3VnqCV5Vh1ZKUSuoz4qpJMN0UG
fo6uY8khhCiDd69JDtzzAln5kMJBu//8v3tu+V8CJp1EywqjJT6YvJjHvQbv
+iBSK/r8NH1+kYCkFEBCIFJBqdNVikh4JI4ilLohS9L1uEYsL8uMXJbOjFwu
Ss+3v1KeHbMinYVQMu/qK9bx3qdCJR9raBQJ8/rR840AFsy+Dm4QVqOqaGKD
Q+cHT7PAXJfpJ1nXvOMDJzmOwQYwxDWFM05zlpU0jWVKiLnRxZO8h66FF/Lx
oEy6GrlLZiaYeBMPdx1YUhRwQBPnraDXu2pN0gj6RhrUcLQQ4Uko+hhKgHP1
ZHNYRTH9Hw4qRAmojUQaIhYu/9qKu7pNxklK9tweqgnZT6Z/p+3yvrskLImH
7Mn+1itvLcCBCAzAMcaabt+EmgqWFU06Gq1cylCxSc+z/ggyU5TdeAnkMyU8
awFCjYiZmYeKqqMXn8CL4y4w8REDtRxbzg56IZCCW1Qfy3gu5T0xCk8wt3vP
26LVgoCFST/SbmfC4idX6ZfDMmZb7uzTq++IbGaT4ZHb8iIRbmup5N+wpbai
t4y3B4KWPdwjWTtl528dHsknXCuBUcS9G/Od4zTpwbNOnUWLkYFJV2hYwqFJ
yLiOmbCzTWMK4zrb/tb9CEo0GKGsZ/heCkb2XiF7TpM1WzCyiz6+mRz85SPJ
AV8AOponB+wJ/k6wowu/3oDiMDIen1GIkVofOzCzcbLvfB5JKyGsSNOdqaCr
ku5gFd09ntkYvrQM42gxzKMFzXhVECF39o5XRR+Fvj1Ltyfb/dlLJuUWrk9u
FDKeH1OhABELiIVTat7EpSNEt+Jd9RCPg+wINsPw9P3DZ1iKpCPhCwTmih6S
XKkQHyknYoIOgUgBUIRZJKoGlrxdUSPCJE5YLGF5SoyxoiCcucCFRInT1CTz
2gFCHGP0lUpsoQjGRioelnoIKGgsUSCrOTtvDq8um/XvrlPg8AAEMHSTNrv7
7ArjjR7b5e8VkpK8oopgxkOPv/XRQ64Bn4csQUMQq7OYtPGdrpYS1k5MjoDl
EE55ccYZDhJBgkBIbzt5oN7E6kwrwxVkppEd5jWMHIQZ9PinKGpgIbGsJZZq
LprfyFkQe+Ajqrm25xOFFYpLEm7yLBZSnJsIdrwjZRte/WOYIWMZNuMPqBiq
WwGGyx4UR9NxG3+a8S+PL9mK5MjGn3Cm1nGcvd2Nus2c+/1YjeHT17i3inuI
hgddwtDwowxP3L+tNMHv59WP2fZ3HsnSeZUhc65PjtpX137kV1UUX1yh7CTV
fuiXiC0OtB+6ZwfFwL+j61kCiVuSQ3b/RVHvbX8v+NCNX//c2tK3exy+twgX
MHK/tU9x6d5+xaXH+i1InSFcwDxX6eDF6TLMc9G9qBqxrIxHI7A9R0cjGBjo
gWcwugrhdIxFcEvaG41gPQ/TeozxUERjXirj1iE8Fn4UTNDRr1mO5RcI4bQ5
R7nYlCeqa2f5I0S9oWfrfiaFH8KdSVJALYMRGmbw12RolVU0cCoax0ODAjSh
k9Y69qeXmf/rVVDG7OMxBWAHOkDkUnzhW/rrcY5cpY/MwnCZ1PYo6Q4l6dY0
yl89YiDCYoNo5nTfGpY4eoZ60wJFnykfb5vTowZlj+kxBhH8y+wyhJDYwjXW
dyNQGqSUYY4yvCDpzsO+mKVruLUzZTLUuBHIQSvq6Yu8p5u3dYlSZTM+ceFm
YxQcTDxQwYGrnwQNcQ4qhAODYMIuyjPo5yHnaMrwgOgBTSEEGSiqIuBAWeOZ
TVW5pzdVCbU4HoYVN1yLysdwYfS9CXmbc6B5o1vh+COwwjZjUyjCBOOEEozH
amhhBGMfIG56UWX5C1TWK9z2BmgQzfSm0tjWaUQWmSMT7oRM/OFzxpARgEi4
xeBOwyaIhZqZ12XbTTudbXffqQxBd4agvY4CxRoKlFHRSNORd4aOgIPtB+/e
QY/5t/T5tPYDd/9HYe8dHETINsGgB7/+hc+ye0yTDwYIChy2U5KBsYQTQ5ak
zhGWXtLZKR5JGLOqrJoedA1WbE18vaLu9lXlddDkAG9FiL7MtMNHBgnQ63hc
4Gkj+PI4QlynEZjd+bg/jSAa80oCUH52cyFZPSOsT+huQ3a2h25uwcLPzo+e
5Qpq8m70cdwcQhyzUzqDgJhBsWJihPEVqu1oPpKEWEYStKKkMG/h+ogy8BGc
gCRraIDYy0AifeB+nxco97UQtQTrnvTaIT3chCGCZSEOGDg62KorObYZEsi/
aiF4osMClnnwtwBDAAjIQPB3N0fnDvrmYYEwAA0Gdkdn/SxsYG1bb4JMVZdc
KQJtrpmyYlWqfW4FczP2DgvM/f3yHgTA9+OIC7wqpok7Tl8PStsMTiQAAahK
IMeYt7M6lnthO/z+N1urcnO2MArginnEOW7eyMWzBnTjZikS2IUfCFQAXw4j
C8ZJwVgBSxGJ5MdwHYynuCKwQi5yjDvlCgQYmjGo+MOdfYojkwdGoZOJ9LaO
RedvSOv0ZDj8hT+DuGW64fi7osfc8EFU1a9RRCfGUemmnYoBIoKW9EogMfVk
PV217e4+VtV+3MGy9qO+tiBiK31c2r7f5wQQnyfbD9r93eToPbpyJegpsow+
wc36KgCJdwntt0Fxe+jS1EECz5N0ry6OXpEuvX11eTmB5RWKqirHv1aByXBu
/jINd26pPwkQCA+3cZbnlhQkbNsEh1ISDDyBIEIBg1GBA4UnLhorWsYAsOJy
tqrz6IVdK4bMQItO6L3cqwRcVhpMcm3fmwLAnyYaOHgDS8z8T8IfLITm1gBF
Hk0UQ7TuiWzEIouxHCYAJ0DfZ0EgRA1Dv0SVkByylQTt/XQ1j0GF1RJ6+R2P
rf5HgMK2mDLRbtoBJhr+0S2fSkECPwRhBe+u2BzmG1GIkO+V+qWUIArCJCLk
AQdcpQUvxvrQKEuMOxgR6W5nicP0M3ymweplqxwHCH2g3S9rjAUj5kuVj5Wq
PWl1FAMYH97imEAyBilBoubAGcK6KzEmhzR37NkXd1Tnlu2tya3eX5tb+XVt
btEXNfy132wTnKCIIVDOvxs/KuB/+ZjS3HDRT3NcWsQjxqVFNDDy5bQbJCfD
TjiKW8Lj+ANIgBrYy+3vDFCZMSQKz3KioLU3o/DxdJ5Sy3sJs0r7uLI+AF+T
4UkntxhTDPCyB541ylIWIZEBX+T495LjTz1+td2U42UU0F1qP+nwYTLNjYT4
q8nhpyeH7vll+yFfIjIQHdbgxnDAGn5v/dQlfRek3hywKPUBBQO7R61IHyB4
P0K358ykNypKJrxenqJbk6bHWt4H9LO5TL/H5iVHavXo9/D6LH2dqWfMv2dh
Z6MXR7j3vI3SNmuQKXT1BtDIxXkZA4G8KUAY9R5/zdqpD2qbIkq9F6JZgXFa
wbs31j07O0rzjuAKsqoR75uEqTMs31bkTjxicl9x08gxnQWl20dI9wP4LB7A
zYJ8h+v3eZQEZiuqeTWrV2Tsud1aIPR315uOg1wAku6ytZDJ9kw+2yj1iW66
x+bG7d6Y4s4QCyROoN+3STgIYKHCkD2hZNOwvSJ90jQU4ULEoGV1lB9hrzrD
HNiaP3+xeQEQQTYeteC2OY5PxORgolvEgDR/ChcQKlyzk2AgrqVGOC7OfYQE
y76sSQAD6FcCCizZXZN76dPq3HPbwmjBkc9Y/AE4kGAceFwvwoAYk+qbSU1z
wxXWipihWje2bA7JAODBOGcJjQj8tqpRX+nZhGVNYdgD/ULGmcrrP3PJ2bZU
2C7qOpQSFw+IQrpswu7p8Z7yNaglTWgFMoeAwTS+6ildqG13z/Eqyugq2t17
8iKZ8pF2dx/dQQ9tJWWAd7Tv/8U/JG/ZIpKkwU1RiRiTh3lywML08sGLU+9S
9P8xvas99O6+ITAAw/1YAx4qgED3DwEIIivYcBQ0YoI7JRvZPlZNYCEEpZ3G
md/eTcZxghgT3At07Csc/ZLVA6ICBNDFPZXqI2ioTRsw3LmUCGrFZGG4F3Gy
ABZqgtGgUC/y/jhHCNcxE1UKZseMBeAJ8dmUwjEGDGa4IycY4pG6Eo7WLvRT
c6zA7aw3MaC+6oy3aBPSp1/JhIwOECdCxwUYdNgo1PZWwvjqtMmtL3Dnvvm6
9Sz9uWKeKQ7n54dHiB8CaKCaIMQBM5duJXYdumUl3gY7epIJ59pxeDb5t+m+
Q31ddiKL0qdmA3zEP6BHPDcfcRzzHF7uaXJY8u2AnTueW72vln7JVftq8cXc
vM/UwzdXhaz2sA6g9NKEo5dqk1MO+hbs4SDHI7qwCAOQc6/KLYcy8+X5ju7N
zyQi1NKQ4g6082mlXXVZQZfZF90wmTp3EM+Tmf+ujI8RDDhyuymnyWyxVQHo
jD9VR+5cQ2f9VXLtdLvJx863m0KuPeX4Z5S9raDTaQJFrj9td+9pnPM/Eve+
hRXu4NnBdzoPXFgKnnnxuNXlb97xSvl79KTeJz/eoczOo/RYTW/9Wqt0yLfT
dX11r5jyy4MYGOYU3PMEyzzhmPPuaF2sKmu0ZJFgT12jRX8fxJjnWcDHuO2U
6CxcEVmcIlQqaS4ysfwkB/Xi1ceUVX4s1wF8ckcqL1AyuZLKpb6lRJ6WTrXO
r3+zPDCGW9Bb8NW9lL8Zs+DYMct36xDLQPmyd3gO2u0I4jbyYvk4iyuhdmgB
uR7+bqcSuXSCqZutoyxy5+Rb3YEeYZE3FA4QVtf1IdPCSZ9/LfPleKcALqQ+
dGdx12UzTSiKmre5kN6RrKnhza22vXWB7G0lj/CVzyWAlpMTKkx2rOOERYEP
2T7cFoc2/D3u/J3dnR47O/zO6tzz5PDPbNbj/JOw2MfH+IdX5QiP5x4JWZpK
mgqp5BQ+8D8xmiZAAFH/3eLw/6O8etyXV7ceJd7pzZq4m7AwfL3Hs/8jQ1PX
HSP2b8vf32FWRFo4rPndd6qOLhzklXTyIKq/QKcPDvLNlJMupbj0dvL8vykc
c1hE3oI+/Po9uPovx75S0WfI4jJfLskWK/g0bgyUGI27XGncVX2L0255DK7+
IYU7i2vgolQWK3uz9M0ErVCwxM73W7B3ShncN3GYfolnIvvMle18HKo/6iRa
PeZ2kNDdMdz/Y9b2yVzRvcraBk9SGNvk5vcc46GSOAJ8sCWZtgSnlpwUjk6v
zYWwjeyd58a8DQDDvwoHxoa40ZHBu+Pm5YM9Lx+8J24yaHuNUDl4j4cAXG3v
97kOhMjk2WYhKDIN2xiQRRv5a9g6nndeh2f1zvxzOpAJtyZhZ3O00h7GaGsC
9QgWdOLwxzbrmb5xZDOFSLQHMX8B83xbwExPNc6rR1vwlMRQb9sPsmKUw3BI
Wq8fbvgsRdoLP68u4ECcnZePavhvAq8xxOYEdy/vrc0t+LyGz25E5kZ4BNc6
hrycvt1CcA3DY9oiwBmN/w46SHFPJBz/PSL1e3U9TL5IuG4ybygNTu4b07ah
rpHmgwf55I26cgh1fbpf/99Ux+uUQnA+Syd4tt2MMxmySPhvDR08lXRip8lX
cVp/RUH4e/T5knaTjg5pN+HIHxWOP65iZ0E/fv0z0ztD098c2Daj2ByGUZx5
8R3hcymdyuVYhNyPTun+vBsgXUv4bPRm2w/A9OYhS9JZXjNWfDk3kC7QnPvN
pXfSbx4SD0C7Mat0HUAQM2Flj3koG59asyA2Mw7RyYeUGZjO04TpzILV94oX
w5v58L5PDnKmMmNOL8kDfO1Ncl4WSYw/hCRcmZ55cxbGDkqYqJclrVKZtxMw
7nMNAyEaNo1qFvK22M/FGz1iEDMKG9lwhdEJO/IgRadNcGNz4ZuMH7RLZMMG
WpV9jw1CaKOxQDSp8GbQhEOFfeY5DXSacF+kq++3L4VrFaSeNh+JNEfXGmEP
jGxWau4K2abyiuwaUTcGs1BYX0x5MvJlcdGGbhvDaxzfEs+tIN+9LrecfLeY
jmEk3bPV8Rx58H05yL1yHcf2yNsfN4flWr3KlYFWODXPY914umjJis8WyMTW
yojyYiB62c353Y1YZptAU4xXv5dHiFxRy/QItz35xdZMT0bQo1eWzvBs8tHz
9ZRk17abdupqO/bbY2fo3N3XfvJxnLtz2911tFfhlOPfb3/XEZH9CvpHE2i4
rbXa8qcTICEN1+VBTgqoL8taj9Ir/RdAR4cJw7X0YCF9z2Rh7P9j6fsWzBce
+XJZlruX2AC+KNwC3pc8GNPhwhNuwBVWTrByhVtEuML87Y+eFyHCmcLJAdcP
Ol+d7z8BuflYrsM0jCWA9lf4gKxT5LEEoQhzgI6aGw/2JFn3ZTxrRav6pPPe
cIpAfJOTUK0zmWy4+C19R/MofYenErQnh249DnGct3DCrtx277IF3TUj4+Fy
jrtJKMLqy5HVz23CrafWYYNPm5TEoC/C+Swcw1DHNK4v2oeY5ntI/VhCm8as
+yfbPkvcISxi87A/HLnNGGTZg21d0GLlsCxNO08ejS4VFqQ1YW+B9+AIXfhF
DUXItbkVX9WaQ8fgzzG4c9wdvuzF8dzLX9XSE4crI4V+dqscwTx5SSHzg7g2
iBtjNgF/pnA5n8rXhIP3qW9Lf9257quOyifzBG3YXY3BN3J5qOcFl0XkPE4r
aj6Dr1/xNWRSRd2+jTB+mbQnLtpT+suZXr+5XN99zqW6Tk9crKLwuaz9A2fO
0MmB43UNueYT7SYf7Z68/UDLfx/6jQpeBQP59S/hpzZFBM5MPrEffLq99Lsc
JjgBF7cEXFx6aCbzXj1oYbqGHhdzcen91Q9fJjxcelyOh3vbavocULWU3hsU
Mp6OyIgKRY5Vj5Wp/+h5J/SubDpz2nio8t6a2blg1HXGznsw6WwFNF0d6WKa
zIzTjlFnrFxO9TABnBwvTBlRQ2nkhF5Chsw+JdYZGdcOUXXLAk/mXK8xTKYZ
sx8Ju3HgISDKDJlPQzZupBcucbLzVl7DKa9dfGYdvjUkzIAkY82vAV+ESmpQ
Tedu1QHRmJp+xtZCJNzyGrm3jWRuUI9Z3cGK00My2Rski10cBsDCppb2EFrH
OFZh9DjHELjCI+dQjopDsnhXTW7pnhr4XJ5nyqG7cp98HZc5ZwK+TGHJYvLq
uZQRP7NZclx4JQ5VRLoPbeC5ajlUhZMf93WM6fYLaQ4uDZhA/13WF4eaoN5i
nGGqZWWi8COWO8Icgn3hCzd1YlZ2vqqDura37L9m2T10vuGbQfNMjzmX6umq
Je+s6janpLzr7JKSjk9c2EcJ7lo6RGe3m3CoY/s7j7Bnig5UMJhfr/c9c0qe
Z9pirG8IRI/3m196jk7LyxTUmjr51aGO5Zquw5pckSZvmaFXliaf+GY5b48B
m60XaK6QoXjmYr7AL/tZDLQ1cF5DPXLZbS9ktoQ6Y8dZYZsaRVLmsD16Ntft
kTMhxRVLpshhWZIcVSzVaUreeYgVyQts6YBOH4gf7jfF3NHMULO5GjkPYypT
Sd/RVnJB3enO38ONZuWCgAp/i9LUem7zd3+H/FShqQl9NR46X1emu4rnddsS
+q6vMAdPRDUbXjhcNRQIZ9rJtBxvXkWPYub56CqpuLdNz1tkwWUoP/41Iqp4
JDkoPV46XWGRcMYxukkPNo7s9NEP0O0FY6wxOyMKSOgN4ehbqXEuol52xoSc
kPR3QUs+TPGddi2ifHXBLukqzSb3fvR9IbHC24yVFs87IVs0YKU9rk4Mljz4
J3do0fj2VTYVsxwLUXltvZ6So0X9N/AYaX8ojLRl4VHpGGle2xmdEDkdL7vT
kW5lbfdnLlV3ffpiOUUjF7rOvniA/PAjOjEfI4tEmRg+KAJHwVB+/Vt/6s0v
HhmZdB/ll4fpMDSd7dTQxekyeiKV9DaqQCSlC0TSunGvltdTaI+9J6gSG1eM
NY4gBslCkMqR8V2wk0kAejxS+rOdl+ZyHeUSBul3QkllKOWgEPfk+Vx3+old
Hz+f6/wYHZlwYqSbLPHoCB8+W8y8Uhq8zBtzmrWNQ+qHkdAtl6OzL247RsZo
eeY2r8TKA7T7paRjAyExU4Xsu5O5HCGN1Bt79WfRRASk65Y4f3pd6IU9t0fJ
o6x5vVME0Oh/hpKyt6AlXIgsLTNvhtCWiZAd24iQXbznjUVhRPvDOrjIwEbo
Xjd6MjoLy+cimX1T9pIC5mcg80QdCMfe6v114oEEr3wM0lH5sl7w1KV76LSk
M5T+2tzQrpfoR5FLxpCT0hvAT9aeL/3Eb+eHCaG8jSse26VcEJ5tAw/FwlIb
iR3qHZLwwXFGEGuk5eLXysny4M0m+Nh7XuiZpqgGO4dH0kXxaglOxavdnilJ
kUee7vzUxS/JcjeQIT9W+PiFH//3zHOtOky/HLQTlxwueaWVg4zfbeWgD+nr
OwfMT+2nXPE4/aJnKA69REDBatL0Ripvf6Wsmlyw5o5XK3iVGpqyHitLSFnN
xSOVnNHdrTxjUhYTsRwha5ayuJnzTfeZlabDbQwiIN2U/dBRY0VbiD/vSCeg
R8i66yhOtrtE/VA4GSLN6nOymLAp+tETj/AUpfnieA1bcTka1jc63ZGQr9+h
+2QH726iTE2nXCqMzVio9GXOF/AASJyp3AUhsbuHioe5vaEtpOyDFJGOP6ZF
TLblDCevtbYnsuMi6e24sOg+5mTiL7qjEPhuHCoRbpfJLmNO2IKLZuxtjbhZ
gqYJUsTle70gFMXYG9gJl+u1VA89xJ3wtPm7pMmKQw9HJz73yVZL9kRpFs9E
Hc5TMjTCRR7pSlqxrCzGICHDXwhI41qzSl/Lx1jThwIdC2VxFLJ0oTgaTyXQ
sZfp+ewlOfIo7Owy+2JZFzny4GC/o9htetHj537Q4amLIiURjBRadL5vzesz
v/S3AxamtlKOt3f4shS0j0+QP52n/7mUfoPyO14tK6ffoIJ86SpFp2A++WzH
+j55zCd1LhPKd6qjXbFU/inWPr4I0uNT0cUmtqQLCqRxpj61iWxcxY/jyWyk
dhCJCMmOEbXRwrsO53OeJh6OK8tR1v3ZyneeST5qssdKgHRDnBSrYl7qjoPR
QHOAjBywZ0WmlOSIaxGlPfHWN+M/ihZWhAPZa3scbihUp7YSX9rs5eA90dX1
E3Q8coqsIpMli9GlgHrCSd6XYH/TjQzibkCx5s7dhJQbknBwxCEuwzAlih50
TGgXIs5BoZKSJeSMw/MI+5AIPrc19L9V+1yyx39GuzMGV6JnvlCPt/k7a7jK
+sL2KvozO11g/KbVHvvhefr7Z6/Bb4qHen7Co4DfiWAoXpvyAQenw4W5K1uA
DgC5S+Uq4vmSWkptCjxZP+E9IE+EDzKP5yXkUpfqyf9qyVQr6Srt+kzJyS5P
lXxOh9rrnZ68eFfn2SV/1+nxsyqrEIzi17/2i6V33VJc+kR/YRttIGdzqr9j
Xyk7eevKNHbtXSCHKyUnKyOHu9LHU/y9BuWQqUa4lHaomypEQ7OH0g4RJXYH
D4v5RhjcSDhR5u683vuSTzXCcd5x1sUg5lGNwDlkYsI04RwWTvGpRtAR/1YZ
Tae6hlH1Y7JKqpkQjODBk5R6jO9DQGk9yYFh39HYRT71MK5/O2g3/kPjGZnK
7i22eOzmT7HDjrlCO5zsJXOF8e0Dd4uj2WIB/F6TjuRtMw0dzdsr4NYKWAgv
G5tspANacjzOMcdUlC9z1IRYCxQBdBVUpsCyK/OsONN+WrP5I7XDNZ9cBUHj
qn11zr0QaML10HDEGcZnGbnOIq6Y1lyTWATXe357tUcsSrhUTkPFBMqllAij
uvKQkhiQ2d2ndOUZG4Rn4EtAeQtB445eEA/16VqxI3F3cnVZ9rbV5ejMZXq/
VFp34/OlVWR9pXS/TtLtwwEGR7rz1zMv/O9fPXJWFAWCW/m1rV8ymTlsadmL
t75c9ttJb1R8OGZVOWj7X3m7xCGHdKnP3FSK/KWMlSOF1QPqrohGfpdJPZRk
svtAOLI/xCOFsUduVJK76Tkm9FBgd5F37Tp52jklbiHMjd6WNrgfIWwjE4pE
qwBnFroI05TLA5pukQhFTlb52ckg6tEhlsCJJptLW4Yy2I7Ac8oReNw073C/
t6/knRirQZoOpDbpBu6OOTFIYcS1MsKOitvvCgm64QK10Kfoe7gTwDtFIhrT
LSREvVsWy7l9td6x5GtLE6zEMf4RZ1Xp5m6BJwtvUkaBUjriJR6lfV8EFs1P
YjIbJwUJBH9zNhtFbg7chhyG3jdOJIRtiAzJbaw1j7IHDqFi8qRi8hJ4wlz6
uHyvz8nhbn7QhI8x+Bu+G0fVHI+XQz4i6mnN+fDx1dPgL/ARK2U+oDKRTzp1
2kaRRbr50mlBPCJelH8S6ZK27K2r6FpZlhmzoqyOPlYNXJQuIxs8TWCzhdKs
+RQB9uvw5IXvdf1Nic7VB7fx6x/jFPrPUS+nho9cUf7QoMUpny6Dbjs8yDR+
QJXBKZTuE/LiqvsWp5kqo5y4+v4L0pn+HlWGwkkQX3O3vADOW+8XsK/yZige
wk3yuDJMHlK9W5U01NZ762tLHaK8j1I/LvKpIjqKnNShkGbAmYF7xcTRKEpE
CR8Sh4TmSdOduZ8XGk4/Q2jPIx6wX+vcWdcuSpv5/2PNDGnImtkVsJCObI4Q
4Z+4cyR6xG6xoV0Wrt4jc6q24gzkKVezkBXfGCOcjX1UCOiw0IjlHiBoS/cb
JUUuVrxRwSJdZIAAbBggmtpQRIZ7mQSOBHjsXM7BuOJAvhXDSUTIBAeDc8Ev
XpQqhWu341zC+YNzCGfTKvraK/vrxMPyWvAFkqyh+96I/yEOsuejzBlhzDbl
gqQdOoCG6evDZvyjvkoYb+WBruGH3q7DcJmrFDLauPl68yyVTeWjacyqssyt
K9J1o18uqx61oqyMsqKzQ5ekdpP5r6SYrzfdZhxNOpEejJUYz0+uMHNqhQtr
hh90qsZzL1+kP5fiXPJl+sBfgY4oNEQh0TdwQQoyfY7DghB90IJScFdyA4TD
whJ9vZV1xkQWOpC09f3IedHma0SfyjQutLGgzdcRfe77jsdAVUEA45NV7j0h
qnyNZbYEcisPnBZ+Gc+cnOYKYdxa3uhA3aaanb5onijyXZutYlxsW3wua/GU
sNLItmnLv0GaNXi3rucYewAxmslNue0rsuXAk/ulx8uegwP0gVOycGumkHZc
D0N3FYrSrxzkOMTpOXALDEZSwO7ShGMbNIvRloJVmbjUbJnajnEy1ISrBH7E
ZkeQekkMLkF4g0BukeZLq/fX5V79po4cpDb32gH9nC76euz3UlboHa74Oqwk
LtsrR9tz26odc8XJm4vslQybrZPoTav7gSd61ZR75LZgz9Rr3FkknhKI5FVz
7vfi/LlVzp+ro1eUp4YtTZ8eviT1GX1cRCbbnUIvLu/JSHZwB7/+lXkJsiAb
vMyXhTrKdJG5pZecvlwx9OVSTBchPKsbCH25xWB4pVhbbuhS0ZcbAX25ZcIX
GbJA+CJgG/R+SVrSJglFx2M8T1su5It8t6G23GOyYxc6UWhwqbZcrvO047lO
D4D9dRKUET6OPMKIhH4P6ibKSUejZJHxKtUwZn++oOXvJYvEbKO2kSSNMDJa
55vx81RLTpYzfy16yrd9Y0rZQczpZAeJ8NwRFaa46mVTFndduBJK94Sgt2WL
aXltjwyjyoIiQiLUtHiA6A0cM6acQrZ179uSMthoI5L5pzddlSNG/IZ+KzpX
yLDZZ3ZU8aliGc2Cz+E0oeO8c6w+99G5bO7d05ncO0frc789XJd7/aA5E0ru
Ue9Zyd5DjpOQRjQaYc05IkQt0FgiaHzxGbNBmCHT84O3Rk62Jbiesyb/kJmk
NBGvCY2TJDtG4zS6OVfpJCkdubzs6Ihl6R2DFqUWUNzWc/jSlE4nBuOFEelX
C1Cmm0M+4RQM6POv1E+weeO8SqeVUdx1hfLLqoEhXaN+yOJU/XBIpqls2iil
a6CeeitmPxexioFOa19woiWPXzCmRhBzPA3+zF/36RVzKZlA8xh9J0gVdJl5
xlE1IKp2LaoGHydTjrvBwvHaipqgRun7yK0qUDBqnxNOixk7Y9jeUA5pxF77
OzpJWoqS/Rj5t+11D7XU8nQj0FCRC7FBAdUhHysZjnWpIwu0uU82yVtXJArn
7OFQTH3sgnMMJP04llHsnWB6ISLWnAjFmls58QA0TlHgfuyDkMKP8MvOlLyI
K46TJEhwUo9z5M1DdbkPz2XjuS2XcnTvPjyXya0/WZ9760joGfg21xKWc6Qg
co7wWfIlHActqYSkS5QmwUUf/7AyhlJAEJd9Y3IASswVypX43SfkRtP0QGF2
xitlsLzM7avK60evKKsd9XLZ1ZEvs0OcoANjByH5omHLy/5r4BLeEqGTesGd
YQkNqb/pguUnLvtVF+w0HRQldEikBi2SPe70Y6uHK1Ni+LKyevbHlWlmSmCB
O5gSODiMKSFji16bdpZjSpgamDCZuACk25BRXG0mQ70UXXR7LGRFdAYzgvwB
h0chJvaw6KGhqE8i1PMp0AXnulJRNMCEHQHL/jrOBNsmobqPXT4vglP9frKM
zzgLexvuTQiVgj39zoJQIcMuHiWEzGRTFfA8oYoZpxkPZMZb9mVKU8PpBBdE
dPhUiy9gMb44qwS35kTYVrnAcBD+w+qRZ7ywvZp5QnM1Y8cJAM4RTgGYPJ0C
CZh8LLe5JEeHzsYL2dyGUxmy+/rcG6HdO0qS9mD1irO5t0Qb1nWG8D8YHcIK
0fYbcSdos1TCY9fYAcrLZsinZ4V1adkD+tvy7LhXeQV3Ldkd1nRfpDjpENnk
Ogpepg1eVAbb7i0WP0lm1Y2c4Lo1HruWl4D3n586RqfIeYL6y2TpafqJEWIC
/W/1Y18pAzGhfsSysggpAd0aJibojHo3VfHpoqsojR9kxISOj+tq+oRPSED2
aXrtKHjq5kJoAjyFzbvdZtGBALVwREKyQTdw0jUhISHwPYJPgYkRQkJzQd8J
SkjAkRAq44XHwxi3eVsk72Dkbp3758YTCnfn2v6lr0NROdmJErjgaKInLnf3
UZFvbhOKxjjhmNN8pnV4+CyzNwH5tytXR3VsQ8kokY0KBP4TDv71Em3KViYV
IQUklYhin9gmJwDSiIUaEcGoNSJi+G/k+cJ7ZzK535Ev4AxAauHao4lIe5Tc
II7+aNCCbX+eehv+F/jB0i+lM4qu6FztimpzxpJuGL/JUMSYvtfCWqFZyjey
FEhlKL2oo/tQdduq8hQZKMz/fcpyHxu8KP0jcoG+Yv53N8wUzPyxVtr0mw4P
W5o6RcHTxeFLy1IUYEGehUkA5Gg1Y1eXs+w9eiW90aicJ5ycvsUR8+cibw/d
0GTm7zEA4AIC7gVueYq3GI/shMUauHuCce2m/I+TJqk5RVuUKrdgWizS92/s
9/3DhYjSigxkZU0raYoAgWGBKuLEvUljAcAhxolDSDa+H2jfxOmjgaVqsY5b
U+FtPbTwRnRfjsK6TT3xHk8a6QGRvmX1RLpXpp4oM1OhcqKqIgUO+wXv2crV
0gNWSouxTlILtnHTSrJaDhDWcB91JUTwwPMPFeubsH0X5DZdzOY+OJvJvX1U
7FvINjDuFtrzr5GLrNbajws0pIFVI6tQ7qqUpzC/FXYn89QVhHXqrRNrqe1H
N30NO6+f+e7VuofevXKVEonL9KYO3baqbD3Z+RACaGyc0fGJYDK//okf6hsH
dDUZOEaVvxi2JLWPgqNjo1ekz9KpcXn8q+UpMvIyRDYsP4CO/DzWIHJMF9tC
DEPvO1+68je/WMr6Az3mlGC/J3p/oRQJX3HFcF4DGi58fPYS5TlcoNd92HAV
02vhfuD92ozHPIS3+vMaAiQsP2LaZaY70iiUBJ98zK1Ake8Z7zamAOsB1NIP
DKykOoAHEZ1MqAp8yBasG6Krrmy1numF3nU03Ldi4QyPVUrSXkQ43o3uji3e
dWqATXN073N0loYyYA3VAAPZftBERD5U6EM0hnXf0zvcOIsh6KFvm7G+kmcE
AeswT4QsHxBsby7JwtAloqfXkhz+yLYfl7/YVJKlX2kjuQGgnl2BjgFUkuAy
rk34BbrwdFDQ/ZyvgY2FUoD8eH6fEMERarfPb7fiLyL9Nvl9QrdNDxBP0U6W
zqkMwTzMv2r6+iupB9ZeOXz/usr196+7MnHCq+WIcHQqIbiHX2/w+3lQ4Xhh
0OL024Tnm8lr9oxdVX6QTtCjgxanIvuXes9NQX2jKqK+URyqb8TQzguaZsmd
0BPnjkNPbdz11J649sMD8wfrhfeUfbfWC2ciF0VD7d32tyYiu6F9cJ7tmxou
lSwCr4SMX9rgBUL4uvtoeE1G309WSd57Ej/Mmny4YI2AY8Qy0kVw3e1wnVvY
B7fW+Hfyh/LDnScmfOeD/V1HQ6fD/65tReTlQAO1eRa1ScXV6jE7O2ypEJFN
nN+sXsWtAolcEk5NWy3dFgkB3NFJRkGFNS/JmBBewGI/PJvNfXxerFitPgar
D808AbCP4Zs4t83m1hyvZ0cxI4fjzN9ZTb+FpMXohxufi65E2Nu7gTEf39+g
r/exzdqzqEb20Q/Ypusfea+yln51QPoFehv7yLbfpHc5cPJvy9pMeSctdP7g
3ih/EfPo9416uWIZBXzrRi0vs7ViJjwBk+Y2AJko1KWw2LCqT3HaRCfqPdEJ
9KZjaE4HzTCKDs0J6aM9f8nfaSgW/myJSH1DbiLBRW04Acv3PizzIUgK/e4a
gFzLloW6PKyIu2msNhGw3ATYgQB3X21iCi9SYrXw9jaUfj/vh3uAtdoR9ozR
xoDtyBgSVZsoaLAtTFoGLMxmS8Jgxb7i811KhNIkFJKNnWddUJdV2y0WZee+
TsvhOmaTg12IcReWQPTg22kyqST8VNNlEs5DYMJMLNyySYqTZHYxjjkac/T9
3ukM1yRhxJvEiBW5gdgJ/hoiFlwE2fHcJxey5Bf4JyjW4HofwfrROiZ5uEba
TmmkKZv4Wn00sevrHfVqhYrFmZ6E27oDmyacflTCFLPpErLnA/RG37j3nYre
09dVwKaVIB9M49fvWdfY5BKtGvm+CizYfDYZNTgXvCOPO8Z9uWMc7scjG3bC
CugUo2M8aBH/Gf2sGOQVCBZ5TR6Pwl3iq49SjWHFrrHVlPvBvHQKdcX7T+Y6
8JYXHcGeegxWHMhWzoSEKFN15R3XYKadAsvCWBXTT4ervsZLoum2YkaUFKyL
FTcjNhMWcx7i1ezDhQ7D94IdOFpXTY1XlUGFX5RN0bLNUxuKOQRmHZKgrZui
NI626Qua2pDAboWbUEYx+2GWFJCDG4BnVhvnQnlB7q3D9bn1JzOMwYgkCH/V
ZAsYizdpdIELFhtnEG7B9gqTt2vtiXoO0nXuhD8iEnlFSvJxQWGbRQlaRwqP
izTaQE/giY8ZeevpF68hC62YsaHy3P1rK/fct/bKKrLUm8lVYaFCFw/ul2TR
4mjT9vMHOTbrJLLRGs7RR+xIMwEBTCKj+coCAiYegMbrIG28or00VMeQISAw
CEICC0p5ZREqvGAAqXpAfltJxT9s3OB610uCekBHMlvsGLFeElQEYMJF9x6X
nbJg2qELi48zRKaa7XUqL0VTwlojHWjcH6p+CH2hwWI0aSfxYiIZbmzTsI3E
MuAHJRUll0AhlDe+i8xLnommGmrlLMjTymnF0lgGt3eqRo7FB0wnWy+6Fw9r
9Q+1By7NkZEm2EibsBG9RhkeTn2c/p9cEMOUeJgCA44OPjmv5snGSeEweR5e
W+fW0r+Dga7Ta432jzacrOfqyBuH6pyxapXc7x3FvQFjtI5EsmfBrursc9uq
Mk9trKqjiIYNlTxvzwPrKufc83bFP9/5xhWhfwYz+PVPTW8OiR6qGWagCAsw
gouezmkyqBJvTJ5HcAcu0J1ai9P14M0NXZLClLz2PLnNxFn4iCUp5k/BMJHG
5Y/eFoajt41EnMY1cOI8tteJEp/OD+II7zwdq4htCw5vwLHtN9OVCwDLnMiS
krxnzpbNFYSl69vcMDycYITr7keU2Phzaf63cStu2A7xY5Clkdmj5oh31FOZ
lKxGYvYocGlnfqACbWJ9vlJTePALGxgH/TS1QISkiANf3FGFh80QWQDrS8Ao
6E2hwIBjHmf0Jxyn5gK2O/o7/FnMTs9yMro4ytB0c/BvfndU/t0my+aacucS
1vxmxPIiVheo2YUj7Si/0ZVduqemfuHnNbUUxFY+u6Xq4iMfVH5G0QqsrnDG
uiuAx9FieQ8JPGIhky/S8HLv4lI7u9FNPNq3uPRcv/mll+mmYfD7Ct2yqsGL
0jUEe7XDlnDjBHtUeOgbXcRxr5Zn0TzBiCn22/Z6/rIIwM42nUepn1krUT/G
3A6VmDM90UVvLsM3j5/PdX3kbK7rw2eiW1MeEmVutrm7WAP9TlmXItwPX+9c
FpBF5rz3NxgtHbE33KfSONpJ4aLaAeEzilILp32YXcG7Ey5vqBymaBjLFwyb
nwp1hlqqfkcoDiAKwSIWNl3NDyUvlKpscjPujmm2wTjyHfplYUyo6n6scSYO
bRggGR+9fTqKycve1QMZxrfuhBzuVh2Ww72Jy6LQO2cLBO7tcyT+OEA4hsJw
jHn8TbJ0SGcoEq0jy6ss3ll9mlxl+9zPqp58ZlM1sE4IhsHD0sO2g9jWf2FF
Bw7iz/sUlx6gW3WKbg7Wc2CguXzo4tTVEctS1SOXldWOXF5WN2ZluJrj9lVl
WFTqGhcg4d+EmZDflETbdE/o5GTHx62HrUs5An+aktnaMsQs05TXS8MWRS/o
ks46x9OUmG3mCS6ICkyNTlJK4+J/nKJsHU5R4kB1E5T7Q+EBFrfK2+uFJIcS
HEqhCixXUzoKj208XeIYs1KDdbgXilvRe1K1HLY7XMO98XfY3m06VYVuBMo6
NsHhiWxo6lwXyCHMNsgpt15xWA29YQAjKrCwvBiskWzro/NSjtpwUuwQASZs
DR3pTRf9LkUTtl2cyWaHOH9tkORlmGB44i7eXZNdsrsms3hPTQ2l+RWUG50l
S/z0xU+rnpy9qfqHT26qFDJe8EjIF8eJa5w8y1s2E9ahh3CUTlPsgLhMGJce
9XL6Clle1ZiV3D+onfBaRe2wpWWYt4ixrnvTSPsAxw4IljznNNstyaE70pn7
BZ28uQClndH96fTkBXo89ij5mq2Sr8on76UwyuesN+TEXYRJan76UVXcYXKu
ZeZvlp7kWDxoI1j/bLy2DMwkbasxPk46KjMPIicRhHoSdATBp3y1NTNANb58
VUTZgdg6YnOYOEUfAJiHtNRy6YXa1s23P84cyPBisLgY7CMGgyOzQXMXhyfM
BjkMTA3hIMI6gscYYjy6IbBCRIo4dWPXqKQW8GtbRtJPXO9YjNwvoi79siZL
WMhH74JddPTuqqmg4/cwRavrnttaNfalHdV/WbynSlhuwWP8+kc4ds38QOJZ
QbazZsDC9KeUUWC7wOmRy9IX6NbwrN34V8sq6K5ZadOv6jeYs+sr4z66Or4H
SwpbSb8rbw7goj7wLeGm65gdjP3aqOu3ZnuztdsYEnMzPjZgN4U1xd1wXV49
35utayTmZbN1k5U0xlVOOqybSvPKNiFyHfKw7N8Jx9fE0rxUqa1bP2yToaIp
lHITooxtqiFkkiUsKaC4hgyYMl+eqyGDeX5bNbP5l+wJh0VX7xMSJpvZqxzn
AYIAabjUxuh2kpXFcJrSewWewaoQ8MFa1MIKYFwFYV2+tcuc8Y2I/pAdg+kp
JlWTJTSrX/xFTQ2dp2XzdtbYeQpTApJNEFOaxa/fgSnZ9Njc/gvTr9GZiSr5
V7etZMH6k7euKMPkWEnveam0yVuyWP28iD613xwKpFLeVrQVoDj0Gx1vQYX8
6cjUGFuRsGWlUt5LTyFdAwALS6iMrauQI1qDhK2KUsu8i+sOSZE8Ec6JycX1
cSksWpM9kHJ5Y6nQIC3AboZrTfrH/bFj5m8+Fh07ppTAbMqiN7anhVLgFi2q
MrfsCWkCklRKTBurHaEtaJ1JPjIVrl4RMi+DFNk8288hwShcSDNxTCIkgwlt
OFVPv/L7QCoylEawnkRoPQkrE1rdRWrfzdja6MdlV+2ryyzbW1NNwFlKx+DB
eZ9Wv0VY1J+S0esfeb98ohjPE2I81mYZQtjxJGEPBJHXEBRvIsR2u1jzRqYq
emPmV1ssfcOBD5mXoiAjzgXpOBM/b3nxEgY86A1B/jjBZ5jNSbHquRSjETfj
0IAtJR8+XxA+rMZchS6cfoqLHpBL1DkOrwLdSCvQR6UCbVVo3RCKXrkWoXGA
Ye0ff7Q9PzzMdyrfaqKj6m529jE3N+vPzrLhzJHmN0ZcrBSH1BsGA+FQXSeM
ntmmqiaqz2IN7UXenLpyvwM5z5oy1uAcg53g4tD9JNsJh/Py+I3phBcKo6Ts
YdbRVOoeZzJZspLMhtOZWjLF9PIva4/M31WDU6r7C1srlV4RPBVOLXQYuqRs
eP/5aVunZzxTq+xiYiFPNjeFadQarurqHFC+ZO6gRWlUeHP9iy/n+r50mXVz
UdY1zVwUzfroOhEu6z6qlTIgQnT2R758g5R7HxLVTXCtUStDqbfj1GM8AgST
gVQ2OnJeqZdPNCYxwD5QQ8PnvJVaJ28Ou3mBdjZcPeOaw9WqZCBqBhj/lOS1
hWNEWy4BSwe2oK6NcwmVWrR9ddtb7BqT1XE3/8nTbJQ0oiIKjoKNVgNhGFIO
S9gDOHGVrZOojCECJ0towYEOw4nfdpCWQ3NrOWTpY5YAKLP+VKaGwqc0Ren7
f3e0buGqr2s7zd9ZDRxRnkLwNL/+hb8xAX0AI2Ais0MFyzW2CDR4aqyvzLZU
D5iv+qw628Ll1UVaXqUL5/iwxTLfghLrwPlSXgVzHy7HSo//Y3m1bVhefegs
s4473o/y6glsgXel1aK80iqbBAi8rgd7ODIKfPex/7dRYFka21GnS2z7FVkD
s4Top92oLArExzAIcMy98UbmePFyUNkD6A04huONTUR5bWdoFThc3goPlzjO
lCBuQS9bQmgPWf9ckVJ+k9z7pzOZ985k6ylsrqaIJvX2sczRd45lfkdZWcfX
DtRPFRN4Bi8xZub+qV/FfM3rA6G5ifnbs33nsdhnOeVZleQDzEof6FUwhyyO
VjAhNQcYHbkUkJqCNC8nRx1DGmIQcxWkhOH0I9egorcVKjpUA0FDV9VAt89b
aeioZPJDB+UDOIFE3jjo43npldDQ/4xyqiPhdKtvBDPPudy86DH9PZ/QJ6/y
CmHNUkg0A8iuR7N0kNBBpmvx2xvDM2q1ivwYHvDjj4N5RweKMQBhA8hUpM4j
QcX1muVsCoMHrYM3xrlQT+dC5doTmZJ1JzJfkcc/RzHwj185UBvcJ4/5N1Kr
9iuGSF3wlD8hj8ckG6jWWL98kdAgPXBBqpw8+Spd1UMXh9VClYjM3LqinPct
o2IIPVeMWudXC5VmHbhSdLhwObCNy94MsX7fdd+qSIfly3j4GNZBo4U9HA8Z
Gh9SsQkKQjm6thIlTJV2si2+do/2cXFof+jFhvoxvDpggYyMjYd6vgxYoh9n
avxG53cDlnF/wBKTyzZY2ZRplejRYfwFjxikZzB2QF6Dq9PjEoCXZ9yMnzHS
i48IzcmL68l74cF4tl/SKfE8BRI/e/9CTppkwfNCuvGXY9pxD3bCXhU7O0/g
fHnwItmaO2xJqppiHOYTU4qBshxd5fxoMX6F4kiW1x5lbamXqSrJCjuETnEp
hkg0FSS8p2f+baRKV4ubLZszsASz2xPnmVnLrjrlmEcibvzttbiJ+bW4u2SU
tj0BPh/uOhAIyBY9FHmynBW/gMFKGUWXcaZynmYKvss++6BOputTpUP8qnuk
PMyUPwCoT1NItSI9BFoiGp84yukB3qBdgS2XuAGbJZ+t/+BctpKe5XlC4i/W
HMtMfOdohv10ujzMF4RAiBPZxiJQ4UJl31iy+ykGOzV0SeocIe3lEct5w+nV
21aVV9MDrKGrlnzWl8iKlLfo5+ZMTQQnsJa3RMIn7qpbWtVShayQIcvfimOv
JU8k9/yN9G3gOKCXI0zniex7QopsYQOKbCKiXse0QHqacZ5OaxkWGuC0KFw8
Ek6nmRaxTKWV2QAO/dxJb1QUhKNpLZj1gcjsYW8v72wdTePRG2+Mk+XYMMZZ
IOS5PdK9RixGsVTwHX6KTXJbSrKZrZdy9Zsv5ao2XcxdevdU5rM1x+snvHGo
9oYVB3IPygN8SQrl+QORYH9+PFD0mI6QBZ4asyJdMnZ1WYo8L00eacxP2Tw5
79vrQygLi46FPMDukQ10lKzLI3q6hMza5pWcpgUF6Di+EOYy1xPiS6b9orUh
1n5BNm91IX18qFGq/AszPU1jabJeXBaifK2JOLQ+NPxvoDWhmHPHq+Xh/EjC
GPN2xWWRCYiWTRlpZbFRBbPL3HChPr3nt4MSRt5HqGyTt0jckbSjkUKO5vse
PbnsFnlyVyh4PkOfb956OTfsd4fq8eSCmfLo5obVZWMv3tNnfumCwUvSG0Yu
T2+//ZWyveNeKT9EvufnTj5zESokkZ1hca7FFGRlRYPkRyI9wlTcp+F0QER+
jE8DWbGlvcBpy8DaUeUL9wk1F/0RMLt4BYHuEfKLMJPpkd0N3SxuqTE5UWmK
tkcIe0fIwUC2ITfD7gNANBI3W3eFpzXBp32LzEAiwvt20z6tHMUK+yzQeeVZ
t00y3YADz2YPUA5GxsPcqjOZvMcEB6ujr1TpY/qArp6bL9V/d8v5nFb/g2J+
/b5xQ8DIe2TUivKX6eyycMZ4IVCoBxsPlY9yejQsFpMndZHxVWJAXmLSEhow
ZLdIbW9WtRhIXdyoIkzwJNuV1Y13ZlxQmQtX+2ial++e413kpm8h2hZ4Fh3u
OQa1daaaHmPKadKGDO5hfQstk7Xk4ht4UVhZiloeMlEUK4arLLnNpkwIaZyB
PLUCt6vULpA6Y3hohJX82N4JScxIYBC1AitREpP6Rg0D4ofnQs8Sr8Ijq6WP
5XSd3HI5+sikYh4s5NfrfzV4UYXlmBaigCWxR/V9bGNXih5NBQFfFYUuPO9B
4QsW+KASkRm4gCsQQSyLvRHNeHfC4IWlvP+j70uXRD/hJVEguVkfEVd7KK1o
qiUHDgA5nzzDqQNLJ1AuiUUf0SUftuBDGbWYlwC9h6JYAKoupGFKF91IoyGi
NIDRiTu+fa+8DEtMwcvUtyvo4d77zpXI5liZq5YQBH6jp5HyY4So0MZOpkvZ
LD2FzBZ5EsA4PInlW0pzPyeck3JhsIhf/xx+Y+K4FlrYg7CNSmf6WKJXXHq1
34LSKkrwawZQohcuYUGypyP6S01fPB1Z5wD/wKFtPVsX8MvOlcgsvmxnwd+1
iUq30kPCmCXGjTtPPylz+aAE3i/sFZ7JUXp/R/o5EEeTpTf0bnivX/An3MSC
j4xZKft7v2XHd4TinP8oHtbl3ogEceIAwtYpv844zkpdahXGC+Yf1fSxlK5v
6FqxpSSDpyKVumBJGPBZvIDEzEowJjGCofCLIBD1n19aQW5wlRy/hp5E7dAl
6XoQhyhB42HwkS+nZSB8NRK0chZO6E0hPFDKojjukrNPeEkYJ2L6FOIyA6tS
nnSOd5l1ntOvrjNP8xg4szcQOcyQEVi0FBCVKGnHu/8xXZlqwp9j1SeMYz7Z
zg2PmjtjfWXMY+Yi8sbxwW1jYebaCUIxGDMePHYuHZCR+19PV81WwSfc/8l0
4f5L7StYyq9t8lXbTcDCkuOj5AlQawe5oZysv3IIJcYU1dSMWF5WR/e9nte7
ZMjrgxZZep9cLLV+Ms/YPOvJREcnMVmoXZLfgogIUAeNxKXl1yxCZ+AZzEeF
cQiCv7dvJ7K+NsKWvj6fzccdNyNPyaq78JH4W3Ee8yQeAEcge8ZCLl8BVzDB
B/jgrOPx8bHuewJd1fSELtHHrwizHlZ8miNPYrmUKOAJVqawgwI0k619i0u/
pl8ZQ+UXyJowF3uFctirY1amq8esLK8la6+9dUU5MMpmYv3Uh+NQ7ow+eymU
B+anoamsCCUUqJKMXk/YSCCFsvQIbFleD1363kG3pIgu02VbnGd783prH10v
cYY2bvfgAL1witvGbnJcbjlM1lFRJlK+K7kpgikdDQ1CJmXM47KBjoGuJDBJ
xkW9R1CS5eRFwegLOiJGbS3N4aCW8lCwUiJglBKMW4Hm9of0O1pz++zI5anL
o1ekU2huUw52hc7iBo1t7kgWawmhESedMEYEv5Ay4lICtmSjqf3HMpzsXa6z
/bSo+CC7xMdeut4M1QUcIEhhjEFo8bIxaHwGIXeXpcMcxHXVoyMPqiaxdQnH
6b4pQBHuOKjLuOPMXHDa+3bnjUWI7jIcYMNpYxGCstoAhirpsuRj3JZLGdx5
qd4EqyRCssMZdz+/H3yUrOMkRTvIOyig1V7w3Gv0gou5nRdI7tGU9feQe/Ty
pqW4D/y0n3d0t/3kCbcBtpPc6IRy5QBNnTgLD7ly3oZNW+9lnBHjjWCxVww3
mc4S3OJR2tDHcYxbDYYwiioNiCKOMGd0EWnmt4o088GDg7F7eZ6fQHzsRaMv
yq1+RYzc5jOxSnbxuFfL1w5blrb2GHIHm+SJdk2xNlZvM93iDG+Q5IYpd8VQ
B+47F/udoZPXTKZ4kC78Ri5OHRQpcBe7zNZtkrjBfx0VxdMICWeE5fFu2Qva
28XhClPb9mJ0xJFKCUNEZgkB7jRK0mg7vKAjibzlZW/+HTetnYb8nBjTJpoi
Fs1uOJXJbLzA9/rKVon83/Qjf0mmg1elwwS7/ks6Lk37BsercQfRYTomN7zU
epES/c+XRC1/wgRHK94ufNfU0/rPlV5kv3minAbeA24XsITCGhktaeZqg11n
hwSUm5XvZEBMd1O2dDTiG4lAHpkVokYEJyylKpwBW9CRzxlQilMs5NM1d8Qm
7uvQ/XvnaH3mneOZ2nXH66+8ezpzcmNJbvVmiQyD+XLv3mhYszeGr+kFucEH
L1jnoYcB3tADNibawMOwpbLaCt2YwXTfhiySYQdAMocceYF6vmhWGKi3jgTq
OCeB02aiefsVHFMMcTfi68c/qmyicu9oobM1fin+z9qC39jde+OgWhza59m3
cdeO1ddqX3Pf+hOZRRsvyl2TJDN4M5rmGEnLD6j3a0DNjHwK6nyFpToJqNPo
Y4m6ki7EMjY+tOSAfl1VW8BbuWMqZCKvBCnYx/I2YElM3Yz/IQqosD/AM+aP
h6lONyJjRMOUclyroZxwDSSyQAQECI1tXxNGzNA50gOJGU5BY75ta09katYe
z1xefyrzDSWSj1OU8JPfHssFi+W2vcWvf2x5CNJ0i4FhcH4MfElj4KtDlgi5
d8Sysnp6yPUUhSECzuCW0buRZdpar0TFBMETKoJ64AcccDWy7lCk9CwBL4uP
aPkeVgVwQ6UDUSpO5yc/1uUYEaFlabS3YqEZFk7WyiCShtcPMP8Ld6SeYiXc
kRQlETsobL2b7sjP3j9dJxlB8HZ4IhtqGeMZoej+AQtKUYW/OExC0Qr6vapu
XVlWfevK8hq6eKlav/kRfYpAeyoMNxbNwPOE3NcZaVknk6Zoy/FnGBNJ94Un
d7TriCIVDAYybDPfC2XY8hrP8d/XeG7u+hk6jZh57WB9/W+P1FetPV5f8v6Z
7Jfvnsre+95pjlU0RA/W8Ou/2AlqYSI4kJ/TIzpMtnCWbKBk7KqyUjrlK4YI
/9HtGUCgco3aNrNvUNoHePecIwQ1BCgmaeAiduvsKNeWxVHtphRLh4cT/DdM
g+tKKDysLVmPrtGgcUeBislzmerwizuqsi99Wp156bPqWoL7SnKyc28dqf9w
w6l6i6GDFXJ31oZlZAOgJweEodzu21elDxI0nqJ3a5PCTveBB9+LI2GcsPna
oETJbw7cCdtM72bfnxFdeNwsNAU4Q5mjvekFMj1ED8NpX05RaSbU1p14n2pf
MrrAgVpEboI2S+wm1BXvrEkv/Lz22ILPqz8gs+n/zon61fL+14cZNRIJTEs/
R0C6go6m/NoshkrTFFtV9BER7ygjjamMCK5ac3A1UI8U9PBQl+3DtVm5ETfK
khpZNVIs6mzjX3PSPNLna8a4AUG2GXm9PkT5nihbDO80aJJ9cUd1Zt5OkNJr
Kop31RwnhF247MuazvN2VaNvIIFk8K4Ahek6oYLjgEKPaQ1vuLhZ3hcDtLLg
WAqbFN6wMOxCLmxyWTOGsiade8OwHNaKmwhxUJOmC7vvtLIYRBoqoShXLGyo
tHYlLqT09sbxwHXnX/b57dX8ZOd+VlVLkIkne3jxFzUrFu+p/eXSz+tel3f6
fpihm16bX8bdq5OYssq5OHWFjkpUDjHoVjcoEoykUJdiisioFXKsDl+a4ulL
BHU4ak12RkWWwndp0jNyWfvBiXLQNU03fM/6iPO3DL25enqU1RSqpUHupjc2
Z+HuarRdJVgIPuRX1ibyyw7GfzlIF1i4l8gYyyj6rBy8MFU9WIpvzIoYoYsz
b10h220RL4D7BJynN8vmyNXH1Q0q9O6R3RVWI0VzoYUrSOoAcHba2ivZme9e
qSP8ukpv6iK9od1km+B6/NXrB6vlCA8+5tc/s/ax0TwQ/EBf7ATZ29nBi1Ol
9MuDmV5Fvxx4ALWjdESHfnkWKZbTW2onfXi9ZCkvK6Y3yYR/VLcjb+TNb/3l
71vDv3zm/jVX6sj3Kh58t/I0pX0752y+On7RF+xMctwGn/Dr31kYgqdhClGb
yDm+IreAOlQJ/dJpSK7RdZXuPqI35ApQhbpmzxtR2yAldo6JqhrZL+5EXbgU
Sbf7vjVXoG1VS7/xFbpOPvze1TWPf1h1G/3m//rw+ko9BoNN/Pp9CxSmaOq+
ZsiSsr2jV6QP3r6y7BT9tyXks2Dhhlgviz8iJ6Hp+6BM10/L1lI1bTAWnp36
zhX8ivUE5LXT11eWP7jhykn61d579MPKrgTszPNbJ7/iFoFk3FUjC6+64/9u
1cddwKLmLLQHBprRBN1PAuvuwu5UwFggDCmS+cDFcQJ09DAP4rx/JRs+/wW2
Rv4AnfWjbvvXTy27v9wFFjergc6J7tz/BeSknRAXHYMUJaBAMwQWcrBcB1t1
dgG66vAxtE8IPnkA6BLQqQO/YX3C2Hkf4CcOgBrQkLEccNHyFxi/v4vXff4O
TH3vgAF0s2nXl7XAqt+mB1ixQYoxhpNgUgI2FwLKJ6AyG5RP4GU2dB7kCzDt
w/aT/wZaiXIRPTAwQZ2F36ALBIGFwPO81Z+ulG38PK1t91fQgn9I2cJwCkzy
whI2bIwZtpMdFAWge3phi69AG4S/Q4sYBiZQh4SB7TewnPwKrMqfAnPoYWBR
0g/E5tlrvkEyPMMZRL0L21IwHdp6PwW0CbQ97ymwowM6UxC8NQ/oZlDr/TMw
fT0FNl5B09tZwJJXL3PZF4ZDECPPIRwNCiLY2lDQpW0XQPuskhe9f5m66MM7
oNef5qz4BLqvowBolFz+qncMRyBGXACTnLBObEfUnA8bgBF1DFhMXgWG1p6s
5R+iC1aDN7dCEwXDRTDJBmtAlScs/NCbuewT7IiAExBVl8EkM3jlIgxAopTh
P4hYMMoeZY+yB4rNwAgAo/Ud8w==\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"b2fc9085-dff3-4763-9494-f96de94b9815"],

Cell["\<\
All slices along the z-axis (I think) displayed side by side. Very satisfying.\
\>", "Text",
 CellChangeTimes->{{3.912445631267643*^9, 3.912445647997089*^9}, {
  3.912447257273122*^9, 
  3.912447259910925*^9}},ExpressionUUID->"0523a527-9135-41ff-91cc-\
a27f8aea4859"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Image3DSlices", "[", 
  RowBox[{"Image3D", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"maxCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
    RowBox[{"Max", "[", "maxCube", "]"}]}], "]"}], "]"}], "\n", 
 RowBox[{"Image3DSlices", "[", 
  RowBox[{"Image3D", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"minCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
    RowBox[{"Max", "[", "minCube", "]"}]}], "]"}], "]"}]}], "Code",
 CellChangeTimes->{{3.8963317489102383`*^9, 3.8963317547401857`*^9}, {
  3.896333381775753*^9, 3.8963334130694427`*^9}, {3.89633467388951*^9, 
  3.896334689438015*^9}, {3.896334841120194*^9, 3.896334848670566*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"d51e056e-190d-42a3-a07a-ca0d26fe9e42"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfig15nG0NeQ7b
qnoK2QHZdrbni+1UPSfZrV61Csg/bLc99zZQ7LNdkgSbPVCN/YtKOfvVq7Ts
826b2ZOrD0STqw/EJ1cfSJxcfRB58vSB1JGrD6R+IPSB3EuuPlA4kasPEj/k
6QOlC3L1gdIjufpA+YBcfaD8BwAE1lwW
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfig15DtuqegrZ
GfI429meL7ZT9Zxkt3rVKiD/sN323NtAsc92SRJs9kA19i8q5exXr9Kyz7tt
BqbJ0QdUD6PJ0gfik6sPJE6+PiF7cvWB1JGrD6R+IPSB3EuuPlA4ka9vkh25
+kDpglx9oPRIrj5QPkDOF6ToA+U/AOUpWSs=
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9hewMeZzt
bM8X26l6TrJbvWoVkH/YbnvubaDYZ7skCTZ7oBr7F5Vy9qtXadnn3TYD0yA+
qfqA6uH6SdX3xcYfrp9cfSBxcvVB/EuePpA6cvWB1A+EPpB7ydUHCidy9YHi
h1x9oHRBrj5QesSWTonRB8oH2PIHMfpA+Q8AxFpWPA==
      "], {{0, 15.}, {15., 0}}, {
      0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfig15nO1szxfb
qXpOslu9apWdIc9hu+25t4Fin+2SJNjsVT2F7F9UytmvXqVln3fbDEyD+CBx
UvQB7UHTT7y+Lzb+KPpJ0bc9NxpFP7n6QPLk6gOpI1cfSP1A6AO5l1x9oHAi
Vx8ofsjVB0oX+NINPn2g9Ig/veLWB8kHuPMJPn2g/AcAqr5bQg==
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfim3PF9upek6y
W71qlZ0hz2G77bm37WzPf7ZLkmCzV/UUsn9RKWe/epWWfd5tMzAN4oPEIfLE
6TPkccbQT6y+Lzb+GPqJ1bc9NxpDP7H6qualY+gnVx9IHbn6YOFFb30g95Kr
DxRO5OoDxQ8x8YhNHyhdEJN+sOkDpUdi0i12fZOIyi/Y9IHyHwCDIVxK
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9J9mtXrXK
zpDnsN323Nt2tuc/2yVJsNmregrZv6iUs1+9Sss+77YZmAbxQeIgeZA6YvQZ
8jhj1U+Mvi82/lj1E6Nve240Vv3E6Kual45VPzH6bM8XY9VPrj6Yu+mtD+Re
cvWBwomUcEVPV6TEJ7I+ULogJR0h6wOlR1LSL7I+UD4gJd8g6wPlPwCPoFxQ

      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilevWmVnyHPY
bnvubTvb85/tkiTY7FU9hexfVMrZr16lZZ932wxMg/ggcZA8SB1IPSF9hjzO
ePXj0/fFxh+vfnz6tudG49WPT1/VvHS8+vHpsz1fjFc/Pn0MDA149dNbHyX+
pCR8KYlXStITJemYkvwDyn8AEhBaVQ==
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfig15Dtttz71t
Z3v+s12SBJu9qqeQ/YtKOfvVq7Ts826bgWkQHyQOkgepA6knpM+Qxxmvfnz6
vtj449WPT9/23Gi8+vHpq5qXjlc/Pn2254vx6senj4GhAa9+fPqSJNoo0k+J
uykJL0riiZL0QUm6pCQ/4NMHALCnV9k=
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfirfn3razPf/Z
LkmCzV7VU8j+RaWc/epVWvZ5t83ANIgPEgfJg9SB1BvyHLZbvWoVTn2GPM4E
9ePS98XGn6B+XPq250YT1I9LX9W8dIL6cemzPV9MUD8ufQwMDQT147OXlvrx
hTMhf+OLX0LhjS9dEYpnfOmZUPoCpUtC+nGlK1B+IKQfV3oGABIQWlU=
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfim3Pf7ZLkmCz
V/UUsn9RKWe/epWWfd5tMzAN4oPEQfIgddtzb9sZ8hy2W71qlZ2q5ySs+gx5
nInUj6nvi40/Ufqx6dueG02Ufmz6qualE6Ufmz7b88VE6cdlLzH6cfmX1vpx
xS8x+nGlK2LCHRRPxOjH5l9Q+iBGP7ZwAqVLYvRji19QfiBGP7Z0BQCPoFxQ

      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfipMk2OxVPYXs
X1TK2a9epWWfd9sMTIP4IHGQvO35z3bbc2/bGfIctlu9apWdquckO9vzxXbo
+gx5nInWj67vi40/0frR9W3PjSZaP7q+qnnpROvHZi+x+rH5l1j92MKZHvpB
7iZXPyi8yNUPiidi9aPbC0ofxOrHDK9JdsTqRw9nSH4gTj96/AAAgyFcSg==

      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9hexfVMrZ
r16lZZ932wxMg/gg8SQJNnvb85/ttufetjPkOWy3etUqO1XPSXa254uBfGc7
ZH1APkn6kfV9sfEnST+yvu250STpR7eXFP3o/iVFP3o4k6IfRA+EfpC7ydUP
Ci9y9YPiiVz9oPRBin5ke0HpkhT9qP51tiNFP3I4AwCqvltC
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfil9UytmvXqVl
n3fbDEyD+KqeQvZJEmz2tuc/223PvW1nyHPYbvWqVXaqnpPsbM8XA/nOQLaQ
HUwfkE+yfpi+Lzb+JOtHtpdU/cj+JV2/kD25+kF8cvWD6IHQD3I3ufpB4UW+
/kl25OoHpQ9y9YPSJan6YfaC8gOp+mH+BQDEWlY8
      "], {{0, 15.}, {15., 0}}, {0., 
      1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilev0rLPu21m
D6JfVMrZq3oK2SdJsNnbnv9stz33tp0hz2G71atW2al6TrKzPV8M5DsD2UIg
cVuQPiCfLP0we8nRD1JHrn6QPLn6QeLk6gfxydUPogdCP8jd5OoHhRe5+iHx
RJ5+UPogVz8kXZOnH5QfyNEPogHlKVkr
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfivNum9mvXqVl
/6JSzl7VU8g+SYLN3vb8Z7vtubftDHkO261etcpO1XOSne35YiDfGcgWAonb
Atm2IH3k6gepJ1c/SB25+kHy5OoHiZOrH8QnVz+IHgj9IHeTqx8UXuTqB8UT
ufoh6Ys8/aB0Sa5+UH4gVz8ABNZcFg==
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.896331755379592*^9, 3.896331765428173*^9}, {
   3.896333386471965*^9, 3.8963334133407717`*^9}, {3.8963346614386787`*^9, 
   3.896334690766985*^9}, 3.896334753576983*^9, 3.896334849032866*^9, {
   3.896415056361308*^9, 3.8964150704640007`*^9}, 3.912445573446383*^9, 
   3.9124467675607347`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"6089ec0f-ec43-4e5b-bd74-f70880f89d89"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9J9mqegrZ
bc+NtgOy7fJubwOyb9sBpeyB4vaek1Ts826b2U9S8bQHqrG/vS3XnoGhAcjv
tCdXH4gmVx+IT64+kDi5+iDy5OkDqSNXH0j9QOgDuZdcfaBwIlcfJH7I0wdK
F+TqA6VHcvWB8gG5+kD5DwDddkZu
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9hey250bb
qXpOssu7vQ3Ivm0HFLYHitt7TlKxz7ttZj9JxdMeqMb+9rZcewaGBiC/E0xD
9JGnH6SeVH0wGqSeVH0wPkg9qfpg4iD1pOqDyYPUk6oPpg5Ek6oPWT2p+mDu
RHY/sfpg4YMcbsTqg8ULcnwRqw+WHpDTCbH6YOkQlq5J0wdJ/8j5glT9AHky
TiM=
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfirfnRtupek6y
y7u9zW577m07oJC9qqeQveckFfu822b2k1Q87YFq7G9vy7VnYGgA8jvBNIgP
0keqfhgNUk+OfpD9IHUw/cToQ9YPUgfTT4w+ZD5IHUw/MfqQxUHqYPqJ0Ycs
D+MTqw9dHbp5+PQhuw+bP/DpQw4XbOGHTx9yfMDSCbH6kNMBcvokRh9y+kNO
n6Tqx5Y/iNUPAOG8UKM=
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9J9nl3d5m
tz33th2Qa6/qKWTvOUnFPu+2mf0kFU/77bnR9re35dozMDQA+Z1gGsQHiYP0
kaIfpg9C37YjRT+yOSB1pOqHuR8kj6wfnz50/SB5ZP349KHbD+Ij68enD584
IX2UmIvuLli4o/sHmz708ECOb0L60OMBPZ3h04ce/5jpjHj96OmMNP248wkh
/QACIkws
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfivNub7Pbnnvb
Dsi0V/UUsvecpGKfd9vMfpKKp/323Gj729ty7RkYGoD8TjAN4oPEIfK37YjV
j6ov2h6knlj9yPpAfJA6YvWjuwMkT4p+ZP+DxNH1Y9OHXb8nhn5s+vD5H1k/
Nn2Ewg/dfELuQY83XPqwhwNmesGmD1v4Y0svxOrHll6I1Y8tvRCrn5j8gks/
AGXzRrQ=
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfirfn3rYDUvaq
nkL2npNU7PNum9lPUvG0354bbX97W649A0MDkN8JpkF8kDhIHqQOpI8Y/ej6
QDRIPTH60fWB+CB1xOhH1wcyD8QnRj/2cPAkWj96+CG7B1k/sj5iww+mH1kf
KeGPrg93+GGPd2L8jyveidGPK96J0Y8r3onRjyveidFPSr5B1w8AvZU1Sg==

      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfioHAXtVTyN5z
kop93m0z+0kqnvbbc6Ptb2/LtWdgaADyO8E0iA8SB8mD1IHUg/QR0o9NH7H6
sekj1n5s+oh1PzZ9xPqflHAgJvwIhT8yPRp/Qy/+QPoBbps2zg==
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9hew9J6nY
5902s5+k4mm/PTfa/va2XHsGhgYgvxNMg/ggcZA8SB1IPUwfPv349GHjI+vH
pw+fOCF9lJhLiX8oCUdi4mE0/oZu/AEAI5BEQQ==
      "], {{0, 15.}, {15., 0}}, {0., 
      1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfij0nqdjn3Taz
n6Tiab89N9r+9rZcewaGBiC/E0yD+CBxkDxIHUi9qqcQUI4BzsemH58+EI0s
jq4fnz4QH10eWT8+fSBxbObD9OPTB5LH5S9C+iDqCYcnNn2EwhOZJice8MU/
Mfpw6ydsHy79xIUndv3E+A+XfnLjAUQTE5649AMAbps2zg==
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfivNum9lPUvG0
354bbX97W649A0MDkN8JpkF8kDhIHqTOc5KKvaqnEFCOASh+2w4mjq6fkD4I
jZBH1k9IH4iPrg6mn5A+kDg29xGjD6KOuHDB1OeJUx+6fnR9+MIFXT+x+tDt
waYPkg6I9x96+iFWHzb9xNqHTT+x7sSmn1j/YddPXLhg0w8AvZU1Sg==
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfiiepeNpvz422
v70t156BocF+kkonmAbxQeIg+bzbZvaek1TsVT2FgHIMQPHbdnm3t9nB5JH1
E6fvth2yOph+YvSB+Oj2EKsPJE6a/xD6QPLY9OHSj6wPJI/NPlz6kfXh8h8u
/YT0YTMf3T2w+CDGX8jhgJwOiAlPbPpA8UOKPnT9pNiHmf6Idye6flL8h64f
AGXzRrQ=
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfirfnRtvf3pZr
z8DQYD9JpRNMg/gg8UkqnvZ5t83sPSep2Kt6CgHlGIDit+3ybm+zU/WcZAdT
B9NPrD4QjayeFH0gPqnuhOkDiaPrI6Qfpg8kjm4fIf0wfSBxdHWE9MP0wdQh
yxPSj0sfNnPxuQuff7Dph/FB4YQvHLHpR05H+OIPm37k9EuqPmT9pNqHrJ9U
dyLrBwACIkws
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfim9vy7VnYGiw
n6TSCaZB/O250UC+p33ebTN7z0kq9qqeQkA5BqD4bbu829vsVD0n2QHV2MHU
k6oPRJNjH4gG8ZH1EasfRIP4yOqJ1Q+iIXyEOmL1g2gQH1meWP0gGqYeJk6s
fnR96Obh0w+Tx+YPQvph4tjCj5B+BB8z3gjph6VDbOmFkH5Y+idHH4wmxz6Y
fgDhvFCj
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfihkYGuwnqXTa
g+jb23Ltt+dGA/me9nm3zew9J6nYq3oKAeUYgOK37fJub7NT9ZxkB1QDpIXs
yNUHomH6SNc/yQ6mnlT9IBqmjlT9IBomT6p+EA0TJ1U/iIbxSdWPzRxi9YNo
ZPeToh8ijwg3UvSDaNT4Il4/iEZOJ6ToB9HI6ZMU/aB8QK4+EA0AeTJOIw==

      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfiiepdNozMDTY
396Wa789N9p+koqnfd5tM3vPSSr2qp5CQDkGoPhtu7zb2+xUPSfZAdUAaSEQ
2xakj1z9IPXk6gepI1c/SJ5c/SBxcvWD+OTqB9EDoR/kbnL1g8KLXP2geCJX
PyR9kacflC7J1Q/KD+TqBwDddkZu
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.896331755379592*^9, 3.896331765428173*^9}, {
   3.896333386471965*^9, 3.8963334133407717`*^9}, {3.8963346614386787`*^9, 
   3.896334690766985*^9}, 3.896334753576983*^9, 3.896334849032866*^9, {
   3.896415056361308*^9, 3.8964150704640007`*^9}, 3.912445573446383*^9, 
   3.912446767579706*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"caee3b95-5e6c-4420-846b-cafa9b8d5c83"]
}, Open  ]],

Cell[TextData[{
 "This is where the actual ",
 StyleBox["Markov chain", "Section"],
 " stuff begins."
}], "Text",
 CellChangeTimes->{{3.912445654502932*^9, 
  3.912445664631343*^9}},ExpressionUUID->"49bd5e14-9583-45dc-952d-\
0822b9efa7c7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"selectRandomSite", "[", "numSteps_", "]"}], " ", ":=", " ", 
    RowBox[{"RandomChoice", "[", 
     RowBox[{
      RowBox[{"Tuples", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"2", ",", " ", 
          RowBox[{"dim", " ", "-", " ", "1"}]}], "]"}], ",", " ", "3"}], 
       "]"}], ",", " ", "numSteps"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", "TODO", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"coinFlip", "[", "numSteps_", "]"}], " ", ":=", " ", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A", ",", " ", "B"}], "}"}], ",", " ", "numSteps"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeVal", "[", 
    RowBox[{"cube_", ",", " ", "pos_", ",", " ", "newVal_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{"cube", ",", " ", 
     RowBox[{"pos", " ", "->", " ", "newVal"}]}], "]"}]}], " ", 
  RowBox[{"(*", " ", "TODO", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Check", " ", "if", " ", "you", " ", "can", " ", "pop", " ", "up", " ", 
     "a", " ", "cell", " ", "at", " ", "pos", " ", "in", " ", 
     RowBox[{"grid", ".", " ", "Works"}], " ", "on", " ", "both", " ", 
     "height", " ", "values", " ", "and", " ", "3"}], "-", "colourings"}], 
   " ", "*)"}], "\n", 
  RowBox[{"(*", " ", "checkPopUp", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"grid_", ",", " ", "pos_"}], "]"}], " ", ":=", " ", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], " ", "~", " ", 
      "Join", " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "~", " ", "Join", 
      " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}]}], "]"}], "]"}]}], 
     ",", " ", "\n", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"grid", "[", 
           RowBox[{"[", 
            RowBox[{"Sequence", " ", "@@", " ", "pos"}], "]"}], "]"}], " ", 
          "-", " ", "#"}], ",", " ", "3"}], "]"}], " ", "==", " ", "2"}], " ",
       "&"}]}], "]"}]}], " ", 
  RowBox[{"(*", " ", "TODO", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Check", " ", "if", " ", "you", " ", "can", " ", "pop", " ", "down", " ", 
     "a", " ", "cell", " ", "at", " ", "pos", " ", "in", " ", 
     RowBox[{"grid", ".", " ", "Works"}], " ", "on", " ", "both", " ", 
     "height", " ", "values", " ", "and", " ", "3"}], "-", "colourings"}], 
   " ", "*)"}], "\n", 
  RowBox[{"(*", " ", "checkPopDown", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "[", 
    RowBox[{"grid_", ",", " ", "pos_"}], "]"}], " ", ":=", " ", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], " ", "~", " ", 
      "Join", " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "~", " ", "Join", 
      " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}]}], "]"}], "]"}]}], 
     ",", " ", "\n", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"grid", "[", 
           RowBox[{"[", 
            RowBox[{"Sequence", " ", "@@", " ", "pos"}], "]"}], "]"}], " ", 
          "-", " ", "#"}], ",", " ", "3"}], "]"}], " ", "==", " ", "1"}], " ",
       "&"}]}], "]"}]}], " ", 
  RowBox[{"(*", " ", "TODO", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"If", " ", "heads"}], ",", " ", 
    RowBox[{
     RowBox[{
     "check", " ", "if", " ", "site", " ", "can", " ", "be", " ", "popped", 
      " ", "up"}], ";", " ", "otherwise"}], ",", " ", 
    RowBox[{
    "check", " ", "if", " ", "site", " ", "can", " ", "be", " ", "popped", 
     " ", 
     RowBox[{"down", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"coinFunctionAssociation", " ", "=", " ", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"A", " ", "->", " ", "True"}], ",", " ", 
     RowBox[{"B", " ", "->", " ", "False"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"coinSignAssociation", " ", "=", " ", 
    RowBox[{"Association", "[", 
     RowBox[{
      RowBox[{"A", " ", "->", " ", "Plus"}], ",", " ", 
      RowBox[{"B", " ", "->", " ", "Subtract"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"coinTosses", ":", " ", 
     RowBox[{
     "list", " ", "of", " ", "random", " ", "coin", " ", "flips", " ", "in", 
      " ", "the", " ", "form", " ", "of", " ", "a", " ", "list", " ", 
      "checkPopUp"}]}], ",", " ", 
    RowBox[{"checkPopDown", " ", "functions"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"sites", ":", " ", 
    RowBox[{"list", " ", "of", " ", "random", " ", "sites"}]}], " ", "*)"}], 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "generates", " ", "numSteps", " ", "new", " ", "coin", " ", "tosses", " ", 
    "and", " ", "sites", " ", "and", " ", "adds", " ", "them", " ", "to", " ",
     "the", " ", "the", " ", "beginning", " ", "of", " ", "existing", " ", 
    "lists"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extendRandomLists", "[", "numSteps_", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\n", "\t", 
    RowBox[{
     RowBox[{"coinTosses", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"coinFlip", "[", "numSteps", "]"}], ",", " ", "coinTosses"}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"sites", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"selectRandomSite", "[", "numSteps", "]"}], ",", " ", 
        "sites"}], "]"}]}], ";"}], "\n", ")"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Execute", " ", "one", " ", "step", " ", "of", " ", "the", " ", "Markov", 
    " ", "chain", " ", "on", " ", "cube"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"OPTIMISATION", ":", " ", 
    RowBox[{
    "maybe", " ", "put", " ", "this", " ", "in", " ", "the", " ", "function", 
     " ", "that", " ", "performs", " ", "multiple", " ", "steps", " ", 
     "instead", " ", "of", " ", "calling", " ", "it", " ", "over", " ", "and",
      " ", 
     RowBox[{"over", "?"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneStep", "[", 
    RowBox[{"coin_", ",", " ", "site_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"initialCubes", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"maxCube", ",", " ", "minCube"}], "}"}]}], ",", " ", 
       RowBox[{"outCubes", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"maxCube", ",", " ", "minCube"}], "}"}]}]}], "}"}], ",", 
     "\n", "   ", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"coin", "[", 
            RowBox[{
             RowBox[{"initialCubes", "[", 
              RowBox[{"[", "#", "]"}], "]"}], ",", " ", "site"}], "]"}], ",", 
           " ", "\n", "   ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"outCubes", "[", 
               RowBox[{"[", "#", "]"}], "]"}], " ", "=", " ", 
              RowBox[{"changeVal", "[", 
               RowBox[{
                RowBox[{"initialCubes", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], ",", " ", "site", ",", " ", 
                RowBox[{
                 RowBox[{"coinSignAssociation", "[", "coin", "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"initialCubes", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"Sequence", " ", "@@", " ", "site"}], "]"}], 
                   "]"}], ",", " ", "2"}], "]"}]}], "]"}]}], ";"}], ")"}]}], 
          "]"}], " ", "&"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "2"}], "}"}]}], "]"}], ";", "\n", "   ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"maxCube", ",", " ", "minCube"}], "}"}], " ", "=", " ", 
       "outCubes"}], ";"}]}], "\n", "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Executes", " ", "the", " ", "algorithm", " ", "for", " ", "numSteps"}], 
    " ", "=", " ", 
    RowBox[{"len", 
     RowBox[{"(", "coinTosses", ")"}], " ", "steps"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Additionally", ":", " ", 
     RowBox[{"logs", " ", "files", " ", "every", " ", 
      RowBox[{"numSteps", "/", "100"}], " ", "or", " ", "10", " ", "million", 
      " ", "steps"}]}], ",", " ", 
    RowBox[{"whichever", " ", "is", " ", "lower"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Returns", " ", "1", " ", "if", " ", "the", " ", "grids", " ", 
     "converged"}], ",", " ", 
    RowBox[{"0", " ", "if", " ", "not"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nStepsMarkovChain", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"numSteps", " ", "=", " ", 
        RowBox[{"Length", "[", "coinTosses", "]"}]}], ",", "\n", 
       "\t\t\t\t\t\t\t", 
       RowBox[{"logInterval", " ", "=", " ", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"10", "^", "7"}], ",", " ", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Length", "[", "coinTosses", "]"}], " ", "/", " ", 
              "100"}], "]"}], ",", " ", "200000"}], "]"}]}], "]"}]}], ",", 
       "\n", "\t\t\t\t\t\t\t", 
       RowBox[{"outDir", " ", "=", " ", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"logDir", ",", " ", "\"\<coupling_\>\"", ",", " ", 
          RowBox[{"ToString", "[", "dim", "]"}], ",", " ", "\"\<_logs/\>\""}],
          "]"}]}], ",", " ", "\n", "\t\t\t\t\t\t\t", "i", ",", " ", 
       "tempMinCube", ",", " ", "tempMaxCube", ",", " ", 
       "tempHeightDifference", ",", " ", "tempStepNumber", ",", " ", 
       "finalHeightDifference"}], "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Running for \>\"", ",", " ", "numSteps", ",", " ", 
        "\"\< steps...\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Logging every \>\"", ",", " ", "logInterval", ",", " ", 
        "\"\< steps\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"Monitor", "[", "\n", "    ", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", " ", "=", " ", "0"}], ",", " ", 
          RowBox[{"i", " ", "<", " ", "numSteps"}], ",", " ", 
          RowBox[{"i", "++"}], ",", " ", 
          RowBox[{"(", "\n", "      ", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{"i", ",", " ", "logInterval"}], "]"}], " ", "==", " ",
                "0"}], ",", " ", "\n", "       ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Export", "[", 
                 RowBox[{
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"outDir", ",", " ", 
                    RowBox[{"ToString", "[", "i", "]"}], ",", " ", 
                    "\"\<.mx\>\""}], "]"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"maxCube", ",", " ", "minCube"}], "}"}]}], "]"}], 
                ";", "\n", "        ", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"tempMinCube", ",", " ", "tempMaxCube"}], "}"}], 
                 " ", "=", " ", 
                 RowBox[{"{", 
                  RowBox[{"minCube", ",", " ", "maxCube"}], "}"}]}], ";", 
                "\n", "        ", 
                RowBox[{"tempHeightDifference", " ", "=", " ", 
                 RowBox[{"checkHeightDifference", "[", 
                  RowBox[{"tempMinCube", ",", " ", "tempMaxCube"}], "]"}]}], 
                ";", "\n", "        ", 
                RowBox[{"tempStepNumber", " ", "=", " ", "i"}], ";"}], "\n", 
               "        ", 
               RowBox[{"(*", " ", 
                RowBox[{
                "WHAT", " ", "IS", " ", "THIS", " ", "LINE", " ", "DOING", 
                 " ", 
                 RowBox[{"HERE", "?"}]}], " ", "*)"}], "\n", "        ", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"displayGrids", "[", 
                  RowBox[{
                  "tempMaxGrid", ",", " ", "tempMinGrid", ",", " ", 
                   "blueColourRules"}], "]"}], ";"}], "*)"}], "\n", 
               "        ", ")"}]}], "\n", "      ", "]"}], ";", "\n", 
            "      ", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"OPTIMISATION", ":", " ", 
               RowBox[{
                RowBox[{"don", "'"}], "t", " ", "need", " ", "to", " ", 
                "check", " ", "height", " ", "difference", " ", "each", " ", 
                RowBox[{"time", ".", " ", "If"}], " ", "difference", " ", 
                "is", " ", "1000"}]}], ",", " ", 
              RowBox[{
              "only", " ", "need", " ", "to", " ", "check", " ", "again", " ",
                "after", " ", "500", " ", "steps"}]}], "*)"}], "\n", "      ", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"OPTIMISATION", ":", " ", 
               RowBox[{
               "maybe", " ", "have", " ", "a", " ", 
                "quickCheckHeightDifference"}]}], ",", " ", 
              RowBox[{
              "that", " ", "checks", " ", "a", " ", "few", " ", "cells", " ", 
               "randomly"}]}], " ", "*)"}], "\n", "      ", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"checkHeightDifference", "[", 
                  RowBox[{"maxCube", ",", " ", "minCube"}], "]"}], " ", "==", 
                 " ", "0"}], ",", " ", 
                RowBox[{"(", "\n", "         ", 
                 RowBox[{
                  RowBox[{"tempHeightDifference", " ", "=", " ", "0"}], ";", 
                  "     ", "\n", "         ", 
                  RowBox[{"Throw", "[", "1", "]"}]}], ")"}]}], "]"}], ";"}], 
             "*)"}], "\n", "      ", "\n", "      ", 
            RowBox[{"oneStep", "[", 
             RowBox[{
              RowBox[{"coinTosses", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
              RowBox[{"sites", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}], ")"}]}], "\n", 
         "    ", "]"}], ",", " ", "\n", "    ", 
        RowBox[{"Grid", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"\"\<Current step: \>\"", ",", " ", 
              RowBox[{"ToString", "[", "tempStepNumber", "]"}]}], "]"}], 
            "}"}], ",", " ", "\n", "          ", 
           RowBox[{"{", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"\"\<Height difference: \>\"", ",", " ", 
              RowBox[{"ToString", "[", "tempHeightDifference", "]"}]}], "]"}],
             "}"}], ",", " ", "\n", "          ", 
           RowBox[{"{", 
            RowBox[{"cubesSlicesSimultaneously", "[", 
             RowBox[{"tempMaxCube", ",", " ", "tempMinCube"}], "]"}], "}"}], 
           ",", "\n", "          ", 
           RowBox[{"{", 
            RowBox[{"cubesLayersSimultaneously", "[", 
             RowBox[{"tempMaxCube", ",", " ", "tempMinCube"}], "]"}], "}"}]}],
           "}"}], "\n", "    ", "]"}]}], "\n", "  ", "]"}], ";", "\n", "  ", 
      "\n", "  ", 
      RowBox[{"finalHeightDifference", "  ", "=", " ", 
       RowBox[{"checkHeightDifference", "[", 
        RowBox[{"tempMinCube", ",", " ", "tempMaxCube"}], "]"}]}], ";", "\n", 
      "  ", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<-- The height difference after \>\"", ",", " ", "i", ",", " ", 
        "\"\< steps was \>\"", ",", " ", "finalHeightDifference", ",", " ", 
        "\"\<.\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"finalHeightDifference", " ", "==", " ", "0"}], ",", " ", 
        RowBox[{"Return", "[", "1", "]"}]}], "]"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"return", " ", "1", " ", "if", " ", "converged"}], " ", "*)"}],
       "\n", "  ", 
      RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\n", "]"}]}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"startChain", "[", 
   RowBox[{"dimension_", ",", " ", "t_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "coins", ",", " ", "timestamp", ",", "\n", "\t\t\t\t\t\t\t\t\t", 
      RowBox[{"dirName", " ", "=", " ", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"logDir", ",", " ", "\"\<coupling_\>\"", ",", " ", 
         RowBox[{"ToString", "[", "dimension", "]"}], ",", " ", 
         "\"\<_logs/\>\""}], "]"}]}], ",", " ", "\n", "\t\t\t\t\t\t\t\t\t", 
      RowBox[{"finalDirName", " ", "=", " ", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"logDir", ",", " ", "\"\<coupling_\>\"", ",", " ", 
         RowBox[{"ToString", "[", "dimension", "]"}], ",", " ", 
         "\"\<_samples/\>\""}], "]"}]}], ",", "\n", "\t\t\t\t\t\t\t\t\t", 
      RowBox[{"steps", " ", "=", " ", "t"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"dim", " ", "=", " ", "dimension"}], ";", "\n", "\t", 
     RowBox[{"sites", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "\t", 
     RowBox[{"coinTosses", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "\t", 
     RowBox[{"converged", " ", "=", " ", "0"}], ";", "\t", "\n", "\t", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"converged", " ", "==", " ", "0"}], ",", " ", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"Reset", " ", "stuff"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"maxCube", ",", " ", "minCube"}], "}"}], " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"generateMaxCube", "[", "dim", "]"}], ",", " ", 
            RowBox[{"generateMinCube", "[", "dim", "]"}]}], "}"}]}], ";", 
         "\n", "\t\t", 
         RowBox[{"Quiet", " ", "@", " ", 
          RowBox[{"DeleteDirectory", "[", 
           RowBox[{"dirName", ",", " ", 
            RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}]}], ";", 
         "\n", "\t    ", 
         RowBox[{"CreateDirectory", "[", "dirName", "]"}], ";", "\n", 
         "\t    ", "\n", "\t    ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "Generate", " ", "new", " ", "coin", " ", "tosses", " ", "and", 
            " ", "sites"}], ",", " ", 
           RowBox[{"and", " ", "log", " ", "them"}]}], "*)"}], "\t\t", "\n", 
         "\t\t", 
         RowBox[{"extendRandomLists", "[", "steps", "]"}], ";", "\n", "\t\t", 
         
         RowBox[{"steps", " ", "=", " ", 
          RowBox[{"Length", "[", "coinTosses", "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"dirName", ",", " ", "\"\<sites.csv\>\""}], "]"}], ",", 
           " ", "sites", ",", " ", "\"\<CSV\>\""}], "]"}], ";", "\n", "\t\t", 
         
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"dirName", ",", " ", "\"\<coin_tosses.csv\>\""}], "]"}], 
           ",", " ", "coinTosses", ",", " ", "\"\<CSV\>\""}], "]"}], ";", 
         "\n", "\t\t", "\n", "\t    ", 
         RowBox[{"converged", " ", "=", " ", 
          RowBox[{"nStepsMarkovChain", "[", "]"}]}], ";", "\n", "\t    ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"converged", " ", "==", " ", "1"}], ",", " ", "Break"}], 
          "]"}]}], "\n", "\t", ")"}]}], "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"timestamp", " ", "=", " ", 
      RowBox[{"DateString", "[", "]"}]}], ";", "\n", "\t", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{
        "finalDirName", ",", " ", "timestamp", ",", " ", "\"\<.mx\>\""}], 
        "]"}], ",", " ", "minCube"}], "]"}], ";", "\n", 
     RowBox[{"(*", "\t", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"StringJoin", "[", 
         RowBox[{
         "finalDirName", ",", " ", "timestamp", ",", " ", 
          "\"\< colourings.pdf\>\""}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"displaySlicePlot", "[", 
          RowBox[{"to3Colouring", "[", 
           RowBox[{"minCube", ",", " ", "blueColourRules"}], "]"}], "]"}], 
         ";", "\t", "\n", "\t", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{
            "finalDirName", ",", " ", "timestamp", ",", " ", 
             "\"\< heights.pdf\>\""}], "]"}], ",", " ", 
           RowBox[{"displaySlicePlot", "[", "minCube", "]"}]}], "]"}], ";", 
         "\n", "\t", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{
            "finalDirName", ",", " ", "timestamp", ",", " ", 
             "\"\< height plots.pdf\>\""}], "]"}], ",", " ", 
           RowBox[{"displayHeightPlot", "[", "minCube", "]"}]}], "]"}], 
         ";"}]}]}], "*)"}], "\n", "\t", 
     RowBox[{"DeleteDirectory", "[", 
      RowBox[{"dirName", ",", " ", 
       RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}], ";", "\n", 
     "\t", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<The chain took \>\"", ",", " ", "steps", ",", " ", 
       "\"\< steps to converge. Here are the results:\>\""}], "]"}], ";", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"cubeSlicesAllAxesSimultaneously", "[", "minCube", "]"}], "\n", 
      "\t", 
      RowBox[{"cubeLayers", "[", "minCube", "]"}], "\n", "\t", 
      RowBox[{"compareThreeCubes", "[", 
       RowBox[{
        RowBox[{"generateMinCube", "[", "dim", "]"}], ",", " ", "minCube", 
        ",", " ", 
        RowBox[{"generateMaxCube", "[", "dim", "]"}]}], "]"}]}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.896460344757543*^9, 3.896460344892894*^9}, {
   3.8964603775487823`*^9, 3.896460427172718*^9}, {3.896460505525404*^9, 
   3.896460507683814*^9}, 3.896460598098578*^9, 3.9121841491362123`*^9, {
   3.912185176747891*^9, 3.9121851950010757`*^9}, {3.912185273068263*^9, 
   3.9121852790699263`*^9}, {3.912185375050088*^9, 3.9121853774319563`*^9}, {
   3.912185782189267*^9, 3.9121858163212442`*^9}, {3.91218618071176*^9, 
   3.9121862071829767`*^9}, {3.912187031857287*^9, 3.912187033409878*^9}, {
   3.912413041483397*^9, 3.912413047210799*^9}, {3.9124132533760777`*^9, 
   3.9124132695067797`*^9}, {3.9124133063997383`*^9, 3.912413327221567*^9}, {
   3.912413421740149*^9, 3.912413427966223*^9}, {3.912413722012274*^9, 
   3.912413722503805*^9}, {3.912414130718193*^9, 3.9124141336035213`*^9}, {
   3.912414204746469*^9, 3.912414262804587*^9}, {3.9124143519006166`*^9, 
   3.912414421557913*^9}, {3.91241449233878*^9, 3.912414496095799*^9}, {
   3.9124146536513567`*^9, 3.9124146650573673`*^9}, {3.912414714602222*^9, 
   3.912414727267124*^9}, 3.9124148030817137`*^9, {3.9124168506681767`*^9, 
   3.912416856065777*^9}, {3.912417188142894*^9, 3.9124171944126053`*^9}, {
   3.9124172646892433`*^9, 3.912417293326352*^9}, 3.915682830604763*^9, {
   3.9156829512067623`*^9, 3.915682952627314*^9}, {3.9156832063680353`*^9, 
   3.9156832411362543`*^9}, 3.915683651455409*^9, {3.9157379963954563`*^9, 
   3.915738007647209*^9}, 3.915738139832334*^9, {3.915738544623569*^9, 
   3.9157385449017067`*^9}, {3.915738576572914*^9, 3.915738583871443*^9}, 
   3.91573864063398*^9, 3.915742596275568*^9, {3.915742890231594*^9, 
   3.91574289216683*^9}, {3.9157433168967447`*^9, 3.915743378990508*^9}, {
   3.915743447885516*^9, 3.9157434480789127`*^9}, {3.915743678093502*^9, 
   3.9157436918180532`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"f3b73552-1918-4726-999e-8a0a7251a809"],

Cell["\<\
Do not run this unless you want to start the simulation for a cube of size 15!\
\>", "Text",
 CellChangeTimes->{{3.912445692094102*^9, 3.912445717763008*^9}, {
  3.912445752519793*^9, 
  3.912445752790062*^9}},ExpressionUUID->"c6dc01b4-d9e3-41d4-a11f-\
2a7a1bfb6ae9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"startChain", "[", 
  RowBox[{"11", ",", " ", "20000"}], "]"}]], "Code",
 CellChangeTimes->{{3.915742830174982*^9, 3.915742840839382*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"9ec00c23-3cd2-4697-8aa9-8a6e8ac186f2"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 20000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915742841918624*^9, 3.915742896652059*^9, 
  3.915743200870468*^9, 3.915743359364613*^9, 3.915743421280065*^9, 
  3.915743724216918*^9, 3.91574417708986*^9},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"a619fb53-72f8-48f0-9569-2f037bc31031"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "200000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 200000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{3.915742841918624*^9, 3.915742896652059*^9, 
  3.915743200870468*^9, 3.915743359364613*^9, 3.915743421280065*^9, 
  3.915743724216918*^9, 3.9157441770931587`*^9},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"e5332a31-9591-41b3-9b36-f52ed0404643"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "20000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "2450", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 20000, " steps was ", 2450, "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915742841918624*^9, 3.915742896652059*^9, 
  3.915743200870468*^9, 3.915743359364613*^9, 3.915743421280065*^9, 
  3.915743724216918*^9, 3.915744178088108*^9},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"4e742dc3-ab17-4ca8-87b7-ee8c0268bd9f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "40000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 40000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915742841918624*^9, 3.915742896652059*^9, 
  3.915743200870468*^9, 3.915743359364613*^9, 3.915743421280065*^9, 
  3.915743724216918*^9, 3.915744178782741*^9},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"c9dde9d2-d00a-4f86-b0bb-d89bec426e88"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "200000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 200000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{3.915742841918624*^9, 3.915742896652059*^9, 
  3.915743200870468*^9, 3.915743359364613*^9, 3.915743421280065*^9, 
  3.915743724216918*^9, 3.915744178784822*^9},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"1961505f-7974-4b4d-addb-cd631f27c343"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "40000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "2450", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 40000, " steps was ", 2450, "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915742841918624*^9, 3.915742896652059*^9, 
  3.915743200870468*^9, 3.915743359364613*^9, 3.915743421280065*^9, 
  3.915743724216918*^9, 3.91574418041229*^9},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"ddc9bda7-e103-4ea9-bd94-cbc8709f2ef9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "80000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 80000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915742841918624*^9, 3.915742896652059*^9, 
  3.915743200870468*^9, 3.915743359364613*^9, 3.915743421280065*^9, 
  3.915743724216918*^9, 3.9157441817605667`*^9},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"0624a5c4-66e8-4efd-b47c-5d3063fef8ff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "200000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 200000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{3.915742841918624*^9, 3.915742896652059*^9, 
  3.915743200870468*^9, 3.915743359364613*^9, 3.915743421280065*^9, 
  3.915743724216918*^9, 3.915744181763488*^9},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"52306059-a628-423f-b5d0-49d3566fcd12"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "80000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "2450", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 80000, " steps was ", 2450, "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915742841918624*^9, 3.915742896652059*^9, 
  3.915743200870468*^9, 3.915743359364613*^9, 3.915743421280065*^9, 
  3.915743724216918*^9, 3.915744184393141*^9},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"7f9c5adb-33d4-41f4-b00b-0cdc544fcca8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "160000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 160000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915742841918624*^9, 3.915742896652059*^9, 
  3.915743200870468*^9, 3.915743359364613*^9, 3.915743421280065*^9, 
  3.915743724216918*^9, 3.9157441870821333`*^9},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"2bf971fa-545f-41ef-a28d-a66f73bec13b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "200000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 200000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{3.915742841918624*^9, 3.915742896652059*^9, 
  3.915743200870468*^9, 3.915743359364613*^9, 3.915743421280065*^9, 
  3.915743724216918*^9, 3.915744187084896*^9},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"41f19141-a779-497f-b920-0411706f3324"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "160000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "2450", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 160000, " steps was ", 2450, "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915742841918624*^9, 3.915742896652059*^9, 
  3.915743200870468*^9, 3.915743359364613*^9, 3.915743421280065*^9, 
  3.915743724216918*^9, 3.915744191986411*^9},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"e51482ff-93a6-4cb4-b101-ab30e139f443"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "320000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 320000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915742841918624*^9, 3.915742896652059*^9, 
  3.915743200870468*^9, 3.915743359364613*^9, 3.915743421280065*^9, 
  3.915743724216918*^9, 3.915744197602322*^9},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"7d51141a-87d5-4565-9b77-f953e6ebfa26"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "200000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 200000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{3.915742841918624*^9, 3.915742896652059*^9, 
  3.915743200870468*^9, 3.915743359364613*^9, 3.915743421280065*^9, 
  3.915743724216918*^9, 3.915744197605035*^9},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"0bcee2a5-779e-4f05-b2e7-a2b96da96504"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "320000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "0", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 320000, " steps was ", 0, "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915742841918624*^9, 3.915742896652059*^9, 
  3.915743200870468*^9, 3.915743359364613*^9, 3.915743421280065*^9, 
  3.915743724216918*^9, 3.9157442072248173`*^9},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"6ab2bfb3-d437-4391-be5b-3890eee68bf0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The chain took \"\>", "\[InvisibleSpace]", "320000", 
   "\[InvisibleSpace]", "\<\" steps to converge. Here are the results:\"\>"}],
  
  SequenceForm[
  "The chain took ", 320000, " steps to converge. Here are the results:"],
  Editable->False]], "Print",
 CellChangeTimes->{3.915742841918624*^9, 3.915742896652059*^9, 
  3.915743200870468*^9, 3.915743359364613*^9, 3.915743421280065*^9, 
  3.915743724216918*^9, 3.915744207227089*^9},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"4c8be1ef-d2dd-4353-8ae9-f8f18e56c20e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"startChain", "[", 
  RowBox[{"15", ",", " ", "2000"}], "]"}]], "Code",
 CellChangeTimes->{{3.912412868042281*^9, 3.912412919960894*^9}, {
  3.912414752290742*^9, 3.9124147552345533`*^9}},
 CellLabel->
  "In[429]:=",ExpressionUUID->"079fc432-aa5d-4e3b-8dc1-2ab978cbc470"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "2000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 2000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.9124148178812113`*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"cb9a0ce4-ea62-4c56-b218-a6b23141e656"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.912414817883876*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"88de0c62-6f08-4b1a-a6ff-af411f862be6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "2000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "9506", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 2000, " steps was ", 9506, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.912414823034919*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"4130b192-24fe-42cb-ab2d-893cd2637c7c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "4000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 4000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.912414823174*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"7c11b217-1799-499c-bcfd-815c18965efe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.9124148231767387`*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"cf2c6d8c-fbaa-49e5-9111-ef2382824263"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "4000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "9506", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 4000, " steps was ", 9506, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.912414833858685*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"074e25b6-17fe-45a0-9176-4d7be8582130"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "8000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 8000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.912414834127819*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"7d77fe8b-ab57-47c5-9d90-92a7a96b0523"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.912414834130933*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"fad3935a-b201-4d51-bc67-f05e14aa33fc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "8000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "9506", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 8000, " steps was ", 9506, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912414852130447*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"5d8543d5-8da5-4443-873b-bd08472bbf7e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "16000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 16000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912414852691204*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"8c456664-06c9-45a4-b90e-5bf4dff908ab"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124148526940002`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"e81475ea-e674-4aaf-aa78-6e48327c7adc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "16000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "9506", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 16000, " steps was ", 9506, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124148956278477`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"912a99bd-56f0-47ec-9a45-fb830a19ba30"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "32000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 32000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912414896772156*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"3955792e-6a61-47b1-8a83-66643ac4cb4c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124148967751007`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"8041e9d3-40de-429c-81e5-d8a569ac918e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "32000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "8878", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 32000, " steps was ", 8878, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912414966034191*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"73f38ab5-536b-4469-9637-94b980091967"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "64000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 64000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912414968308062*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"0d443d62-0e63-4722-b1b7-deba12f3a191"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912414968310853*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"5a7f47c9-d52a-4d8b-91a7-10c9fe81f727"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "64000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "7638", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 64000, " steps was ", 7638, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912415106425127*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"902f528b-c9ba-431f-8699-90837ab28d6e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "128000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 128000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912415111069091*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"bbc4fe57-3363-4f16-85ae-de81c202aad0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124151110720463`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"9a029207-c78e-46d2-80dd-acb855169a09"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "128000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "5512", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 128000, " steps was ", 5512, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912415390586821*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"c32df61f-89d8-4010-8f1f-29563288eb79"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "256000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 256000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912415400086726*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"d192bba6-50cf-4711-9e9a-15aee38d5b89"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124154000900087`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"b7e666e9-92b0-4472-bbac-94e05fb53ccd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "256000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "2662", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 256000, " steps was ", 2662, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124159510999527`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"31c9dab0-5003-49ec-bd3c-1db79e7f464f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "512000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 512000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912415969422639*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"2b5ae421-52cf-446c-966c-326c02c448f5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124159694259872`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"a0c7e168-ddcc-43a3-af76-cf29585bd920"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "512000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "528", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 512000, " steps was ", 528, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912417070426071*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"41b3afc5-49e2-49b5-b53a-20ede96cca42"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "1024000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 1024000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912417107751834*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"61f50e41-4102-4807-874b-7da40b50f749"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912417107755316*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"81d1fd93-f271-432a-bbac-c26e7a074213"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "1024000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]",
    "38", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 1024000, " steps was ", 38, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912419255168951*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"81c8d74c-cea0-4901-80ba-84972b68ef0b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "2048000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 2048000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912419329947432*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"c42251f0-90ee-4078-a67b-76b315bf5e80"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20480", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20480, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124193299515047`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"7c27a79f-0a5d-4748-b93a-42dba9dffd28"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "981377", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "0", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 981377, " steps was ", 0, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912421408537613*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"276daed3-ce8c-4766-ad81-8f5e0e4db71d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The chain took \"\>", "\[InvisibleSpace]", "2048000", 
   "\[InvisibleSpace]", "\<\" steps to converge. Here are the results:\"\>"}],
  
  SequenceForm[
  "The chain took ", 2048000, " steps to converge. Here are the results:"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124214085419703`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"0b8b7123-3ede-4d62-9cb3-2387bfcdb046"]
}, Open  ]]
}, Open  ]],

Cell["Finally, the output for the cube of size 15 :", "Text",
 CellChangeTimes->{{3.9124457307074623`*^9, 
  3.912445748355562*^9}},ExpressionUUID->"4fb8cb37-2a12-47da-b2ff-\
cd1b9c17dba2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"outCube21", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
     "logDir", ",", " ", 
      "\"\<coupling_21_samples/Thu 1 Feb 2024 07:04:07.mx\>\""}], "]"}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.912443107223297*^9, 3.912443134657501*^9}, {
  3.9124431746889563`*^9, 3.9124432064471292`*^9}, {3.915758093844336*^9, 
  3.915758120464025*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"133e8dfb-481b-420c-aaff-48447d5a9a0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"compareThreeCubes", "[", 
  RowBox[{
   RowBox[{"generateMaxCube", "[", "21", "]"}], ",", " ", "outCube21", ",", 
   " ", 
   RowBox[{"generateMinCube", "[", "21", "]"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.9157581127036533`*^9, 3.9157581388955507`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"e94697d6-09af-4ab1-8ffb-302ca51c8167"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 11, 1}}, Typeset`size$$ = {
        645., {170.861484375, 175.818515625}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Grid[{{
              $CellContext`displayCube[$CellContext`dim$36253, 
               Part[CompressedData["
1:eJzd2jlSXEEQhOFh3r4vPYMktERwJR2BC+j+nsQWQMSnV21j4PwGTnZWZtWb
+4c/vx+K0+l0ffd3ujkXZVU3bdcP4zQv67ani1gS28U2sVVsEZvFJrFRbMhm
nVgr1ojVYpVYKVaIncVuxKibNLpexJLYLraJrWKL2Cw2iY3ZrBfrxFqxRqwW
q8RKsULMamb6iBrdXi9iSWwX28RWsUVsFpuy2SDWi3VirVgjVotVYlaT3syb
dfQRNfryj4olsV1sE1vFFrE5m41ig1gv1om1Yo2Y1aQ3OWmz8oizjj6iRl8f
qVgS28U2sVVsyWaT2Cg2iPVinZjVpDc5aZmbOZ2BecRZRx9Ro29PVCyJ7WKb
2JrNZrFJbBQbxKwmvclJy9xkC8rodewMzCPOOvqIGt09U7Ektott2WwRm8Um
MatJb3LSMjfZgthp4+7NXsfOwDzirKOPqNH3FyqWxPZstootYlaT3uSkZW6y
BbHTckMJ9yN2b/Y6dgbmEWcdfUSNfrxSsZTNNjGrSW9y0jI32YLYabmhcN+M
dth3/yHo2exw7AfMHs41eoZ6/Hyjucxq0puctMxNtiB2Wm4o3Dd5PfjMuv36
zMod34LoYvqdk4EzhNOGc4kTjLPOakSUr4Hvhi+Mb5Gvlu+bTqBn6K7Dex1z
kwnLLGZqM9/ZBNgZnEd2TESZm0xYZjFTm/nOJsDOwHbBPDu6qbKpstOy/bIn
s1Gze7vXuTN4qkU01uiVsv2yJ7NRs3uzpbPPs0FyR+A2wb2DG4p066XbcLQf
uXu71zl5Ihr7yBrdHVwPuMNy2+VezA2aOxu3culWS7dGurXSrZNuVpPePO7e
bgcRjWedfWSNnimvRrwv8RLFmxWvJNKtlG6VdKulWyPdrCa9yUl7vB+5wUU0
ziPPOvvIGj1RXnR5++WVmHdJ6VZIt1K6VdLNatKbnLTMzeMd1i07onFncB55
1tlH1uiR8msLv8vwS4B0O0u3QrpZTXqTk5a5eXgL+kCDTSiica9zZ3AeedbZ
R9bo9j9fq/ntzd/KoZvVpDc5aZmbbEGH97oPNNhWIxp3b/c6dwbnkWedfWSN
rv4liXQ7kVJjOpbzl2nKbsSmy70l/xZEyv2I3Zu9jp2BecRZRx9RI/6+5C+b
xGVb
                "], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"], 
              $CellContext`displayCube[$CellContext`dim$36253, 
               Part[CompressedData["
1:eJydmmty4zgMhDMzedsWSVFzgL3SHmEusPf/t5IIoBsgHGe3Uq5K2hQl4SMe
BPPXn3/+/vPr6enpN32efvz89fzy+vb+8Xm53pZS29q3TOuZtmZay7SaaSXT
lky7Zdo10y7f1j4y7T3T3jLtNdNeMu05035l2s9M+5FpKbeM0e9t0o6RTtM3
mbT9p/G1p9b2p4nj9m9qieP278qSjFtuQSvj7by2QGte+/TjbsMyybiP90x7
25VJe5W3rc7SohVn/cNSE5Hdzt+k+R0/GmqmbQmjrU/a8fHaQW3/qCYzHu/W
KrRzZD3fOGjltILOJ9oyLDiez8aR1nS+Yekxm2mD3Hztbi279lTEgudbBO1t
NZUs3ZUcEX7Zul3vaQbqd3zzcaxTn0m4rWDENN8ij0P142QF2zhSGxhBrZgP
nyLzFf1bbIhrixKRUTbutIKOoGuvlyprqmIlXD4z7WPtzEisKow8pcGoenJj
PQdydPWDSPsoH2lUdLEOnsTjisSOjnFEzjFaRY3aqWI+jGw2Trzk/AEjJqKM
RHPXsXazeZhccz4jRETByMOCXZ+NfXMjHmbpbteTH9o4JpJG2jRvPqgZwK1G
PzrvCj9CDAx+JDMwX/W4LWPUdW2A8P6BBm5t8VyUnjGs/I2jdF4Ju4s3HJYh
QvCvvnZmN2iaH3mafZ1oxqsl0vZJQ958WAV9WddpFXI+xxT/DvXUNKKqbtda
Dol+pOSUL7LN/gy3BRbXObsywpz7p6i9LeaxBzWiqRZq4LkU8i3QNC/gqCqZ
B545aM7+elltrZF/OUZqfUQTooQq6FFN+2XtzdyWUFuMuWPe4nzkrXx1PiPP
jNwTGHkW+5PxKJ21V29hVBUNM+IJwuhSvTVF3aT+Iy88afpYvJy+aXeDz4EF
EYFG/kUrHTSpnnuwQ/lyf5TV3vRMWtdxZXHoV/CAvfRax3jhEboiXKzTSEvU
QLO5OzRerdXxo2xC3rw5HpKRO/ugjiVGRnghb9N1Y3mTPH5UQeydVtM29oG4
Q3mw3/xqD6vcStgfhTrbrK8R58axT9+WMl6zb6gqcSuC58OqtDtXPJv3I3mL
1dvUVLK9MWZKNTyN83LkI32T4u5NnKEvYo9K70w7FEQDyZvCwtk97x78R24t
7Dqn2Dnqcaonsco4Hk5WmbyRuFuFwjY1P1oxE94jjNs6XR+90HhU3IdXHUc+
81ryKufJlHELKHH9pavb7V/VnoHc8n96QYHbJxhRp4H3BrZuoqeM2pu4GUu/
ukWn2hnjUR0QR4p1sK/V4vQUvuJQmj7SybuR3XE3dwf9nSpcREuXOVQP3kVZ
xuKI2DnpGd3p7N3v1wVuyJvcIaLMghXi/UpqMO9REv3dmtf1rP0h9ZdztPcj
+b3PhJ0Scq97AmbENL0/iRr2j+NOcyZvY7+pxG39uA6PxubQMxrvHquLwrWi
43S/p5r262pQEUeIZqPYaWMRb1aL/de+upHDZ6n2Rt7kfGTsfQxzGS/SQzRF
VEVWInLUx1F/ww7F1gbtN/FWh218F07mMD8itfpuhlCe+rSt3um6p3sEcCPV
nphpMiPzTa4+bOyUUWQP63ZIoMkW19p7oskVQqBSW435RleGWZD2IpYhzY/I
j3W/aZF39GQvTE7Vqc/a0JEgRvuP7y+JOnd5250zlIzbC+UF341B/KOeao00
u/c26gUhSoIm1YbwTcpdY4bJmyRvgpbNTBSZIbjpHLZDAeG1GQ22PexONEOv
79Q2x0hHvmeqY6QzpGcoaZck4/ac+NvrC1iSyixDT5UiYqCJsah7x6yItDWo
kdGiXWKqLxZXwdEVXOkiftJ+k+oJ1+HWZ/b9OqHJ3T6LlbMfrdR1R0Reu2Ok
Y9MTsbQvmXae8/Ojues9ziaMhtHkna35ZmdP4pMRin10hkJRFactZHXUtNhH
0g4Fea6g9nY9AKvreM1rzWBRraOzx90+jnUuLoaO7qDk/Who4URMKKXnm+lJ
wN1z2EndMhX7XfZNylwUaamiQt70ewbq1yFHUk1L9ZfsUMhqBXWyeYvdbTr1
K3wOS1XT1Nk7VG93WdXR7uccr/N5SfQjWRHPyRmMP61WNT17u3NW/l2a2SlE
HmlRp4YqaPJuqmkxQ6y07u83XZfVxrqeuahzNnG1d1rX0QxzPqo+H1l9kdBo
2Wn1xGhQSk+70/9nSNWUceqxafxNs2laG6WVbrpv+X4vKFXT/VFae6d1XVoz
pPkojXWpH6WM0v8v+RdfYBdH
                "], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"], 
              $CellContext`displayCube[$CellContext`dim$36253, 
               Part[CompressedData["
1:eJzl2kli20YQhWFZHDATHJID+Eo+gi+Q++8CEYN7+BrCOllYpp4kEI2/q+pV
NX/+/ufX79PHx8ffwb+PH5+n8+Va1U3b9cNtvD+er7+kvaQ9pT2k3aWN0m7S
Bmm9tO6w1kirpVXSrtIu0s7STtI+pf2QRm6vT6mnXHu+zrn2eF5y7f645tp4
r3LtNta5NtyaXOuHNte6kFLALdeadsi1urnlWlWPuXat7rl2uT5y7Xx55trp
/Mq1z5MYmabjyIzwu5eM3KReU3Jfq6muqTZ9ratUm/5v6lSbXrVNqk2vuzbV
pu8CckG89ak2/eVtSLXpPcZbqk13cx9Tbbrv9woSbtV7rQm369duTrldQKNA
k7HpXOc4MqP8ClVK7kutE3LvVTcxufn5tBG5mdu9C8kt3MY+ILdyCzNjkCc3
cn+49eNKLuDWLe8XcWuXO4u4NfPei7nV7+yScKvy516iydhkpnU9cq5zHJlR
dt0mIfdW25jcvK+7iNzyHPuQ3PrEh4Dcyi2sacHrjdwfbsN2nYBbv+6UkFu3
5IKIWztn+5hbkz3hIk3GJjMt66Y9g+uRc53jyIzSd+ticrPaR+SWzDWE5NZI
uQXkEjJkuGnz32yRG3Ab1twccuuX6htx69JnWabJ2GSmZd2kC7Kvs2dwPXKu
cxyZUXIPQ0RuUcNnu9WmkEKaC5k1F215t61Whtde3VB0F8lT26HJ2GSmZd2k
C6Kntfe2r7NncD1yrnMcmVF8Z1FUrGqY9zL3QZ/Sh9l1c6dhNMfPZ48mY5OZ
lnWTLoielh2K+yN7b/s6ewbXI+c6x5EZRfcbOg32AOwWtitET2KXJmOTmZZ1
ky6InpYdSsYnfQ5hj7O7Yu5fZiPWFjoF+j66ePZkWkWh7/5PrO3bFXP/Mhux
ttAp8Oe8Et+Td+d1/M/W1hTmDNgh3EvcdTu+zp7B9aiY6/ZXzJ3Knc6YYPQw
zhiRjF1GOfMBo4v5szALQk5m9mae3/HePX3djmfYpbkbR2T0vQtiLWbVZn2n
E6BnoLtgPaNjKczr4ILol+isdvqjXe+9R3OvHjHXMY7I6ECHEv/eotJR03vT
pdPP00GK27UwU025zV1kzG3tN2+cM3zTw+7Q3PF19AysR8x1jCMyOjI9YA/L
bpd9MTto9mzidinMvVNu89xm5Lzu21lQmWa5P0ozbdnX8RXrEXMd44iMDk32
OF/iJIozK05JOAcrnE2k3OZJ6YGZapFmcc6QZVrWTbqgoq+jZ2A9Yq5jHJHR
sak7Z7+cEnMu6TM+nx8dOpso0WRsMtOybtIF0dPmlY01sC9MD0r1iLmOcURG
B0/EeC7DkwCfwx484yvQZGwy07Ju0gXR0w7uYekv6b3p6+gZWI+Y6xhHZHT0
tJpnb4fPyk3T50fKtJ57ywV5XqcOxXMGdnTsj+i96evoGViPmOsYR2R0+JMk
/DwDVTJmxDL/sprSG9Hpsm9hF6pu1Sr7I3pv+jp6BtYj5jrGERnx8yX/Ao8p
ydQ=
                "], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"]}, {
              $CellContext`displayCube[$CellContext`dim$36253, 
               Part[$CellContext`cube13$36253, 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"], 
              $CellContext`displayCube[$CellContext`dim$36253, 
               Part[$CellContext`cube23$36253, 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"], 
              $CellContext`displayCube[$CellContext`dim$36253, 
               Part[$CellContext`cube33$36253, 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"]}}], 
          "Specifications" :> {{$CellContext`i$$, 1, 11, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{686., {212.021484375, 216.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TagBox[GridBox[{
        {
         TagBox[
          StyleBox[
           
           DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
              Hold[$CellContext`i$$], 1, 21, 1}}, Typeset`size$$ = {
            496., {240.021484375, 244.978515625}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
            
            DynamicBox[Manipulate`ManipulateBoxes[
             1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
              "ControllerVariables" :> {}, 
              "OtherVariables" :> {
               Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$,
                 Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
                Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
                Typeset`initDone$$, Typeset`skipInitDone$$}, 
              "Body" :> (
               Part[$CellContext`args$36254, 1] = {$CellContext`i$$}; Grid[{{
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJzd2jlSXEEQhOFh3r4vPYMktERwJR2BC+j+nsQWQMSnV21j4PwGTnZWZtWb
+4c/vx+K0+l0ffd3ujkXZVU3bdcP4zQv67ani1gS28U2sVVsEZvFJrFRbMhm
nVgr1ojVYpVYKVaIncVuxKibNLpexJLYLraJrWKL2Cw2iY3ZrBfrxFqxRqwW
q8RKsULMamb6iBrdXi9iSWwX28RWsUVsFpuy2SDWi3VirVgjVotVYlaT3syb
dfQRNfryj4olsV1sE1vFFrE5m41ig1gv1om1Yo2Y1aQ3OWmz8oizjj6iRl8f
qVgS28U2sVVsyWaT2Cg2iPVinZjVpDc5aZmbOZ2BecRZRx9Ro29PVCyJ7WKb
2JrNZrFJbBQbxKwmvclJy9xkC8rodewMzCPOOvqIGt09U7Ektott2WwRm8Um
MatJb3LSMjfZgthp4+7NXsfOwDzirKOPqNH3FyqWxPZstootYlaT3uSkZW6y
BbHTckMJ9yN2b/Y6dgbmEWcdfUSNfrxSsZTNNjGrSW9y0jI32YLYabmhcN+M
dth3/yHo2exw7AfMHs41eoZ6/Hyjucxq0puctMxNtiB2Wm4o3Dd5PfjMuv36
zMod34LoYvqdk4EzhNOGc4kTjLPOakSUr4Hvhi+Mb5Gvlu+bTqBn6K7Dex1z
kwnLLGZqM9/ZBNgZnEd2TESZm0xYZjFTm/nOJsDOwHbBPDu6qbKpstOy/bIn
s1Gze7vXuTN4qkU01uiVsv2yJ7NRs3uzpbPPs0FyR+A2wb2DG4p066XbcLQf
uXu71zl5Ihr7yBrdHVwPuMNy2+VezA2aOxu3culWS7dGurXSrZNuVpPePO7e
bgcRjWedfWSNnimvRrwv8RLFmxWvJNKtlG6VdKulWyPdrCa9yUl7vB+5wUU0
ziPPOvvIGj1RXnR5++WVmHdJ6VZIt1K6VdLNatKbnLTMzeMd1i07onFncB55
1tlH1uiR8msLv8vwS4B0O0u3QrpZTXqTk5a5eXgL+kCDTSiica9zZ3AeedbZ
R9bo9j9fq/ntzd/KoZvVpDc5aZmbbEGH97oPNNhWIxp3b/c6dwbnkWedfWSN
rv4liXQ7kVJjOpbzl2nKbsSmy70l/xZEyv2I3Zu9jp2BecRZRx9RI/6+5C+b
xGVb
                    "], $CellContext`args$36254], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJydmmty4zgMhDMzedsWSVFzgL3SHmEusPf/t5IIoBsgHGe3Uq5K2hQl4SMe
BPPXn3/+/vPr6enpN32efvz89fzy+vb+8Xm53pZS29q3TOuZtmZay7SaaSXT
lky7Zdo10y7f1j4y7T3T3jLtNdNeMu05035l2s9M+5FpKbeM0e9t0o6RTtM3
mbT9p/G1p9b2p4nj9m9qieP278qSjFtuQSvj7by2QGte+/TjbsMyybiP90x7
25VJe5W3rc7SohVn/cNSE5Hdzt+k+R0/GmqmbQmjrU/a8fHaQW3/qCYzHu/W
KrRzZD3fOGjltILOJ9oyLDiez8aR1nS+Yekxm2mD3Hztbi279lTEgudbBO1t
NZUs3ZUcEX7Zul3vaQbqd3zzcaxTn0m4rWDENN8ij0P142QF2zhSGxhBrZgP
nyLzFf1bbIhrixKRUTbutIKOoGuvlyprqmIlXD4z7WPtzEisKow8pcGoenJj
PQdydPWDSPsoH2lUdLEOnsTjisSOjnFEzjFaRY3aqWI+jGw2Trzk/AEjJqKM
RHPXsXazeZhccz4jRETByMOCXZ+NfXMjHmbpbteTH9o4JpJG2jRvPqgZwK1G
PzrvCj9CDAx+JDMwX/W4LWPUdW2A8P6BBm5t8VyUnjGs/I2jdF4Ju4s3HJYh
QvCvvnZmN2iaH3mafZ1oxqsl0vZJQ958WAV9WddpFXI+xxT/DvXUNKKqbtda
Dol+pOSUL7LN/gy3BRbXObsywpz7p6i9LeaxBzWiqRZq4LkU8i3QNC/gqCqZ
B545aM7+elltrZF/OUZqfUQTooQq6FFN+2XtzdyWUFuMuWPe4nzkrXx1PiPP
jNwTGHkW+5PxKJ21V29hVBUNM+IJwuhSvTVF3aT+Iy88afpYvJy+aXeDz4EF
EYFG/kUrHTSpnnuwQ/lyf5TV3vRMWtdxZXHoV/CAvfRax3jhEboiXKzTSEvU
QLO5OzRerdXxo2xC3rw5HpKRO/ugjiVGRnghb9N1Y3mTPH5UQeydVtM29oG4
Q3mw3/xqD6vcStgfhTrbrK8R58axT9+WMl6zb6gqcSuC58OqtDtXPJv3I3mL
1dvUVLK9MWZKNTyN83LkI32T4u5NnKEvYo9K70w7FEQDyZvCwtk97x78R24t
7Dqn2Dnqcaonsco4Hk5WmbyRuFuFwjY1P1oxE94jjNs6XR+90HhU3IdXHUc+
81ryKufJlHELKHH9pavb7V/VnoHc8n96QYHbJxhRp4H3BrZuoqeM2pu4GUu/
ukWn2hnjUR0QR4p1sK/V4vQUvuJQmj7SybuR3XE3dwf9nSpcREuXOVQP3kVZ
xuKI2DnpGd3p7N3v1wVuyJvcIaLMghXi/UpqMO9REv3dmtf1rP0h9ZdztPcj
+b3PhJ0Scq97AmbENL0/iRr2j+NOcyZvY7+pxG39uA6PxubQMxrvHquLwrWi
43S/p5r262pQEUeIZqPYaWMRb1aL/de+upHDZ6n2Rt7kfGTsfQxzGS/SQzRF
VEVWInLUx1F/ww7F1gbtN/FWh218F07mMD8itfpuhlCe+rSt3um6p3sEcCPV
nphpMiPzTa4+bOyUUWQP63ZIoMkW19p7oskVQqBSW435RleGWZD2IpYhzY/I
j3W/aZF39GQvTE7Vqc/a0JEgRvuP7y+JOnd5250zlIzbC+UF341B/KOeao00
u/c26gUhSoIm1YbwTcpdY4bJmyRvgpbNTBSZIbjpHLZDAeG1GQ22PexONEOv
79Q2x0hHvmeqY6QzpGcoaZck4/ac+NvrC1iSyixDT5UiYqCJsah7x6yItDWo
kdGiXWKqLxZXwdEVXOkiftJ+k+oJ1+HWZ/b9OqHJ3T6LlbMfrdR1R0Reu2Ok
Y9MTsbQvmXae8/Ojues9ziaMhtHkna35ZmdP4pMRin10hkJRFactZHXUtNhH
0g4Fea6g9nY9AKvreM1rzWBRraOzx90+jnUuLoaO7qDk/Who4URMKKXnm+lJ
wN1z2EndMhX7XfZNylwUaamiQt70ewbq1yFHUk1L9ZfsUMhqBXWyeYvdbTr1
K3wOS1XT1Nk7VG93WdXR7uccr/N5SfQjWRHPyRmMP61WNT17u3NW/l2a2SlE
HmlRp4YqaPJuqmkxQ6y07u83XZfVxrqeuahzNnG1d1rX0QxzPqo+H1l9kdBo
2Wn1xGhQSk+70/9nSNWUceqxafxNs2laG6WVbrpv+X4vKFXT/VFae6d1XVoz
pPkojXWpH6WM0v8v+RdfYBdH
                    "], $CellContext`args$36254], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJzl2kli20YQhWFZHDATHJID+Eo+gi+Q++8CEYN7+BrCOllYpp4kEI2/q+pV
NX/+/ufX79PHx8ffwb+PH5+n8+Va1U3b9cNtvD+er7+kvaQ9pT2k3aWN0m7S
Bmm9tO6w1kirpVXSrtIu0s7STtI+pf2QRm6vT6mnXHu+zrn2eF5y7f645tp4
r3LtNta5NtyaXOuHNte6kFLALdeadsi1urnlWlWPuXat7rl2uT5y7Xx55trp
/Mq1z5MYmabjyIzwu5eM3KReU3Jfq6muqTZ9ratUm/5v6lSbXrVNqk2vuzbV
pu8CckG89ak2/eVtSLXpPcZbqk13cx9Tbbrv9woSbtV7rQm369duTrldQKNA
k7HpXOc4MqP8ClVK7kutE3LvVTcxufn5tBG5mdu9C8kt3MY+ILdyCzNjkCc3
cn+49eNKLuDWLe8XcWuXO4u4NfPei7nV7+yScKvy516iydhkpnU9cq5zHJlR
dt0mIfdW25jcvK+7iNzyHPuQ3PrEh4Dcyi2sacHrjdwfbsN2nYBbv+6UkFu3
5IKIWztn+5hbkz3hIk3GJjMt66Y9g+uRc53jyIzSd+ticrPaR+SWzDWE5NZI
uQXkEjJkuGnz32yRG3Ab1twccuuX6htx69JnWabJ2GSmZd2kC7Kvs2dwPXKu
cxyZUXIPQ0RuUcNnu9WmkEKaC5k1F215t61Whtde3VB0F8lT26HJ2GSmZd2k
C6Kntfe2r7NncD1yrnMcmVF8Z1FUrGqY9zL3QZ/Sh9l1c6dhNMfPZ48mY5OZ
lnWTLoielh2K+yN7b/s6ewbXI+c6x5EZRfcbOg32AOwWtitET2KXJmOTmZZ1
ky6InpYdSsYnfQ5hj7O7Yu5fZiPWFjoF+j66ePZkWkWh7/5PrO3bFXP/Mhux
ttAp8Oe8Et+Td+d1/M/W1hTmDNgh3EvcdTu+zp7B9aiY6/ZXzJ3Knc6YYPQw
zhiRjF1GOfMBo4v5szALQk5m9mae3/HePX3djmfYpbkbR2T0vQtiLWbVZn2n
E6BnoLtgPaNjKczr4ILol+isdvqjXe+9R3OvHjHXMY7I6ECHEv/eotJR03vT
pdPP00GK27UwU025zV1kzG3tN2+cM3zTw+7Q3PF19AysR8x1jCMyOjI9YA/L
bpd9MTto9mzidinMvVNu89xm5Lzu21lQmWa5P0ozbdnX8RXrEXMd44iMDk32
OF/iJIozK05JOAcrnE2k3OZJ6YGZapFmcc6QZVrWTbqgoq+jZ2A9Yq5jHJHR
sak7Z7+cEnMu6TM+nx8dOpso0WRsMtOybtIF0dPmlY01sC9MD0r1iLmOcURG
B0/EeC7DkwCfwx484yvQZGwy07Ju0gXR0w7uYekv6b3p6+gZWI+Y6xhHZHT0
tJpnb4fPyk3T50fKtJ57ywV5XqcOxXMGdnTsj+i96evoGViPmOsYR2R0+JMk
/DwDVTJmxDL/sprSG9Hpsm9hF6pu1Sr7I3pv+jp6BtYj5jrGERnx8yX/Ao8p
ydQ=
                    "], $CellContext`args$36254]}}]), 
              "Specifications" :> {{$CellContext`i$$, 1, 21, 1}}, 
              "Options" :> {}, "DefaultOptions" :> {}],
             ImageSizeCache->{537., {281.521484375, 286.478515625}},
             SingleEvaluation->True],
            Deinitialization:>None,
            DynamicModuleValues:>{},
            SynchronousInitialization->True,
            UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
            UnsavedVariables:>{Typeset`initDone$$},
            UntrackedVariables:>{Typeset`size$$}], "Manipulate",
           Deployed->True,
           StripOnInput->False],
          Manipulate`InterpretManipulate[1]]},
        {
         TagBox[
          StyleBox[
           
           DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
              Hold[$CellContext`i$$], 1, 21, 1}}, Typeset`size$$ = {
            496., {240.021484375, 244.978515625}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
            
            DynamicBox[Manipulate`ManipulateBoxes[
             1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
              "ControllerVariables" :> {}, 
              "OtherVariables" :> {
               Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$,
                 Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
                Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
                Typeset`initDone$$, Typeset`skipInitDone$$}, 
              "Body" :> (
               Part[$CellContext`args$36255, 2] = {$CellContext`i$$}; Grid[{{
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJzd2jlSXEEQhOFh3r4vPYMktERwJR2BC+j+nsQWQMSnV21j4PwGTnZWZtWb
+4c/vx+K0+l0ffd3ujkXZVU3bdcP4zQv67ani1gS28U2sVVsEZvFJrFRbMhm
nVgr1ojVYpVYKVaIncVuxKibNLpexJLYLraJrWKL2Cw2iY3ZrBfrxFqxRqwW
q8RKsULMamb6iBrdXi9iSWwX28RWsUVsFpuy2SDWi3VirVgjVotVYlaT3syb
dfQRNfryj4olsV1sE1vFFrE5m41ig1gv1om1Yo2Y1aQ3OWmz8oizjj6iRl8f
qVgS28U2sVVsyWaT2Cg2iPVinZjVpDc5aZmbOZ2BecRZRx9Ro29PVCyJ7WKb
2JrNZrFJbBQbxKwmvclJy9xkC8rodewMzCPOOvqIGt09U7Ektott2WwRm8Um
MatJb3LSMjfZgthp4+7NXsfOwDzirKOPqNH3FyqWxPZstootYlaT3uSkZW6y
BbHTckMJ9yN2b/Y6dgbmEWcdfUSNfrxSsZTNNjGrSW9y0jI32YLYabmhcN+M
dth3/yHo2exw7AfMHs41eoZ6/Hyjucxq0puctMxNtiB2Wm4o3Dd5PfjMuv36
zMod34LoYvqdk4EzhNOGc4kTjLPOakSUr4Hvhi+Mb5Gvlu+bTqBn6K7Dex1z
kwnLLGZqM9/ZBNgZnEd2TESZm0xYZjFTm/nOJsDOwHbBPDu6qbKpstOy/bIn
s1Gze7vXuTN4qkU01uiVsv2yJ7NRs3uzpbPPs0FyR+A2wb2DG4p066XbcLQf
uXu71zl5Ihr7yBrdHVwPuMNy2+VezA2aOxu3culWS7dGurXSrZNuVpPePO7e
bgcRjWedfWSNnimvRrwv8RLFmxWvJNKtlG6VdKulWyPdrCa9yUl7vB+5wUU0
ziPPOvvIGj1RXnR5++WVmHdJ6VZIt1K6VdLNatKbnLTMzeMd1i07onFncB55
1tlH1uiR8msLv8vwS4B0O0u3QrpZTXqTk5a5eXgL+kCDTSiica9zZ3AeedbZ
R9bo9j9fq/ntzd/KoZvVpDc5aZmbbEGH97oPNNhWIxp3b/c6dwbnkWedfWSN
rv4liXQ7kVJjOpbzl2nKbsSmy70l/xZEyv2I3Zu9jp2BecRZRx9RI/6+5C+b
xGVb
                    "], $CellContext`args$36255], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJydmmty4zgMhDMzedsWSVFzgL3SHmEusPf/t5IIoBsgHGe3Uq5K2hQl4SMe
BPPXn3/+/vPr6enpN32efvz89fzy+vb+8Xm53pZS29q3TOuZtmZay7SaaSXT
lky7Zdo10y7f1j4y7T3T3jLtNdNeMu05035l2s9M+5FpKbeM0e9t0o6RTtM3
mbT9p/G1p9b2p4nj9m9qieP278qSjFtuQSvj7by2QGte+/TjbsMyybiP90x7
25VJe5W3rc7SohVn/cNSE5Hdzt+k+R0/GmqmbQmjrU/a8fHaQW3/qCYzHu/W
KrRzZD3fOGjltILOJ9oyLDiez8aR1nS+Yekxm2mD3Hztbi279lTEgudbBO1t
NZUs3ZUcEX7Zul3vaQbqd3zzcaxTn0m4rWDENN8ij0P142QF2zhSGxhBrZgP
nyLzFf1bbIhrixKRUTbutIKOoGuvlyprqmIlXD4z7WPtzEisKow8pcGoenJj
PQdydPWDSPsoH2lUdLEOnsTjisSOjnFEzjFaRY3aqWI+jGw2Trzk/AEjJqKM
RHPXsXazeZhccz4jRETByMOCXZ+NfXMjHmbpbteTH9o4JpJG2jRvPqgZwK1G
PzrvCj9CDAx+JDMwX/W4LWPUdW2A8P6BBm5t8VyUnjGs/I2jdF4Ju4s3HJYh
QvCvvnZmN2iaH3mafZ1oxqsl0vZJQ958WAV9WddpFXI+xxT/DvXUNKKqbtda
Dol+pOSUL7LN/gy3BRbXObsywpz7p6i9LeaxBzWiqRZq4LkU8i3QNC/gqCqZ
B545aM7+elltrZF/OUZqfUQTooQq6FFN+2XtzdyWUFuMuWPe4nzkrXx1PiPP
jNwTGHkW+5PxKJ21V29hVBUNM+IJwuhSvTVF3aT+Iy88afpYvJy+aXeDz4EF
EYFG/kUrHTSpnnuwQ/lyf5TV3vRMWtdxZXHoV/CAvfRax3jhEboiXKzTSEvU
QLO5OzRerdXxo2xC3rw5HpKRO/ugjiVGRnghb9N1Y3mTPH5UQeydVtM29oG4
Q3mw3/xqD6vcStgfhTrbrK8R58axT9+WMl6zb6gqcSuC58OqtDtXPJv3I3mL
1dvUVLK9MWZKNTyN83LkI32T4u5NnKEvYo9K70w7FEQDyZvCwtk97x78R24t
7Dqn2Dnqcaonsco4Hk5WmbyRuFuFwjY1P1oxE94jjNs6XR+90HhU3IdXHUc+
81ryKufJlHELKHH9pavb7V/VnoHc8n96QYHbJxhRp4H3BrZuoqeM2pu4GUu/
ukWn2hnjUR0QR4p1sK/V4vQUvuJQmj7SybuR3XE3dwf9nSpcREuXOVQP3kVZ
xuKI2DnpGd3p7N3v1wVuyJvcIaLMghXi/UpqMO9REv3dmtf1rP0h9ZdztPcj
+b3PhJ0Scq97AmbENL0/iRr2j+NOcyZvY7+pxG39uA6PxubQMxrvHquLwrWi
43S/p5r262pQEUeIZqPYaWMRb1aL/de+upHDZ6n2Rt7kfGTsfQxzGS/SQzRF
VEVWInLUx1F/ww7F1gbtN/FWh218F07mMD8itfpuhlCe+rSt3um6p3sEcCPV
nphpMiPzTa4+bOyUUWQP63ZIoMkW19p7oskVQqBSW435RleGWZD2IpYhzY/I
j3W/aZF39GQvTE7Vqc/a0JEgRvuP7y+JOnd5250zlIzbC+UF341B/KOeao00
u/c26gUhSoIm1YbwTcpdY4bJmyRvgpbNTBSZIbjpHLZDAeG1GQ22PexONEOv
79Q2x0hHvmeqY6QzpGcoaZck4/ac+NvrC1iSyixDT5UiYqCJsah7x6yItDWo
kdGiXWKqLxZXwdEVXOkiftJ+k+oJ1+HWZ/b9OqHJ3T6LlbMfrdR1R0Reu2Ok
Y9MTsbQvmXae8/Ojues9ziaMhtHkna35ZmdP4pMRin10hkJRFactZHXUtNhH
0g4Fea6g9nY9AKvreM1rzWBRraOzx90+jnUuLoaO7qDk/Who4URMKKXnm+lJ
wN1z2EndMhX7XfZNylwUaamiQt70ewbq1yFHUk1L9ZfsUMhqBXWyeYvdbTr1
K3wOS1XT1Nk7VG93WdXR7uccr/N5SfQjWRHPyRmMP61WNT17u3NW/l2a2SlE
HmlRp4YqaPJuqmkxQ6y07u83XZfVxrqeuahzNnG1d1rX0QxzPqo+H1l9kdBo
2Wn1xGhQSk+70/9nSNWUceqxafxNs2laG6WVbrpv+X4vKFXT/VFae6d1XVoz
pPkojXWpH6WM0v8v+RdfYBdH
                    "], $CellContext`args$36255], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJzl2kli20YQhWFZHDATHJID+Eo+gi+Q++8CEYN7+BrCOllYpp4kEI2/q+pV
NX/+/ufX79PHx8ffwb+PH5+n8+Va1U3b9cNtvD+er7+kvaQ9pT2k3aWN0m7S
Bmm9tO6w1kirpVXSrtIu0s7STtI+pf2QRm6vT6mnXHu+zrn2eF5y7f645tp4
r3LtNta5NtyaXOuHNte6kFLALdeadsi1urnlWlWPuXat7rl2uT5y7Xx55trp
/Mq1z5MYmabjyIzwu5eM3KReU3Jfq6muqTZ9ratUm/5v6lSbXrVNqk2vuzbV
pu8CckG89ak2/eVtSLXpPcZbqk13cx9Tbbrv9woSbtV7rQm369duTrldQKNA
k7HpXOc4MqP8ClVK7kutE3LvVTcxufn5tBG5mdu9C8kt3MY+ILdyCzNjkCc3
cn+49eNKLuDWLe8XcWuXO4u4NfPei7nV7+yScKvy516iydhkpnU9cq5zHJlR
dt0mIfdW25jcvK+7iNzyHPuQ3PrEh4Dcyi2sacHrjdwfbsN2nYBbv+6UkFu3
5IKIWztn+5hbkz3hIk3GJjMt66Y9g+uRc53jyIzSd+ticrPaR+SWzDWE5NZI
uQXkEjJkuGnz32yRG3Ab1twccuuX6htx69JnWabJ2GSmZd2kC7Kvs2dwPXKu
cxyZUXIPQ0RuUcNnu9WmkEKaC5k1F215t61Whtde3VB0F8lT26HJ2GSmZd2k
C6Kntfe2r7NncD1yrnMcmVF8Z1FUrGqY9zL3QZ/Sh9l1c6dhNMfPZ48mY5OZ
lnWTLoielh2K+yN7b/s6ewbXI+c6x5EZRfcbOg32AOwWtitET2KXJmOTmZZ1
ky6InpYdSsYnfQ5hj7O7Yu5fZiPWFjoF+j66ePZkWkWh7/5PrO3bFXP/Mhux
ttAp8Oe8Et+Td+d1/M/W1hTmDNgh3EvcdTu+zp7B9aiY6/ZXzJ3Knc6YYPQw
zhiRjF1GOfMBo4v5szALQk5m9mae3/HePX3djmfYpbkbR2T0vQtiLWbVZn2n
E6BnoLtgPaNjKczr4ILol+isdvqjXe+9R3OvHjHXMY7I6ECHEv/eotJR03vT
pdPP00GK27UwU025zV1kzG3tN2+cM3zTw+7Q3PF19AysR8x1jCMyOjI9YA/L
bpd9MTto9mzidinMvVNu89xm5Lzu21lQmWa5P0ozbdnX8RXrEXMd44iMDk32
OF/iJIozK05JOAcrnE2k3OZJ6YGZapFmcc6QZVrWTbqgoq+jZ2A9Yq5jHJHR
sak7Z7+cEnMu6TM+nx8dOpso0WRsMtOybtIF0dPmlY01sC9MD0r1iLmOcURG
B0/EeC7DkwCfwx484yvQZGwy07Ju0gXR0w7uYekv6b3p6+gZWI+Y6xhHZHT0
tJpnb4fPyk3T50fKtJ57ywV5XqcOxXMGdnTsj+i96evoGViPmOsYR2R0+JMk
/DwDVTJmxDL/sprSG9Hpsm9hF6pu1Sr7I3pv+jp6BtYj5jrGERnx8yX/Ao8p
ydQ=
                    "], $CellContext`args$36255]}}]), 
              "Specifications" :> {{$CellContext`i$$, 1, 21, 1}}, 
              "Options" :> {}, "DefaultOptions" :> {}],
             ImageSizeCache->{537., {281.521484375, 286.478515625}},
             SingleEvaluation->True],
            Deinitialization:>None,
            DynamicModuleValues:>{},
            SynchronousInitialization->True,
            UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
            UnsavedVariables:>{Typeset`initDone$$},
            UntrackedVariables:>{Typeset`size$$}], "Manipulate",
           Deployed->True,
           StripOnInput->False],
          Manipulate`InterpretManipulate[1]]},
        {
         TagBox[
          StyleBox[
           
           DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
              Hold[$CellContext`i$$], 1, 21, 1}}, Typeset`size$$ = {
            496., {240.021484375, 244.978515625}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
            
            DynamicBox[Manipulate`ManipulateBoxes[
             1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
              "ControllerVariables" :> {}, 
              "OtherVariables" :> {
               Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$,
                 Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
                Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
                Typeset`initDone$$, Typeset`skipInitDone$$}, 
              "Body" :> (
               Part[$CellContext`args$36256, 3] = {$CellContext`i$$}; Grid[{{
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJzd2jlSXEEQhOFh3r4vPYMktERwJR2BC+j+nsQWQMSnV21j4PwGTnZWZtWb
+4c/vx+K0+l0ffd3ujkXZVU3bdcP4zQv67ani1gS28U2sVVsEZvFJrFRbMhm
nVgr1ojVYpVYKVaIncVuxKibNLpexJLYLraJrWKL2Cw2iY3ZrBfrxFqxRqwW
q8RKsULMamb6iBrdXi9iSWwX28RWsUVsFpuy2SDWi3VirVgjVotVYlaT3syb
dfQRNfryj4olsV1sE1vFFrE5m41ig1gv1om1Yo2Y1aQ3OWmz8oizjj6iRl8f
qVgS28U2sVVsyWaT2Cg2iPVinZjVpDc5aZmbOZ2BecRZRx9Ro29PVCyJ7WKb
2JrNZrFJbBQbxKwmvclJy9xkC8rodewMzCPOOvqIGt09U7Ektott2WwRm8Um
MatJb3LSMjfZgthp4+7NXsfOwDzirKOPqNH3FyqWxPZstootYlaT3uSkZW6y
BbHTckMJ9yN2b/Y6dgbmEWcdfUSNfrxSsZTNNjGrSW9y0jI32YLYabmhcN+M
dth3/yHo2exw7AfMHs41eoZ6/Hyjucxq0puctMxNtiB2Wm4o3Dd5PfjMuv36
zMod34LoYvqdk4EzhNOGc4kTjLPOakSUr4Hvhi+Mb5Gvlu+bTqBn6K7Dex1z
kwnLLGZqM9/ZBNgZnEd2TESZm0xYZjFTm/nOJsDOwHbBPDu6qbKpstOy/bIn
s1Gze7vXuTN4qkU01uiVsv2yJ7NRs3uzpbPPs0FyR+A2wb2DG4p066XbcLQf
uXu71zl5Ihr7yBrdHVwPuMNy2+VezA2aOxu3culWS7dGurXSrZNuVpPePO7e
bgcRjWedfWSNnimvRrwv8RLFmxWvJNKtlG6VdKulWyPdrCa9yUl7vB+5wUU0
ziPPOvvIGj1RXnR5++WVmHdJ6VZIt1K6VdLNatKbnLTMzeMd1i07onFncB55
1tlH1uiR8msLv8vwS4B0O0u3QrpZTXqTk5a5eXgL+kCDTSiica9zZ3AeedbZ
R9bo9j9fq/ntzd/KoZvVpDc5aZmbbEGH97oPNNhWIxp3b/c6dwbnkWedfWSN
rv4liXQ7kVJjOpbzl2nKbsSmy70l/xZEyv2I3Zu9jp2BecRZRx9RI/6+5C+b
xGVb
                    "], $CellContext`args$36256], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJydmmty4zgMhDMzedsWSVFzgL3SHmEusPf/t5IIoBsgHGe3Uq5K2hQl4SMe
BPPXn3/+/vPr6enpN32efvz89fzy+vb+8Xm53pZS29q3TOuZtmZay7SaaSXT
lky7Zdo10y7f1j4y7T3T3jLtNdNeMu05035l2s9M+5FpKbeM0e9t0o6RTtM3
mbT9p/G1p9b2p4nj9m9qieP278qSjFtuQSvj7by2QGte+/TjbsMyybiP90x7
25VJe5W3rc7SohVn/cNSE5Hdzt+k+R0/GmqmbQmjrU/a8fHaQW3/qCYzHu/W
KrRzZD3fOGjltILOJ9oyLDiez8aR1nS+Yekxm2mD3Hztbi279lTEgudbBO1t
NZUs3ZUcEX7Zul3vaQbqd3zzcaxTn0m4rWDENN8ij0P142QF2zhSGxhBrZgP
nyLzFf1bbIhrixKRUTbutIKOoGuvlyprqmIlXD4z7WPtzEisKow8pcGoenJj
PQdydPWDSPsoH2lUdLEOnsTjisSOjnFEzjFaRY3aqWI+jGw2Trzk/AEjJqKM
RHPXsXazeZhccz4jRETByMOCXZ+NfXMjHmbpbteTH9o4JpJG2jRvPqgZwK1G
PzrvCj9CDAx+JDMwX/W4LWPUdW2A8P6BBm5t8VyUnjGs/I2jdF4Ju4s3HJYh
QvCvvnZmN2iaH3mafZ1oxqsl0vZJQ958WAV9WddpFXI+xxT/DvXUNKKqbtda
Dol+pOSUL7LN/gy3BRbXObsywpz7p6i9LeaxBzWiqRZq4LkU8i3QNC/gqCqZ
B545aM7+elltrZF/OUZqfUQTooQq6FFN+2XtzdyWUFuMuWPe4nzkrXx1PiPP
jNwTGHkW+5PxKJ21V29hVBUNM+IJwuhSvTVF3aT+Iy88afpYvJy+aXeDz4EF
EYFG/kUrHTSpnnuwQ/lyf5TV3vRMWtdxZXHoV/CAvfRax3jhEboiXKzTSEvU
QLO5OzRerdXxo2xC3rw5HpKRO/ugjiVGRnghb9N1Y3mTPH5UQeydVtM29oG4
Q3mw3/xqD6vcStgfhTrbrK8R58axT9+WMl6zb6gqcSuC58OqtDtXPJv3I3mL
1dvUVLK9MWZKNTyN83LkI32T4u5NnKEvYo9K70w7FEQDyZvCwtk97x78R24t
7Dqn2Dnqcaonsco4Hk5WmbyRuFuFwjY1P1oxE94jjNs6XR+90HhU3IdXHUc+
81ryKufJlHELKHH9pavb7V/VnoHc8n96QYHbJxhRp4H3BrZuoqeM2pu4GUu/
ukWn2hnjUR0QR4p1sK/V4vQUvuJQmj7SybuR3XE3dwf9nSpcREuXOVQP3kVZ
xuKI2DnpGd3p7N3v1wVuyJvcIaLMghXi/UpqMO9REv3dmtf1rP0h9ZdztPcj
+b3PhJ0Scq97AmbENL0/iRr2j+NOcyZvY7+pxG39uA6PxubQMxrvHquLwrWi
43S/p5r262pQEUeIZqPYaWMRb1aL/de+upHDZ6n2Rt7kfGTsfQxzGS/SQzRF
VEVWInLUx1F/ww7F1gbtN/FWh218F07mMD8itfpuhlCe+rSt3um6p3sEcCPV
nphpMiPzTa4+bOyUUWQP63ZIoMkW19p7oskVQqBSW435RleGWZD2IpYhzY/I
j3W/aZF39GQvTE7Vqc/a0JEgRvuP7y+JOnd5250zlIzbC+UF341B/KOeao00
u/c26gUhSoIm1YbwTcpdY4bJmyRvgpbNTBSZIbjpHLZDAeG1GQ22PexONEOv
79Q2x0hHvmeqY6QzpGcoaZck4/ac+NvrC1iSyixDT5UiYqCJsah7x6yItDWo
kdGiXWKqLxZXwdEVXOkiftJ+k+oJ1+HWZ/b9OqHJ3T6LlbMfrdR1R0Reu2Ok
Y9MTsbQvmXae8/Ojues9ziaMhtHkna35ZmdP4pMRin10hkJRFactZHXUtNhH
0g4Fea6g9nY9AKvreM1rzWBRraOzx90+jnUuLoaO7qDk/Who4URMKKXnm+lJ
wN1z2EndMhX7XfZNylwUaamiQt70ewbq1yFHUk1L9ZfsUMhqBXWyeYvdbTr1
K3wOS1XT1Nk7VG93WdXR7uccr/N5SfQjWRHPyRmMP61WNT17u3NW/l2a2SlE
HmlRp4YqaPJuqmkxQ6y07u83XZfVxrqeuahzNnG1d1rX0QxzPqo+H1l9kdBo
2Wn1xGhQSk+70/9nSNWUceqxafxNs2laG6WVbrpv+X4vKFXT/VFae6d1XVoz
pPkojXWpH6WM0v8v+RdfYBdH
                    "], $CellContext`args$36256], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJzl2kli20YQhWFZHDATHJID+Eo+gi+Q++8CEYN7+BrCOllYpp4kEI2/q+pV
NX/+/ufX79PHx8ffwb+PH5+n8+Va1U3b9cNtvD+er7+kvaQ9pT2k3aWN0m7S
Bmm9tO6w1kirpVXSrtIu0s7STtI+pf2QRm6vT6mnXHu+zrn2eF5y7f645tp4
r3LtNta5NtyaXOuHNte6kFLALdeadsi1urnlWlWPuXat7rl2uT5y7Xx55trp
/Mq1z5MYmabjyIzwu5eM3KReU3Jfq6muqTZ9ratUm/5v6lSbXrVNqk2vuzbV
pu8CckG89ak2/eVtSLXpPcZbqk13cx9Tbbrv9woSbtV7rQm369duTrldQKNA
k7HpXOc4MqP8ClVK7kutE3LvVTcxufn5tBG5mdu9C8kt3MY+ILdyCzNjkCc3
cn+49eNKLuDWLe8XcWuXO4u4NfPei7nV7+yScKvy516iydhkpnU9cq5zHJlR
dt0mIfdW25jcvK+7iNzyHPuQ3PrEh4Dcyi2sacHrjdwfbsN2nYBbv+6UkFu3
5IKIWztn+5hbkz3hIk3GJjMt66Y9g+uRc53jyIzSd+ticrPaR+SWzDWE5NZI
uQXkEjJkuGnz32yRG3Ab1twccuuX6htx69JnWabJ2GSmZd2kC7Kvs2dwPXKu
cxyZUXIPQ0RuUcNnu9WmkEKaC5k1F215t61Whtde3VB0F8lT26HJ2GSmZd2k
C6Kntfe2r7NncD1yrnMcmVF8Z1FUrGqY9zL3QZ/Sh9l1c6dhNMfPZ48mY5OZ
lnWTLoielh2K+yN7b/s6ewbXI+c6x5EZRfcbOg32AOwWtitET2KXJmOTmZZ1
ky6InpYdSsYnfQ5hj7O7Yu5fZiPWFjoF+j66ePZkWkWh7/5PrO3bFXP/Mhux
ttAp8Oe8Et+Td+d1/M/W1hTmDNgh3EvcdTu+zp7B9aiY6/ZXzJ3Knc6YYPQw
zhiRjF1GOfMBo4v5szALQk5m9mae3/HePX3djmfYpbkbR2T0vQtiLWbVZn2n
E6BnoLtgPaNjKczr4ILol+isdvqjXe+9R3OvHjHXMY7I6ECHEv/eotJR03vT
pdPP00GK27UwU025zV1kzG3tN2+cM3zTw+7Q3PF19AysR8x1jCMyOjI9YA/L
bpd9MTto9mzidinMvVNu89xm5Lzu21lQmWa5P0ozbdnX8RXrEXMd44iMDk32
OF/iJIozK05JOAcrnE2k3OZJ6YGZapFmcc6QZVrWTbqgoq+jZ2A9Yq5jHJHR
sak7Z7+cEnMu6TM+nx8dOpso0WRsMtOybtIF0dPmlY01sC9MD0r1iLmOcURG
B0/EeC7DkwCfwx484yvQZGwy07Ju0gXR0w7uYekv6b3p6+gZWI+Y6xhHZHT0
tJpnb4fPyk3T50fKtJ57ywV5XqcOxXMGdnTsj+i96evoGViPmOsYR2R0+JMk
/DwDVTJmxDL/sprSG9Hpsm9hF6pu1Sr7I3pv+jp6BtYj5jrGERnx8yX/Ao8p
ydQ=
                    "], $CellContext`args$36256]}}]), 
              "Specifications" :> {{$CellContext`i$$, 1, 21, 1}}, 
              "Options" :> {}, "DefaultOptions" :> {}],
             ImageSizeCache->{537., {281.521484375, 286.478515625}},
             SingleEvaluation->True],
            Deinitialization:>None,
            DynamicModuleValues:>{},
            SynchronousInitialization->True,
            UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
            UnsavedVariables:>{Typeset`initDone$$},
            UntrackedVariables:>{Typeset`size$$}], "Manipulate",
           Deployed->True,
           StripOnInput->False],
          Manipulate`InterpretManipulate[1]]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.9157581223813953`*^9, 3.915758139739492*^9}},
 CellLabel->"Out[77]=",ExpressionUUID->"35f01b5d-7558-47d0-801a-18d4a3521847"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cubeLayers", "[", "outCube15", "]"}], "\n", 
 RowBox[{"cubeSlicesAllAxesSimultaneously", "[", "outCube15", "]"}], "\n", 
 RowBox[{"cubeSlicesAllAxesSeparately", "[", "outCube15", "]"}]}], "Code",
 CellChangeTimes->{{3.912421610557783*^9, 3.91242162992883*^9}, {
  3.912443214832703*^9, 3.912443266269453*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"41b7f8ba-34ea-4163-85b2-17ab13b150fc"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 11, 1}}, Typeset`size$$ = {
    372., {163., 168.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`displayCube[$CellContext`dim$34044, 
        Part[CompressedData["
1:eJydmmty4zgMhDMzedsWSVFzgL3SHmEusPf/t5IIoBsgHGe3Uq5K2hQl4SMe
BPPXn3/+/vPr6enpN32efvz89fzy+vb+8Xm53pZS29q3TOuZtmZay7SaaSXT
lky7Zdo10y7f1j4y7T3T3jLtNdNeMu05035l2s9M+5FpKbeM0e9t0o6RTtM3
mbT9p/G1p9b2p4nj9m9qieP278qSjFtuQSvj7by2QGte+/TjbsMyybiP90x7
25VJe5W3rc7SohVn/cNSE5Hdzt+k+R0/GmqmbQmjrU/a8fHaQW3/qCYzHu/W
KrRzZD3fOGjltILOJ9oyLDiez8aR1nS+Yekxm2mD3Hztbi279lTEgudbBO1t
NZUs3ZUcEX7Zul3vaQbqd3zzcaxTn0m4rWDENN8ij0P142QF2zhSGxhBrZgP
nyLzFf1bbIhrixKRUTbutIKOoGuvlyprqmIlXD4z7WPtzEisKow8pcGoenJj
PQdydPWDSPsoH2lUdLEOnsTjisSOjnFEzjFaRY3aqWI+jGw2Trzk/AEjJqKM
RHPXsXazeZhccz4jRETByMOCXZ+NfXMjHmbpbteTH9o4JpJG2jRvPqgZwK1G
PzrvCj9CDAx+JDMwX/W4LWPUdW2A8P6BBm5t8VyUnjGs/I2jdF4Ju4s3HJYh
QvCvvnZmN2iaH3mafZ1oxqsl0vZJQ958WAV9WddpFXI+xxT/DvXUNKKqbtda
Dol+pOSUL7LN/gy3BRbXObsywpz7p6i9LeaxBzWiqRZq4LkU8i3QNC/gqCqZ
B545aM7+elltrZF/OUZqfUQTooQq6FFN+2XtzdyWUFuMuWPe4nzkrXx1PiPP
jNwTGHkW+5PxKJ21V29hVBUNM+IJwuhSvTVF3aT+Iy88afpYvJy+aXeDz4EF
EYFG/kUrHTSpnnuwQ/lyf5TV3vRMWtdxZXHoV/CAvfRax3jhEboiXKzTSEvU
QLO5OzRerdXxo2xC3rw5HpKRO/ugjiVGRnghb9N1Y3mTPH5UQeydVtM29oG4
Q3mw3/xqD6vcStgfhTrbrK8R58axT9+WMl6zb6gqcSuC58OqtDtXPJv3I3mL
1dvUVLK9MWZKNTyN83LkI32T4u5NnKEvYo9K70w7FEQDyZvCwtk97x78R24t
7Dqn2Dnqcaonsco4Hk5WmbyRuFuFwjY1P1oxE94jjNs6XR+90HhU3IdXHUc+
81ryKufJlHELKHH9pavb7V/VnoHc8n96QYHbJxhRp4H3BrZuoqeM2pu4GUu/
ukWn2hnjUR0QR4p1sK/V4vQUvuJQmj7SybuR3XE3dwf9nSpcREuXOVQP3kVZ
xuKI2DnpGd3p7N3v1wVuyJvcIaLMghXi/UpqMO9REv3dmtf1rP0h9ZdztPcj
+b3PhJ0Scq97AmbENL0/iRr2j+NOcyZvY7+pxG39uA6PxubQMxrvHquLwrWi
43S/p5r262pQEUeIZqPYaWMRb1aL/de+upHDZ6n2Rt7kfGTsfQxzGS/SQzRF
VEVWInLUx1F/ww7F1gbtN/FWh218F07mMD8itfpuhlCe+rSt3um6p3sEcCPV
nphpMiPzTa4+bOyUUWQP63ZIoMkW19p7oskVQqBSW435RleGWZD2IpYhzY/I
j3W/aZF39GQvTE7Vqc/a0JEgRvuP7y+JOnd5250zlIzbC+UF341B/KOeao00
u/c26gUhSoIm1YbwTcpdY4bJmyRvgpbNTBSZIbjpHLZDAeG1GQ22PexONEOv
79Q2x0hHvmeqY6QzpGcoaZck4/ac+NvrC1iSyixDT5UiYqCJsah7x6yItDWo
kdGiXWKqLxZXwdEVXOkiftJ+k+oJ1+HWZ/b9OqHJ3T6LlbMfrdR1R0Reu2Ok
Y9MTsbQvmXae8/Ojues9ziaMhtHkna35ZmdP4pMRin10hkJRFactZHXUtNhH
0g4Fea6g9nY9AKvreM1rzWBRraOzx90+jnUuLoaO7qDk/Who4URMKKXnm+lJ
wN1z2EndMhX7XfZNylwUaamiQt70ewbq1yFHUk1L9ZfsUMhqBXWyeYvdbTr1
K3wOS1XT1Nk7VG93WdXR7uccr/N5SfQjWRHPyRmMP61WNT17u3NW/l2a2SlE
HmlRp4YqaPJuqmkxQ6y07u83XZfVxrqeuahzNnG1d1rX0QxzPqo+H1l9kdBo
2Wn1xGhQSk+70/9nSNWUceqxafxNs2laG6WVbrpv+X4vKFXT/VFae6d1XVoz
pPkojXWpH6WM0v8v+RdfYBdH
         "], 
         Span[$CellContext`i$$, -$CellContext`i$$], 
         Span[$CellContext`i$$, -$CellContext`i$$], 
         Span[$CellContext`i$$, -$CellContext`i$$]], "DeepSeaColors"], 
      "Specifications" :> {{$CellContext`i$$, 1, 11, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{413., {204.021484375, 208.978515625}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.9124216304565353`*^9, 3.912421789055585*^9, 
  3.912443216129654*^9, 3.9124432666758337`*^9, 3.912446792842936*^9, 
  3.9124472811518383`*^9, 3.912585256460669*^9, 3.913939137776622*^9, 
  3.915413111536447*^9, 3.915676669069936*^9, 3.915676944244362*^9, 
  3.9157426702571793`*^9, 3.9157579964669037`*^9, 3.915758107415635*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"6c373475-f6d7-4e14-abc9-9d31a8caf734"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 21, 1}}, Typeset`size$$ = {
    496., {240.021484375, 244.978515625}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> \
$CellContext`cubeSlicesAllAxesSimultaneouslyGrid[CompressedData["
1:eJydmmty4zgMhDMzedsWSVFzgL3SHmEusPf/t5IIoBsgHGe3Uq5K2hQl4SMe
BPPXn3/+/vPr6enpN32efvz89fzy+vb+8Xm53pZS29q3TOuZtmZay7SaaSXT
lky7Zdo10y7f1j4y7T3T3jLtNdNeMu05035l2s9M+5FpKbeM0e9t0o6RTtM3
mbT9p/G1p9b2p4nj9m9qieP278qSjFtuQSvj7by2QGte+/TjbsMyybiP90x7
25VJe5W3rc7SohVn/cNSE5Hdzt+k+R0/GmqmbQmjrU/a8fHaQW3/qCYzHu/W
KrRzZD3fOGjltILOJ9oyLDiez8aR1nS+Yekxm2mD3Hztbi279lTEgudbBO1t
NZUs3ZUcEX7Zul3vaQbqd3zzcaxTn0m4rWDENN8ij0P142QF2zhSGxhBrZgP
nyLzFf1bbIhrixKRUTbutIKOoGuvlyprqmIlXD4z7WPtzEisKow8pcGoenJj
PQdydPWDSPsoH2lUdLEOnsTjisSOjnFEzjFaRY3aqWI+jGw2Trzk/AEjJqKM
RHPXsXazeZhccz4jRETByMOCXZ+NfXMjHmbpbteTH9o4JpJG2jRvPqgZwK1G
PzrvCj9CDAx+JDMwX/W4LWPUdW2A8P6BBm5t8VyUnjGs/I2jdF4Ju4s3HJYh
QvCvvnZmN2iaH3mafZ1oxqsl0vZJQ958WAV9WddpFXI+xxT/DvXUNKKqbtda
Dol+pOSUL7LN/gy3BRbXObsywpz7p6i9LeaxBzWiqRZq4LkU8i3QNC/gqCqZ
B545aM7+elltrZF/OUZqfUQTooQq6FFN+2XtzdyWUFuMuWPe4nzkrXx1PiPP
jNwTGHkW+5PxKJ21V29hVBUNM+IJwuhSvTVF3aT+Iy88afpYvJy+aXeDz4EF
EYFG/kUrHTSpnnuwQ/lyf5TV3vRMWtdxZXHoV/CAvfRax3jhEboiXKzTSEvU
QLO5OzRerdXxo2xC3rw5HpKRO/ugjiVGRnghb9N1Y3mTPH5UQeydVtM29oG4
Q3mw3/xqD6vcStgfhTrbrK8R58axT9+WMl6zb6gqcSuC58OqtDtXPJv3I3mL
1dvUVLK9MWZKNTyN83LkI32T4u5NnKEvYo9K70w7FEQDyZvCwtk97x78R24t
7Dqn2Dnqcaonsco4Hk5WmbyRuFuFwjY1P1oxE94jjNs6XR+90HhU3IdXHUc+
81ryKufJlHELKHH9pavb7V/VnoHc8n96QYHbJxhRp4H3BrZuoqeM2pu4GUu/
ukWn2hnjUR0QR4p1sK/V4vQUvuJQmj7SybuR3XE3dwf9nSpcREuXOVQP3kVZ
xuKI2DnpGd3p7N3v1wVuyJvcIaLMghXi/UpqMO9REv3dmtf1rP0h9ZdztPcj
+b3PhJ0Scq97AmbENL0/iRr2j+NOcyZvY7+pxG39uA6PxubQMxrvHquLwrWi
43S/p5r262pQEUeIZqPYaWMRb1aL/de+upHDZ6n2Rt7kfGTsfQxzGS/SQzRF
VEVWInLUx1F/ww7F1gbtN/FWh218F07mMD8itfpuhlCe+rSt3um6p3sEcCPV
nphpMiPzTa4+bOyUUWQP63ZIoMkW19p7oskVQqBSW435RleGWZD2IpYhzY/I
j3W/aZF39GQvTE7Vqc/a0JEgRvuP7y+JOnd5250zlIzbC+UF341B/KOeao00
u/c26gUhSoIm1YbwTcpdY4bJmyRvgpbNTBSZIbjpHLZDAeG1GQ22PexONEOv
79Q2x0hHvmeqY6QzpGcoaZck4/ac+NvrC1iSyixDT5UiYqCJsah7x6yItDWo
kdGiXWKqLxZXwdEVXOkiftJ+k+oJ1+HWZ/b9OqHJ3T6LlbMfrdR1R0Reu2Ok
Y9MTsbQvmXae8/Ojues9ziaMhtHkna35ZmdP4pMRin10hkJRFactZHXUtNhH
0g4Fea6g9nY9AKvreM1rzWBRraOzx90+jnUuLoaO7qDk/Who4URMKKXnm+lJ
wN1z2EndMhX7XfZNylwUaamiQt70ewbq1yFHUk1L9ZfsUMhqBXWyeYvdbTr1
K3wOS1XT1Nk7VG93WdXR7uccr/N5SfQjWRHPyRmMP61WNT17u3NW/l2a2SlE
HmlRp4YqaPJuqmkxQ6y07u83XZfVxrqeuahzNnG1d1rX0QxzPqo+H1l9kdBo
2Wn1xGhQSk+70/9nSNWUceqxafxNs2laG6WVbrpv+X4vKFXT/VFae6d1XVoz
pPkojXWpH6WM0v8v+RdfYBdH
        "], $CellContext`i$$], 
      "Specifications" :> {{$CellContext`i$$, 1, 21, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{537., {281.521484375, 286.478515625}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.9124216304565353`*^9, 3.912421789055585*^9, 
  3.912443216129654*^9, 3.9124432666758337`*^9, 3.912446792842936*^9, 
  3.9124472811518383`*^9, 3.912585256460669*^9, 3.913939137776622*^9, 
  3.915413111536447*^9, 3.915676669069936*^9, 3.915676944244362*^9, 
  3.9157426702571793`*^9, 3.9157579964669037`*^9, 3.915758107615808*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"09a3560d-5487-4824-9344-11b3e39438c4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 21, 1}}, Typeset`size$$ = {
        162., {239.70148437500004`, 244.65851562500004`}}, Typeset`update$$ = 
        0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$34094, 
              1] = {$CellContext`i$$}; \
$CellContext`sliceGridWithHeight[CompressedData["
1:eJydmmty4zgMhDMzedsWSVFzgL3SHmEusPf/t5IIoBsgHGe3Uq5K2hQl4SMe
BPPXn3/+/vPr6enpN32efvz89fzy+vb+8Xm53pZS29q3TOuZtmZay7SaaSXT
lky7Zdo10y7f1j4y7T3T3jLtNdNeMu05035l2s9M+5FpKbeM0e9t0o6RTtM3
mbT9p/G1p9b2p4nj9m9qieP278qSjFtuQSvj7by2QGte+/TjbsMyybiP90x7
25VJe5W3rc7SohVn/cNSE5Hdzt+k+R0/GmqmbQmjrU/a8fHaQW3/qCYzHu/W
KrRzZD3fOGjltILOJ9oyLDiez8aR1nS+Yekxm2mD3Hztbi279lTEgudbBO1t
NZUs3ZUcEX7Zul3vaQbqd3zzcaxTn0m4rWDENN8ij0P142QF2zhSGxhBrZgP
nyLzFf1bbIhrixKRUTbutIKOoGuvlyprqmIlXD4z7WPtzEisKow8pcGoenJj
PQdydPWDSPsoH2lUdLEOnsTjisSOjnFEzjFaRY3aqWI+jGw2Trzk/AEjJqKM
RHPXsXazeZhccz4jRETByMOCXZ+NfXMjHmbpbteTH9o4JpJG2jRvPqgZwK1G
PzrvCj9CDAx+JDMwX/W4LWPUdW2A8P6BBm5t8VyUnjGs/I2jdF4Ju4s3HJYh
QvCvvnZmN2iaH3mafZ1oxqsl0vZJQ958WAV9WddpFXI+xxT/DvXUNKKqbtda
Dol+pOSUL7LN/gy3BRbXObsywpz7p6i9LeaxBzWiqRZq4LkU8i3QNC/gqCqZ
B545aM7+elltrZF/OUZqfUQTooQq6FFN+2XtzdyWUFuMuWPe4nzkrXx1PiPP
jNwTGHkW+5PxKJ21V29hVBUNM+IJwuhSvTVF3aT+Iy88afpYvJy+aXeDz4EF
EYFG/kUrHTSpnnuwQ/lyf5TV3vRMWtdxZXHoV/CAvfRax3jhEboiXKzTSEvU
QLO5OzRerdXxo2xC3rw5HpKRO/ugjiVGRnghb9N1Y3mTPH5UQeydVtM29oG4
Q3mw3/xqD6vcStgfhTrbrK8R58axT9+WMl6zb6gqcSuC58OqtDtXPJv3I3mL
1dvUVLK9MWZKNTyN83LkI32T4u5NnKEvYo9K70w7FEQDyZvCwtk97x78R24t
7Dqn2Dnqcaonsco4Hk5WmbyRuFuFwjY1P1oxE94jjNs6XR+90HhU3IdXHUc+
81ryKufJlHELKHH9pavb7V/VnoHc8n96QYHbJxhRp4H3BrZuoqeM2pu4GUu/
ukWn2hnjUR0QR4p1sK/V4vQUvuJQmj7SybuR3XE3dwf9nSpcREuXOVQP3kVZ
xuKI2DnpGd3p7N3v1wVuyJvcIaLMghXi/UpqMO9REv3dmtf1rP0h9ZdztPcj
+b3PhJ0Scq97AmbENL0/iRr2j+NOcyZvY7+pxG39uA6PxubQMxrvHquLwrWi
43S/p5r262pQEUeIZqPYaWMRb1aL/de+upHDZ6n2Rt7kfGTsfQxzGS/SQzRF
VEVWInLUx1F/ww7F1gbtN/FWh218F07mMD8itfpuhlCe+rSt3um6p3sEcCPV
nphpMiPzTa4+bOyUUWQP63ZIoMkW19p7oskVQqBSW435RleGWZD2IpYhzY/I
j3W/aZF39GQvTE7Vqc/a0JEgRvuP7y+JOnd5250zlIzbC+UF341B/KOeao00
u/c26gUhSoIm1YbwTcpdY4bJmyRvgpbNTBSZIbjpHLZDAeG1GQ22PexONEOv
79Q2x0hHvmeqY6QzpGcoaZck4/ac+NvrC1iSyixDT5UiYqCJsah7x6yItDWo
kdGiXWKqLxZXwdEVXOkiftJ+k+oJ1+HWZ/b9OqHJ3T6LlbMfrdR1R0Reu2Ok
Y9MTsbQvmXae8/Ojues9ziaMhtHkna35ZmdP4pMRin10hkJRFactZHXUtNhH
0g4Fea6g9nY9AKvreM1rzWBRraOzx90+jnUuLoaO7qDk/Who4URMKKXnm+lJ
wN1z2EndMhX7XfZNylwUaamiQt70ewbq1yFHUk1L9ZfsUMhqBXWyeYvdbTr1
K3wOS1XT1Nk7VG93WdXR7uccr/N5SfQjWRHPyRmMP61WNT17u3NW/l2a2SlE
HmlRp4YqaPJuqmkxQ6y07u83XZfVxrqeuahzNnG1d1rX0QxzPqo+H1l9kdBo
2Wn1xGhQSk+70/9nSNWUceqxafxNs2laG6WVbrpv+X4vKFXT/VFae6d1XVoz
pPkojXWpH6WM0v8v+RdfYBdH
             "], $CellContext`args$34094]), 
          "Specifications" :> {{$CellContext`i$$, 1, 21, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{218., {281.021484375, 285.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 21, 1}}, Typeset`size$$ = {
        162., {239.70148437500004`, 244.65851562500004`}}, Typeset`update$$ = 
        0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$34095, 
              2] = {$CellContext`i$$}; \
$CellContext`sliceGridWithHeight[CompressedData["
1:eJydmmty4zgMhDMzedsWSVFzgL3SHmEusPf/t5IIoBsgHGe3Uq5K2hQl4SMe
BPPXn3/+/vPr6enpN32efvz89fzy+vb+8Xm53pZS29q3TOuZtmZay7SaaSXT
lky7Zdo10y7f1j4y7T3T3jLtNdNeMu05035l2s9M+5FpKbeM0e9t0o6RTtM3
mbT9p/G1p9b2p4nj9m9qieP278qSjFtuQSvj7by2QGte+/TjbsMyybiP90x7
25VJe5W3rc7SohVn/cNSE5Hdzt+k+R0/GmqmbQmjrU/a8fHaQW3/qCYzHu/W
KrRzZD3fOGjltILOJ9oyLDiez8aR1nS+Yekxm2mD3Hztbi279lTEgudbBO1t
NZUs3ZUcEX7Zul3vaQbqd3zzcaxTn0m4rWDENN8ij0P142QF2zhSGxhBrZgP
nyLzFf1bbIhrixKRUTbutIKOoGuvlyprqmIlXD4z7WPtzEisKow8pcGoenJj
PQdydPWDSPsoH2lUdLEOnsTjisSOjnFEzjFaRY3aqWI+jGw2Trzk/AEjJqKM
RHPXsXazeZhccz4jRETByMOCXZ+NfXMjHmbpbteTH9o4JpJG2jRvPqgZwK1G
PzrvCj9CDAx+JDMwX/W4LWPUdW2A8P6BBm5t8VyUnjGs/I2jdF4Ju4s3HJYh
QvCvvnZmN2iaH3mafZ1oxqsl0vZJQ958WAV9WddpFXI+xxT/DvXUNKKqbtda
Dol+pOSUL7LN/gy3BRbXObsywpz7p6i9LeaxBzWiqRZq4LkU8i3QNC/gqCqZ
B545aM7+elltrZF/OUZqfUQTooQq6FFN+2XtzdyWUFuMuWPe4nzkrXx1PiPP
jNwTGHkW+5PxKJ21V29hVBUNM+IJwuhSvTVF3aT+Iy88afpYvJy+aXeDz4EF
EYFG/kUrHTSpnnuwQ/lyf5TV3vRMWtdxZXHoV/CAvfRax3jhEboiXKzTSEvU
QLO5OzRerdXxo2xC3rw5HpKRO/ugjiVGRnghb9N1Y3mTPH5UQeydVtM29oG4
Q3mw3/xqD6vcStgfhTrbrK8R58axT9+WMl6zb6gqcSuC58OqtDtXPJv3I3mL
1dvUVLK9MWZKNTyN83LkI32T4u5NnKEvYo9K70w7FEQDyZvCwtk97x78R24t
7Dqn2Dnqcaonsco4Hk5WmbyRuFuFwjY1P1oxE94jjNs6XR+90HhU3IdXHUc+
81ryKufJlHELKHH9pavb7V/VnoHc8n96QYHbJxhRp4H3BrZuoqeM2pu4GUu/
ukWn2hnjUR0QR4p1sK/V4vQUvuJQmj7SybuR3XE3dwf9nSpcREuXOVQP3kVZ
xuKI2DnpGd3p7N3v1wVuyJvcIaLMghXi/UpqMO9REv3dmtf1rP0h9ZdztPcj
+b3PhJ0Scq97AmbENL0/iRr2j+NOcyZvY7+pxG39uA6PxubQMxrvHquLwrWi
43S/p5r262pQEUeIZqPYaWMRb1aL/de+upHDZ6n2Rt7kfGTsfQxzGS/SQzRF
VEVWInLUx1F/ww7F1gbtN/FWh218F07mMD8itfpuhlCe+rSt3um6p3sEcCPV
nphpMiPzTa4+bOyUUWQP63ZIoMkW19p7oskVQqBSW435RleGWZD2IpYhzY/I
j3W/aZF39GQvTE7Vqc/a0JEgRvuP7y+JOnd5250zlIzbC+UF341B/KOeao00
u/c26gUhSoIm1YbwTcpdY4bJmyRvgpbNTBSZIbjpHLZDAeG1GQ22PexONEOv
79Q2x0hHvmeqY6QzpGcoaZck4/ac+NvrC1iSyixDT5UiYqCJsah7x6yItDWo
kdGiXWKqLxZXwdEVXOkiftJ+k+oJ1+HWZ/b9OqHJ3T6LlbMfrdR1R0Reu2Ok
Y9MTsbQvmXae8/Ojues9ziaMhtHkna35ZmdP4pMRin10hkJRFactZHXUtNhH
0g4Fea6g9nY9AKvreM1rzWBRraOzx90+jnUuLoaO7qDk/Who4URMKKXnm+lJ
wN1z2EndMhX7XfZNylwUaamiQt70ewbq1yFHUk1L9ZfsUMhqBXWyeYvdbTr1
K3wOS1XT1Nk7VG93WdXR7uccr/N5SfQjWRHPyRmMP61WNT17u3NW/l2a2SlE
HmlRp4YqaPJuqmkxQ6y07u83XZfVxrqeuahzNnG1d1rX0QxzPqo+H1l9kdBo
2Wn1xGhQSk+70/9nSNWUceqxafxNs2laG6WVbrpv+X4vKFXT/VFae6d1XVoz
pPkojXWpH6WM0v8v+RdfYBdH
             "], $CellContext`args$34095]), 
          "Specifications" :> {{$CellContext`i$$, 1, 21, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{218., {281.021484375, 285.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 21, 1}}, Typeset`size$$ = {
        162., {239.70148437500004`, 244.65851562500004`}}, Typeset`update$$ = 
        0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$34096, 
              3] = {$CellContext`i$$}; \
$CellContext`sliceGridWithHeight[CompressedData["
1:eJydmmty4zgMhDMzedsWSVFzgL3SHmEusPf/t5IIoBsgHGe3Uq5K2hQl4SMe
BPPXn3/+/vPr6enpN32efvz89fzy+vb+8Xm53pZS29q3TOuZtmZay7SaaSXT
lky7Zdo10y7f1j4y7T3T3jLtNdNeMu05035l2s9M+5FpKbeM0e9t0o6RTtM3
mbT9p/G1p9b2p4nj9m9qieP278qSjFtuQSvj7by2QGte+/TjbsMyybiP90x7
25VJe5W3rc7SohVn/cNSE5Hdzt+k+R0/GmqmbQmjrU/a8fHaQW3/qCYzHu/W
KrRzZD3fOGjltILOJ9oyLDiez8aR1nS+Yekxm2mD3Hztbi279lTEgudbBO1t
NZUs3ZUcEX7Zul3vaQbqd3zzcaxTn0m4rWDENN8ij0P142QF2zhSGxhBrZgP
nyLzFf1bbIhrixKRUTbutIKOoGuvlyprqmIlXD4z7WPtzEisKow8pcGoenJj
PQdydPWDSPsoH2lUdLEOnsTjisSOjnFEzjFaRY3aqWI+jGw2Trzk/AEjJqKM
RHPXsXazeZhccz4jRETByMOCXZ+NfXMjHmbpbteTH9o4JpJG2jRvPqgZwK1G
PzrvCj9CDAx+JDMwX/W4LWPUdW2A8P6BBm5t8VyUnjGs/I2jdF4Ju4s3HJYh
QvCvvnZmN2iaH3mafZ1oxqsl0vZJQ958WAV9WddpFXI+xxT/DvXUNKKqbtda
Dol+pOSUL7LN/gy3BRbXObsywpz7p6i9LeaxBzWiqRZq4LkU8i3QNC/gqCqZ
B545aM7+elltrZF/OUZqfUQTooQq6FFN+2XtzdyWUFuMuWPe4nzkrXx1PiPP
jNwTGHkW+5PxKJ21V29hVBUNM+IJwuhSvTVF3aT+Iy88afpYvJy+aXeDz4EF
EYFG/kUrHTSpnnuwQ/lyf5TV3vRMWtdxZXHoV/CAvfRax3jhEboiXKzTSEvU
QLO5OzRerdXxo2xC3rw5HpKRO/ugjiVGRnghb9N1Y3mTPH5UQeydVtM29oG4
Q3mw3/xqD6vcStgfhTrbrK8R58axT9+WMl6zb6gqcSuC58OqtDtXPJv3I3mL
1dvUVLK9MWZKNTyN83LkI32T4u5NnKEvYo9K70w7FEQDyZvCwtk97x78R24t
7Dqn2Dnqcaonsco4Hk5WmbyRuFuFwjY1P1oxE94jjNs6XR+90HhU3IdXHUc+
81ryKufJlHELKHH9pavb7V/VnoHc8n96QYHbJxhRp4H3BrZuoqeM2pu4GUu/
ukWn2hnjUR0QR4p1sK/V4vQUvuJQmj7SybuR3XE3dwf9nSpcREuXOVQP3kVZ
xuKI2DnpGd3p7N3v1wVuyJvcIaLMghXi/UpqMO9REv3dmtf1rP0h9ZdztPcj
+b3PhJ0Scq97AmbENL0/iRr2j+NOcyZvY7+pxG39uA6PxubQMxrvHquLwrWi
43S/p5r262pQEUeIZqPYaWMRb1aL/de+upHDZ6n2Rt7kfGTsfQxzGS/SQzRF
VEVWInLUx1F/ww7F1gbtN/FWh218F07mMD8itfpuhlCe+rSt3um6p3sEcCPV
nphpMiPzTa4+bOyUUWQP63ZIoMkW19p7oskVQqBSW435RleGWZD2IpYhzY/I
j3W/aZF39GQvTE7Vqc/a0JEgRvuP7y+JOnd5250zlIzbC+UF341B/KOeao00
u/c26gUhSoIm1YbwTcpdY4bJmyRvgpbNTBSZIbjpHLZDAeG1GQ22PexONEOv
79Q2x0hHvmeqY6QzpGcoaZck4/ac+NvrC1iSyixDT5UiYqCJsah7x6yItDWo
kdGiXWKqLxZXwdEVXOkiftJ+k+oJ1+HWZ/b9OqHJ3T6LlbMfrdR1R0Reu2Ok
Y9MTsbQvmXae8/Ojues9ziaMhtHkna35ZmdP4pMRin10hkJRFactZHXUtNhH
0g4Fea6g9nY9AKvreM1rzWBRraOzx90+jnUuLoaO7qDk/Who4URMKKXnm+lJ
wN1z2EndMhX7XfZNylwUaamiQt70ewbq1yFHUk1L9ZfsUMhqBXWyeYvdbTr1
K3wOS1XT1Nk7VG93WdXR7uccr/N5SfQjWRHPyRmMP61WNT17u3NW/l2a2SlE
HmlRp4YqaPJuqmkxQ6y07u83XZfVxrqeuahzNnG1d1rX0QxzPqo+H1l9kdBo
2Wn1xGhQSk+70/9nSNWUceqxafxNs2laG6WVbrpv+X4vKFXT/VFae6d1XVoz
pPkojXWpH6WM0v8v+RdfYBdH
             "], $CellContext`args$34096]), 
          "Specifications" :> {{$CellContext`i$$, 1, 21, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{218., {281.021484375, 285.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.9124216304565353`*^9, 3.912421789055585*^9, 
  3.912443216129654*^9, 3.9124432666758337`*^9, 3.912446792842936*^9, 
  3.9124472811518383`*^9, 3.912585256460669*^9, 3.913939137776622*^9, 
  3.915413111536447*^9, 3.915676669069936*^9, 3.915676944244362*^9, 
  3.9157426702571793`*^9, 3.9157579964669037`*^9, 3.915758107734502*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"dab5fc40-8747-41fa-b6e9-c33c251894a1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"viewChangeSteps", "[", 
        RowBox[{
        "n_", ",", " ", "maxGrid_", ",", " ", "minGrid_", ",", " ", 
         "steps_"}], "]"}], " ", ":=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"gridsList", " ", "=", " ", 
            RowBox[{"NestList", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"oneStep", "[", 
                RowBox[{"n", ",", " ", 
                 RowBox[{"Sequence", " ", "@@", " ", "#"}]}], "]"}], " ", 
               "&"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}], ",", " ", 
              "steps"}], "]"}]}], ";", " ", "\n", 
           RowBox[{"Manipulate", "[", 
            RowBox[{
             RowBox[{"Grid", "[", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"displayCube", "[", 
                  RowBox[{"n", ",", " ", 
                   RowBox[{
                    RowBox[{"gridsList", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", " ", 
                 RowBox[{"displayCube", "[", 
                  RowBox[{"n", ",", " ", 
                   RowBox[{
                    RowBox[{"gridsList", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "}"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "1", ",", "steps", ",", "1"}], "}"}]}], 
            "]"}]}], ")"}], "\n", "\n", 
         RowBox[{"checkHeightDifference", "[", 
          RowBox[{"n_", ",", " ", "maxGrid_", ",", " ", "minGrid_"}], "]"}]}],
         " ", ":=", " ", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"maxGrid", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", " ", "j", ",", " ", "k"}], "]"}], "]"}], 
              " ", "-", " ", 
              RowBox[{"minGrid", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", " ", "j", ",", " ", "k"}], "]"}], "]"}]}], 
             "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", "2", ",", " ", 
              RowBox[{"n", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"j", ",", " ", "2", ",", " ", 
              RowBox[{"n", " ", "-", " ", "1"}]}], "}"}]}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"k", ",", " ", "2", ",", " ", 
            RowBox[{"n", " ", "-", " ", "1"}]}], "}"}]}], "]"}]}]}], ",", " ",
       "2"}], "]"}], "\n", "\n", 
    RowBox[{"viewAfterSteps", "[", 
     RowBox[{
     "n_", ",", " ", "maxGrid_", ",", " ", "minGrid_", ",", " ", "steps_", 
      ",", " ", "logInterval_", ",", " ", "prevStep_"}], "]"}]}], " ", ":=", 
   " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"step", " ", "=", " ", "prevStep"}], "}"}], ",", "\n", "  ", 
       RowBox[{
        RowBox[{"PrintTemporary", "[", 
         RowBox[{"ProgressIndicator", "[", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"step", "/", 
            RowBox[{"(", 
             RowBox[{"steps", " ", "+", " ", "prevStep"}], ")"}]}], "]"}], 
          "]"}], "]"}], ";", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"time", ",", " ", "finalGrids"}], "}"}], " ", "=", " ", 
         RowBox[{"AbsoluteTiming", "[", 
          RowBox[{"Catch", "[", 
           RowBox[{"Nest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", "\n", "  ", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"step", ",", " ", "logInterval"}], "]"}], " ", "==",
                     " ", "0"}], " ", "||", " ", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ",", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Export", "[", 
                    RowBox[{
                    RowBox[{"StringJoin", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", " ", 
                    "\"\<output files/coupling_\>\"", ",", " ", 
                    RowBox[{"ToString", "[", "n", "]"}], ",", " ", 
                    "\"\</log_\>\"", ",", " ", 
                    RowBox[{"ToString", "[", "step", "]"}], ",", " ", 
                    "\"\<.mx\>\""}], "]"}], ",", " ", "#"}], "]"}], ";", " ", 
                    "\n", "    ", 
                    RowBox[{"Print", "[", 
                    RowBox[{"checkHeightDifference", "[", 
                    RowBox[{"n", ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ")"}]}],
                  "]"}], ";", " ", "\n", "  ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                  RowBox[{"Throw", "[", "#", "]"}]}], "]"}], ";", " ", "\n", 
                "  ", 
                RowBox[{"step", "++"}], ";", " ", "\n", "  ", 
                RowBox[{"oneStep", "[", 
                 RowBox[{"n", ",", " ", 
                  RowBox[{"Sequence", " ", "@@", " ", "#"}]}], "]"}]}], ")"}],
               " ", "&"}], ",", " ", "\n", "  ", 
             RowBox[{"{", 
              RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}], ",", " ", 
             RowBox[{"steps", " ", "+", " ", "1"}]}], "]"}], "]"}], "]"}]}], 
        ";", "\n", "  ", 
        RowBox[{"{", 
         RowBox[{"time", ",", " ", "step", ",", " ", "finalGrids"}], 
         "}"}]}]}], "\n", "]"}], "\n", "\n", 
     RowBox[{"displayTime", "[", "time_", "]"}]}], " ", ":=", " ", 
    RowBox[{"DateString", "[", 
     RowBox[{"time", ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Hour\>\"", ",", " ", "\"\<:\>\"", ",", " ", "\"\<Minute\>\"", ",",
         " ", "\"\<:\>\"", ",", " ", "\"\<Second\>\""}], "}"}]}], "]"}]}]}], 
  "*)"}]], "Code",
 CellChangeTimes->{{3.896460701243726*^9, 3.896460711875445*^9}, {
   3.8965083628926687`*^9, 3.8965083911961737`*^9}, 3.912412819884923*^9},
 CellLabel->
  "In[158]:=",ExpressionUUID->"974ffde9-b169-46f3-a1ad-6a3e27e09793"]
}, Open  ]]
},
WindowSize->{1440., 758.25},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>0.9 Inherited,
FrontEndVersion->"13.0 for Linux x86 (64-bit) (December 2, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["DarkStyle for Notebooks", "Title"], 
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Tongue menu cells", "Section"], 
         Cell[
          StyleData[
          "WolframAlphaShort", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "WolframAlphaLong", "Backspace" -> "Input"}, EvaluationMode -> 
          "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaShortInput", StyleDefinitions -> StyleData["Input"]], 
          EvaluationMode -> "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]], 
              CellBaseline -> Baseline], None}, {None, None}}, ShowCodeAssist -> 
          False, FormatType -> TextForm, FontFamily -> "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaLong", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "Input", "Backspace" -> "WolframAlphaShort"}, 
          EvaluationMode -> "WolframAlphaLong", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[WolframAlphaPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData["WolframAlphaFullOutput"], 
          CellMargins -> {{20, 10}, {Inherited, Inherited}}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ExternalLanguage"], CellFrame -> 1, 
             CellMargins -> {{66, 10}, {8, 8}}, 
             StyleKeyMapping -> {"Backspace" -> "Input"}, Evaluatable -> True,
              EvaluationMode -> "ExternalLanguage", CellGroupingRules -> 
             "InputGrouping", StripStyleOnPaste -> True, 
             CellEvaluationLanguage -> "Python", 
             CellFrameMargins -> {{4, 8}, {8, 8}}, CellFrameColor -> 
             RGBColor[0.2549, 0.23137, 0.42549], CellFrameLabels -> {{
                Cell[
                 BoxData[
                  DynamicBox[
                   ToBoxes[
                   ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged; 
                    FrontEnd`Private`MakeExternalLanguageMenu[
                    ExternalEvaluate`FE`GetDefaultCellEvaluationLanguage[], 
                    ExternalEvaluate`FE`GetExternalLanguageMenuData[]], 
                    StandardForm], 
                   TrackedSymbols :> {
                    ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged}, 
                   ImageSizeCache -> {
                    35., {10.64208984375, 17.35791015625}}]], "Output", 
                 Background -> None, CellFrame -> 0], None}, {None, None}}, 
             CellFrameLabelMargins -> 0, AllowInlineCells -> False, 
             Hyphenation -> False, AutoQuoteCharacters -> {}, 
             PasteAutoQuoteCharacters -> {}, LanguageCategory -> "Formula", 
             ScriptLevel -> 1, MenuSortingValue -> 1800, FontFamily -> Dynamic[
               CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
             FontColor -> GrayLevel[0.97], Background -> 
             RGBColor[0.18, 0.172, 0.22]], 
            Cell[
             StyleData["ExternalLanguage", "Presentation"], 
             CellMargins -> {{101, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "SlideShow"], ShowGroupOpener -> 
             False, CellMargins -> {{110, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "Printout"], 
             CellMargins -> {{48, 10}, {8, 8}}, 
             CellFrameMargins -> {{2, 8}, {8, 8}}]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Notebook options settings", "Section"], 
         Cell[
          StyleData[All, "Working"], InitializationCellEvaluation -> False, 
          DockedCells -> None, DefaultNewCellStyle -> "Code", 
          ShowPredictiveInterface -> False], 
         Cell[
          StyleData["Notebook"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0., 0.8, 1], "HoverColor" -> 
            RGBColor[0.78, 0.64, 1], "Thickness" -> 1.3, "Widths" -> {2, 8}}, 
          StyleKeyMapping -> {
           "==" -> "WolframAlphaLong", "Backspace" -> "WolframAlphaShort", 
            "=" -> "WolframAlphaShort", "*" -> "Item", ">" -> 
            "ExternalLanguage", "Backspace" -> "Code"}, 
          AutoStyleOptions -> {
           "CommentStyle" -> {
             FontColor -> RGBColor[0.89, 0.56, 1., 0.95], ShowAutoStyles -> 
              False, ShowSyntaxStyles -> False, AutoNumberFormatting -> 
              False}, "ExcessArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "FunctionLocalVariableStyle" -> {
             FontColor -> RGBColor[0.52549, 0.843137, 1.]}, 
            "GraphicsCompatibilityProblemStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "LocalScopeConflictStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "LocalVariableStyle" -> {
             FontColor -> RGBColor[0., 0.8200000000000001, 0.32]}, 
            "MissingArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "MisspelledWordStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "NoKernelPresentStyle" -> {
             FontColor -> 
              RGBColor[
               0.16470588235294117`, 0.6313725490196078, 0.596078431372549]}, 
            "PatternVariableStyle" -> {
             FontColor -> RGBColor[0.11, 1., 0.08], FontSlant -> "Italic"}, 
            "StringStyle" -> {
             FontColor -> RGBColor[0.98, 0.71, 0.], ShowAutoStyles -> False, 
              ShowSyntaxStyles -> False, AutoNumberFormatting -> False}, 
            "UndefinedSymbolStyle" -> {FontColor -> RGBColor[0.42, 0.94, 1]}, 
            "UnknownOptionStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "UnwantedAssignmentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 
                0.1843137254901961]}}, 
          CodeAssistOptions -> {
           "AutoConvertEnable" -> False, 
            "HeadHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}, "MatchHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}}, TranslationOptions -> {"Language" -> None}, FontColor -> 
          RGBColor[0, 0.7, 1], Background -> GrayLevel[0.15]], 
         Cell[
          StyleData["DialogStyle"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["NotebookObject"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["LinguisticAssistant"], FontColor -> 
          RGBColor[0, 0.7, 1]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Title and Section Cells", "Section"], 
         Cell[
          StyleData["Title"], FontColor -> GrayLevel[1]], 
         Cell[
          StyleData["Chapter"], FontColor -> RGBColor[0.8, 0.8, 0.8]], 
         Cell[
          StyleData["Subchapter"], FontColor -> RGBColor[0.65, 0.05, 0.65]], 
         Cell[
          StyleData["Subtitle"], FontColor -> 
          RGBColor[0.196078, 0.694118, 0.862745]], 
         Cell[
          StyleData["Subsubtitle"], FontColor -> 
          RGBColor[0.196078, 0.394118, 0.562745]], 
         Cell[
          StyleData["Subsubtitle"]], 
         Cell[
          StyleData["Section"], FontColor -> 
          RGBColor[
           0.1399099717708095, 0.5224231326771954, 0.6501869230182346]], 
         Cell[
          StyleData["Subsection"], FontColor -> GrayLevel[0.749996]], 
         Cell[
          StyleData["Subsubsection"], FontColor -> 
          RGBColor[0.823529, 0.490654, 0.202274]], 
         Cell[
          StyleData["Subsubsubsection"], FontColor -> 
          RGBColor[0.954147, 0.694224, 0.124651]], 
         Cell[
          StyleData["Subsubsubsubsection"], FontColor -> 
          RGBColor[0.913237, 0.365469, 0.0854353]], 
         Cell[
          StyleData["Text"], FontFamily -> "Gill Sans Light", FontSize -> 14, 
          FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
          GrayLevel[0.683803]], 
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[0, 0.7, 1]], CellMargins -> {{81, 10}, {4, 8}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "Subitem", "*" -> "Subitem"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "Item", 
          CounterAssignments -> {{"Subitem", 0}, {"Subsubitem", 0}}, 
          MenuSortingValue -> 1600, FontFamily -> "Source Sans Pro", FontSize -> 
          15], 
         Cell[
          StyleData["ItemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubsubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          CellGroupData[{
            Cell["Chapter", "Subsection"], 
            Cell[
             StyleData["Chapter"], CounterIncrements -> "Chapter", 
             CounterAssignments -> {{"Subchapter", 0}, {"Section", 0}, {
               "Equation", 0}, {"Figure", 0}, {"Subsubtitle", 0}, {
               "Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1150, 
             MenuCommandKey :> "2"], 
            Cell[
             StyleData["Subchapter"], CellDingbat -> 
             StyleBox["\[MathematicaIcon]", Alignment -> Baseline, 
               RGBColor[0., 0.043, 0.9]], CounterIncrements -> "Subchapter", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1200, 
             MenuCommandKey :> "3"]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Input and Output cells", "Section"], 
         Cell[
          StyleData["Code"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontWeight -> Plain, FontColor -> GrayLevel[1], 
          Background -> GrayLevel[0.1]], 
         Cell[
          StyleData["InitializationCell"], 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellFrameMargins -> {{10, 10}, {5, 5}}, CellFrameLabelMargins -> -5,
           FontColor -> GrayLevel[1], Background -> GrayLevel[0.25]], 
         Cell[
          StyleData["Input"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontColor -> GrayLevel[0.7]], 
         Cell[
          StyleData["Output"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontSize -> 13], 
         
         Cell[
          StyleData["Message"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          RGBColor[
           0.704600595101854, 0.24277103837644007`, 0.22278171969176777`]], 
         Cell[
          StyleData["Print"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          GrayLevel[0.3]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["misc", "Section"], 
         Cell[
          StyleData["InformationCell"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.760174, 0.600641, 0.675288]}, FontColor -> 
          GrayLevel[0.3]], 
         Cell[
          StyleData["InformationLink"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["InformationLinkLF"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["CellLabel"], 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontSize -> 9]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Formulas and Programming", "Section"], 
         Cell[
          StyleData["DisplayFormula"], FontColor -> GrayLevel[0.85]], 
         Cell[
          StyleData["DisplayFormulaNumbered"], FontColor -> GrayLevel[0.85]], 
         
         Cell[
          StyleData["Program"], CellFrameColor -> GrayLevel[0.4]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          TextData[{"Styles for ", 
            StyleBox["Mathematica", FontSlant -> "Italic"], 
            " System\[Hyphen]specific Elements"}], "Section", 
          CellChangeTimes -> {{3.601920784160323*^9, 3.60192078489342*^9}, 
            3.60356525124664*^9, {3.6037117681643677`*^9, 
            3.6037117683195887`*^9}}], 
         Cell[
          CellGroupData[{
            Cell["FormatType Styles", "Subsection"], 
            Cell[
             StyleData["StandardForm"]], 
            Cell[
             StyleData["CellExpression"], FontColor -> GrayLevel[0], 
             Background -> GrayLevel[0.75]], 
            Cell[
             StyleData["CellLabel"], FontSize -> 9, FontColor -> 
             RGBColor[0.603861, 0.615915, 0.607843]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
            "Graphics Styles", "Subsection", 
             CellChangeTimes -> {{3.603565272271762*^9, 
              3.603565284491351*^9}}], 
            Cell[
             StyleData["GraphicsAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["GraphicsFrame"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["Graphics3DAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Arial", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]]}, 
           Open]]}, Open]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "13.0 for Linux x86 (64-bit) (December 2, 2021)", StyleDefinitions -> 
  "Default.nb"],
ExpressionUUID->"15b5dd27-6829-4586-82c0-a7ea75e62e6d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 75, 0, 34, "CodeText",ExpressionUUID->"ec0c784a-ce9d-4c5a-b232-cf84abfadbcd"],
Cell[636, 22, 436, 8, 40, "Text",ExpressionUUID->"1c0f1225-b49f-4433-89f2-3809bd6fabfe"],
Cell[CellGroupData[{
Cell[1097, 34, 2752, 67, 200, "Code",ExpressionUUID->"e646de66-4019-4a45-9f24-b862c681f906"],
Cell[3852, 103, 439, 10, 26, "Message",ExpressionUUID->"4e896bef-be97-4176-9320-885695276cad"],
Cell[4294, 115, 305, 6, 22, "Output",ExpressionUUID->"16f1a296-eb73-47de-b328-a8609255a50c"]
}, Open  ]],
Cell[4614, 124, 553, 11, 81, "Text",ExpressionUUID->"7def9534-b5ec-46ec-afcf-1dbb61179113"],
Cell[5170, 137, 395, 8, 42, "Input",ExpressionUUID->"5bd8729e-1b5d-4b5f-b063-cb7f0991f434"],
Cell[5568, 147, 162, 3, 28, "Text",ExpressionUUID->"8a942dd6-5ed6-43b7-bf58-29d355d7d106"],
Cell[5733, 152, 545, 12, 50, "Code",ExpressionUUID->"25294259-c6c3-46b8-9874-58800bbfe360"],
Cell[6281, 166, 192, 6, 46, "Text",ExpressionUUID->"137fda44-2f58-466e-b9cf-77f14954051f"],
Cell[6476, 174, 3675, 100, 275, "Code",ExpressionUUID->"27a3c9a8-323b-4c69-ac0d-666ac9c09b77"],
Cell[10154, 276, 339, 7, 28, "Text",ExpressionUUID->"ba87411f-0479-4ab8-9fa6-a40adbcfb0e3"],
Cell[10496, 285, 10709, 267, 632, "Code",ExpressionUUID->"fcac06f5-8334-4b9b-ad54-5a70c0e8fdd2"],
Cell[21208, 554, 14885, 303, 500, "Code",ExpressionUUID->"34a5ce17-7bbe-4b28-b8dc-8f3c89a7e4af"],
Cell[36096, 859, 5804, 135, 257, "Code",ExpressionUUID->"43c9ca43-dc34-48cc-ba70-58f0db2b1acf"],
Cell[41903, 996, 2769, 41, 347, "Text",ExpressionUUID->"b80fafbb-a30b-4188-b067-42d643f41c2b"],
Cell[44675, 1039, 226, 5, 28, "Text",ExpressionUUID->"6a96f75d-b63c-4ba2-8b45-4bd36c7e4e16"],
Cell[44904, 1046, 27378, 657, 1025, "Code",ExpressionUUID->"1cb6fad7-3d75-46e5-bdfd-cc2c5aa8136f"],
Cell[CellGroupData[{
Cell[72307, 1707, 333, 6, 31, "Code",ExpressionUUID->"f4ba13d1-148e-4edf-aee7-cb940163b900"],
Cell[72643, 1715, 19188, 359, 2161, "Output",ExpressionUUID->"3d095aeb-e7d5-4e73-b9a7-92289c1d2ffb"]
}, Open  ]],
Cell[91846, 2077, 490, 9, 31, "Code",ExpressionUUID->"e4a19d2d-941b-4e72-be2b-a9812fd4f8fc"],
Cell[92339, 2088, 335, 7, 31, "Code",ExpressionUUID->"9795074e-43fb-4107-b494-babd7733eaec"],
Cell[CellGroupData[{
Cell[92699, 2099, 187, 3, 49, "Subsection",ExpressionUUID->"3cf80991-5947-4fae-80f3-2de0a0a27c13"],
Cell[CellGroupData[{
Cell[92911, 2106, 303, 5, 31, "Code",ExpressionUUID->"4010bd6b-b10a-4a65-9a18-a530dbaa938a"],
Cell[93217, 2113, 493, 11, 26, "Message",ExpressionUUID->"5cba76dd-9b79-44a9-8f94-ae878b8ba7fe"],
Cell[93713, 2126, 10808, 269, 101, "Output",ExpressionUUID->"f4a347de-8587-41f9-97f0-6fdeeedea021"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104558, 2400, 275, 4, 31, "Code",ExpressionUUID->"52c139c6-ba1f-4750-b7c4-512e8ca86c1c"],
Cell[104836, 2406, 203, 3, 22, "Output",ExpressionUUID->"a61ac58d-31b8-4dfd-89a5-771a2f2dc211"]
}, Open  ]],
Cell[105054, 2412, 1563, 38, 125, "Code",ExpressionUUID->"2148de09-ed05-4808-bed8-2a80b8dfc5bc"],
Cell[CellGroupData[{
Cell[106642, 2454, 729, 11, 31, "Code",ExpressionUUID->"57af5111-0f01-4f8c-80d8-9d8ac3a7ab54"],
Cell[107374, 2467, 4031, 75, 262, "Output",ExpressionUUID->"2cbfa9f8-b5ef-4f8f-bce8-f3395ae79830"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111442, 2547, 797, 11, 50, "Code",ExpressionUUID->"1c71fc96-a296-4b0b-ab7f-73c9848f5424"],
Cell[112242, 2560, 3609, 65, 579, "Output",ExpressionUUID->"1f2525b1-cb7c-4305-8418-60a92a3a8ca5"],
Cell[115854, 2627, 8794, 167, 578, "Output",ExpressionUUID->"fd6d0a73-99dd-4715-9ab8-d3163c0e7d4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124685, 2799, 556, 9, 50, "Code",ExpressionUUID->"af9d4561-7cad-4ed1-ba9c-ad923ed74cc4"],
Cell[125244, 2810, 5268, 103, 579, "Output",ExpressionUUID->"244abbb1-4eed-4004-a6b1-72c11e9aa06f"],
Cell[130515, 2915, 3478, 65, 579, "Output",ExpressionUUID->"819c8f4b-3857-4126-bb36-7d9772e3be9f"]
}, Open  ]],
Cell[134008, 2983, 658, 11, 64, "Text",ExpressionUUID->"00cba1b4-7863-4035-b775-b728565720c5"],
Cell[CellGroupData[{
Cell[134691, 2998, 419, 7, 31, "Code",ExpressionUUID->"8a6f1077-1d8d-412d-b17e-7e387e7a6104"],
Cell[135113, 3007, 6739, 140, 828, "Output",ExpressionUUID->"20f7c4cb-b0db-4a16-82ed-b1c3b2f82431"],
Cell[141855, 3149, 528, 10, 26, "Message",ExpressionUUID->"eb7999d1-0e6f-4802-8d3d-1e74b4723a73"],
Cell[142386, 3161, 528, 10, 26, "Message",ExpressionUUID->"3c20dc61-67a9-4faf-a1cc-174ff023f5ce"],
Cell[142917, 3173, 528, 10, 26, "Message",ExpressionUUID->"24cb0583-3aa6-4852-a107-8a0feebcafbb"],
Cell[143448, 3185, 443, 9, 26, "Message",ExpressionUUID->"72f7c2e6-06bc-4260-9684-24b69d4742b5"],
Cell[143894, 3196, 530, 10, 26, "Message",ExpressionUUID->"ea0c4d14-b57c-4889-b608-dddce031db83"],
Cell[144427, 3208, 528, 10, 26, "Message",ExpressionUUID->"1e477417-0ef8-4681-8e43-6d9bfe1a5981"],
Cell[144958, 3220, 528, 10, 26, "Message",ExpressionUUID->"6deb6a29-72c6-4415-b107-f1cd625960e0"],
Cell[145489, 3232, 443, 9, 26, "Message",ExpressionUUID->"df309c55-5be4-4a3e-95d6-8760f17f36c2"],
Cell[145935, 3243, 8107, 169, 305, "Output",ExpressionUUID->"0cf7af11-1c17-42bb-9958-8cd8ecfaa108"]
}, Open  ]],
Cell[154057, 3415, 462, 9, 46, "Text",ExpressionUUID->"d7acfd83-2905-4c91-8de5-560bb0ab3d78"],
Cell[154522, 3426, 1023, 23, 69, "Code",ExpressionUUID->"4a151634-84be-4917-bc9d-83c658b41256"],
Cell[155548, 3451, 175653, 2896, 322, 3005, 64, "CachedBoxData", "BoxData", "Input",ExpressionUUID->"cabde1b3-64e9-4f2a-bb8d-089c9750c524"],
Cell[331204, 6349, 155346, 2562, 322, 3147, 65, "CachedBoxData", "BoxData", "Input",ExpressionUUID->"b2fc9085-dff3-4763-9494-f96de94b9815"],
Cell[486553, 8913, 277, 6, 28, "Text",ExpressionUUID->"0523a527-9135-41ff-91cc-a27f8aea4859"],
Cell[CellGroupData[{
Cell[486855, 8923, 757, 16, 50, "Code",ExpressionUUID->"d51e056e-190d-42a3-a07a-ca0d26fe9e42"],
Cell[487615, 8941, 9167, 213, 36, "Output",ExpressionUUID->"6089ec0f-ec43-4e5b-bd74-f70880f89d89"],
Cell[496785, 9156, 9216, 214, 36, "Output",ExpressionUUID->"caee3b95-5e6c-4420-846b-cafa9b8d5c83"]
}, Open  ]],
Cell[506016, 9373, 239, 7, 46, "Text",ExpressionUUID->"49bd5e14-9583-45dc-952d-0822b9efa7c7"],
Cell[506258, 9382, 26648, 636, 2075, "Code",ExpressionUUID->"f3b73552-1918-4726-999e-8a0a7251a809"],
Cell[532909, 10020, 277, 6, 28, "Text",ExpressionUUID->"c6dc01b4-d9e3-41d4-a11f-2a7a1bfb6ae9"],
Cell[CellGroupData[{
Cell[533211, 10030, 244, 5, 31, "Code",ExpressionUUID->"9ec00c23-3cd2-4697-8aa9-8a6e8ac186f2"],
Cell[CellGroupData[{
Cell[533480, 10039, 512, 11, 21, "Print",ExpressionUUID->"a619fb53-72f8-48f0-9569-2f037bc31031"],
Cell[533995, 10052, 515, 11, 21, "Print",ExpressionUUID->"e5332a31-9591-41b3-9b36-f52ed0404643"],
Cell[534513, 10065, 636, 13, 21, "Print",ExpressionUUID->"4e742dc3-ab17-4ca8-87b7-ee8c0268bd9f"],
Cell[535152, 10080, 513, 11, 21, "Print",ExpressionUUID->"c9dde9d2-d00a-4f86-b0bb-d89bec426e88"],
Cell[535668, 10093, 513, 11, 21, "Print",ExpressionUUID->"1961505f-7974-4b4d-addb-cd631f27c343"],
Cell[536184, 10106, 635, 13, 21, "Print",ExpressionUUID->"ddc9bda7-e103-4ea9-bd94-cbc8709f2ef9"],
Cell[536822, 10121, 515, 11, 21, "Print",ExpressionUUID->"0624a5c4-66e8-4efd-b47c-5d3063fef8ff"],
Cell[537340, 10134, 513, 11, 21, "Print",ExpressionUUID->"52306059-a628-423f-b5d0-49d3566fcd12"],
Cell[537856, 10147, 636, 13, 21, "Print",ExpressionUUID->"7f9c5adb-33d4-41f4-b00b-0cdc544fcca8"],
Cell[538495, 10162, 517, 11, 21, "Print",ExpressionUUID->"2bf971fa-545f-41ef-a28d-a66f73bec13b"],
Cell[539015, 10175, 513, 11, 21, "Print",ExpressionUUID->"41f19141-a779-497f-b920-0411706f3324"],
Cell[539531, 10188, 638, 13, 21, "Print",ExpressionUUID->"e51482ff-93a6-4cb4-b101-ab30e139f443"],
Cell[540172, 10203, 515, 11, 21, "Print",ExpressionUUID->"7d51141a-87d5-4565-9b77-f953e6ebfa26"],
Cell[540690, 10216, 513, 11, 21, "Print",ExpressionUUID->"0bcee2a5-779e-4f05-b2e7-a2b96da96504"],
Cell[541206, 10229, 634, 13, 21, "Print",ExpressionUUID->"6ab2bfb3-d437-4391-be5b-3890eee68bf0"],
Cell[541843, 10244, 591, 13, 21, "Print",ExpressionUUID->"4c8be1ef-d2dd-4353-8ae9-f8f18e56c20e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[542483, 10263, 294, 6, 31, "Code",ExpressionUUID->"079fc432-aa5d-4e3b-8dc1-2ab978cbc470"],
Cell[CellGroupData[{
Cell[542802, 10273, 716, 14, 21, "Print",ExpressionUUID->"cb9a0ce4-ea62-4c56-b218-a6b23141e656"],
Cell[543521, 10289, 714, 14, 21, "Print",ExpressionUUID->"88de0c62-6f08-4b1a-a6ff-af411f862be6"],
Cell[544238, 10305, 837, 16, 21, "Print",ExpressionUUID->"4130b192-24fe-42cb-ab2d-893cd2637c7c"],
Cell[545078, 10323, 711, 14, 21, "Print",ExpressionUUID->"7c11b217-1799-499c-bcfd-815c18965efe"],
Cell[545792, 10339, 716, 14, 21, "Print",ExpressionUUID->"cf2c6d8c-fbaa-49e5-9111-ef2382824263"],
Cell[546511, 10355, 837, 16, 21, "Print",ExpressionUUID->"074e25b6-17fe-45a0-9176-4d7be8582130"],
Cell[547351, 10373, 714, 14, 21, "Print",ExpressionUUID->"7d77fe8b-ab57-47c5-9d90-92a7a96b0523"],
Cell[548068, 10389, 714, 14, 21, "Print",ExpressionUUID->"fad3935a-b201-4d51-bc67-f05e14aa33fc"],
Cell[548785, 10405, 835, 16, 21, "Print",ExpressionUUID->"5d8543d5-8da5-4443-873b-bd08472bbf7e"],
Cell[549623, 10423, 714, 14, 21, "Print",ExpressionUUID->"8c456664-06c9-45a4-b90e-5bf4dff908ab"],
Cell[550340, 10439, 714, 14, 21, "Print",ExpressionUUID->"e81475ea-e674-4aaf-aa78-6e48327c7adc"],
Cell[551057, 10455, 839, 16, 21, "Print",ExpressionUUID->"912a99bd-56f0-47ec-9a45-fb830a19ba30"],
Cell[551899, 10473, 714, 14, 21, "Print",ExpressionUUID->"3955792e-6a61-47b1-8a83-66643ac4cb4c"],
Cell[552616, 10489, 714, 14, 21, "Print",ExpressionUUID->"8041e9d3-40de-429c-81e5-d8a569ac918e"],
Cell[553333, 10505, 837, 16, 21, "Print",ExpressionUUID->"73f38ab5-536b-4469-9637-94b980091967"],
Cell[554173, 10523, 714, 14, 21, "Print",ExpressionUUID->"0d443d62-0e63-4722-b1b7-deba12f3a191"],
Cell[554890, 10539, 712, 14, 21, "Print",ExpressionUUID->"5a7f47c9-d52a-4d8b-91a7-10c9fe81f727"],
Cell[555605, 10555, 837, 16, 21, "Print",ExpressionUUID->"902f528b-c9ba-431f-8699-90837ab28d6e"],
Cell[556445, 10573, 716, 14, 21, "Print",ExpressionUUID->"bbc4fe57-3363-4f16-85ae-de81c202aad0"],
Cell[557164, 10589, 714, 14, 21, "Print",ExpressionUUID->"9a029207-c78e-46d2-80dd-acb855169a09"],
Cell[557881, 10605, 839, 16, 21, "Print",ExpressionUUID->"c32df61f-89d8-4010-8f1f-29563288eb79"],
Cell[558723, 10623, 716, 14, 21, "Print",ExpressionUUID->"d192bba6-50cf-4711-9e9a-15aee38d5b89"],
Cell[559442, 10639, 714, 14, 21, "Print",ExpressionUUID->"b7e666e9-92b0-4472-bbac-94e05fb53ccd"],
Cell[560159, 10655, 841, 16, 21, "Print",ExpressionUUID->"31c9dab0-5003-49ec-bd3c-1db79e7f464f"],
Cell[561003, 10673, 716, 14, 21, "Print",ExpressionUUID->"2b5ae421-52cf-446c-966c-326c02c448f5"],
Cell[561722, 10689, 714, 14, 21, "Print",ExpressionUUID->"a0c7e168-ddcc-43a3-af76-cf29585bd920"],
Cell[562439, 10705, 837, 16, 21, "Print",ExpressionUUID->"41b3afc5-49e2-49b5-b53a-20ede96cca42"],
Cell[563279, 10723, 718, 14, 21, "Print",ExpressionUUID->"61f50e41-4102-4807-874b-7da40b50f749"],
Cell[564000, 10739, 712, 14, 21, "Print",ExpressionUUID->"81d1fd93-f271-432a-bbac-c26e7a074213"],
Cell[564715, 10755, 837, 16, 21, "Print",ExpressionUUID->"81c8d74c-cea0-4901-80ba-84972b68ef0b"],
Cell[565555, 10773, 718, 14, 21, "Print",ExpressionUUID->"c42251f0-90ee-4078-a67b-76b315bf5e80"],
Cell[566276, 10789, 714, 14, 21, "Print",ExpressionUUID->"7c27a79f-0a5d-4748-b93a-42dba9dffd28"],
Cell[566993, 10805, 833, 16, 21, "Print",ExpressionUUID->"276daed3-ce8c-4766-ad81-8f5e0e4db71d"],
Cell[567829, 10823, 796, 16, 21, "Print",ExpressionUUID->"0b8b7123-3ede-4d62-9cb3-2387bfcdb046"]
}, Open  ]]
}, Open  ]],
Cell[568652, 10843, 189, 3, 28, "Text",ExpressionUUID->"4fb8cb37-2a12-47da-b2ff-cd1b9c17dba2"],
Cell[568844, 10848, 511, 12, 31, "Code",ExpressionUUID->"133e8dfb-481b-420c-aaff-48447d5a9a0d"],
Cell[CellGroupData[{
Cell[569380, 10864, 361, 7, 31, "Code",ExpressionUUID->"e94697d6-09af-4ab1-8ffb-302ca51c8167"],
Cell[569744, 10873, 30391, 542, 2157, "Output",ExpressionUUID->"35f01b5d-7558-47d0-801a-18d4a3521847"]
}, Open  ]],
Cell[CellGroupData[{
Cell[600172, 11420, 413, 6, 69, "Code",ExpressionUUID->"41b7f8ba-34ea-4163-85b2-17ab13b150fc"],
Cell[600588, 11428, 4414, 80, 422, "Output",ExpressionUUID->"6c373475-f6d7-4e14-abc9-9d31a8caf734"],
Cell[605005, 11510, 4260, 77, 577, "Output",ExpressionUUID->"09a3560d-5487-4824-9344-11b3e39438c4"],
Cell[609268, 11589, 12663, 231, 576, "Output",ExpressionUUID->"dab5fc40-8747-41fa-b6e9-c33c251894a1"]
}, Open  ]],
Cell[621946, 11823, 7148, 170, 332, "Code",ExpressionUUID->"974ffde9-b169-46f3-a1ad-6a3e27e09793"]
}, Open  ]]
}
]
*)

