(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    751527,      14040]
NotebookOptionsPosition[    721879,      13487]
NotebookOutlinePosition[    740606,      13904]
CellTagsIndexPosition[    740563,      13901]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["", "CodeText",ExpressionUUID->"ec0c784a-ce9d-4c5a-b232-cf84abfadbcd"],

Cell[TextData[{
 StyleBox["WARNING", "Subtitle"],
 ": The dimension of the cube should never be even! The initial cubes will be \
invalid. I should probably introduce a check to prevent accidents..."
}], "Text",
 CellChangeTimes->{{3.912416699794735*^9, 3.9124167114307404`*^9}, {
  3.9124167607999697`*^9, 3.9124168075457*^9}, {3.9154126043786182`*^9, 
  3.915412605049501*^9}},ExpressionUUID->"1c0f1225-b49f-4433-89f2-\
3809bd6fabfe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Ideas", ":", "\n", 
  RowBox[{"-", " ", 
   RowBox[{"ListPlot3D", "[", "]"}]}], " ", ":", " ", 
  RowBox[{"plot", " ", "height", " ", "function"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"-", " ", "try"}], " ", "colours", " ", "\"\<Tomato\>\""}], ",", 
  " ", "\"\<Gold\>\"", ",", " ", "\"\<LawnGreen\>\"", ",", " ", 
  "\"\<SteelBlue\>\""}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"-", " ", 
    RowBox[{"Image3D", "[", "]"}]}], " ", "with", " ", 
   RowBox[{"Image3DSlices", "[", "]"}]}], ":", " ", 
  RowBox[{"prints", " ", "all", " ", "slices"}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"ListDensityPlot", "[", "]"}]}], ":", " ", 
  RowBox[{
  "useful", " ", "if", " ", "we", " ", "want", " ", "to", " ", 
   "blur"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"-", " ", 
    RowBox[{"ListContourPlot", "[", "]"}]}], ":", " ", 
   RowBox[{"gives", " ", "contours"}]}], " "}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"ListVectorPlot", "[", "]"}]}], ",", " ", 
  RowBox[{"ListVectorPlot3D", "[", "]"}], ",", " ", 
  RowBox[{"ListStreamPlot", "[", "]"}], ",", " ", 
  RowBox[{"ListStreamPlot3D", "[", "]"}], ",", " ", 
  RowBox[{
   RowBox[{"ListSliceVectorPlot3D", "[", "]"}], ":", " ", 
   RowBox[{"for", " ", 
    RowBox[{"flows", "?", " ", 
     RowBox[{"(", 
      RowBox[{
      "look", " ", "at", " ", "density", " ", "functions", " ", "also"}], 
      ")"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"ArrayPlot3D", "[", "]"}]}], ",", " ", 
  RowBox[{"Raster3D", "[", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"Graphics3D", "[", "]"}]}], ":", " ", 
  RowBox[{
  "example", " ", "on", " ", "website", " ", "tells", " ", "you", " ", "how", 
   " ", "to", " ", "space", " ", "your", " ", "cell"}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"RegionPlot3D", "[", "]"}]}], ":", " ", 
  RowBox[{
  "shows", " ", "only", " ", "region", " ", "for", " ", "which", " ", "pred", 
   " ", "is", " ", "True"}]}]}], "Code",
 CellChangeTimes->{{3.8961935040712976`*^9, 3.8961935381558247`*^9}, {
   3.896194936842407*^9, 3.896194938170011*^9}, {3.8961976953367853`*^9, 
   3.8961977638117313`*^9}, {3.896198335144771*^9, 3.896198366856309*^9}, {
   3.8961986608628683`*^9, 3.896198674854718*^9}, {3.896198716270617*^9, 
   3.896198716661545*^9}, {3.896198782094411*^9, 3.896198791070257*^9}, {
   3.8961989110295343`*^9, 3.8961989204212313`*^9}, {3.896198964157205*^9, 
   3.896198979236967*^9}, {3.89619921442766*^9, 3.896199283091106*^9}, {
   3.896199362138769*^9, 3.896199418306302*^9}, {3.896328007182756*^9, 
   3.8963280077184763`*^9}, 3.912310676550824*^9},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[1]:=",ExpressionUUID->"e646de66-4019-4a45-9f24-b862c681f906"],

Cell[BoxData[
 TemplateBox[{
  "ListPlot3D", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"ListPlot3D\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) arguments; 1 argument is expected.\"", 2, 1, 
   1, 34808859521578452723, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913938676697691*^9, 3.915376130563591*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"4e896bef-be97-4176-9320-885695276cad"],

Cell[BoxData[
 RowBox[{"Ideas", ":", 
  RowBox[{"-", 
   RowBox[{"ListPlot3D", "[", "]"}]}], ":", 
  RowBox[{"function", " ", "height", " ", "plot"}]}]], "Output",
 CellChangeTimes->{3.913938676706901*^9, 3.915376130568557*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"16f1a296-eb73-47de-b328-a8609255a50c"]
}, Open  ]],

Cell["\<\
Ideas for visualisation:
- layers with slider. all three dimensions. either together or separately. \
maybe make both for safety. also have height plot. 
- translucent cells? - DOES NOT WORK
- get max height cell from both max and min grids and scale.\
\>", "Text",
 CellChangeTimes->{{3.912187496858489*^9, 3.9121875178478317`*^9}, {
  3.912187612260333*^9, 3.912187642990597*^9}, {3.9122412710676527`*^9, 
  3.912241278745646*^9}, {3.9122413209842653`*^9, 
  3.9122413417334547`*^9}},ExpressionUUID->"7def9534-b5ec-46ec-afcf-\
1dbb61179113"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<DarkMode\>\"", "]"}], "[", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Off", "[", "\"\<Packing\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.915376906617364*^9, 3.915376937834733*^9}, {
  3.915413053933343*^9, 3.915413054268485*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"5bd8729e-1b5d-4b5f-b063-cb7f0991f434"],

Cell["Output Locations", "Text",
 CellChangeTimes->{{3.9120763950365133`*^9, 
  3.9120763988073053`*^9}},ExpressionUUID->"8a942dd6-5ed6-43b7-bf58-\
29d355d7d106"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"currDir", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"logDir", " ", "=", " ", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"currDir", ",", " ", "\"\<3D output files/\>\""}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.912076419771578*^9, 3.9120764205557737`*^9}, {
   3.912310139246233*^9, 3.912310139990097*^9}, 3.912311323635508*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"25294259-c6c3-46b8-9874-58800bbfe360"],

Cell["\<\
Colour Templates
(uncomment displaySwatches[] to pick a colour!)\
\>", "Text",
 CellChangeTimes->{
  3.9120763846005793`*^9},ExpressionUUID->"137fda44-2f58-466e-b9cf-\
77f14954051f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rybColourRules", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "->", "Red"}], ",", 
     RowBox[{"1", "->", "Yellow"}], ",", 
     RowBox[{"2", "->", "Blue"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rybDarkColourRules", " ", "=", " ", "\"\<DarkRainbow\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"fancyColourRules", " ", "=", " ", "\"\<CandyColors\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"blueColourRules", " ", "=", " ", "\"\<DeepSeaColors\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"pinkColourRules", " ", "=", " ", "\"\<ValentineTones\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"orangeColourRules", " ", "=", " ", "\"\<SolarColors\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tigerColourRules", " ", "=", " ", "\"\<SunsetColors\>\""}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaySwatch", "[", "colourFunction_", "]"}], " ", ":=", " ", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"generateMaxCube", "[", "21", "]"}], ",", "3"}], "]"}], ",", 
     " ", 
     RowBox[{"ColorFunction", "\[Rule]", "colourFunction"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaySwatches", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gradients", " ", "=", " ", 
        RowBox[{"ColorData", "[", "\"\<Gradients\>\"", "]"}]}], ",", " ", 
       RowBox[{"len", " ", "=", " ", 
        RowBox[{"Length", "[", 
         RowBox[{"ColorData", "[", "\"\<Gradients\>\"", "]"}], "]"}]}], ",", 
       " ", 
       RowBox[{"swatches", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", " ", 
       RowBox[{"i", " ", "=", " ", "0"}]}], "}"}], ",", " ", "\n", "\t", 
     RowBox[{"Grid", "[", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{"Nest", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", " ", 
             RowBox[{"displaySwatch", "[", 
              RowBox[{"gradients", "[", 
               RowBox[{"[", 
                RowBox[{"i", "++"}], "]"}], "]"}], "]"}]}], "]"}], " ", "&"}],
           ",", " ", "swatches", ",", " ", 
          RowBox[{"len", " ", "+", " ", "1"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Ceiling", "[", 
           RowBox[{"len", " ", "/", " ", "6"}], "]"}], ",", "6"}], "}"}]}], 
       "]"}], "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"displaySwatches", "[", "]"}], "*)"}]}]}], "Code",
 CellChangeTimes->{{3.913939429836048*^9, 3.913939434143519*^9}, {
  3.913939710772131*^9, 3.913939713044446*^9}, {3.915376141586418*^9, 
  3.915376157521748*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"27a3c9a8-323b-4c69-ac0d-666ac9c09b77"],

Cell["\<\
The following codeblock contains functions that will be evaluated either at \
the beginning or at the end of the simulation. They generate min/max height \
grids, and go between 3-coloured grids to height grids.\
\>", "Text",
 CellChangeTimes->{
  3.9120770127480183`*^9},ExpressionUUID->"ba87411f-0479-4ab8-9fa6-\
a40adbcfb0e3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"initialFaceGrid2D", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", " ", "+", " ", "j"}], " ", "<=", " ", 
       RowBox[{"n", " ", "-", " ", "1"}]}], ",", " ", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"i", " ", "+", " ", "j"}], ",", " ", "n"}], "]"}], ",", " ", 
      RowBox[{"n", " ", "-", " ", "2", " ", "-", " ", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"i", " ", "+", " ", "j"}], ",", " ", "n"}], "]"}]}]}], "]"}],
     ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "0", ",", " ", 
      RowBox[{"n", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"j", ",", " ", "0", ",", " ", 
      RowBox[{"n", " ", "-", " ", "1"}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"initialCubeBorder", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cube", " ", "=", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"n", ",", " ", "n", ",", " ", "n"}], "}"}]}], "]"}]}], ",",
        " ", "\n", "\t", 
       RowBox[{"top", " ", "=", " ", 
        RowBox[{"initialFaceGrid2D", "[", "n", "]"}]}], ",", "\n", "\t", 
       RowBox[{"bottom", " ", "=", " ", 
        RowBox[{"Reverse", "[", 
         RowBox[{
          RowBox[{"initialFaceGrid2D", "[", "n", "]"}], ",", " ", 
          RowBox[{"{", "1", "}"}]}], "]"}]}]}], "}"}], ",", " ", "\n", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "top"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "bottom"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "1", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "top"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "n", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "bottom"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "All", ",", " ", "1"}], "]"}], "]"}], " ", 
       "=", " ", "top"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "All", ",", " ", "n"}], "]"}], "]"}], " ", 
       "=", " ", "bottom"}], ";", "\n", " ", "cube"}]}], "\n", " ", "]"}]}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Takes", " ", "a", " ", "grid", " ", "with", " ", "a", " ", "filled", " ",
      "in", " ", "height", " ", "function", " ", "as", " ", "input", " ", 
     "and", " ", "converts", " ", "it", " ", "to", " ", "its", " ", 
     "corresponding", " ", "3"}], "-", 
    RowBox[{"colouring", " ", 
     RowBox[{"form", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"to3Colouring", "[", "grid_", "]"}], " ", ":=", " ", 
   RowBox[{"Mod", "[", 
    RowBox[{"grid", ",", " ", "3"}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Helper", " ", "function", " ", "for", " ", "toHeightFunction"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"findListHeight", "[", 
    RowBox[{"first_", ",", " ", "list_", ",", " ", "len_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"initialList", " ", "=", " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", " ", 
          RowBox[{"{", "len", "}"}], ",", " ", 
          RowBox[{"-", "1"}]}], "]"}]}], ",", " ", 
       RowBox[{"k", " ", "=", " ", "0"}], ",", " ", 
       RowBox[{"prev", " ", "=", " ", "first"}]}], "}"}], ",", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "remember", " ", "that", " ", "list", " ", "is", " ", "of", " ", 
       "length", " ", 
       RowBox[{"(", 
        RowBox[{"len", " ", "+", " ", "1"}], ")"}]}], " ", "*)"}], "\n", " ", 
     
     RowBox[{"Nest", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k", "++"}], ";", " ", 
          RowBox[{"newList", " ", "=", " ", "#"}], ";", " ", 
          RowBox[{"prev", " ", "=", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"list", "[", 
                RowBox[{"[", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", " ", 
                   RowBox[{"k", " ", "+", " ", "1"}]}], "}"}], "]"}], "]"}], 
               ",", " ", "1"}], "]"}], ",", " ", 
             RowBox[{"prev", " ", "+", " ", 
              RowBox[{"list", "[", 
               RowBox[{"[", 
                RowBox[{"k", " ", "+", " ", "1"}], "]"}], "]"}], " ", "-", 
              " ", 
              RowBox[{"list", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ",", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"list", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], " ", "==", " ", "2"}], ",", 
               " ", 
               RowBox[{"prev", " ", "+", " ", "1"}], ",", " ", 
               RowBox[{"prev", " ", "-", " ", "1"}]}], "]"}]}], "]"}]}], ";", 
          " ", 
          RowBox[{
           RowBox[{"newList", "[", 
            RowBox[{"[", "k", "]"}], "]"}], " ", "=", " ", "prev"}], ";", " ",
           "newList"}], " ", ")"}], " ", "&"}], " ", ",", " ", 
       RowBox[{"Normal", "[", "initialList", "]"}], ",", " ", "len"}], 
      "]"}]}], "\n", "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Takes", " ", "a", " ", "3"}], "-", 
    RowBox[{
    "coloured", " ", "grid", " ", "as", " ", "input", " ", "and", " ", 
     "returns", " ", "the", " ", "corresponding", " ", "grid", " ", 
     "labelled", " ", "with", " ", "its", " ", "height", " ", 
     RowBox[{"values", "."}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Edit", ":", " ", 
     RowBox[{
      RowBox[{
      "we", " ", "now", " ", "convert", " ", "our", " ", "grid", " ", "to", 
       " ", "a", " ", "3"}], "-", 
      RowBox[{"coloured", " ", "grid", " ", "before", " ", "computing"}]}]}], 
    ",", " ", 
    RowBox[{
    "so", " ", "it", " ", "gives", " ", "the", " ", "correct", " ", "output", 
     " ", "on", " ", "every", " ", 
     RowBox[{"grid", "!"}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Note", ":", " ", 
    RowBox[{
    "this", " ", "starts", " ", "with", " ", "the", " ", "initial", " ", 
     "border", " ", "grid"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toHeightFunction", "[", "grid_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"Length", "[", "grid", "]"}]}], ",", " ", 
       RowBox[{"heightGrid", " ", "=", " ", 
        RowBox[{"initialGridBorder", "[", 
         RowBox[{"Length", "[", "grid", "]"}], "]"}]}], ",", " ", 
       RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
       RowBox[{"cgrid", " ", "=", " ", 
        RowBox[{"to3Colouring", "[", "grid", "]"}]}]}], "}"}], ",", "\n", 
     "  ", 
     RowBox[{"Nest", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k", "++"}], ";", " ", 
          RowBox[{"nextHeightGrid", " ", "=", " ", "#"}], ";", " ", 
          RowBox[{
           RowBox[{"nextHeightGrid", "[", 
            RowBox[{"[", 
             RowBox[{"k", ",", " ", 
              RowBox[{"2", " ", ";;", " ", 
               RowBox[{"-", "2"}]}]}], "]"}], "]"}], " ", "=", " ", 
           RowBox[{"findListHeight", "[", 
            RowBox[{
             RowBox[{"heightGrid", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
             RowBox[{"Normal", "[", 
              RowBox[{"cgrid", "[", 
               RowBox[{"[", 
                RowBox[{"k", ",", " ", 
                 RowBox[{"1", " ", ";;", " ", 
                  RowBox[{"-", "2"}]}]}], "]"}], "]"}], "]"}], ",", " ", 
             RowBox[{"dim", " ", "-", " ", "2"}]}], "]"}]}], ";", " ", 
          "nextHeightGrid"}], ")"}], " ", "&"}], ",", " ", "heightGrid", ",", 
       " ", 
       RowBox[{"dim", " ", "-", " ", "2"}]}], "]"}]}], " ", "\n", "]"}]}], 
  " ", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculates", " ", "the", " ", "sum", " ", "of", " ", "absolute", " ", 
    "differences", " ", "between", " ", "the", " ", "heights", " ", "of", " ",
     "corresponding", " ", "sites", " ", "in", " ", "the", " ", "input", " ", 
    "grids"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkHeightDifference", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"cube1", " ", "-", " ", "cube2"}], "]"}], ",", " ", "3"}], 
    "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Format", " ", "time"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayTime", "[", "time_", "]"}], " ", ":=", " ", 
   RowBox[{"DateString", "[", 
    RowBox[{"time", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Hour\>\"", ",", " ", "\"\<:\>\"", ",", " ", "\"\<Minute\>\"", ",", 
       " ", "\"\<:\>\"", ",", " ", "\"\<Second\>\""}], "}"}]}], "]"}]}], "\n",
   "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**"}], "*", " ", "Display", " ", "Functions"}], " ", 
   "******)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Displays", " ", "height", " ", "grid", " ", "matrix", " ", "in", " ", 
    "array", " ", "form"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"OPTIMISATION", ":", " ", 
    RowBox[{
    "check", " ", "if", " ", "you", " ", "need", " ", "to", " ", "perform", 
     " ", 
     RowBox[{"toHeightFunction", "!"}], " ", "maybe", " ", "check", " ", 
     "max", " ", "value", " ", "in", " ", 
     RowBox[{"grid", "?"}]}]}], " ", "*)"}], "\n", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Displays", " ", "height", " ", "grid", " ", "matrix", " ", "in", " ", 
    "array", " ", "form"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"OPTIMISATION", ":", " ", 
    RowBox[{
    "check", " ", "if", " ", "you", " ", "need", " ", "to", " ", "perform", 
     " ", 
     RowBox[{"to3Coloring", "!"}], " ", "maybe", " ", "check", " ", "max", 
     " ", "value", " ", "in", " ", 
     RowBox[{"grid", "?"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayColouringGrid", "[", 
    RowBox[{"grid_", ",", " ", "colourFunction_"}], "]"}], " ", ":=", " ", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"to3Colouring", "[", "grid", "]"}], ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "colourFunction"}]}], "]"}]}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Displays", " ", "height", " ", "grid", " ", "matrices", " ", "in", " ", 
    "array", " ", "form"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayColouringGrids", "[", 
    RowBox[{"grid1_", ",", " ", "grid2_", ",", " ", "colourFunction_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"displayColouringGrid", "[", 
        RowBox[{"grid1", ",", " ", "colourFunction"}], "]"}], ",", " ", 
       RowBox[{"displayColouringGrid", "[", 
        RowBox[{"grid2", ",", " ", "colourFunction"}], "]"}]}], "}"}], "}"}], 
    "]"}]}], "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayHeightPlots", "[", 
    RowBox[{"grid1_", ",", " ", "grid2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"displayHeightPlot", "[", "grid1", "]"}], ",", " ", 
       RowBox[{"displayHeightPlot", "[", "grid2", "]"}]}], "}"}], "}"}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayGrid", "[", 
    RowBox[{"grid_", ",", " ", "colourFunction_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"displayHeightGrid", "[", "grid", "]"}], "}"}], ",", " ", "\n",
       "\t\t\t\t\t\t\t\t\t\t\t\t\t  ", 
      RowBox[{"{", 
       RowBox[{"displayColouringGrid", "[", 
        RowBox[{"grid", ",", " ", "colourFunction"}], "]"}], "}"}], ",", "\n",
       "\t\t\t\t\t\t\t\t\t\t\t\t\t  ", 
      RowBox[{"{", 
       RowBox[{"displayHeightPlot", "[", "grid", "]"}], "}"}]}], "}"}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displayGrids", "[", 
   RowBox[{"grid1_", ",", " ", "grid2_", ",", " ", "colourFunction_"}], "]"}],
   " ", ":=", " ", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"displayHeightGrids", "[", 
       RowBox[{"grid1", ",", " ", "grid2"}], "]"}], "}"}], ",", " ", "\n", 
     "\t\t\t\t\t\t\t\t\t\t\t\t\t  ", 
     RowBox[{"{", 
      RowBox[{"displayColouringGrids", "[", 
       RowBox[{"grid1", ",", " ", "grid2", ",", " ", "colourFunction"}], 
       "]"}], "}"}], ",", "\n", "\t\t\t\t\t\t\t\t\t\t\t\t\t  ", 
     RowBox[{"{", 
      RowBox[{"displayHeightPlots", "[", 
       RowBox[{"grid1", ",", " ", "grid2"}], "]"}], "}"}]}], "}"}], 
   "]"}]}], "\n", 
 RowBox[{"\t\t\t\t\t\t"}]}], "Code",
 CellChangeTimes->{{3.9120775054307423`*^9, 3.9120775067779837`*^9}, {
   3.912236781613709*^9, 3.912236784533803*^9}, {3.912236856073638*^9, 
   3.912236858110496*^9}, {3.912236890690868*^9, 3.91223689407804*^9}, {
   3.912236933342312*^9, 3.912236950895697*^9}, {3.912238117368524*^9, 
   3.912238135414617*^9}, {3.91223818189043*^9, 3.912238216275185*^9}, {
   3.912238254847288*^9, 3.912238282381641*^9}, 3.91223831988457*^9, {
   3.912239306719515*^9, 3.912239306965551*^9}, {3.912239965731444*^9, 
   3.912239973579812*^9}, 3.912240790010014*^9, {3.912315528465104*^9, 
   3.912315530338512*^9}, {3.912315569715016*^9, 3.91231559464865*^9}, 
   3.9123184634983463`*^9, 3.912318654468335*^9, {3.912318858454385*^9, 
   3.9123188625075274`*^9}, {3.912414084111382*^9, 3.912414090690804*^9}, 
   3.9139386821532*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"fcac06f5-8334-4b9b-ad54-5a70c0e8fdd2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"generateMaxCube", "[", "dim_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cube", " ", "=", " ", 
        RowBox[{"initialCubeBorder", "[", "dim", "]"}]}], "}"}], ",", " ", 
      "\n", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cube", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], 
        "}"}], " ", "~", " ", "Join", " ", "~", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"generateMaxHeightGrid", "[", 
          RowBox[{"dim", ",", " ", 
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}]}], 
          "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "2", ",", " ", "6"}], "}"}]}], "]"}], " ", 
       "~", " ", "Join", " ", "~", " ", 
       RowBox[{"{", 
        RowBox[{"cube", "[", 
         RowBox[{"[", 
          RowBox[{"7", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], 
        "}"}]}]}], "]"}]}], "*)"}], "\n", " ", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"generateMaxCube", "[", "dim_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cube", " ", "=", " ", 
         RowBox[{"initialCubeBorder", "[", "dim", "]"}]}], ",", " ", 
        RowBox[{"depth", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dim", " ", "+", " ", "1"}], ")"}], " ", "/", " ", "2"}]}],
         ",", " ", "nextLevelTop", ",", " ", "nextLevelBottom"}], "}"}], ",", 
      "  ", "\n", " ", 
      RowBox[{
       RowBox[{"Do", "[", "\n", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"nextLevelTop", " ", "=", " ", 
           RowBox[{
            RowBox[{"cube", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "+", " ", "1"}]}], 
          ";", "\n", " ", 
          RowBox[{"nextLevelBottom", " ", "=", " ", 
           RowBox[{"Reverse", "[", 
            RowBox[{"nextLevelTop", ",", " ", 
             RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i"}], "]"}], "]"}], " ", "=", 
           " ", "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "2", ",", " ", "depth"}], "}"}]}], "]"}], 
       ";", "\n", " ", "cube"}]}], "]"}]}], " ", "\n", " ", "\n", 
   RowBox[{
    RowBox[{"generateMinCube", "[", "dim_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cube", " ", "=", " ", 
         RowBox[{"initialCubeBorder", "[", "dim", "]"}]}], ",", " ", 
        RowBox[{"depth", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dim", " ", "+", " ", "1"}], ")"}], " ", "/", " ", "2"}]}],
         ",", " ", "nextLevelTop", ",", " ", "nextLevelBottom"}], "}"}], ",", 
      "  ", "\n", " ", 
      RowBox[{
       RowBox[{"Do", "[", "\n", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"nextLevelTop", " ", "=", " ", 
           RowBox[{
            RowBox[{"cube", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "-", " ", "1"}]}], 
          ";", "\n", " ", 
          RowBox[{"nextLevelBottom", " ", "=", " ", 
           RowBox[{"Reverse", "[", 
            RowBox[{"nextLevelTop", ",", " ", 
             RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i"}], "]"}], "]"}], " ", "=", 
           " ", "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "2", ",", " ", "depth"}], "}"}]}], "]"}], 
       ";", "\n", " ", "cube"}]}], "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.895851743137969*^9, 3.895851743139699*^9}, 
   3.895924359871799*^9, {3.89592453810701*^9, 3.895924578194954*^9}, {
   3.8959252186688757`*^9, 3.895925220809202*^9}, {3.895925524859675*^9, 
   3.8959256363294773`*^9}, {3.8959256734090548`*^9, 3.895925702131855*^9}, {
   3.8959258099186487`*^9, 3.895925816806987*^9}, {3.8959259730488577`*^9, 
   3.895926282836673*^9}, {3.8959265493100758`*^9, 3.895926662644783*^9}, {
   3.895926706278529*^9, 3.895926786482958*^9}, {3.895926821613821*^9, 
   3.895926844925844*^9}, {3.895926900435109*^9, 3.895926936672982*^9}, {
   3.895926973114499*^9, 3.8959269735383453`*^9}, {3.895927198189516*^9, 
   3.895927215223157*^9}, {3.895927252199391*^9, 3.895927286790578*^9}, {
   3.895927406293037*^9, 3.895927410636898*^9}, {3.895927797828179*^9, 
   3.895927846144252*^9}, {3.89592793271642*^9, 3.8959279929073544`*^9}, {
   3.895931126242578*^9, 3.895931154621812*^9}, {3.8959313015059223`*^9, 
   3.895931377045375*^9}, {3.8959323011157093`*^9, 3.895932313219329*^9}, {
   3.895932461177787*^9, 3.8959325714721403`*^9}, {3.895932678723037*^9, 
   3.895932757580627*^9}, {3.8959328868123503`*^9, 3.895932888159932*^9}, {
   3.895935459823525*^9, 3.895935511447383*^9}, {3.8959357274782267`*^9, 
   3.8959357371406116`*^9}, {3.895936585436318*^9, 3.895936664508355*^9}, {
   3.89593717123914*^9, 3.895937174638939*^9}, {3.895937700482608*^9, 
   3.89593781260238*^9}, {3.895937851834051*^9, 3.895937883000745*^9}, {
   3.8959385051235247`*^9, 3.895938554533948*^9}, {3.89593860441994*^9, 
   3.895938624564167*^9}, {3.895938669851734*^9, 3.895938702339554*^9}, {
   3.895938816474195*^9, 3.895938875201742*^9}, {3.89593897753822*^9, 
   3.8959390346086817`*^9}, {3.895939281351036*^9, 3.8959394332172203`*^9}, {
   3.895939477153347*^9, 3.895939545154372*^9}, {3.895939589287294*^9, 
   3.895939606036065*^9}, {3.8959396848508453`*^9, 3.8959397130195103`*^9}, {
   3.8959398017319927`*^9, 3.895939804211789*^9}, {3.8959398409789457`*^9, 
   3.8959399341642437`*^9}, {3.895940025532848*^9, 3.8959400487644033`*^9}, {
   3.895940116780529*^9, 3.895940226988255*^9}, {3.895940507003642*^9, 
   3.8959405075474253`*^9}, {3.8959405866897993`*^9, 3.895940671176176*^9}, {
   3.895940703692581*^9, 3.8959407116663027`*^9}, {3.895940754848997*^9, 
   3.89594075729636*^9}, {3.8959407924797487`*^9, 3.895940922519642*^9}, {
   3.895940955351569*^9, 3.89594096823952*^9}, {3.895941016398425*^9, 
   3.8959411012133713`*^9}, {3.8959416217422657`*^9, 
   3.8959416510212517`*^9}, {3.895941751587575*^9, 3.895941811835779*^9}, {
   3.8959418894383717`*^9, 3.895941941232431*^9}, {3.8959420049647017`*^9, 
   3.895942005128944*^9}, {3.8959420661853848`*^9, 3.8959420678330383`*^9}, {
   3.895942138071947*^9, 3.8959422674461203`*^9}, 3.8959423198197193`*^9, {
   3.895942374462367*^9, 3.895942384931842*^9}, 3.895942746413762*^9, {
   3.8959427883930693`*^9, 3.895942810457045*^9}, {3.8959428545690527`*^9, 
   3.895942859976574*^9}, {3.895942894983653*^9, 3.8959428979759197`*^9}, {
   3.895942937507091*^9, 3.895942937591359*^9}, {3.895943262735242*^9, 
   3.895943267316884*^9}, {3.895966917004333*^9, 3.8959669469986143`*^9}, {
   3.895966997823306*^9, 3.89596704386239*^9}, {3.89596809177496*^9, 
   3.895968142191331*^9}, {3.8959682178881483`*^9, 3.8959682261725473`*^9}, {
   3.896029050033618*^9, 3.896029068137042*^9}, {3.8960291353107023`*^9, 
   3.896029139532143*^9}, {3.89602917515187*^9, 3.896029247645176*^9}, {
   3.8961074083514023`*^9, 3.8961076271262617`*^9}, {3.896108202159047*^9, 
   3.896108217674529*^9}, {3.89612133484925*^9, 3.896121334879374*^9}, {
   3.896333926923399*^9, 3.896333957460273*^9}, {3.8963342115459137`*^9, 
   3.8963342124743032`*^9}, {3.896334412981388*^9, 3.896334437790207*^9}, 
   3.8963344724866858`*^9, {3.8963347829749804`*^9, 3.896334788763483*^9}, {
   3.896337232426865*^9, 3.896337241139146*^9}, {3.896337276290044*^9, 
   3.896337298000836*^9}, {3.89633757679998*^9, 3.8963376254077663`*^9}, {
   3.8963376957588987`*^9, 3.896337842910202*^9}, {3.896337873366638*^9, 
   3.896337890286662*^9}, {3.8963379309026833`*^9, 3.89633795526123*^9}, {
   3.896338010019981*^9, 3.8963380326993437`*^9}, {3.8963381139954643`*^9, 
   3.896338122499373*^9}, {3.896338203438754*^9, 3.896338210235207*^9}, {
   3.8963382822578373`*^9, 3.896338305210328*^9}, 3.8963383916974993`*^9, {
   3.8963483268507853`*^9, 3.896348424583952*^9}, {3.896348514567173*^9, 
   3.896348516114107*^9}, {3.896348558057222*^9, 3.8963486335051517`*^9}, {
   3.8963487681597023`*^9, 3.896348850607461*^9}, {3.8963489171436357`*^9, 
   3.896348921088109*^9}, {3.8963489775137453`*^9, 3.896348990512315*^9}, {
   3.896349024592252*^9, 3.896349031358507*^9}, {3.896349186133471*^9, 
   3.896349204749407*^9}, {3.8963716164542627`*^9, 3.896371655926025*^9}, {
   3.896371756413437*^9, 3.896371790636338*^9}, {3.896372567219589*^9, 
   3.896372571050908*^9}, {3.896373316915986*^9, 3.896373358291664*^9}, {
   3.896407376844158*^9, 3.896407406656273*^9}, {3.89640745709867*^9, 
   3.8964074616951942`*^9}, {3.896407601239127*^9, 3.89640761911943*^9}, {
   3.896407650855463*^9, 3.896407652271559*^9}, {3.896407682339316*^9, 
   3.896407714302945*^9}, 3.8964078818960533`*^9, {3.896408474561571*^9, 
   3.8964084797293053`*^9}, {3.8964085304903517`*^9, 3.896408576912929*^9}, {
   3.8964088431539507`*^9, 3.89640886725655*^9}, {3.8964089190345383`*^9, 
   3.8964089912410507`*^9}, 3.896411364032544*^9, {3.896411555775547*^9, 
   3.896411560210909*^9}, {3.8964116249414473`*^9, 3.8964116268667393`*^9}, {
   3.8964117236814823`*^9, 3.896411733209247*^9}, {3.89641176893865*^9, 
   3.896411788777835*^9}, {3.896411829490048*^9, 3.896411854225235*^9}, {
   3.896413117100971*^9, 3.896413457913006*^9}, {3.89641348873833*^9, 
   3.896413593256999*^9}, {3.896414227715905*^9, 3.896414261627845*^9}, {
   3.896414345804163*^9, 3.896414366524419*^9}, {3.8964144449315357`*^9, 
   3.896414482055689*^9}, {3.896414532026331*^9, 3.8964145387787027`*^9}, {
   3.896414661241715*^9, 3.896414875292243*^9}, {3.9123161381909027`*^9, 
   3.912316140315507*^9}, {3.915383365664874*^9, 3.915383385956131*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"34a5ce17-7bbe-4b28-b8dc-8f3c89a7e4af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Alternate", " ", "code"}], ";", " ", 
    RowBox[{
    "works", " ", "slower", " ", "and", " ", "more", " ", "complicated", " ", 
     "to", " ", "use", " ", "colours", " ", "with"}]}], " ", "*)"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"cubeToImage", "[", "cube_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Image3D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Max", "[", "cube", "]"}], " ", "+", " ", "1"}], ")"}]}], 
        ",", " ", 
        RowBox[{"Magnification", "\[Rule]", "Automatic"}], ",", " ", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
        RowBox[{"ColorFunction", "\[Rule]", "blueColourRules"}]}], "]"}], 
      "\n", "\n", 
      RowBox[{"cubeSlicesSingleAxis", "[", 
       RowBox[{"dim_", ",", " ", "cube_", ",", " ", "axis_"}], "]"}]}], " ", ":=",
      " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"image", " ", "=", " ", 
           RowBox[{"cubeToImage", "[", "cube", "]"}]}], "}"}], ",", "\n", 
         "\t\t\t\t\t\t\t\t\t\t\t", 
         RowBox[{"Manipulate", "[", 
          RowBox[{
           RowBox[{"Image3DSlices", "[", 
            RowBox[{"image", ",", " ", "i", ",", " ", "axis"}], "]"}], ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], 
            "}"}]}], "]"}]}], "]"}], "\n", 
       RowBox[{"cubeSlices", "[", 
        RowBox[{"dim_", ",", " ", "cube_"}], "]"}]}], " ", ":=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Manipulate", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Image3DSlices", "[", 
               RowBox[{
                RowBox[{"Image3D", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", "cube", "]"}], " ", "+", " ", "1"}], 
                    ")"}]}], ",", " ", 
                  RowBox[{"Magnification", "\[Rule]", "Automatic"}], ",", " ", 
                  RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
                " ", "i", ",", " ", "1"}], "]"}], ",", "\n", 
              "\t\t\t\t\t\t\t\t\t\t", 
              RowBox[{"Image3DSlices", "[", 
               RowBox[{
                RowBox[{"Image3D", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", "cube", "]"}], " ", "+", " ", "1"}], 
                    ")"}]}], ",", " ", 
                  RowBox[{"Magnification", "\[Rule]", "Automatic"}], ",", " ", 
                  RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
                " ", "i", ",", " ", "2"}], "]"}], ",", "\n", 
              "\t\t\t\t\t\t\t\t\t\t", 
              RowBox[{"Image3DSlices", "[", 
               RowBox[{
                RowBox[{"Image3D", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", "cube", "]"}], " ", "+", " ", "1"}], 
                    ")"}]}], ",", " ", 
                  RowBox[{"Magnification", "\[Rule]", "Automatic"}], ",", " ", 
                  RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
                " ", "i", ",", " ", "3"}], "]"}]}], "}"}], "}"}], "]"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], 
           "}"}]}], "]"}], "\n", "\t\t\t\t\t\t\t\t\t\t", "\n", 
        RowBox[{"cubesSlices", "[", 
         RowBox[{"dim_", ",", " ", "cube1_", ",", " ", "cube2_"}], "]"}]}], 
       " ", ":=", " ", 
       RowBox[{
        RowBox[{"Grid", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"cubeSlices", "[", 
             RowBox[{"dim", ",", " ", "cube1"}], "]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"cubeSlices", "[", 
             RowBox[{"dim", ",", " ", "cube2"}], "]"}], "}"}]}], "}"}], "]"}],
         "\n", "\n", 
        RowBox[{"cubeToImage", "[", "maxCube", "]"}]}]}]}]}]}], 
   "*)"}]}]], "Code",
 CellChangeTimes->{{3.912252328502087*^9, 3.912252402584948*^9}, {
  3.912252650618332*^9, 3.9122526787291117`*^9}, {3.9122531051650753`*^9, 
  3.912253150927306*^9}, {3.912253230768302*^9, 3.9122532863435707`*^9}, {
  3.912254001008072*^9, 3.9122540834580603`*^9}, {3.912261514870071*^9, 
  3.912261580410975*^9}, {3.912261701293288*^9, 3.912261725431531*^9}, {
  3.912261828728067*^9, 3.912261864242016*^9}, {3.912261904423257*^9, 
  3.912261912727086*^9}, {3.9122622152929*^9, 3.91226222689668*^9}, {
  3.912262260868675*^9, 3.912262280349835*^9}, {3.91226232504403*^9, 
  3.912262347229721*^9}, {3.9122626266737328`*^9, 3.912262639718912*^9}, {
  3.912268256667344*^9, 3.91226827857467*^9}, {3.9122707786212473`*^9, 
  3.912270794814865*^9}, {3.91231449065786*^9, 3.912314521883709*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"43c9ca43-dc34-48cc-ba70-58f0db2b1acf"],

Cell[TextData[{
 StyleBox["Display Functions\n", "Section"],
 "We have the following display functions for single cubes:\n- \
cubeLayers[cube, <colourFunction>]: displays concentric layers of a cube.\n- \
displaySlicePlot[cube, args, <colourFunction>]: displays a 2D slice of the \
cube along a specified axis. Here, args takes the form {{depth}, All, All}, \
{All, {depth}, All}, or {All, All, {depth}}, where depth is the layer number \
of the slice you want.\n- displayHeightPlot[grid]: takes a 2D grid as input \
and displays a plot of the height function.\n- sliceGridWithHeight[cube, \
args]: displays a 2D slice of the height function of the cube, its \
corresponding 3-colouring, and the plot of its height function. Here, args \
takes the form {{depth}, All, All}, {All, {depth}, All}, or {All, All, \
{depth}}, where depth is the layer number of the slice you want.\n- \
cubeSlicesSingleAxis[cube, axis]: a dynamic plot of \
sliceGridWithHeight[]--allows you to drag a slider to move between the \
layers.\n- cubeSlicesAllAxesSimultaneouslyGrid[cube, i]: displays the 2D \
slice of the layer of the cube at depth i along all three axes.\n- \
cubeSlicesAllAxesSimultaneously[cube]: a dynamic version of \
cubeSlicesAllAxesSimultaneouslyGrid[]--allows you to drag a slider to move \
between the layers. The layers at the same depth are displayed for all three \
axes.\n- cubeSlicesAllAxesSeparately[cube]: like \
cubeSlicesAllAxesSimultaneouslyCube[], but you can pick the depth of the \
layer along all three axes separately.\n\nWe have the following display \
functions for two cubes:\n- cubesLayersSeparately[cube1, cube2, \
<colourFunction>]: displays two copies of cubeLayers[] side by side, one for \
each cube, with separate sliders.\n- cubesLayersSimultaneously[cube1, cube2, \
<colourFunction>]: similar to cubesLayersSeparately, but with a single \
slider, so you see the concentric layers at the same depth for each cube.\n- \
cubesSlicesSeparately[cube1, cube2]: displays two copies of \
cubeSlicesAllAxesSimultaneously[] side by side, one for each cube, with \
separate sliders.\n- cubesSlicesSimultaneously[cube1, cube2]: similar to \
cubesSlicesSeparately, but with a single slider, so you see the layers at the \
same depth for each cube."
}], "Text",
 CellChangeTimes->{{3.912409148835154*^9, 3.912409175079817*^9}, {
   3.912443386415956*^9, 3.912443657985716*^9}, {3.912443760749338*^9, 
   3.9124439385990963`*^9}, {3.912444135217409*^9, 3.912444305168536*^9}, {
   3.912444379101831*^9, 3.912444435214204*^9}, {3.912444763363852*^9, 
   3.912444916672462*^9}, {3.912444961750602*^9, 3.91244496454106*^9}, {
   3.912445000212619*^9, 3.912445036184997*^9}, 
   3.9124466184289513`*^9},ExpressionUUID->"b80fafbb-a30b-4188-b067-\
42d643f41c2b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displayCube", "[", 
    RowBox[{"dim_", ",", " ", "cube_", ",", " ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"ArrayPlot3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"dim", " ", "+", " ", "1"}], ")"}]}], ",", " ", 
     RowBox[{"ColorFunction", " ", "->", " ", "colourFunction"}], ",", " ", 
     RowBox[{"OpacityFunction", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"Mesh", "\[Rule]", "False"}], ",", " ", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubeLayers", "[", 
    RowBox[{"cube_", ",", " ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"displayCube", "[", 
        RowBox[{"dim", ",", " ", 
         RowBox[{"cube", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"i", ";;", " ", 
             RowBox[{"-", "i"}]}], ",", " ", 
            RowBox[{"i", " ", ";;", " ", 
             RowBox[{"-", "i"}]}], ",", " ", 
            RowBox[{"i", " ", ";;", " ", 
             RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
         "colourFunction"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"dim", " ", "/", " ", "2"}], "]"}], ",", " ", "1"}], 
        "}"}]}], "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubesLayersSeparately", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"cubeLayers", "[", 
        RowBox[{"cube1", ",", " ", "colourFunction"}], "]"}], ",", " ", 
       RowBox[{"cubeLayers", "[", 
        RowBox[{"cube2", ",", " ", "colourFunction"}], "]"}]}], "]"}]}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"threeCubesLayersSimultaneously", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", "cube3_", ",", " ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"displayCube", "[", 
            RowBox[{"dim", ",", " ", 
             RowBox[{"cube1", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", ";;", " ", 
                 RowBox[{"-", "i"}]}], ",", " ", 
                RowBox[{"i", " ", ";;", " ", 
                 RowBox[{"-", "i"}]}], ",", " ", 
                RowBox[{"i", " ", ";;", " ", 
                 RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
             "colourFunction"}], "]"}], ",", " ", 
           RowBox[{"displayCube", "[", 
            RowBox[{"dim", ",", " ", 
             RowBox[{"cube2", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", ";;", " ", 
                 RowBox[{"-", "i"}]}], ",", " ", 
                RowBox[{"i", " ", ";;", " ", 
                 RowBox[{"-", "i"}]}], ",", " ", 
                RowBox[{"i", " ", ";;", " ", 
                 RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
             "colourFunction"}], "]"}], ",", " ", 
           RowBox[{"displayCube", "[", 
            RowBox[{"dim", ",", " ", 
             RowBox[{"cube3", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", ";;", " ", 
                 RowBox[{"-", "i"}]}], ",", " ", 
                RowBox[{"i", " ", ";;", " ", 
                 RowBox[{"-", "i"}]}], ",", " ", 
                RowBox[{"i", " ", ";;", " ", 
                 RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
             "colourFunction"}], "]"}]}], "}"}], "}"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"dim", " ", "/", " ", "2"}], "]"}], ",", " ", "1"}], 
        "}"}]}], "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"threeCubesLayersSeparately", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", "cube3_", ",", "  ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"cubeLayers", "[", 
        RowBox[{"cube1", ",", " ", "colourFunction"}], "]"}], ",", " ", 
       RowBox[{"cubeLayers", "[", 
        RowBox[{"cube2", ",", " ", "colourFunction"}], "]"}], ",", " ", 
       RowBox[{"cubeLayers", "[", 
        RowBox[{"cube3", ",", " ", "colourFunction"}], "]"}]}], "]"}]}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubesLayersSimultaneously", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"displayCube", "[", 
            RowBox[{"dim", ",", " ", 
             RowBox[{"cube1", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", ";;", " ", 
                 RowBox[{"-", "i"}]}], ",", " ", 
                RowBox[{"i", " ", ";;", " ", 
                 RowBox[{"-", "i"}]}], ",", " ", 
                RowBox[{"i", " ", ";;", " ", 
                 RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
             "colourFunction"}], "]"}], ",", " ", 
           RowBox[{"displayCube", "[", 
            RowBox[{"dim", ",", " ", 
             RowBox[{"cube2", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", ";;", " ", 
                 RowBox[{"-", "i"}]}], ",", " ", 
                RowBox[{"i", " ", ";;", " ", 
                 RowBox[{"-", "i"}]}], ",", " ", 
                RowBox[{"i", " ", ";;", " ", 
                 RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
             "colourFunction"}], "]"}]}], "}"}], "}"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"dim", " ", "/", " ", "2"}], "]"}], ",", " ", "1"}], 
        "}"}]}], "]"}]}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Slices", " ", "the", " ", "cube", " ", "along", " ", "a", " ", "specifed",
     " ", "axis", " ", "and", " ", "returns", " ", "a", " ", "2", "D", " ", 
    "grid"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sliceGrid", "[", 
    RowBox[{"cube_", ",", " ", "args_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube", "]"}]}], "}"}], ",", " ", 
     RowBox[{"ArrayReshape", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{"cube", ",", " ", 
         RowBox[{"Sequence", " ", "@@", " ", "args"}]}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"dim", ",", " ", "dim"}], "}"}]}], "]"}]}], "]"}]}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Plots", " ", "a", " ", "slice", " ", "of", " ", "a", " ", "cube"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaySlicePlot", "[", 
    RowBox[{"cube_", ",", " ", "args_", ",", " ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"sliceGrid", "[", 
      RowBox[{"cube", ",", " ", "args"}], "]"}], ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "colourFunction"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayHeightPlot", "[", "grid_", "]"}], " ", ":=", " ", 
   RowBox[{"ListPlot3D", "[", "grid", "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{"add", " ", "labels", " ", "to", " ", 
     RowBox[{"grids", "/", "plots"}], " ", "in", " ", "the", " ", "following",
      " ", "functions"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Places", " ", "colour", " ", "plot", " ", "of", " ", "a", " ", "slice", 
    " ", "above", " ", "a", " ", "height", " ", "plot", " ", "of", " ", "the",
     " ", "slice"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sliceGridWithHeight", "[", 
    RowBox[{"cube_", ",", " ", "args_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"displaySlicePlot", "[", 
        RowBox[{"cube", ",", " ", "args"}], "]"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"displaySlicePlot", "[", 
        RowBox[{
         RowBox[{"to3Colouring", "[", "cube", "]"}], ",", " ", "args"}], 
        "]"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"displayHeightPlot", "[", 
        RowBox[{"sliceGrid", "[", 
         RowBox[{"cube", ",", " ", "args"}], "]"}], "]"}], "}"}]}], "}"}], 
    "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Allows", " ", "to", " ", "move", " ", "between", " ", "colour", " ", 
     "plots"}], " ", "+", " ", 
    RowBox[{
    "height", " ", "plots", " ", "of", " ", "different", " ", "slices", " ", 
     "along", " ", "a", " ", "single", " ", "axis"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubeSlicesSingleAxis", "[", 
    RowBox[{"cube_", ",", " ", "axis_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"args", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"All", ",", " ", "All", ",", " ", "All"}], "}"}]}], ",", " ", 
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"Length", "[", "cube", "]"}]}]}], "}"}], ",", "\n", 
     "\t\t\t\t\t\t\t\t\t\t\t", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"args", "[", 
           RowBox[{"[", "axis", "]"}], "]"}], " ", "=", " ", 
          RowBox[{"{", "i", "}"}]}], ";", " ", 
         RowBox[{"sliceGridWithHeight", "[", 
          RowBox[{"cube", ",", " ", "args"}], "]"}]}], ")"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], "}"}]}],
       "]"}]}], "]"}]}], "\n", "\t\t\t\t\t\t\t\t\t\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubeSlicesAllAxesSimultaneouslyGrid", "[", 
    RowBox[{"cube_", ",", " ", "i_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sliceGridWithHeight", "[", 
        RowBox[{"cube", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "i", "}"}], ",", " ", "All", ",", " ", "All"}], 
          "}"}]}], "]"}], ",", " ", 
       RowBox[{"sliceGridWithHeight", "[", 
        RowBox[{"cube", ",", " ", 
         RowBox[{"{", 
          RowBox[{"All", ",", " ", 
           RowBox[{"{", "i", "}"}], ",", " ", "All"}], "}"}]}], "]"}], ",", 
       " ", 
       RowBox[{"sliceGridWithHeight", "[", 
        RowBox[{"cube", ",", " ", 
         RowBox[{"{", 
          RowBox[{"All", ",", " ", "All", ",", " ", 
           RowBox[{"{", "i", "}"}]}], "}"}]}], "]"}]}], "}"}], "}"}], "]"}]}],
   "\t\t\t\t\t\t\t\t\t\t\t", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"View", " ", "the", " ", "colour", " ", "plots"}], " ", "+", " ", 
    
    RowBox[{
    "height", " ", "plots", " ", "of", " ", "slices", " ", "at", " ", "the", 
     " ", "same", " ", "level", " ", "along", " ", "all", " ", "axes"}]}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubeSlicesAllAxesSimultaneously", "[", "cube_", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"cubeSlicesAllAxesSimultaneouslyGrid", "[", 
        RowBox[{"cube", ",", " ", "i"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], "}"}]}],
       "]"}]}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Allows", " ", "to", " ", "move", " ", "between", " ", "colour", " ", 
     "plots"}], " ", "+", " ", 
    RowBox[{
    "height", " ", "plots", " ", "of", " ", "different", " ", "slices", " ", 
     "along", " ", "all", " ", "axes"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubeSlicesAllAxesSeparately", "[", "cube_", "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cubeSlicesSingleAxis", "[", 
        RowBox[{"cube", ",", " ", "1"}], "]"}], ",", " ", 
       RowBox[{"cubeSlicesSingleAxis", "[", 
        RowBox[{"cube", ",", " ", "2"}], "]"}], ",", " ", 
       RowBox[{"cubeSlicesSingleAxis", "[", 
        RowBox[{"cube", ",", " ", "3"}], "]"}]}], "}"}], "}"}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubesSlicesSeparately", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cubeSlicesAllAxesSimultaneously", "[", "cube1", "]"}], ",", 
       " ", 
       RowBox[{"cubeSlicesAllAxesSimultaneously", "[", "cube2", "]"}]}], 
      "}"}], "}"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubesSlicesSimultaneously", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cubeSlicesAllAxesSimultaneouslyGrid", "[", 
            RowBox[{"cube1", ",", " ", "i"}], "]"}], ",", " ", 
           RowBox[{"cubeSlicesAllAxesSimultaneouslyGrid", "[", 
            RowBox[{"cube2", ",", " ", "i"}], "]"}]}], "}"}], "}"}], "]"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], "}"}]}],
       "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubesSlicesSingleAxisSimultaneously", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", "axis_"}], "]"}], " ", ":=", \
" ", "TODO"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compareThreeCubesAlongAxis", "[", 
    RowBox[{
    "cube1_", ",", " ", "cube2_", ",", " ", "cube3_", ",", " ", "axis_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"args", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"All", ",", " ", "All", ",", " ", "All"}], "}"}]}], ",", " ", 
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"Length", "[", "cube", "]"}]}]}], "}"}], ",", "\n", 
     "\t\t\t\t\t\t\t\t\t\t\t", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"args", "[", 
           RowBox[{"[", "axis", "]"}], "]"}], " ", "=", " ", 
          RowBox[{"{", "i", "}"}]}], ";", " ", 
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"sliceGridWithHeight", "[", 
              RowBox[{"cube1", ",", " ", "args"}], "]"}], ",", " ", 
             RowBox[{"sliceGridWithHeight", "[", 
              RowBox[{"cube2", ",", " ", "args"}], "]"}], ",", " ", 
             RowBox[{"sliceGridWithHeight", "[", 
              RowBox[{"cube3", ",", " ", "args"}], "]"}]}], "}"}], "}"}], 
          "]"}]}], ")"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], "}"}]}],
       "]"}]}], "]"}]}], "\n", "\t\t\t\t\t\t\t\t\t\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compareThreeCubesAlongAllAxes", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", "cube3_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"compareCubesAlongAxis", "[", 
        RowBox[{
        "cube1", ",", " ", "cube2", ",", " ", "cube3", ",", " ", "1"}], "]"}],
        "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"compareCubesAlongAxis", "[", 
        RowBox[{
        "cube1", ",", " ", "cube2", ",", " ", "cube3", ",", " ", "2"}], "]"}],
        "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"compareCubesAlongAxis", "[", 
        RowBox[{
        "cube1", ",", " ", "cube2", ",", " ", "cube3", ",", " ", "3"}], "]"}],
        "}"}]}], "}"}], "]"}]}], "\t\t\t\t\t\t\t\t\t\t", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compareThreeCubesAlongAllAxesSimultaneously", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", "cube3_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube1", ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "i", "}"}], ",", " ", "All", ",", " ", "All"}], 
              "}"}]}], "]"}], ",", " ", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube2", ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "i", "}"}], ",", " ", "All", ",", " ", "All"}], 
              "}"}]}], "]"}], ",", " ", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube3", ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "i", "}"}], ",", " ", "All", ",", " ", "All"}], 
              "}"}]}], "]"}], ",", "\n", 
           "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube1", ",", " ", 
             RowBox[{"{", 
              RowBox[{"All", ",", " ", 
               RowBox[{"{", "i", "}"}], ",", " ", "All"}], "}"}]}], "]"}], 
           ",", " ", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube2", ",", " ", 
             RowBox[{"{", 
              RowBox[{"All", ",", " ", 
               RowBox[{"{", "i", "}"}], ",", " ", "All"}], "}"}]}], "]"}], 
           ",", " ", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube3", ",", " ", 
             RowBox[{"{", 
              RowBox[{"All", ",", " ", 
               RowBox[{"{", "i", "}"}], ",", " ", "All"}], "}"}]}], "]"}], 
           ",", "\n", "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube1", ",", " ", 
             RowBox[{"{", 
              RowBox[{"All", ",", " ", "All", ",", " ", 
               RowBox[{"{", "i", "}"}]}], "}"}]}], "]"}], ",", " ", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube2", ",", " ", 
             RowBox[{"{", 
              RowBox[{"All", ",", " ", "All", ",", " ", 
               RowBox[{"{", "i", "}"}]}], "}"}]}], "]"}], ",", " ", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube3", ",", " ", 
             RowBox[{"{", 
              RowBox[{"All", ",", " ", "All", ",", " ", 
               RowBox[{"{", "i", "}"}]}], "}"}]}], "]"}]}], "}"}], "}"}], 
        "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], "}"}]}],
       "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"compareThreeCubes", "[", 
   RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", "cube3_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"threeCubesLayersSimultaneously", "[", 
       RowBox[{"cube1", ",", " ", "cube2", ",", " ", "cube3"}], "]"}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"compareThreeCubesAlongAllAxes", "[", 
       RowBox[{"cube1", ",", " ", "cube2", ",", " ", "cube3"}], "]"}], 
      "}"}]}], "}"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.912264406032669*^9, 3.912264407411809*^9}, {
   3.912266616300103*^9, 3.912266636080381*^9}, {3.912266783498019*^9, 
   3.9122668318250113`*^9}, {3.912267031331131*^9, 3.9122670330469217`*^9}, {
   3.9122673628898687`*^9, 3.912267395223302*^9}, 3.9122674254591417`*^9, {
   3.912267489260343*^9, 3.9122675033739357`*^9}, {3.912267533446159*^9, 
   3.912267553784122*^9}, {3.91226759392774*^9, 3.912267610948339*^9}, {
   3.912267954925317*^9, 3.9122679807820597`*^9}, {3.9122680344937572`*^9, 
   3.912268084845128*^9}, {3.912268284517149*^9, 3.91226833228021*^9}, {
   3.91226836499653*^9, 3.9122684599894753`*^9}, {3.912268505569618*^9, 
   3.9122685120518208`*^9}, {3.912268552753704*^9, 3.912268583420809*^9}, {
   3.9122686193107967`*^9, 3.9122686712850103`*^9}, {3.912269479663116*^9, 
   3.912269519288001*^9}, {3.91226960563202*^9, 3.912269647276249*^9}, {
   3.9122697907911673`*^9, 3.912269851937456*^9}, {3.912269978887829*^9, 
   3.912270022212962*^9}, {3.912270052870801*^9, 3.912270089606448*^9}, {
   3.912270131594943*^9, 3.912270159581514*^9}, {3.9122702372248087`*^9, 
   3.9122702931336193`*^9}, {3.912270332214175*^9, 3.91227045240093*^9}, {
   3.9122705625160007`*^9, 3.912270621791396*^9}, {3.9122707574806643`*^9, 
   3.912270862778894*^9}, {3.912270942473834*^9, 3.91227098524856*^9}, {
   3.9123128383139467`*^9, 3.912312878915883*^9}, {3.912313022608423*^9, 
   3.9123130611073503`*^9}, {3.9123131179412746`*^9, 3.912313169989504*^9}, {
   3.912313433965732*^9, 3.912313448461694*^9}, {3.912313498071694*^9, 
   3.912313499807131*^9}, 3.9123135697889214`*^9, {3.9123136877244463`*^9, 
   3.912313713464583*^9}, {3.9123144303868637`*^9, 3.912314458008833*^9}, {
   3.912314573514515*^9, 3.9123146467024508`*^9}, {3.912314677108584*^9, 
   3.912314686346047*^9}, {3.9123147195335407`*^9, 3.912314778497026*^9}, {
   3.91231484830643*^9, 3.912314904667511*^9}, {3.912318437387354*^9, 
   3.9123184392785053`*^9}, {3.912318471354505*^9, 3.912318472048452*^9}, 
   3.912408888251107*^9, {3.912409022900834*^9, 3.912409033762897*^9}, {
   3.912409445276288*^9, 3.9124095181272297`*^9}, {3.9124110203524427`*^9, 
   3.912411020790317*^9}, {3.912413199845172*^9, 3.912413210239479*^9}, {
   3.912415080632885*^9, 3.912415362226597*^9}, {3.912417311389412*^9, 
   3.9124173408818083`*^9}, {3.91241737900045*^9, 3.9124173939527073`*^9}, {
   3.9124174288891573`*^9, 3.912417463293626*^9}, {3.912417514903767*^9, 
   3.912417547683485*^9}, {3.912417587736187*^9, 3.912417634396227*^9}, 
   3.912421732863694*^9, 3.912429929362864*^9, 3.912444930324613*^9, {
   3.912445819379607*^9, 3.912445820139661*^9}, 3.9125865077932158`*^9, 
   3.913942662798163*^9, {3.9154131880471897`*^9, 3.915413199081361*^9}, 
   3.915413344706855*^9, {3.915413524932474*^9, 3.915413552529479*^9}, {
   3.915413602388781*^9, 3.915413620273315*^9}, {3.915413676107534*^9, 
   3.91541369111143*^9}, {3.915413739202641*^9, 3.915413777870476*^9}, {
   3.9154138370369377`*^9, 3.915413847976371*^9}, {3.915413884510582*^9, 
   3.9154138877670813`*^9}, {3.915413936677662*^9, 3.9154140355860567`*^9}, {
   3.915414074702133*^9, 3.9154141207255487`*^9}, {3.915414159138879*^9, 
   3.915414333877137*^9}, {3.9154143702110147`*^9, 3.9154143731365232`*^9}, {
   3.915414422906352*^9, 3.915414457588675*^9}, {3.915414525341547*^9, 
   3.915414669055232*^9}},
 CellLabel->
  "In[328]:=",ExpressionUUID->"1cb6fad7-3d75-46e5-bdfd-cc2c5aa8136f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"compareThreeCubes", "[", 
  RowBox[{"minCube", ",", " ", "outCube15", ",", " ", "maxCube"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.9154146497539253`*^9, 3.915414658671762*^9}},
 CellLabel->
  "In[349]:=",ExpressionUUID->"f4ba13d1-148e-4edf-aee7-cb940163b900"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 6, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 8, 1}}, Typeset`size$$ = {
        699., {91.6875, 97.3125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Grid[{{
              $CellContext`displayCube[$CellContext`dim$192313, 
               Part[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

                "], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"], 
              $CellContext`displayCube[$CellContext`dim$192313, 
               Part[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                "], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"], 
              $CellContext`displayCube[$CellContext`dim$192313, 
               Part[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
                "], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"]}}], 
          "Specifications" :> {{$CellContext`i$$, 1, 8, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{745., {136.6875, 142.3125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TagBox[GridBox[{
        {
         TagBox[
          StyleBox[
           
           DynamicModuleBox[{$CellContext`i$$ = 15, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
              Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
            551., {267.6875, 273.3125}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
            
            DynamicBox[Manipulate`ManipulateBoxes[
             1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
              "ControllerVariables" :> {}, 
              "OtherVariables" :> {
               Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$,
                 Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
                Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
                Typeset`initDone$$, Typeset`skipInitDone$$}, 
              "Body" :> (
               Part[$CellContext`args$192314, 1] = {$CellContext`i$$}; 
               Grid[{{
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

                    "], $CellContext`args$192314], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                    
                    "], $CellContext`args$192314], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
                    "], $CellContext`args$192314]}}]), 
              "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, 
              "Options" :> {}, "DefaultOptions" :> {}],
             ImageSizeCache->{597., {312.6875, 318.3125}},
             SingleEvaluation->True],
            Deinitialization:>None,
            DynamicModuleValues:>{},
            SynchronousInitialization->True,
            UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
            UnsavedVariables:>{Typeset`initDone$$},
            UntrackedVariables:>{Typeset`size$$}], "Manipulate",
           Deployed->True,
           StripOnInput->False],
          Manipulate`InterpretManipulate[1]]},
        {
         TagBox[
          StyleBox[
           
           DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
              Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
            551., {267.6875, 273.3125}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
            
            DynamicBox[Manipulate`ManipulateBoxes[
             1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
              "ControllerVariables" :> {}, 
              "OtherVariables" :> {
               Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$,
                 Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
                Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
                Typeset`initDone$$, Typeset`skipInitDone$$}, 
              "Body" :> (
               Part[$CellContext`args$192315, 2] = {$CellContext`i$$}; 
               Grid[{{
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

                    "], $CellContext`args$192315], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                    
                    "], $CellContext`args$192315], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
                    "], $CellContext`args$192315]}}]), 
              "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, 
              "Options" :> {}, "DefaultOptions" :> {}],
             ImageSizeCache->{597., {312.6875, 318.3125}},
             SingleEvaluation->True],
            Deinitialization:>None,
            DynamicModuleValues:>{},
            SynchronousInitialization->True,
            UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
            UnsavedVariables:>{Typeset`initDone$$},
            UntrackedVariables:>{Typeset`size$$}], "Manipulate",
           Deployed->True,
           StripOnInput->False],
          Manipulate`InterpretManipulate[1]]},
        {
         TagBox[
          StyleBox[
           
           DynamicModuleBox[{$CellContext`i$$ = 15, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
              Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
            551., {267.6875, 273.3125}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
            
            DynamicBox[Manipulate`ManipulateBoxes[
             1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
              "ControllerVariables" :> {}, 
              "OtherVariables" :> {
               Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$,
                 Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
                Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
                Typeset`initDone$$, Typeset`skipInitDone$$}, 
              "Body" :> (
               Part[$CellContext`args$192316, 3] = {$CellContext`i$$}; 
               Grid[{{
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

                    "], $CellContext`args$192316], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                    
                    "], $CellContext`args$192316], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
                    "], $CellContext`args$192316]}}]), 
              "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, 
              "Options" :> {}, "DefaultOptions" :> {}],
             ImageSizeCache->{597., {312.6875, 318.3125}},
             SingleEvaluation->True],
            Deinitialization:>None,
            DynamicModuleValues:>{},
            SynchronousInitialization->True,
            UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
            UnsavedVariables:>{Typeset`initDone$$},
            UntrackedVariables:>{Typeset`size$$}], "Manipulate",
           Deployed->True,
           StripOnInput->False],
          Manipulate`InterpretManipulate[1]]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.915414659134059*^9, 3.915414672055585*^9}},
 CellLabel->
  "Out[349]=",ExpressionUUID->"2fe483c3-7064-433c-acb8-81e54fc3a415"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"compareThreeCubesAlongAllAxes", "[", 
  RowBox[{"minCube", ",", " ", "outCube15", ",", " ", "maxCube"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.91541380067704*^9, 3.915413814619228*^9}, {
  3.915413852090974*^9, 3.915413857322632*^9}, {3.915414343129243*^9, 
  3.915414344835981*^9}, {3.9154143969613934`*^9, 3.915414398248785*^9}, {
  3.915414459184134*^9, 3.915414459761259*^9}},
 CellLabel->
  "In[284]:=",ExpressionUUID->"e4a19d2d-941b-4e72-be2b-a9812fd4f8fc"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        551., {267.6875, 273.3125}}, Typeset`update$$ = 0, Typeset`initDone$$,
         Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (Part[$CellContext`args$184300, 1] = {$CellContext`i$$}; 
           Grid[{{
               $CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

                "], $CellContext`args$184300], 
               $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                
                "], $CellContext`args$184300], 
               $CellContext`sliceGridWithHeight[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
                "], $CellContext`args$184300]}}]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{597., {312.6875, 318.3125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        551., {267.6875, 273.3125}}, Typeset`update$$ = 0, Typeset`initDone$$,
         Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (Part[$CellContext`args$184301, 2] = {$CellContext`i$$}; 
           Grid[{{
               $CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

                "], $CellContext`args$184301], 
               $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                
                "], $CellContext`args$184301], 
               $CellContext`sliceGridWithHeight[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
                "], $CellContext`args$184301]}}]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{597., {312.6875, 318.3125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        551., {267.6875, 273.3125}}, Typeset`update$$ = 0, Typeset`initDone$$,
         Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (Part[$CellContext`args$184302, 3] = {$CellContext`i$$}; 
           Grid[{{
               $CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

                "], $CellContext`args$184302], 
               $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                
                "], $CellContext`args$184302], 
               $CellContext`sliceGridWithHeight[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
                "], $CellContext`args$184302]}}]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{597., {312.6875, 318.3125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.915413815070806*^9, {3.91541385769335*^9, 3.915413860680086*^9}, 
   3.9154140404914303`*^9, 3.915414345188745*^9, {3.915414381812162*^9, 
   3.9154143986509457`*^9}, {3.915414460194282*^9, 3.915414462314526*^9}},
 CellLabel->
  "Out[284]=",ExpressionUUID->"40cde0d1-d8bc-4e26-aec7-4f9b3b932895"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"compareCubes", "[", 
  RowBox[{"minCube", ",", " ", "outCube15", ",", " ", "maxCube"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.915414043537991*^9, 3.915414054519403*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"9795074e-43fb-4107-b494-babd7733eaec"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
    1275., {267.6875, 273.3125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          $CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

           "], {{$CellContext`i$$}, All, All}], 
          $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
           
           "], {{$CellContext`i$$}, All, All}], 
          $CellContext`sliceGridWithHeight[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
           "], {{$CellContext`i$$}, All, All}], 
          $CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

           "], {All, {$CellContext`i$$}, All}], 
          $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
           "], {
           All, {$CellContext`i$$}, All}], 
          $CellContext`sliceGridWithHeight[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
           "], {All, {$CellContext`i$$}, All}], 
          $CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

           "], {All, All, {$CellContext`i$$}}], 
          $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
           "], {
           All, All, {$CellContext`i$$}}], 
          $CellContext`sliceGridWithHeight[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
           "], {All, All, {$CellContext`i$$}}]}}], 
      "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1322., {312.6875, 318.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.915414054936142*^9, 3.915414061013253*^9}, {
   3.915414107444365*^9, 3.915414126158865*^9}, 3.915414171366894*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"071ee6e1-aae1-4dea-978f-353b957945d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: max and min cubes of side 15", "Subsection",
 CellChangeTimes->{{3.9124451534856033`*^9, 
  3.912445186010397*^9}},ExpressionUUID->"3cf80991-5947-4fae-80f3-\
2de0a0a27c13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cube2", " ", "=", " ", 
  RowBox[{"initialCubeBorder", "[", "21", "]"}]}]], "Code",
 CellChangeTimes->{{3.915376272065592*^9, 3.915376278881859*^9}, {
  3.9154129437814817`*^9, 3.915412943967523*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"4010bd6b-b10a-4a65-9a18-a530dbaa938a"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack1", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"21\\\", \\\",\\\", \\\"21\\\", \\\",\\\", \\\"21\\\"}], \
\\\"}\\\"}]\\).\"", 2, 44, 95, 34809098522299453303, "Local", 
   "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.9154129826721*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"5cba76dd-9b79-44a9-8f94-ae878b8ba7fe"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6",
                ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12",
                ",", "13", ",", "14", ",", "15", ",", "16", ",", "17", ",", 
               "18", ",", "19", ",", "20"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7",
                ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", 
               "13", ",", "14", ",", "15", ",", "16", ",", "17", ",", "18", 
               ",", "19", ",", "20", ",", "19"}], "}"}], ",", 
             TemplateBox[{"17"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              RowBox[{
              "19", ",", "20", ",", "19", ",", "18", ",", "17", ",", "16", 
               ",", "15", ",", "14", ",", "13", ",", "12", ",", "11", ",", 
               "10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", 
               "4", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "20", ",", "19", ",", "18", ",", "17", ",", "16", ",", "15", 
               ",", "14", ",", "13", ",", "12", ",", "11", ",", "10", ",", 
               "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", 
               "3", ",", "2", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}], ",", 
           TemplateBox[{"17"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{55.44140625, {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{49.25390625, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{49.25390625, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 44, 34809098522299453303, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{55.44140625, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{55.44140625, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 44, 34809098522299453303, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{41.6015625, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 44, 34809098522299453303, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74.9296875, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[34809098522299453303 === $SessionID, 
   Out[44], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.915376279556222*^9, {3.915412936910104*^9, 3.915412944256081*^9}, 
   3.915412982691272*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"f4a347de-8587-41f9-97f0-6fdeeedea021"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Developer`PackedArrayQ", "[", "maxCube", "]"}]], "Code",
 CellChangeTimes->{{3.915376559145597*^9, 3.9153765638280582`*^9}, {
  3.915377034200305*^9, 3.91537704846084*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"52c139c6-ba1f-4750-b7c4-512e8ca86c1c"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.915377044234379*^9, 3.915377048875984*^9}, 
   3.915412995281107*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"a61ac58d-31b8-4dfd-89a5-771a2f2dc211"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dim", " ", "=", " ", "15"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cube", " ", "=", " ", 
   RowBox[{"initialCubeBorder", "[", "15", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"maxCube", " ", "=", " ", 
   RowBox[{"generateMaxCube", "[", "dim", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"minCube", " ", "=", " ", 
   RowBox[{"generateMinCube", "[", "dim", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"MatrixForm", "[", 
       RowBox[{"maxCube", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "All", ",", "All"}], "\[RightDoubleBracket]"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}], "\n", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"MatrixForm", "[", 
       RowBox[{"minCube", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "All", ",", "All"}], "\[RightDoubleBracket]"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], 
   "*)"}]}]}], "Code",
 CellChangeTimes->{{3.8963315301595716`*^9, 3.8963315999490423`*^9}, 
   3.8963316511910553`*^9, {3.89633391267474*^9, 3.896333913798381*^9}, {
   3.896333984558095*^9, 3.8963339860371017`*^9}, {3.896334238850512*^9, 
   3.8963342404267263`*^9}, {3.9124104286872063`*^9, 
   3.9124104560692463`*^9}, {3.91242985221181*^9, 3.912429857993331*^9}, {
   3.912445480937314*^9, 3.9124454888452053`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"2148de09-ed05-4808-bed8-2a80b8dfc5bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cubesLayersSimultaneously", "[", 
  RowBox[{"minCube", ",", " ", 
   RowBox[{"to3Colouring", "[", "minCube", "]"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.912251791004142*^9, 3.9122518038093777`*^9}, {
   3.912317759236363*^9, 3.912317794709379*^9}, {3.912409523098621*^9, 
   3.912409523384006*^9}, {3.912410487525897*^9, 3.912410487935278*^9}, {
   3.9124161580195208`*^9, 3.9124161791368017`*^9}, {3.9124171557617702`*^9, 
   3.912417159303616*^9}, 3.912421721995995*^9, {3.91242988374607*^9, 
   3.912429936431622*^9}, {3.9124449376275883`*^9, 3.9124449391817493`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"57af5111-0f01-4f8c-80d8-9d8ac3a7ab54"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 8, 1}}, Typeset`size$$ = {
    468., {91.6875, 97.3125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          $CellContext`displayCube[$CellContext`dim$38108, 
           Part[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

            "], 
            Span[$CellContext`i$$, -$CellContext`i$$], 
            Span[$CellContext`i$$, -$CellContext`i$$], 
            Span[$CellContext`i$$, -$CellContext`i$$]], "DeepSeaColors"], 
          $CellContext`displayCube[$CellContext`dim$38108, 
           Part[CompressedData["
1:eJzFltFxwzAMQ2l2gM7QlTpCFsj+f805pgQ8yupXr3dJHMSIRAigrK/H8/vx
ERGf8o4j9bVF4Si3KBzlFoWj3KJwlFvU9DkORXEo/XUrFSn5HPhQNMlVsqIi
V1lvsuhTdJJFQ1AfMDyiIruvC1KqLnRpLqTks4pBrlljokGuki9Vh5LFElPQ
9MJfpo4eUdFNSgvXjddlkN8/a9T810keJWnUkM+uF/4u+FovU0ePqMjyXArP
Dy3HnIOvQh4jLPrP/DR/kedF/+rOwD5i6ugRFVmexwJr76EzlTz+D73wF3lG
/8JD1zct9fmx3sgX+gn7h4/f9s8/nu9ufqw38oUrWBiDM/zrfIHVwFphJVd9
tEjdcn6sL9yAV3ASPiMF8AyJbc8jSzt6AZ2y6iOkDh5B0ewXdLcWOmUfaUNo
pEUV9LUnrBR+hUOsV2bTu+gjpA4eQREqra8S0VGfKlz9T/xrZ4bbJ2zXC3+R
595HSB08giJ1RlG28xU8dH3DgpkvDR70wl/kGf1r2Wz7ZUsdPIKiVBU4faUr
/O3cagp5ZvA883mUirlfcmdAHyF18AiKoAkI/m0x/Ga+HafjY4tXO8Mtbh7t
8A99/w8M
            "], 
            Span[$CellContext`i$$, -$CellContext`i$$], 
            Span[$CellContext`i$$, -$CellContext`i$$], 
            Span[$CellContext`i$$, -$CellContext`i$$]], "DeepSeaColors"]}}], 
      "Specifications" :> {{$CellContext`i$$, 1, 8, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{514., {136.6875, 142.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.912421723350317*^9, 3.912421736275527*^9}, 
   3.912429861544059*^9, {3.912429912039249*^9, 3.912429936855916*^9}, 
   3.9124301569180937`*^9, {3.912444939780517*^9, 3.912444945292884*^9}, {
   3.912446600279335*^9, 3.912446625004259*^9}, 3.912446729272571*^9, 
   3.912446859074316*^9, 3.912585196864328*^9, 3.913938691789893*^9, {
   3.913938973890571*^9, 3.9139389814690657`*^9}, 3.91394262286057*^9, 
   3.915376229528883*^9, 3.915376595277919*^9, 3.915413000619128*^9, 
   3.91541306233659*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"650338cc-4e51-4692-b991-d23fd3fd6275"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cubeSlicesAllAxesSimultaneously", "[", "minCube", "]"}], "\n", 
 RowBox[{"cubeSlicesAllAxesSeparately", "[", "minCube", "]"}]}], "Code",
 CellChangeTimes->{{3.912254090814623*^9, 3.91225409850528*^9}, {
   3.9122626197887173`*^9, 3.912262635065693*^9}, 3.912266838845381*^9, {
   3.91226743894987*^9, 3.912267451869739*^9}, {3.912267618897295*^9, 
   3.91226761911683*^9}, {3.912268468866748*^9, 3.9122684720184383`*^9}, {
   3.912268678959939*^9, 3.912268689916807*^9}, {3.91227002852654*^9, 
   3.912270033277396*^9}, 3.91227109937913*^9, {3.912410406453114*^9, 
   3.9124104096680193`*^9}, {3.912410491664907*^9, 3.9124104952239122`*^9}, {
   3.912417164300827*^9, 3.9124171672657537`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"1c71fc96-a296-4b0b-ab7f-73c9848f5424"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
    551., {267.6875, 273.3125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> \
$CellContext`cubeSlicesAllAxesSimultaneouslyGrid[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

        "], $CellContext`i$$], 
      "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{597., {312.6875, 318.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.912254098961012*^9, 3.912261732964941*^9, {3.912261845109248*^9, 
   3.9122618673733587`*^9}, 3.912261906632366*^9, 3.9122623704304457`*^9, 
   3.9122624080775127`*^9, {3.912262607107293*^9, 3.912262642199815*^9}, 
   3.912266839283944*^9, 3.91226703766444*^9, {3.912267431943881*^9, 
   3.912267452347896*^9}, 3.9122675229003057`*^9, 3.912267556992798*^9, {
   3.91226759769552*^9, 3.9122676195664177`*^9}, 3.912268091243443*^9, 
   3.912268472371093*^9, 3.912268515066235*^9, 3.912268690382292*^9, 
   3.9122697360651503`*^9, 3.912270033905272*^9, 3.9122701114791193`*^9, 
   3.912270164057863*^9, 3.9122743433164177`*^9, 3.91231016958733*^9, 
   3.912312895668007*^9, 3.912314851576214*^9, 3.9123148823273363`*^9, 
   3.912399690371847*^9, 3.912399822882844*^9, 3.91241041079039*^9, 
   3.912410495555201*^9, {3.912413223498426*^9, 3.912413236181161*^9}, 
   3.912421755662983*^9, {3.912430119366959*^9, 3.912430148765983*^9}, 
   3.912442987188569*^9, 3.912446632176406*^9, 3.91244673886714*^9, 
   3.9124468624530687`*^9, 3.912585209190012*^9, 3.913938869188645*^9, 
   3.9139389579561853`*^9, 3.913938988845853*^9, 3.913942624795439*^9, 
   3.915413017328333*^9, 3.915413065159481*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"2c1d3422-ef7f-4fe4-80b7-0a4ecc1ddf2b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        180., {267.3875, 273.0125}}, Typeset`update$$ = 0, Typeset`initDone$$,
         Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$38857, 
              1] = {$CellContext`i$$}; \
$CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

             "], $CellContext`args$38857]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{243., {312.6875, 318.3125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        180., {267.3875, 273.0125}}, Typeset`update$$ = 0, Typeset`initDone$$,
         Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$38858, 
              2] = {$CellContext`i$$}; \
$CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

             "], $CellContext`args$38858]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{243., {312.6875, 318.3125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        180., {267.3875, 273.0125}}, Typeset`update$$ = 0, Typeset`initDone$$,
         Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$38859, 
              3] = {$CellContext`i$$}; \
$CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

             "], $CellContext`args$38859]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{243., {312.6875, 318.3125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.912254098961012*^9, 3.912261732964941*^9, {3.912261845109248*^9, 
   3.9122618673733587`*^9}, 3.912261906632366*^9, 3.9122623704304457`*^9, 
   3.9122624080775127`*^9, {3.912262607107293*^9, 3.912262642199815*^9}, 
   3.912266839283944*^9, 3.91226703766444*^9, {3.912267431943881*^9, 
   3.912267452347896*^9}, 3.9122675229003057`*^9, 3.912267556992798*^9, {
   3.91226759769552*^9, 3.9122676195664177`*^9}, 3.912268091243443*^9, 
   3.912268472371093*^9, 3.912268515066235*^9, 3.912268690382292*^9, 
   3.9122697360651503`*^9, 3.912270033905272*^9, 3.9122701114791193`*^9, 
   3.912270164057863*^9, 3.9122743433164177`*^9, 3.91231016958733*^9, 
   3.912312895668007*^9, 3.912314851576214*^9, 3.9123148823273363`*^9, 
   3.912399690371847*^9, 3.912399822882844*^9, 3.91241041079039*^9, 
   3.912410495555201*^9, {3.912413223498426*^9, 3.912413236181161*^9}, 
   3.912421755662983*^9, {3.912430119366959*^9, 3.912430148765983*^9}, 
   3.912442987188569*^9, 3.912446632176406*^9, 3.91244673886714*^9, 
   3.9124468624530687`*^9, 3.912585209190012*^9, 3.913938869188645*^9, 
   3.9139389579561853`*^9, 3.913938988845853*^9, 3.913942624795439*^9, 
   3.915413017328333*^9, 3.915413065328327*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"ebcbb6f7-f20e-4739-bb83-333a850d7d8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cubesSlicesSeparately", "[", 
  RowBox[{"maxCube", ",", " ", "minCube"}], "]"}], "\n", 
 RowBox[{"cubesSlicesSimultaneously", "[", 
  RowBox[{"maxCube", ",", " ", "minCube"}], "]"}]}], "Code",
 CellChangeTimes->{{3.912314463602271*^9, 3.912314466831243*^9}, {
  3.912314540429406*^9, 3.912314547984791*^9}, {3.912314786181971*^9, 
  3.91231479931944*^9}, {3.912410539943325*^9, 3.912410542472999*^9}, {
  3.912417171258238*^9, 3.9124171737988577`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"af9d4561-7cad-4ed1-ba9c-ad923ed74cc4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 15, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        551., {267.6875, 273.3125}}, Typeset`update$$ = 0, Typeset`initDone$$,
         Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> \
$CellContext`cubeSlicesAllAxesSimultaneouslyGrid[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
            "], $CellContext`i$$], 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{597., {312.6875, 318.3125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 15, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        551., {267.6875, 273.3125}}, Typeset`update$$ = 0, Typeset`initDone$$,
         Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> \
$CellContext`cubeSlicesAllAxesSimultaneouslyGrid[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

            "], $CellContext`i$$], 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{597., {312.6875, 318.3125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.9123145483787947`*^9, {3.912314787836027*^9, 3.912314800148036*^9}, 
   3.91239982854112*^9, 3.9124105428419743`*^9, 3.9124132416768713`*^9, 
   3.912414582626873*^9, 3.912421773283187*^9, 3.9124301387267838`*^9, 
   3.912443010767949*^9, 3.912446748427058*^9, 3.9124468661192427`*^9, 
   3.9125852132989492`*^9, {3.913942645368856*^9, 3.9139426695599957`*^9}, 
   3.91541306822081*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"7d2a1274-27fd-457f-8d63-4928f3d44c6c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
    1108., {268.1875, 273.8125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          $CellContext`cubeSlicesAllAxesSimultaneouslyGrid[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
           "], $CellContext`i$$], 
          $CellContext`cubeSlicesAllAxesSimultaneouslyGrid[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

           "], $CellContext`i$$]}}], 
      "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1154., {313.1875, 318.8125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.9123145483787947`*^9, {3.912314787836027*^9, 3.912314800148036*^9}, 
   3.91239982854112*^9, 3.9124105428419743`*^9, 3.9124132416768713`*^9, 
   3.912414582626873*^9, 3.912421773283187*^9, 3.9124301387267838`*^9, 
   3.912443010767949*^9, 3.912446748427058*^9, 3.9124468661192427`*^9, 
   3.9125852132989492`*^9, {3.913942645368856*^9, 3.9139426695599957`*^9}, 
   3.915413068483865*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"8db44f02-6a9f-477f-86b8-10a012be52d3"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Don\[CloseCurlyQuote]t run", "Section"],
 " the following codeblock! The cubesSlices function has since been commented \
out and so does not work anymore. I\[CloseCurlyQuote]ve kept the following \
visuals because they\[CloseCurlyQuote]re pretty and I like playing with them \
when my code breaks and everything else stops working. They remind me there \
is still some good left in this world."
}], "Text",
 CellChangeTimes->{{3.9124452555080767`*^9, 3.9124453582446117`*^9}, {
  3.912445393927196*^9, 3.912445401968899*^9}, {3.912446562355707*^9, 
  3.912446578275989*^9}},ExpressionUUID->"00cba1b4-7863-4035-b775-\
b728565720c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cubesSlices", "[", 
  RowBox[{"7", ",", " ", "maxCube", ",", " ", "maxCube"}], "]"}]], "Code",
 CellChangeTimes->{{3.912252444092494*^9, 3.9122524530987253`*^9}, {
  3.9122534318234177`*^9, 3.912253432661413*^9}, {3.912253532371214*^9, 
  3.912253535336838*^9}, {3.9122536324392633`*^9, 3.9122536384850597`*^9}},
 CellLabel->
  "In[565]:=",ExpressionUUID->"8a6f1077-1d8d-412d-b17e-7e387e7a6104"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 7, 1}}, Typeset`size$$ = {
        1091., {177.1875, 182.8125}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Grid[{{
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 1], 
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 2], 
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 3]}}], 
          "Specifications" :> {{$CellContext`i$$, 1, 7, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1137., {222.1875, 227.8125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 7, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 7, 1}}, Typeset`size$$ = {
        1091., {177.1875, 182.8125}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Grid[{{
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 1], 
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 2], 
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 3]}}], 
          "Specifications" :> {{$CellContext`i$$, 1, 7, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1137., {222.1875, 227.8125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.912252454018835*^9, {3.912252653140688*^9, 3.912252680770763*^9}, 
   3.912253117257453*^9, 3.9122531526212883`*^9, {3.912253237361538*^9, 
   3.912253264268676*^9}, {3.9122534174316597`*^9, 3.912253447631917*^9}, 
   3.912253545564445*^9, 3.91225363904545*^9},
 CellLabel->
  "Out[565]=",ExpressionUUID->"20f7c4cb-b0db-4a16-82ed-b1c3b2f82431"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"7\\\"}], \
\\\"}\\\"}]\\) in call to \
\\!\\(\\*RowBox[{\\\"System`Private`PackedList\\\"}]\\).\"", 2, 53, 1796, 
   34809098522299453303, "Local", "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.915413044456685*^9},
 CellLabel->"",ExpressionUUID->"eb7999d1-0e6f-4802-8d3d-1e74b4723a73"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"7\\\"}], \
\\\"}\\\"}]\\) in call to \
\\!\\(\\*RowBox[{\\\"System`Private`PackedList\\\"}]\\).\"", 2, 53, 1797, 
   34809098522299453303, "Local", "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.915413044461091*^9},
 CellLabel->"",ExpressionUUID->"3c20dc61-67a9-4faf-a1cc-174ff023f5ce"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"7\\\"}], \
\\\"}\\\"}]\\) in call to \
\\!\\(\\*RowBox[{\\\"System`Private`PackedList\\\"}]\\).\"", 2, 53, 1798, 
   34809098522299453303, "Local", "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.915413044520075*^9},
 CellLabel->"",ExpressionUUID->"24cb0583-3aa6-4852-a107-8a0feebcafbb"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \
\\!\\(\\*StyleBox[RowBox[{\\\"Developer`FromPackedArray\\\", \\\"::\\\", \
\\\"punpack\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 53, 1799, 34809098522299453303, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.915413044572693*^9},
 CellLabel->"",ExpressionUUID->"72f7c2e6-06bc-4260-9684-24b69d4742b5"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"7\\\"}], \
\\\"}\\\"}]\\) in call to \
\\!\\(\\*RowBox[{\\\"System`Private`PackedList\\\"}]\\).\"", 2, 53, 1800, 
   34809098522299453303, "Local", "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.9154130445944223`*^9},
 CellLabel->"",ExpressionUUID->"ea0c4d14-b57c-4889-b608-dddce031db83"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"7\\\"}], \
\\\"}\\\"}]\\) in call to \
\\!\\(\\*RowBox[{\\\"System`Private`PackedList\\\"}]\\).\"", 2, 53, 1801, 
   34809098522299453303, "Local", "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.915413044650177*^9},
 CellLabel->"",ExpressionUUID->"1e477417-0ef8-4681-8e43-6d9bfe1a5981"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"7\\\"}], \
\\\"}\\\"}]\\) in call to \
\\!\\(\\*RowBox[{\\\"System`Private`PackedList\\\"}]\\).\"", 2, 53, 1802, 
   34809098522299453303, "Local", "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.915413044703813*^9},
 CellLabel->"",ExpressionUUID->"6deb6a29-72c6-4415-b107-f1cd625960e0"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \
\\!\\(\\*StyleBox[RowBox[{\\\"Developer`FromPackedArray\\\", \\\"::\\\", \
\\\"punpack\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 53, 1803, 34809098522299453303, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.915413044755574*^9},
 CellLabel->"",ExpressionUUID->"df309c55-5be4-4a3e-95d6-8760f17f36c2"],

Cell[BoxData[
 Graphics3DBox[{GeometricTransformation3DBox[{
     {RGBColor[0.405188, 0.204349, 0.343389], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{0, -7, -7}}, {{
       6, -1, -7}}, {{6, -7, -1}}, {{0, -1, -1}}}]}, 
     {RGBColor[
      0.6333770000000001, 0.23392566666666667`, 0.37273666666666666`], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{1, -7, -7}}, {{
       0, -6, -7}}, {{6, -2, -7}}, {{5, -1, -7}}, {{0, -7, -6}}, {{
       1, -6, -6}}, {{5, -2, -6}}, {{6, -1, -6}}, {{6, -7, -2}}, {{
       5, -6, -2}}, {{1, -2, -2}}, {{0, -1, -2}}, {{5, -7, -1}}, {{
       6, -6, -1}}, {{0, -2, -1}}, {{1, -1, -1}}}]}, 
     {RGBColor[0.7996756666666667, 0.3505163333333333, 0.48605733333333334`], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNzsENwjAMRuGkpN2jN+ZhBAaA+bHlGFt6h/9g9VOVvPh+f1+fxxjjWTNr
2kfNLzN7+p/h4nB8lQOf5Y1XOeVuf427hg/xpGl0Ai+axltbzqQ0u++yp9N3
vGi67Ok0U9yd4IzhRSdoBp50gh1S7nZnc9fwJT5pbjqBB83NW1vOpDS7n7Jn
0nc8aKbsmTRh/gEOKUA5
       "]]}, 
     {RGBColor[0.831283, 0.533131, 0.662656], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNk2sOwjAMg7t12z04Dn85AgeA89NHTCPZmpEqPnWu40Tt4/19fWop5bnW
tlbl+gHItS9u5PzeyQvLIF/G5+JJPhYHOT1hnvnfuN/Ihf6NGvFG/0Z/8cFa
jRmmeYZpYD5Zt7NWI+/G6rHTp5tmkA/jyrrdepcmyJfxyTzKkHkGNeKNeQb1
Ys1k0F9cmUeaaZppnmGe4sI8ygDTZJ5Jn0a+jDWfSb1Ys9JZ8cY8OisuzKOz
YXqYT+YJuzNhcwhmE+vOhN2ZYK1J3o11Z7QP28+6sDnA+gXutwDcbwHWL6wv
4H4L+fsDFoxG/g==
       "]]}, 
     {RGBColor[0.742797, 0.6702466666666667, 0.8056613333333333], Opacity[1], 
      EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNktFtwzAQQ+XE8R5dqQPkowO089eSjrEAEn4fgp+FI48+39fP3/fvs7X2
vs52ncX7df4lrbPeT/Pj4m4+wEs3zC/whW2ad/DyLHgK9+t5uv40P93rtH+4
uddpnwFt+ABvzhDPCW3hXrhfebp9wplJd55wc7buDOHMJ9oBbfjhPOk1oS1o
C72EXkL9yjnsH27OOdwrvIMP8Ob8A/OPZ4fPgM+AdkI7oZ3IU/Ap+BTyFDwF
H8FnfeO0Nrz5Wyb+18QOT+xw6gfqwy9w9jm9JuoL9YVeQi+hfuUs/IvCzAsz
L917nvrwDj7AmXlh5qkv1AieK48wK+neZ+neZ2FWwnyke4ele4fjWfAx6gNC
ie4s
       "]]}, 
     {RGBColor[0.680889, 0.7972306666666666, 0.8930633333333333], Opacity[1], 
      EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNk9ttxDAMBHW+k/u4lq6EFJDUHz3IiMAuMgYEz8eIXCzs99fP5/vZWvuc
8zinuJ/zm5l1XoeH+AaXN8UdfB1euGuu2Rt3zQdb4G7AT8yp91AGc1eeIWfC
MT+VYWjXFl/gh/baSTiJObV3aq/Z/Uz0Y2eKmzLYMbsTOyG+wO5hKkPCqQwL
/Sw5Q9yUYaGTpZlL3MHux/7GzBC7E+9NzKwMG11tzRziC/xQHjtLfIO7Mmzt
CjiBXQk/MbMyBLoK7R1i92PH7G8mtHeLb3BXBjsJJ7Gr9iZ6SPSQ6CHz/5+y
s8QvsP+dRD92QnyD3Uk9f6gQjqQ=
       "]]}, 
     {RGBColor[0.659388, 0.872053, 0.882048], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNkMERwyAMBIWJ6cMpySW4gKT+IOAizeyDh4Z9LHeC6/nen2pm75gSk9xi
fpJyzuAOv4IdTm/AR/CEM2PBgaYtJ8/MamR2nAUX/E5X+o7vsNHl9Aqu+ANn
wG3jij+4m/7Ed7iRP9lBcMFf+B1u7L94ozYnfXG3wwdd2v5QdE34JFPkg/oD
/50QdQ==
       "]]}, 
     {RGBColor[0, 0, 0], Opacity[0], EdgeForm[None]}}, {{{1, 0, 0}, {0, -1, 
     0}, {0, 0, -1}}, {0, 0, 0}}], 
   GeometricTransformation3DBox[GeometricTransformation3DBox[
     {EdgeForm[GrayLevel[0.2]], FaceForm[None, None], 
      CuboidBox[{0, 0, 0}]}, CompressedData["
1:eJxdl0uO3DAQQ223W/eYK2WTfQ6QnD/WhxkBetDrNGYQwqBoVRVZPfn69efH
79dxHD/P4/j+OSaen79J5m/5xhGe/87PsZ7Pzyn+fP6IPxZ+Swf9Z519Fn4v
/qP3PnrvWJxn4XPxh+4Dh3uWxefOQ3fm/pfuf+r+k19VS1ct1HWrrlN1Harr
Ej6XJvX2he//ah/iRJpTv+qedenXhe+lWXXPqn6Cp05XP/s6Wxe+lk5Xn7v6
zFnmcmsuRfi9NJlX17yY3SXMXNBkjtyTmVbNtGumzPfSfF+aL7NgXsx36jTN
GsyMmDVzf2nu+OdZz5k1/sED4HPpM18ws8MDXZpDnEgHP+A3/ACmxrp0qjhN
nmni2D9dHHtpiBPdYd6nyWMt26tNc2zqScv2Xlt3aOJ0cbo0hzTB+JM7RBw8
j1d7tle7+oO3nYWms2D8zFkw3ubsED/SITt4Bs+Tl3J8ZqdlZwqM/8lRl6bz
FT0nU/QhqjfZWUh2FqJ6o7qSnQU0yRp1kRHvUjB1kTUwdZG7Ls0hzeg5GaQu
suN9C6ZGsukMgoswtaPZdXboefScbBZhekJ2wOwKsgamP5xtOgtm7ryr6+zQ
2aF3Re+K+GT2LcxuIY/gW7gIs3PIcpVmlU6TTtPZrrNdZ7vuM6QzpDN0nyHN
SCfS8U4As6/INRgPszeq+E188FsYP/Mu740hvvdG9K6Iz95gFuwHdsVLGJ/D
B9/CRZies2e6+EOcSJN9Qq+S7edk+znqVdSfZHs42R5Gc0gnOsuewYfsFjB9
YLeA6QNnwXiPs2D8xtkhfqTD/inCZJzdUsUB4xn2kncLmCzDiTiRDnvmLUx/
2A/eP+wZfAIHTE/gsEMuYfrAnok47JBbGJ+QQXZCEcYnZLaJ38X3rvBOiN4b
aZLxlzD7jdyByRQcslyOz4w710OcoXdF/EjTWQazf8hvFccZd5bJaTk+8zvE
iTjRu/x/OvJ7CdOHZGcKDvm9hclO1B84ZLkI0xOek2uyQ77IL7WTR3JKRshs
pONs+u9zMoWHyam/u50RsoDH8Ly/K/FqEcYD+NPe83eKvZRsH+INZsQcmS89
hMNM8RLz8hw9O8/LM2Iu/wB0HKvr
     "]], {{{1, 0, 0}, {0, -1, 0}, {0, 0, -1}}, {
     0, 0, 0}}]},
  AxesLabel->{None, None, None},
  DisplayFunction->Identity,
  ImageSize->{364.27601539834023`, 381.18470105204756`},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
    "M10DefaultGradient", 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "RelieveDPZFighting" -> False},
  PlotRange->{{0, 7}, {0, 7}, {0, 7}},
  PlotRangePadding->Scaled[0.02],
  Ticks->{{{-0.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}, {{7.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}, {{7.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}},
  ViewPoint->{2.3718456678985684`, 2.409806950586486, 0.131067114776642},
  ViewVertical->{
   0.8799398724085874, -0.010302978700605411`, -0.47497333564680627`}]], \
"Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.896330176088093*^9, 3.896330192665531*^9}, {
   3.8963303631655607`*^9, 3.89633038976855*^9}, {3.896330423233328*^9, 
   3.89633043410995*^9}, {3.896330509216579*^9, 3.896330517282062*^9}, {
   3.896330627519936*^9, 3.896330636247086*^9}, 3.89633073077172*^9, 
   3.896330781069508*^9, 3.8963314621825953`*^9, 3.896332227841249*^9, 
   3.8963381893310957`*^9, {3.8963729778830233`*^9, 3.896372986594284*^9}, 
   3.896373047968767*^9, 3.896373149514886*^9, 3.8963732109932213`*^9, {
   3.896406898297853*^9, 3.89640691466749*^9}, 3.896408665498767*^9, 
   3.896415387910993*^9, 
   3.8964154184164343`*^9},ExpressionUUID->"0cf7af11-1c17-42bb-9958-\
8cd8ecfaa108"]
}, Open  ]],

Cell[TextData[{
 "The images that the following codeblock produces can be ",
 StyleBox["manipulated", "Section"],
 "--click on a cube and play around with the tabs that appear. You can even \
clip along a custom normal vector!"
}], "Text",
 CellChangeTimes->{{3.9124455171566877`*^9, 3.912445547501302*^9}, {
  3.912445609614478*^9, 3.912445620988151*^9}, {3.912447048377124*^9, 
  3.912447097979877*^9}},ExpressionUUID->"d7acfd83-2905-4c91-8de5-\
560bb0ab3d78"],

Cell[BoxData[{
 RowBox[{"Image3D", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"maxCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
   RowBox[{"Max", "[", "maxCube", "]"}]}], "]"}], "\n", 
 RowBox[{"Image3D", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"minCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
   RowBox[{"Max", "[", "minCube", "]"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"minCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{"Max", "[", "minCube", "]"}], ")"}]}], "*)"}]}]}], "Code",
 CellChangeTimes->{{3.8963316730691643`*^9, 3.896331746094306*^9}, {
   3.896334624808174*^9, 3.8963346560064697`*^9}, {3.8963348102956*^9, 
   3.896334818678288*^9}, {3.896334880560091*^9, 3.896334900623008*^9}, 
   3.896415066154051*^9, {3.89641525094273*^9, 3.896415289726448*^9}, {
   3.912445463231304*^9, 3.912445464626943*^9}, 3.91244723400909*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"4a151634-84be-4917-bc9d-83c658b41256"],

Cell[BoxData[
 StyleBox[
  Graphics3DBox[
   TagBox[Raster3DBox[CompressedData["
1:eJztmzFOAkEUhjeaEAsSEyoqEwsau9XESnZjrKhMsLSCRG1AEygMVlYegAN4
ADgAB+AAHoAL2OsBnJfNKggx8n/MEBIKZXeZLxln5t/33j/jYfOhfrsTRVF3
z/2qNx7PO51G76pgNzeN1slxa9dd7k/9xMWLalwcVyu1UuKuk+pbN6nU+slw
MHD342TUnrhnH0mzXEhdm/S9d5AOB0fp/eQ0VTn7VDm7Vzl7rnLZ9xpn7VTO
2q+Ds/6qnI2TymXzo3G2LlTO1qPKmQ5UjuhP1ZFrn39KnN2rXDY+KldKVc7a
qVw+j6E566/KZetN5fqJytm6UDlbjypH9RsyHhEdfZ5dfvMqZ89VLvt7Nc7a
qVw+j6E566/K2TipnM2Pytm6UDmqXxJ/Q+V1JB4RHY3a1zO8ytn3KmftVO4n
Dw7LWX9VzsZJ5Wx+VI7ql8Rfkj+HqI9IXkfiEdHR0+vdHK9y1k7l8vEKzVl/
Vc7GSeWofkn8Jfkzq3/9+gykPiJ5HYlHREduTBfyKpf3OzRn/VU5ql8Sf0n+
TOpf4l/59OuIX0DqHJKfkbhC9BBFz3/yoTmqXxJ/Sf5M6l/iXxH/eau/zdZf
s/yy1eGG69DH/hGJ+yTfIHkOya9IXkd14JMn7x3yviPvWfJ+J3GFxLNV78OS
+pfU3aTeJz4DrY9oPPHJk/qX1N2k3ic+A/E3SF3H/JzV7cMS/5n43tSvoz4D
zct88iF0tIgnvjfx24nPz/YXVnMuaBn9/d4PXc4/7q90/4j63tSvo/WNTz5E
PKI6ms+f9X1nst8dg30+VX+VqfM5y+ovnjoXtKz+qH5J/CX5sy+fwCcfIq+j
8YjqaDb+6ue+KuC8i6q//Jyqoj+qXxJ/Sf7sY//oP7xPv476DLQ+onkdjUdU
R1P5s3zuU9Wfu64SnuifxG+Sf5P6eV37R4QnPgOpj0heR+IR0VEM/v/hC5iJ
2c8=
     "], {{0, 15, 15}, {15, 0, 0}}, {0., 1.},
     ColorFunction->(Blend[{{0., 
         RGBColor[0.16791, 0., 0.301671, 0.0441387557208916]}, {0.1, 
         RGBColor[
         0.22307159999999998`, 0.02430488, 0.42178180000000004`, 
          0.13972488014880244`]}, {0.3, 
         RGBColor[
         0.2917374, 0.11413975999999999`, 0.6482166, 0.3308971290046241]}, {
        0.66, 
         RGBColor[0.26544316, 0.54154952, 0.92275724, 0.6750071769451031]}, {
        1., 
         RGBColor[0.772061, 0.92462, 0.998703, 1.]}}, #]& ),
     Method->{"FastRendering" -> True}],
    BoxForm`ImageTag["Real32", ColorFunction -> (Blend[{{0., 
         RGBColor[0.16791, 0., 0.301671, 0.0441387557208916]}, {0.1, 
         RGBColor[
         0.22307159999999998`, 0.02430488, 0.42178180000000004`, 
          0.13972488014880244`]}, {0.3, 
         RGBColor[
         0.2917374, 0.11413975999999999`, 0.6482166, 0.3308971290046241]}, {
        0.66, 
         RGBColor[0.26544316, 0.54154952, 0.92275724, 0.6750071769451031]}, {
        1., 
         RGBColor[0.772061, 0.92462, 0.998703, 1.]}}, #]& ), ColorSpace -> 
     Automatic, Interleaving -> None],
    Selectable->False],
   AxesStyle->{},
   Background->None,
   BoxRatios->Automatic,
   Boxed->False,
   ClipPlanes->{{0, 1, 1, 0}, {0, -1, -1, 30}, {1, 0, 1, 0}, {-1, 0, -1, 
    30}, {1, 1, 0, 0}, {-1, -1, 0, 30}},
   ClipPlanesStyle->{None, None, None, None, None, None},
   DefaultBaseStyle->"Image3DGraphics3D",
   ImageSize->{345.0679272319402, 350.48585202455183`},
   ImageSizeRaw->15,
   Method->{"ShrinkWrap" -> True},
   PlotRange->{{0, 15}, {0, 15}, {0, 15}},
   ViewPoint->{-0.16573002143011092`, 2.8691112494573043`, -1.786262634170664},
   ViewVertical->{-0.3559914358840638, 0.8771596944293816, 
    0.3222746779468665}],
  Raster3DBoxOptions->{PlotRange->{{0, 15}, {0, 15}, {0, 15}},
  PlotRangeClipPlanesStyle->{None, None, None, None, None, None}}]], "Input", \
"Input",
 CellChangeTimes->{{3.9124469007662783`*^9, 
  3.912446900770895*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyMvQd8VMX7PXzf3U0IkELvCNhQUb+i0kP63rIUBaTZaBYUEAHpoPTeexVE
QDooXToiVXqR3gkljRZSd/c9z8ydWzbB39/PZ+6GCMm985xznjLPzG3U7oeO
X3Zp98M3HdpVVrq3+77jNx16VJa7dse3nP+fJP1/RzHOVJZc+NovSdbLHrpI
ziIfTkyTxH/sfxTiX+9mVxf9/56tZ6e2/2ReWq1Ws5Otf2UXu4aU//yXZ2Na
z075DX9tYavZKfR174/npCofz0mh/8f+SQH+T3aya2H69vTWc1L/aTUn7Vyr
Oan7MNa3msX++ZxWs1IGfTw7renHc9Po7/G7CuL/fge7htP3f201O/UExm38
2+v4OVf1n7UfP2NLy1nsduhn0e10+mRuarXWc1LYj3LyH7WdXYvVaTIthX7U
qZZzUu+1mvMwreWctOTWc9Pwddot/UefbT0n7SC+ph8rbpN+LE0M/ViaJD//
qdvYtWRMwti0ZZ5JKSebTEt90HxmWjr+dQYe+Cl+0kN8nYKfeh8jUf8NlzBo
Mna0mmO7+W9azk6t98m8VGYmL/8Vf7JrGfoVS+SxySe1iSnJjSanpn8wNSWr
ybS0rI9mpmW2nJ0mft3j1vzXWR/qKh72qGWuxEPRA7VoPedhpY/npeXw37aV
XSu0jB+fslYel3wa4542ITndMzE5u8Gk1Fz85pzGU1KzP5yaSr85q8WstMxW
s9kDP8G0prXmv1k87CX85jP4PBTwsEMaTExp4h6b9nrC6OSIhFGpmfy3b2HX
4M8TxiQvd49NOiOPS3mgjE9OVyckZ6sTUhxez4QUqbQX/5jfyGR2I9lNp6Vm
YdYz8cuf4SZoCh61np0mZp2m4arlRv5qPCXld2Vc8m/y2KTB7jFJn7nHJdeS
xz6iG5Ge8TvZxK6FwrVBlz5zj05eh796Th6bkqSMS0rHHWUr41O86vhkrzYh
FTeVyu/MadwZhuSge5OK0Z1lYYrozp7odyemie7sxgdTUk6p41MOYKr/co9L
2iSPSyJD0511SxjHpqmiPD7lKb+xjZyFdGPdEgbcXCcPu3dRHv0gCdOVjn+V
jSnzquOSnT7coVTeh1mj+6PbY4NusCG/QWP6mk1PzdIRlN6S3+DDD6elJgNp
t3FTV/AjyRLHFH6DuzBdKzDGJIxN6YdPmj6yo/SY3+EGdi1YxjPoQT/3wJvr
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
bCDuNKY9OpTLIloDOz8yQdJD/D2iUs+MIWFm2nntypSruS2gHN4ySfXsyFHj
6+PwVpEckkFHS7Cpr1Skz/18Eji6GGOsh7WwdfTJouU79Pjh21ogYTV8hni2
lN5TCzhKrijy3F+MQGPbLSqW5vuBozIKfabuoEqLPH8kxizzsEaRjms9DmiM
nm7bDC7sNNlRJNb9wJJij9YXV35bg6SIismCDYMcgB8YONZiOHpanVXkUldR
BzjT2ymhjiCbtYYJ9TwC5VsZYjItwaRKK3IVMGGddul6LsEo7E1fNQ7fSxF4
SQ2gt/oUXJ/BR/vheg2e6Id989ahmikR7P0KExu/0fvIkeUNX4sdg+s0Yw/i
3qNDbbgS0UQgCnscCo28QswWOqnEOSMSa43QVb9lOnKdUq2dYkut1wwarRIp
RqMI8oRR9yOv6nai6RxpNznzrXiRbBpYdDqVQZAlh+rAaJJoIqD/qow07QOO
7UgKNgoptd6nLIhS66QeH2fdtWqjQervjjhQZcG4hTQMhI4E/L7XkWcecj0R
5LbFU7iNJYk3N3xUZDG4jNusUnKq4ITFqBf8Tu85vxN7Batef3udSNbxe0Vg
lHkeXRrChAUMSqszCy/PWBh49cTwMj1iTisJqRw38fVz+qpuCnx1H9lmrP6i
f+bqYfjSFnj/r+Ca3jdrzWUWXTVE158BsjSjPA5V2wghC2t+xFbuCn8VXOAW
h0cOM9s3aZmdBC/1FIMqt6DymvOaxRVd+NMhq97DJEYnd9MyzkCJVn/WDxmZ
ZThCP3heOXVE5vmPWTTXLVvI/TVjOu/seVI14fncrELHfkKwqFm/uZv8e69S
65FD6f5wzamfbRIN33ZDgO6STpMBWe73x91Ctr+UlLKZhp6OpicXIY0EveqH
NNZCF67GM5agJ2NbZZ0A3V01y64LvCjkBH6nUjt7lZ/k2+/HOPAYK3DsAIiU
sJAx3ijjo8+FoMO4ZkFnBLk5RS/sERMM573V41PLLkJY/0wo3GZQEPsUvrSz
f8bqVY0Zq5c2Zq75ha9PXpGEMFvYt8QVbkcxgQQMjAIaWv2PDjHMak51ChjA
c8ov8kVlxOQvhzMdHoRnV1fLjzMcRmTkIIBxnxciSce528K6T2aJBeOo4iNK
aHNyrvNKYHOaxl2pxKtkq1bSh7Sq5nFusKKbpUWjgDpam+jHZbPwXVZtTqlg
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
6VTIiyr9/Z4gj2vTpiB/02ehNK0nXt/zMhXdAf4ssxLnHZ6giyI3fJq6gVVK
i0WLQqbRZGG6NXBRk20+lS+aOuK1s0JuXV+L6jpPVImGRMXj8tU6nHfPcJMi
7QyRdqJP0+rCPxHfoP3azFqMKozjic6z9sc7z1wXv3rmZPzsb7Fr59CvWVpg
l6i9EEZg0aL+pTzV2abCrLDxbR8VDTwwH9pagnutr4jfsW0t6ndgW9GLu3cV
Pb/D3idtWAcgIU9ez+6gxLS8HMrL+DbLltvGVFhAX3AftUVPQEtP/FiHVEjd
PyH6oragsBAVpvQlGtsu8oLTe8Y9F0h3OzcymjJJmf/iMrrNmdmWOpfEy6Ms
J3Bx9cCZq1Ik1FsMwj+lJq/kYXSlDg+3vK2ljUzoyFqCdIgsD4Z56bYWmG11
dqqafq+31Rnn468MNvKryXgtXl7Q33bsVtSdhhqcM42kzBq0KteZpef0uqIL
cT9flweVg9IBneO2M7vFeDqxLpI58fqwKSqaHVRRymq2277JOJCBJch3eCu6
4cPOJUpKnWXprTP9Ex5m1mr/VI77MryyBRpaUXz1zEHQ0RXFnWc+rORzmSoh
nhUdVHp9Uf8yXgrYUtrJMf7JaMf4J5OQbUR29EO0x85NgH4zRLJdWv2VePbj
cakWz5Ei5Z/84qkwJY2AeJ7B+M/mGsBdU/TvH/i4tugximeLJyAjnqB3UqFh
yNw+uS1Z9MjmJAK3ZNFDm/TJi3wYvDqtHGbsCwn/o6/2x4tp0m3oZSpZHKZE
/hlcqyr6p44EQ/5in/ZPmf+ToizfuT4qh2LMtsqL2dwWyd+udEsUth9/T1xO
qp/yX6wp5B1bzO+6Z2XjVCEJyQp0xwjJLE2plmVvt5zrljjM+SKqX2qh10wV
kJF3xIKSkWOasaQaYQere+nKEI7roRZ6bukXs2yvxBfSJT5TUp9rU1JS7rC9
1hDlfPiGq0sgn6tm+OSU7ZNTCXVUh/ta3FdhHIP32YP7NQl6oqtL7ktcPetf
SkWXKydkVHR34YAyZlZaSBTRrKgnIjqh5Qjivoan+BYiWQ9BGBHtRDS1p5DC
ECG1OgghHcZ7lIie3cEgjzI6EX2eVQ1fhvX0tqrovzdXA+iq6MObcL8JQsL4
zw8Q0RYtJFdEjPS0F3I8L6QUJekVcqMkPoOi4bMHN4p+sry9b65sRBZ/b+Bi
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
uqnGqU0J47D8Xvzg/wGs5t9i\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"cabde1b3-64e9-4f2a-bb8d-089c9750c524"],

Cell[BoxData[
 StyleBox[
  Graphics3DBox[
   TagBox[Raster3DBox[CompressedData["
1:eJztm7FOwzAQhiOQEBsSb4DUvgBIbDRi7FpGpiLB1BapDIiNlTUP0z5MX4ZY
xarl2vH5PjcI0QFaJ/mb1Pbn/+6SXj29Tl5Oqqp6O2//Tabv98vl9OPhzDSe
p7Ob69lp+/bC+RuOm7vh+HK0nj+O2vejxWbVvt+M2l11u70eN4N6sbmtm8G4
bo+pN6t5XVWfbfur1urMq1Zn2lqd2a7VbffrdOY4rc4c/xs6c71aneknrW47
PjqdmRdanZmPWp3hQKsj/O040vLbZOvsq/0eOTrb3o2zXGe3237M0dn9dhxy
dPa4FE8p/nJ19jrd65fqbP+4/SbV2XFxxytnXptXd57k8dCoOaL8Uj+iHGnO
7/d7Sufq/fFO6dy2P89SOne7P79TOnd/isOU/8U47OLPtEPfQ8KfaYf6T8Kf
ae+vmzL+tv6r4YDzS/yXxnXUjyhHivhZzKGvj823kM4/f2yeh3Rd21M68rn+
dcXWkxR/ZnsojpDwt/XfvHlcil/ivyR+pvkRjeuoH1GOcr5/at65vrOv757v
uX5FfDKkC11PLK6W9UNO/leOX+K/JH5m+S+rM9D8iMZ11I8oR/L4Oe07JN8j
eWa8/2TzqDS/xH9J/Ezy3xxuNPNHkr+XHn+yfpP4i+RPGo5K1EuP4/d3x+/Q
40/WbxJ/kf3kukh/0HE4jt//Gz/rv9p1g6xXZJ0snR+VjOsOMf5k/SW+QfyK
+CTxZxIXED/T8mfz0Nxx9/NfKX+xvDvFXyrfj/FH6gyl+S3tR4SjPupX0vOF
9NLrDOlJfYPkdVr+bD02lz+/DizlL1Z/TvFH6t4l+S2ZH5G4jvgR4aiv+0ek
3k7q/Oz+AnsuKJc//36olD9yH7YUv6XqdYQTwieJ64gfEY76fH6D3O8m9/m0
/K1/ns/J5W+Nngvi/BL/JfFzl99I40USp5L8iMR1xI8IR+uen5/UnM/V9/2c
KuWX+C+Jn0n+25V3STgk9RpSZyD5EYnriB8xjvr//QJ53pvoCf/Ev0n8TfJn
Uv/S1tuontQZSH5E4jriR4Qj8vuHbxZmmyQ=
     "], {{0, 15, 15}, {15, 0, 0}}, {0., 
     1.},
     ColorFunction->(Blend[{{0., 
         RGBColor[0.16791, 0., 0.301671, 0.0441387557208916]}, {0.1, 
         RGBColor[
         0.22307159999999998`, 0.02430488, 0.42178180000000004`, 
          0.13972488014880244`]}, {0.3140914351851852, 
         RGBColor[
         0.2877702100694444, 0.12918308854166666`, 0.6612564195601852, 
          0.34900868055555556`]}, {0.66, 
         RGBColor[0.26544316, 0.54154952, 0.92275724, 0.6750071769451031]}, {
        1., 
         RGBColor[0.772061, 0.92462, 0.998703, 1.]}}, #]& ),
     Method->{"FastRendering" -> True}],
    BoxForm`ImageTag["Real32", ColorFunction -> (Blend[{{0., 
         RGBColor[0.16791, 0., 0.301671, 0.0441387557208916]}, {0.1, 
         RGBColor[
         0.22307159999999998`, 0.02430488, 0.42178180000000004`, 
          0.13972488014880244`]}, {0.3140914351851852, 
         RGBColor[
         0.2877702100694444, 0.12918308854166666`, 0.6612564195601852, 
          0.34900868055555556`]}, {0.66, 
         RGBColor[0.26544316, 0.54154952, 0.92275724, 0.6750071769451031]}, {
        1., 
         RGBColor[0.772061, 0.92462, 0.998703, 1.]}}, #]& ), ColorSpace -> 
     Automatic, Interleaving -> None],
    Selectable->False],
   AxesStyle->{},
   Background->None,
   BoxRatios->Automatic,
   Boxed->False,
   ClipPlanes->{{0, 1, 1, -6.}, {0, -1, -1, 20.}, {1, 0, 1, 0}, {-1, 0, -1, 
     30}, {1, 1, 0, 0}, {-1, -1, 0, 30}},
   ClipPlanesStyle->{None, None, None, None, None, None},
   DefaultBaseStyle->"Image3DGraphics3D",
   ImageSize->{345.0679272319402, 350.48585202455183`},
   ImageSizeRaw->15,
   PlotRange->{{0, 15}, {0, 15}, {0, 15}},
   ViewPoint->{1.0491126402989461`, -1.22919558856705, -1.1783212096080922`},
   ViewVertical->{0.7656481921548182, 0.03791299110373164, 
    0.6421413013937253}],
  Raster3DBoxOptions->{PlotRange->{{0, 15}, {0, 15}, {0, 15}},
  PlotRangeClipPlanesStyle->{None, None, None, None, None, None}}]], "Input", \
"Input",
 CellChangeTimes->{{3.912446965137061*^9, 
  3.912446965141261*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
f6WNWXeLNW7dQ9a4sqet4aWv2cPXvIpg9l1rUMHnVnoBt1n8HlZ1DgLQxZaZ
w1aB7Jycz8quQi7JwewTuEMN9go8wD41pplbZaXn1doD8pnkYpDcaA5b02qO
Km0zx6xtM0eWtkHAJHNxQEEnrIbaokhsJirLTL3ltrh20maifuRKEtXv/VuI
Srt6rdxRQoTJfbM8Br5GMDlUVy2TfA6i+N/d8lt65aaEazCJPzVXl5UEMRgw
7uWzrL4isHCGF+mz8L8XBQWagyopJsy2fJYiPpMiA+SLXOTKLHlKshd91coA
LS/CL7eJjn+XJeazAV23BZtmEGtbK6Dr3x1jW/fNZJJtrh++j+8z5D7VZyRv
LKPgyz6G7Fnot71cskbax42fNzi3fd3oLUkjdnvK3lKzW9zMltuiQO6dx/ZR
rbgBjyngktbxFPeH5DZ5QVFSZl3qpZXtePZ6luxnHjxBSlqTHn/cGpGcDm/N
2TxVYWIrQndZZy/ZzfZYXCzppA3WXW3Z74OZa66f/ota5qnSzuzl6XaX0iXh
PJX2+nlfTO4gcLqLX2F+t0QSX2+MJD4uDSemFrRHpxV2dk0t7GjHuQaXUTE1
v6MQ49kpeZ3nTM3pNJ71g/jXvUPj1k+0xpd/GBq/7m0ESR9Zw0u+gamcDZM5
C5p8AcC10k4XXQwL4OaWAMxrbe67HsrdCJHZSrKV3FDyP3YLynFa9iFLdjGU
LUDSxV6p3A+gBd8rATy2vN0aU9ZujSjtMCXlWG6jx0afJHyEvN2AbXej1FXe
DuxyP2tBOJbMK72ZpNpTT3Yw0H0+uVsTIczW0ATxtT7WMc2wMMGLPRBfoinH
rq29QHCOXfQKBqQAMBNg581V+Wc3zpWRMHHtYtiFKxCq0lgynSUM9iINX3fJ
28XCfjORtoQv62oyE9ZXLA8QxyQ5u1kvH4xttQhOucyuBdYbpMkWI8xb37EV
/zyky073dN/g5mT/LoFeNVluN59kiQFjQ/az/pW7utvdF+qdGkFqvoGusti7
SezEHWCXN27A/aPYo0aM7hB2128HRRisPGeDm1u24uYSysIOL5WsrRdXtAvq
B7DsvLpalKhkcxFuaeOjanWna+leI5+vD6ce14tXJbOYyFqyT9K28rtv8RSg
e4x/RZDSUc4V+0A5/+GuFZAcZuoB4p8xs64iZx5N+KvIggYGP90IuBwUfMFP
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
sABVAbHFeU/BT5tBflppp+iy8YFK7n1a5msoldzaRlfJFknOqfGPE1TJdJad
Lr6sklGH/M5f7RatBz4tD7trTvgTuEko3RXqAvzABH5e4oMiEeBHgHu49yLA
p3u/dWp++4qpBeFHYeeJf+NJvwL4M1N52tAvACiLoQx2mGSEjyvbC8E4CICS
iHYQID5iD/4/jL13nJRVtjVcv6rqJimg4xgmZ+/cue/Mje/cuTP3zsy1q5qc
UTKIEgTJQTEgBiSYMCvmUTEhGBDMoiCKZCRIztAN3XSggU5V/e21wznnqW7n
/f54urqqq6orPGedtfdee+1VRYVmM9pxBVJ0SNUhiq/gmTydPpfNHQu/6ypa
+LS596KF34sWfu/VNRQ61BLVpA093WdtrFUdbfz1hb2+BADUF3ZZWU/PW09R
vujCC5xlb4anF4Yj0P/wbq6CVKx7//h+OAJdJnbm6+CEwIeGN/yPRBWSJwCA
nRJL59+dNkV0K7+ThmS/8jkJzzu8gAAv/Vfs2j8tpIXg2zsW5+z4b8p1Y/6/
pnX/D6/Q8arHgd8sDKKCsE3kDSuS/7PGAj9sLEu1vf5PuvBV2NbO3ni7gPar
5oWr467YtkEaQ67e4hZ/hPuP5jTftd8ACRrv+fjbhF0ERj5zr/Ot3fReifDZ
j/sumWWNjL3OsebJQm71L4A/fYUrsI31yz/ht/wkb/lY+7r+Zdc/V8j/m97l
FDs9hG3Qldt6f3R1NSvSsMIoSKaXj2Gjrbzhh/rXQ6T6LPvXi5rtKQKDZ9kk
RAWpiVxBqp+XQtFToHBZmZOdf2tvvVTWJUef58rjcEEAEXmYzeyIbsRa80sG
CDy46kyW4hTU3rIUt9TTW7JFX37fyrNHCAS23ffp6ddo0Q+457Ozut5/wz9b
I6nXo12/dben+331N93wQe53Uvh3OIUh1X3WHEzDBrXnah1UveoEWuxLMUTo
kjLiABVsAtJlVSX9iZY6LfNuq2SP7/llNT2sprDXauHwl6+hPX4NFnsdcYp6
iurrC2XJZwp70NF1VT3BSD2xB9GbirFwTEzkktYKIkG7eRO0kFHVxuf/xCtd
gls+2zmlhTVqpsCtxSP4r+Icwkvjv3THd41cb7tGLhWMe8XpOaI2/cfXGu3y
0qhpxjxuqcb9dt9Wtnsm+Yt0u3+Nl3rhr15qaHepLv3I9v+63FeMEKQC/1O/
+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
rw+irNWW6ombV4J3WHEVc2E9ISAoOCWUmnT5nGLUqPvkSu8tZ4hzmUy3cnlk
G+4W9U7iDmwi/o3K4n2CAU4DG+eLgznRHmQsqgqcWr210pGGdsRwOszhXgAB
G+sj9H0AUsDKb1QWV6ARnLlY8OVZb2dwjcOYSocxbvCj4kyuxAba3ke1zxim
69Yf9KIWruhLyEkjcxI57k2ZPdb4fHK+DHEK2M0HgXLPIU2gosn1Z9VSN2bP
5uk0xxruG1SVLzdMnyECOk/VvhF3AsIY5MtN8Tvt7UoGWnjTCdOTfm3+G91n
/EKvjTaaM16BBkxx1EvQL5XRWwXTbMsgY/ym98Mn63s8JLlj4jdniKFU0oI+
TmCjIFP0AR2Im8ZQVIWczpAQZC4E7IDjvP6/tx/7gh4FjlNEjygj8KBnO1ZN
C1l0fWE+x4FMUZYeIyADAAHlCMCFgyk05cwuUtMdGQSgIRbuc7Q5fmPj8BBV
ZnChnXhMS3nSmwxJgohpvPdXSMNXAaCQdL4K4sWyLcF2CwlXzcI1sWBI5nor
CKy0jkJJ6NLii1SBy6QLmOIeH8wyQYxYkFzu+rlPLFs+pZsgkIBJ22iHU4S6
LHeawCbTw10MRLp/ARCxxqLLw7bD9ZIHjw6L1GHz2z1TGWtMpbFHm5v7osPl
Yeranr7XznfrMBeYJukwF2sWEOlvM48gKq5BZmbwM6zKi4ng90I344nHwS0U
s9fJiyu9V5uK5bEz30axAZwdTfgLA9fHv2oyThIYSTS8tM3BiFaikl5ZE+Rr
KNQwpxSdHc3AYG3LBBiX5tIVqz5ZnmbJ/rBrID/CV7hzgKKkB1edFUfX5o3g
I5D8ovQmqt+2TvGLw5iJZXwRBI1aUN4w9hWp2FmAhN/xN6KBDB5x4EastURG
D5XWd3+wpK7T3cer07N4rZfTei6mYz+hxVe0rj9R8oF8DMjI4BA5zgWeNEVN
TtFxlq7X0PKtK5hxtJ6inAydMZmURUVJhoUk+28VGBwYWrRklGBDcDpgEQyz
8PQs8QZN6UPoPvwsSTwwqWBCVKStJzA3B7Bhyj+cz6bWY0WwyjysX2nU9jz8
Ij1LSYEXM1UYvZ1RhPvvmmiTDgFDvFgkQOizxkv0aIHykme3JmR2bRQTS4a/
iKvtQo8v8pSfdGN+0sWxDI13fufbHzWW4VmZ3yaNwUjpiC3SOk8nwkSJUq0I
Ijha0Xj6W8R2DZ/67WLzjGZktim419OLoM0QCdxHT4ZdAWrkKvL/4S+Uxy6J
TKLHPghCYXNkQSqQrwUqhBMhrM8OiAANGk+R1nYALh9xuaXWOguD3C1Wam1A
KlowqVio5q7LtAkZwjjELGxfYHELDN6Ls2EvQCLkFwE0AEbMvFVkL82DVoBa
jrGeXMutANJE5LW6ofxFVXVi4eq0us35k5mglSCseeh1r1L1s5MUJfmDxZ+v
fh5Jcc1egVOUMqegL0UztaX13R4oqe1494lqWtdVtNTACMAMdv3vzKJNdGl5
k36EFIoMPxJkgKIXIU1TnOI0PROesfay24/V0RmToeuZ1B1Fli/xfEIPa28H
AqQEASRJS/sKbu+iLe82RKj9XB4rEBNTv2bO6M8chtW8SyGIXkHCyk4++gH3
mH4I/+YmFfddJ5yjcAod1+0VmU3SK445ebsz3/dOnxtgR2DK4gycckrbAhoq
kUlyOjNwZElYd4HFBz2/hLfKt7iu/KAxk2j3ma9bq/DXqf5DFhG6PLupcBuD
4bGBz+5IN0BW7CVaevZgvkhuYMTeUJMtvK4Zw0W7WTIFqpNOhVMLJHonrt/w
uwIRcHHlDGoZ73gwKxihiQ0dOt0kTkx545RjEAFW0D8gtIidwz5ryD4iV/DQ
F77eI7YmEaMCn2wNy8zmX9CSYw50DaFbCGsdJWTAwicGGTBCOpH9hYr8AQlL
D2TYLx4i//cOZpzIf8W3uBpQeJKrxM0TC1d1P0Kl/N7A0iSXV8CwgMAjUOS2
dsUcEAaEGkOelmr9oKe9OheXQGjoFJHM5jCw58OlFPRf8Vg04wr0oK+wrut9
JbXt5x4/S2udGEHRSVpvlvZYRXjwKl1HrQfxR2xQCB9t0G4EYrGUji0EGyAW
oCWVRizoqKOnzhTOKs6k7qRjZnGWoAHQERNu0ZyhAbQUcFA4u1jIgxIIghvx
4WrBXAO2Omalg5GE8BkHksBNmJ4mxuMK4ph1jIruneobys/DRCTGT2b2XsJE
jtK55ZiIBjBpOgqJRXe65WBDh5sPsKiUq9ci4oOAj0Flwq4QWNDrtINdGfC3
kKywIRQRkha+aB1KZSzzyt7469STId/5t+RIgaW1JyG5B+5q+sp3NZmtfi/r
dGrmK0Z2+NbrmERCF/koJvTLvywgKoiKegSTZ/qujRbTr9ocNCeqteaobdZW
LjALgjJW8x6+SSMgKfud6EjnVMSk0teKw9JOGr5004nV5pqC6rIHHYQpMD5o
JuZrATkx4JGxtMgSniND7hcL8BhRsaTj9GVVMr8SCUcBHxtOx3o6VfESV4kj
WKBP37sq+TajbciMoGVR+EmGrZU+ZPeDj3mcPVAEyY0VxwPQyWdACW2jdfQ0
+yiI/j+f/2bj7NUZIQo8Tch11Xktrym+8pGT6wpVaeHMXl3CI6jnoCcAfRYJ
Lp35Ij6y2ggdEUpioXaZd4I9LGjHyBJRyRIYZeh7Q8EHAhdOiBRyQuQYcKOE
5SqSEPmMLi0hculf55yIDRT4+aE4KEBjd3169vFF6VnFnxAUbSPoOYpaM6dd
lb3Q7fWd7z2e6XjX8Uy7OcUZgpg4MCih8ANc6aJ9sTDlgc8fw5CwmATTmFa8
95lXD+gx3hnch/EQQBAcRTvMPa6EBiMR8mR+0p1FDomAQAkZtmYIBPC59agD
IFZV3Ha4oSP67O44zO0x6L1LsxaG2Q3Gu+3F6xYrqWjbpaUVtXsbbVEWQNlB
a1HMpM7JITtbc4DpawWlcOrPANcSZfJh6eKWVu6kqoLVUEoAqNXfN4mxvKyA
T0zM3HQQMMiQVXjwOBAeq+TkGrdF8yQSFn4v2mjqsGe3x57Je5q2t1exAfYN
m33jAiU6US5/pKSh72OlDQMpHrrymbI4+DuFmyaTG5UzDpdhZ2GU80wOOA9B
D73zaW+fol2aCz1LFXre03G5H3vu4/S8qnV5zidijfuoxi6PYqNaITqaG/ng
MOPOUTg/GtnRGIm9WH7h/Jp8ywCspt/co+VonqBF+PMGfry5u57u+xYrYwSk
cB/kZNgpNmgbkPxsMqLSdT0DzaPc55PTTqXLHvaL1AUyv5GKDp8yBaIJ6VFH
qjuPgceGkWKZ0pdF75jWNH2yHe4+nu14z4lsJzo63nM8Q5f1dB3cB0QlN6/y
teZVoKMbTX9DXiU2IASg76PZ4H76N+/TObKJOM5eLljfWVxeMLMYCd4agpg6
ApNMt3klGdq7AELZdnOLs2kCGPM2tzQrzrNujtyUMKLQSzMwiiV0QiP2QRmu
ggAdxLs5oxIeA79B/B2T2jpIeKWUaFYRz2EAL3Ihlg+vbJ+VDoajDWlVWHSE
ecDsY9LzO/Mwt+p1oqP9bYdVPtNcUjZIO07d6+0kHDDlGkqw8YxQgjbeUCIE
ISen2eIFsCO35shrOAIbyDY0/dd5ROq3VshTMtpDdcUaIU153l3Czx+S0CzX
XcJmmF8SKUg7Q1okaq7QwvKAsLC8KZhxorWwa7Z5NV2YrBnr6kD4bifuBlo3
xqOYzO5q4QVQ9J3ZTF5sWn0wOuPx0oZBT6KyTGhEz3M1BV8jg6DrWm5LIigi
XmRgNPH1HDBaDBAiOKIICVyIiyIajBkgYQTHbTq7l1ap8KEL2F0F6penm1K/
bJUAzIbpGGlBjgakxZzxAw7ExlC/cHreqE+DulajZVsK1kluHWgr7QLbxawB
SaT5a85y2wAmAL2wWZ1xv651CV5EYtDyPrGGWwYa63lPuwRvk3pe1zYgqjrE
uEOeLdPifktBovm+4HzFY+KzgWUKwgBPYeIjccKD47E2QIVMe9CTWcX1BZx0
OVpN6+sUMYOTqVuPFNOqzE3nWLI31l9A6Qf88zzYQqB/+/UrHin9nP7TjnZz
jh8jEDmZvrO4ithQNeFaLR11He8+kel+fwmRsZPZTveewAvJFtJJleJBC34c
LCgOfNI51I9dyFFXewIYDIoPcj38jroxRSp1RmXyrgWcQN4t/yN0yQCqyIGU
/ktjS3HHllBE1jpGR5gfYUOG9HSOGBH0uLuIe4g7zzrKkvhIz6cIiGUubtK6
sASfJu5O8AJMWmbI/CokVfKDMIaLwtTIrdGVPFr7IIw7he2eTgm4PvSsEPSI
9mHFPVglQjvOWDzMInVzE5C6aDGrmdfRoAgFiDLb2yvYCKP/OiJ8/CK8UChS
svclagdR0lrfzNNKF7U5eUxMDAvPiwq6A6TqcndxQ8/7ueeyoR8YE4YFE2sa
+kxZw4jnyxqueVHkvWJPh/bJZCRFRIcEa0mfKZIjzrSphRZvYdRWJWKRd2zk
qMMpVcue74AqCN44m4t6EwgM0jzv6ugNBqkj0mHNQZqBlABU9lc5tvpMmLQT
m4O017bX5XGVu3Wk1+CFr6W4BH9syAYf+VL6DXAdSp4ndK4hkbs4XiR96aiY
2SiSeE5rE1R6NvgH4l/41SW8EqZ5pNESWSMAlcVofeZrXjkftWpmTVi1oCAI
doBPzD3agrHQUZRJ38mZnHr6bmuJLdSkbj50hiL3yoLr95cSEzhQcNOhHQU3
H16duuXw4oJbjljiKApRv+/zeAkMd9EYvrHbA6UHOsw9cYL+WQUFcmcITmoI
TuoIEpgzEZxkez1Smu1K8SNROIYdmU0JoLpYeNO8E1bO5HwA3VdAdk5xGMwx
9HS/vyQydgoQhUvjUHjjgDzmUHcdlyHYPOXOBuLGhEr90FEpIJNtyR2BTDB4
hWwD4lS4GkAYf28xNyIDrUCpOs4SihVWwDjEMyrlG0bDOC/m+ZTZ/42NRHce
qUS5D25BDzvHN6aPVtcuQysGg80BWuV0i0qrQDK3XbQRpTLTYGfYlecboaI5
J/pbGwGs7iLaY5tRoKFFm0M1n2Q57KiGRnNKeR59x+50XIr9QYi3OZQKE9u5
KAW+SygFjU2PeR6lBhFKDSMONfxvglAo2Y62BLYWuiSPZPgkOdqEMSmEdjFB
qGaOSUl2SVBKEYruQxhFn8asIL1tE06BUmApLMXbb72VATpJmYuegwhUAuyJ
mVNooGnmmcaedL65k/8FrQkxm50etieAxQEw2XaX2xMeWnUmwT0KzRi52L5b
/XgRu2mo2him1GpitsZ2Ny1RW00HU4GW5lrV0qD1rP8THqbiQCnonR71XAoh
Dy/vmUWc1yEuReQGmWaUsuv4uOVwNX3rVakp+8rpOJ6asudQaur+zXRGfETY
9Tf6fRwtM8w2i/ULgeofh/SZXwK7LbiEb+/xUOkxihnLCVSqCmcXoRZfS/+w
rpPyqF4PcV4dCS5X3wrBB6+0+wMefAA8uOSs01xhhLgvHtc1ADS570mH0AZW
uA8SEp0xjpvQir5Ojfc4/yR8Kk9n3hS7PAbuKd6ybVlX1n2eqOe5c3CeuCQA
rLrfI+DVeW6RAJV1ut/ETaEAKtn8kwFW7W7CoQc+Grk4xfZiu6UP9fxoLsvS
MuPVMn20kq4RQQwYafNymh+PVt5eMJaM2miYFWkLL79xZudfOtGwDlcQDQB8
jzGvqG8Q63nrrJzUU6Dzi8Z6MfksWkeZVCQHvjfSeGvuAqnbj+K7k6+sJYd7
g58SAgWIGgFVyQsCUQ6eXq2IA58YnjRemWSh3qJTDqQQ7CUYpPJcqBcAFL3k
Gcuq6CXfpnkoAJSYhp/hEMtok849FA3OIVdQY1yKgzTRt6CxnR4Nl4ZDRgKQ
Wl7snbIW7qhrsonB8tlgcI9+KU0M7A+e4E6GPNzg3D0BOngXca4mtlBFknj9
IMYDd0Inw51ScOM4LwCmZpE+BifTebaM2xgS2rOPpXm5LueeFP6AY3S6W3I8
tL8kuODVGrqaDBHj+oIZh2tSNx48m5q8tyo1cc9JOg2OFUzas7tg4u61dP39
9Phd81Jjd09Jj9kJl+C+gknfl5q9kSe4iG4mArWfMOcExWSn6CQ5025OUQ0t
e5Cn+i73UWxH5ImVHBA6x37CGNThLkei+LJrDnlinHn0JJOojnd7EgVMC/HL
zAsMlyQtXspJiW6KTSBc+H9a65fMeJKvdtQ8VSfAF8WFtMy6Oj19iWjqH1AX
KNgn6O+AKQdL0BohheXlzFhmNxwAJl23P3A5Rc1u0u7GLoVx51Ko7UZT9uDa
lL0gTPZoGwBiLRlIIENlM0bIlgqkxUMvKV2UQ1z/lxiJNY/aJTc23xA21dwx
qcBB2UuBGNj6rIWvH+4G4mQeYyYEYOMKzY8P3WSNZSN0mFWeZ4aNkCnPI1PU
Qo0+jPN9dtyYE6ESdhV8g/ii0frQ93GJ766EQohWyDBiTwZL2kgVx/5OH9L4
QAHg2FOS602REA8IdWFEQ8Rh3pIq5008Q2exGT4RDDA2If+MXDTwibs290sv
A+ecijhUY3zSYWkrJLKLMYP6BwanVq6XfGXTrQ7SzKnsSUCq+f+r7yEucxah
TG7ryBHsUe+Q2I3Ljze+c4pNc9DzgEtoptif/D25xG1T33CcM0hHxeQDTjBb
HfECexUpSjWLEAijTxzmzS7SyjjjVBsohtEhRTh1pI6CuRoiT6fTE/dU0Aly
gk6OQ6lxu7enxu36gvZnDFKCg/nVqbG7MF461icEq4tBoGAo+GnfJ8owbgWW
YGXd7i853fEetLUX1xbOPl5PIJHpPo8rg0ygRM5e2tDtgROaBRcAMgJlpIjb
bMAIW9BdS1QJIAfeljnb9nbeB320+ZgegD8YiRIZwQmL+GyMOT2AnpLOShA0
Jlv38eivBAtfzg8cdEvE2AWXDypKAQMp6oNBNyJB5K0suc5IdZO2ejGJ0rxU
YCJmBkEJBaqdZrJKfKu5d3lXe3B9JlNOij3ZOfJMGvGlzYos2uMedssH/kB5
TUFUzPyaxQHRpkYPXK9qqO/4xJbNZbtijZNCiaZxnW+FtfaIvxfixTUNRfD0
Q+8UGxKnqfsiJulhUMfROG3C+Pp4wiOdMsTl0YRIkUWZEwj4ap20XRk20ZKK
xXPRCdRpcohO35NkeZAwZwYVoBPGsaC0db8ql2wQE9jTQp7zWO9Yk0On4kZZ
8QSQ6dc5s9nC4QiYJQva9OYeacIyCcBLwfRodEcAjdjAGCDUspEduoGSSBir
Gm5ZirdHH8L1bwFYMJQefRKw0Inzz9aidH7Dx22sbH5N1M25PRJBM1aEPT0q
hIIJBMI6+tIQueSi0m1HhUFNP1xL33c1hXNV6fE7ywiNiunYR2fKFkIjTGJZ
kBqz8/b0uN3d0tfuMFT6Hv/8JVLkoFAv0v+Ho/J+Cu9O0HGK/vtZWvm17eYW
s26JaAxRqBLOP10uzRz8agEpJhYAWkjdrjEtQuIf4SA0EMhdAUFy0+N635j5
P3kqVcLPawjVRdLncfxC36rNIcQhchj+8OJ4XOwiBT+YZ5ZKH/TDClAArAdB
rUoUpE5wugoAlbJ++lsOR32DjPyIIUhMwrZEIB3ka9fvj/0oMPg44PnCjRox
GlRZxdC6zfA8av+cthF4lpkKp2Z6V4/cXHrC5thYNdDZWmhjmXgLmRvRoI2w
3bGHQ/jdU7PljkOFQV6uvuBbgzy1zCe4+pFnU0EHewSmbvVTodrrVCgQYKPh
/eeflOEMyEM9L8MkdZCLBnmS1zVhwYTGVCoAqwSD1UUOrMJcFCp71qQBBLCp
cciOP6th3ts6Gc7nn0Ts+KlmxlfwYOsVClP/4OXVzSKNojzEhR62VKRKsSbb
L14M2i8ehdOOs1vPz0EnKc8RJMWFDxEQ4Y0inzRZJUtjXlUZNfzS1MqIPso4
YJ/2OQN+8FRIVvvNt5XYwvElS9SwoGCeFLA0slMxdBsO7Ricbjks4HTDgTMF
k/dWpsftLKHz4RgBEsBpHV1/l4AJ8x1uLBi7O0XXY1eE4HTxH/s/eRKUCY6G
2/rIpLpyivNO93y4pJqABMBUT3Ql0/2BKGXqQy/TtA8AHKJYjWI7sV/hJJrd
tStUTJ5ZSU9hIoQwJZCJMMqjDwksKMFSBDxUKoRyW0/tg0a9kKuGbAnOTlRq
vAlnqu+wuy/iPIAQUlEImbFrs4FZ2B1yw4EmzBSVLl3PvQ0ApWkHJPjLUx3P
Qd/fepPU0Q9JMb111GXanm2itzTzkigz9tjUhKUZRJrmZ2GgAVwasrEZ2wqd
G9V2WmeaUSsO79Z400Gpzkn7PhprXXVuW251LhY3mWmY/GbSOHUvrXKJ1g5E
Gte1GYfDfjBd0TNZSrKEv2yoibm/4zlrVQqpEW/i9K8JcehLnuD1A5YwmQxS
BB3BRaG0yeENO4Z9ICNv2aJwuWCN2fewfECJ0WKd7MA574NBSwfnuz9DqnsF
T7rWfBLzol+HjjwlPN82TCsRv8LwqGQTuqRaidOkqYNbRhNNiZM+lqZY7eqA
SDLhOzvypbPjdS+RhH/RkGfK2bIxyeLUBIu0Bz7FFEKB5nuRwAzrBoEJgAZ6
Z24Pn1kkHZwMMojNiAHdegTt5NX0VZ8pmLgbkyiPE8gcobMBU6RW03VMrHyC
fkce6VeXjd5zeYgzbcb2e4IJ0Jd0gAAV6/Sq6j6Pl9V0m1fC+oAeD5RAqEkE
6GRIgPSVN2vo/mBJhNRYQa2PtQzRO+7+UIkhAncUSdCW1IT+fNwRT2tvvhfj
A923hXtGO2xAohlKXf6o9igl1HKBHvUdpjyIyRCf4UAyDp8mTniHLmYbZEZj
YQSFxSPDXmPiG5TnfcpkarT5S08/hGZ60xpMP9zYdjGMzkIDISvWieQy5pNH
YSFuo4icmnsfUrNKtPqYsCPxsL/QCw9C4hTmys1QqN8650rPwd2A9Z7thHGZ
xGSsphTR6PdF2G5sx+iNucRNE5LHn0DgnmKwYwkjGYDpg/nLlSoDeszTlKhO
TLza81xvWUB1gsgMtsJQTk72iSPXSYJsCspNPNVNJ1dhNTPNWXWW4zE2LlzP
vqLSaUbfA7JGMtCBRQBxdt1JupDssyAk+6WOlbHmMqnI5baXafv6x5o9emNP
0F4W6Q/5OtofkhfwnruU97AsSXy+gv6QPCeQtFCLwix6XQOfKktAqC1jfJo5
YRJABjQBS7hn0PBXiugB2RGV7PCScSB0zIEQfcEWhp2l5QIXZUyoOkGn90EK
xbZpgug1Ap9H6HAJot6CQpcICmEGFvxSwXa2KNsp7SMe8vCSryVkqe/KKqXS
zOU5KJRQ7UKvR0oblfTp73n85yRn5t3UZb05wcjTvGHAkyfZF6TvEyfdJ8NR
mTRBczgGD01HBdVDM9ZGUAjDGB8ujWAOPjjDGxTc0DrFPfe+wwTYAV9VMyCL
WAVJ21Vza6/XS+tQOWx2QcxnQAEsSptqzSnsXz9qO+puzoDeXFk3q+kh05gr
2TnIL3hcExhynh58eH8yMJ7GA3n8ZIzfBAZfG6LtIZbj+bYIynx3rBxmI7ed
86QfpmvdhhFMucfCa7fbODcv0JmrdabMyAWuD02Spbk1/B9J6BSUycBhECvN
eDc6MtNGZdp8TNgtOy6zQYyKoToEnwGXgZ0OSmQfBD1ny32SJ27SItU+tuTM
D+4AJHpnf6Zh6X7pPsOYGZAh1nDjgZ9F7Qdz+0AMYF5S96+/+UYQBRhv3B5a
JaNP93rO84DftGyyHWRc4OF+1d/KRIyNjhDxzu+vHSE4LOLAUu1873FOrybw
G51VNikdiAPa43M/d0B+ROtHPC2QkSbQueyGA2cLpu4F6ymnM6eIwGUvgY3l
ft6gw3I/qKD1CjGn9eV955eD+aykxb5bmU85/Y5hW8CcOu2rhQ+r4Q0cEhOe
siQUJEr5Wl7IZdB5hz6YvmbC4gqFpgeN2V0BPGjvRWw6+Bk3aA2fWT9VaNFl
0su0Es6g4QpGtivYY8oBkcaoPbkvs/v9J+hvEeIj5h+BM9BRAxgAkncLupUT
1XpbMnQQ0mn3cvOMALbMN/Ecj0c2wIdLZqo9Mt2RCbp59NTQzUg4h9xFetxj
YjGUr5GQZmBcR+5WLWzhPskozDElUu/WjRHv1qBzLWZmiwR8l0Z1kCydCmYJ
WQpnmrpr3HwoOuQbmHS7yPgLQ1zSTmdwHcnTibwfXyCG6zE2/c17uDfqGXnN
ijq02hKW2FksqWYUwm7BSOvb3z8du4ATOGFgdY+CEgIsZjlfivMGpIVPqYGP
TOut5d40JHhMm/1J07Uxpjs/V7oTNKjR6yO+lOBpWc25TRZIh8v3rPHkiAi/
CZmCjE8zl/Hh+VdwLtOBEg+tOhvL7Q4xcJqtQRhS61MXVyZzNNlcqn9NHDcg
dUSLWjJXkx0UwfC9cIUa0pm5XGyKo++CWBCycibK4XwPXLtw3Ho0GooJKNWk
bth/OjV1P0AJA3zDnA9ACTkfjArnnI8i0sX8sxVmbU3pK1MsMCH0kLIgjP6r
pktMEq2n3zN9Hy+LxbOMKNk+3qsl5lSc9O4QXWLnY8gVEOI/0J+R4bLu4P5P
GMqUiRPsOc4ZE5e46zULxDQK5ygwCg8drA8f8FRZHh7Pj00KpQIcXcBcyQdz
pZyKljjsRASOCtUppNA+3jsCzyGL0W4/2sx16jI6Cfq08bmhiMm9Gg+Zhdk4
rx9K+wY3tSVLSJuqdOTytW0QO1u7htqGMIWSHhQAxsht8mjrU2EQ+Tr2bz7e
GhwAjo2V4KTQpmirbDgZK7QEs1588+y4USPPmwO8MbP/O6SFqJAlXqI/5eLl
XaLW6DrPK85CzMF3OlzTyWGKJyJrpAVg7SHOd3mJJItRbw/aQDzufOqjK7ii
PqgRltiq2/Bwxh7XowaLU/AbXwEDniCISrjeNHFXJvD5qRGjoEEN2IIGNRsd
YXNtFluPWoKbZ7mJlpWPi9hS/gXO+dRwrxodiRxEAk2ydjXtEIklm9A0QnJg
JqiQGSW9dChfpdcVzhsMnzmtGyyZMp30YYs4ty7P1KhwdnHse/RTXXVmcW+G
9/DCGXH9/iwFX9mCGw5lUjfSAX/Tmw/V08HZIQ7MJuwxSLLsEMYKh9mhf06N
39czRKQ27Ye9UDGfXuDndCALfYxeZIQjYR4G4UFmEGb0PFmGGRl8fvVlZiP8
ZqiWLpQSxR1exFo5rAFSobSBdKNhi5FGhaeYPKYFa0Fx7lqNEXsmroPbo1QC
sUPcmpKf0ud5Unty4o6NKY8DWrVqhFbcfne/qJd6aOMCKvpQ35kWHBtDWhp7
pVOGvQwS6tJ421EkmG8NXBpDewGTeufWwNjZfkdSbTq8qZELkxrfLO0oSb45
4X2OBKgI0i5qbDMwOKcTJfQtDPvXeLLW9mjfbEiCOOGOQLZtFJgEshm+U2GQ
poRI9KfSS6vd1HGuJsh8UI7Xnilzs224ff+lJjlRxBjV5oKi5eP2wLhwjo4c
NlziUvfKs/TSiRXFzpfJXIRLOJ7w2MTTZZCIfm2H9K1Z4Qv49HHgLeQCN2ta
+0lQng8b11DWR+Ma+zvDap5+ydO+NYiUILcG2oCc2dwJJmrrpAr3PA8frIl0
8qP51zr543h7BKYcvPmBfrnNIPmRZhBU6695SSMPWWB9AkTqEywMq0W349Of
QCju3X38Xo3T+8YD2dSUfRS2TdkXa5shNpShcyZDN9WnJu+tSU/ec5bO9Co6
08vovLJc0S7NFS0mhvQkQRJyRb8oHLW7h0DSRfyz7XnXLym/eeLrFW8Ofa5i
w4AnT+7r92RZGYVQlX2fEJLUbz4PNs3QqZMd9kJ5dvCzDE1q9E3Lvi+TIOg/
II0C4iBDH6ITk0QXuzGAmYKNCRDdfeCTZb7juI27O/DnGtPgvirnLfINwCY8
FO5O+G+S/2f+ROch0CkRwTp5lYnwq9CM0/kRnOrNmScR3fWnA20LvR8U4QTs
FjqrAj1oAzZDAmvusw7g1B3aaZcwY31TKt16JDR6lIR3i2A6h2LYlL0+sS3i
SNUUJgPV9ze+8zcRNquoHUHCGc7qNU45i/ujUjAN8YRxXaxCSwU0A7M+gT/A
VQpko9ThGS+Fm0L2RtVTxrCmRxiWOsTgw2nFnT7a/SNAdlexZrGPm7mFMS3l
4uewWRpOICvc50Z4E9VTHjlqQjARKCdZ5AcAu1PmpovRc3PBMOkBMxxjjvWA
8Kw40thx9GrQFwT4AH69uKWGe2+BY7CQX6aFtI8dx8rzHMvpsxuQvj7R8OOc
gTqf5QzUkdnI1uTGv0Gjvd2mGYs+++EvzliXWwyv8Sy9FXS6oeMNjSXo0sV1
IN1jq6vFbpERjVgWnYputM5H4omEZL5JH51COycVZe4kQgdc8sQEkKIIFAFg
Kcfm6VnW8doclkOh1aFWilSxN2VvHJMAY+dlCybuwdB0OSbsrqNzviY9dscZ
OtFOpUZsLUsN33qsYOTWPalR33xNJ/aq9LU7LSkFdENSKtY9hLfz/jjl9cp5
kxad+oyY184hz5QfJUyqJMZzph8Y1xPCuAY9VZYduaA8S+dS9srnKlyySRDk
pDKlfAdcYEkSucF8n0ALww5aGdjww/FJGWghORpAoo5GANCdK+TrBU++5NOW
QBunNp4HgaKB3GCewTvwafSjDxAi5kYueFLXKrLnXOGYsFwiQQaPDUA2+tsT
gDo6wQF61vzjWootiJ/NKfdYYHqQjBgeuJbifOEqtx31gOeATjLw06N9eYWE
Gh2m7WtofwNX80RnmdA00S7rttOZ1EmHdwJwzXy62xxuRzpnSk11tfFszUQD
oWBgkFb+OJW+RZ7PmJkMs71+f+znPm1uRcnQTdxCR2Vo+FB8Kr0o7BJyABeA
m7OZlvE8OaHkS+JZ74xg30HbBQWM9FGCjSBvDmSbo+Hi3OWOnsWBbai7I+9j
aSsNH+MAEDqJUKdDBitAt5gYxDaTDpTAXQAs7ZNjJhcwjiYZLIAbY9uPvnWA
z7vBAB9GNu5DIUx/Rcf3GBFDBBn0x9kYH26Le+iLM3HOZJ3nOuQgAQWAo3qH
5LqJ1lHRi0SV2ikHxLtl2ancppTmrinFOU8viFjcm7IyFBUgDWNtGWKvqB5I
+TLdwk5/DC+94QDmtccxWpmwjs4xYFyGWFodnd21dF5Xp0d/c5r240o6H4/T
+XokddXm3RQ5rE9dvfnD1PAtTxUM23oPneNdC0d8w1jXLULlQONenbioct34
VysOEjM6SYBTRfvlWQKZWgKIegKI7NDnTmZHvVyeHftaRXY4MSljTo58fb8R
fuEsBAYNjsCiYJ0ltAy7Qmgc+FQ06MTZjYLGtSoJ9rqXFvw/8D9x5oPUDX1W
E2NPe2KXwLNFos7HTeYAGMVLG4yKLNw68huGPE308Wm0dMkl2rv64VHQT0kK
H0DX0Ru7SCQaQbi09iErwiW8xVTbIBg97KuI8Li7+WBDx9sONXSmo9OMgw0d
bsmZkI2SIrfpTdzNOLfb+maE3yWcU4LHORMLXLMd8efIJidD2vA1RbhAFD5i
q5845kwp90X74m528gsC6WQ0IYb3nGK/0Bxgk9A9mYtrcdatXeh7n2gzGqTT
x8DbsLnRnsxyJnOlhBkKlwIVzmZ/JJCGaHNuNOKMC5UBrLVwsAbdwQNBZizA
NXpTyI21VHyrZec4YNvS/Y2dbT8rzjaGNh0j/8NG0BY21y09UJ8v0OZndTTh
e83NyPcLbNEr4wY7/JrntOJWKLyZmwWnc/5rxjILxrnRLs7TOhLhpCD1UWnR
aFQQ9/6+LGiGWiIYTW7zSm8tdHV/oJS1h/K1Ascu8XwN5zrt3ZgET+cwYAwg
liUAyxAByxARq0+N2VmXunZHLZ2tZ9Ijt1cRkJXT6VhMkcOB1OBNW1NDNq6m
399MDd7wdGrwxmvS/db+qaDvWgOyC/nn//nZhNfLQdren7SoYu+41yqODnu+
ooKixDOEAjWEAULanhbSRmiSHUdv85oFghyDclDqyucEdcYI4jD6hAg1QBnU
YEO9oGEB90eqbWiUvfHlcGNtDsmkLdRGUQp7Qyqtgl8XvX5Jo0lBMuGezNHB
uAapUE8Alocw04YJWlt6BWWuvQIOH2hSxW2DgbFafAm9FgBtIOEKbfEcw6pE
yN2kTQmaK/umHXnzabY0/d5x5hExrbrzCBtXAeU6zDjUkL7ZVQpi0r2cF3Va
ENOqwGUhrpruMTtw16irpzWq+PxbIOfawjPe0BUDyjZItejDt/pY1FUXvyXb
H4lHObkWE+JKL4QdvPW401wptLlyjqdv0lx53wlillgsIcwhQYoExRidAgKI
uz7we7rtPVGFy7Cd2R8j890ExFlQGmOYQ3vbWUDFWToTAHIPByD3mAIdzxDZ
ICRObeIY6NCmJ16WTOCsCvCZc6jT9rwfe1//ZhH7FXPghcvBW3uR+bfu4WBM
SEJT/zA2qCGOhMz+hYxmpisHG7tlqbTjTdNxIDcusRlMMhbkpiVyyX+nY8JC
aXnJGQ8ipCEp+baXXfOwKQmgxobiKsncuoemb+jLTKhvtpznx3ypHqg2bT9y
bLE48Az0bOwuIFqGTtF6OkHr6KSsTl+z/SydgpWEYKXpgeuP0bE/NXD9Frr8
MDVg/Sup/uvuS/dfN7Kw/9rfFPb9KtY1RLX/7DtpcRXo2crJiyoPE7qVXLOg
sorYfvWgp8prCQzqCQKyBNAUhoKeiQkW3uIw5V5WfsQlo8/L5YJUKuBjBGSk
KnfgAsC3kXvjfAsWJ9Ig4NEQlu+LyCPkZ0HLFn/y+D943EhNwFlcOuRZL7SI
S9Kv/xMWoGLOhYU1Mu8CRrLnuz4xGIHgQLf98OcF5LjVlQAOScHLXVZBkqXO
FlTciT1lS6gTX2TIiqQbYkLZvsMLvvCOow2d4L6nRlddYXY1C0584sLXiQCu
/e1HNEw95Htswvlx0sPr+Rv3Pu+UODXpYC2wjRnlRq+MdCUEG92kY6BSNuJJ
be44EDUN16RImcBn11ww6gJRfbP5PhgNA1LkKdtxAcxi0g7aNW7dUA7RHiv1
JeuXRKkuncSVqtuSsgATto+sZHnaodndLgb9VIt87HBAcOYgjf0FXFQaEweU
Ns6MMxfRoPpyxgg5Yal6STURlobcjdiRm2QdGkxp/wyeUOa0NaGmAHGEmgJ6
eh2FFPv/0+0H3EP28Ya3rZUGLX/n8K5Av7k2P+AbVh1W6/AXokNNaEVaj7cZ
Tg17HsFVpNtP+t6C2oLKAujL9xbdlog2b1zZtrPwFgHmxc5j1EuP2UnI9019
atQ3NYR61XQ+nqZAtDw9YH0JIdyhdP/1u+hyVWHfde+n+659PtV3ze3pfl9d
SddbpQduinUR5Puu8DnUGGZMfp353A56n0WEguWjX6k4SwhUM+iZ8nraNTkJ
N/xFz+d4LBRdDnteCwrK1YYan2sC0Vjy9bRUEwwlm0IzRlXjdU+FfE4HyERc
iAJSh1TeiCj8haQu3w1bBq7iVQ8VkaSMn0jwl4sXijapOH6L4zuOtWYoxDeO
7n7wOrwqFFF7PRLY0twnHlqd73H2D4lcjz/1Po0FX/g5XCjsBActzIuYW9TQ
9e5idszqNvdYQ/e76LhboBAOWu1nHpUYUMb6qsw+5vqpo7TOdLGWozNPmpiP
X4GE0doqagdcn9gOC4RRQUHUeoRsqAwCVzG1iQx0E8VYkIq75bBX1flMXBC3
chwfxq3AwO8K/t0VxT8waJY800qCftnKpjiPBPtOOSe8EP9mS7Aa49JC3KXf
FPoU9nLYXNJn5ITVxQF8cSAffW0onAL7cBibA/Yt0QGS5qEXhq1B7w5qDj/6
toksEJkhaH3nQNDWHFW01tI/loLo/SvxUpvoF3TtOx9wZTRfuwSnSBcPz7Cy
5Xatdu7QguCYRnhAPq+kYcEBntD/iVBNkNeog4c4eEy43PdzuJwfWe0i1DG7
HKKlx+zI0I5cR+dcTXrEtjPpYVtPpa/cVEZR6NF033X7U/3WbU31W7sq3XfN
2+l+655O9VtzB6Fc+3T/NYxqnUNU+2nnyQsrn5q4qBx8bj+hWikdp4iz1RAw
1NL6rx/4VHl2KPG5keBzr4poxew5jH8NVq7GwPAymwxFkAocMERA8DnLt41f
GEGpFi4EtnEV11jY6580ZvcNu6rEaVX+0VVaUaU3QPdFueFcNua5SqutuETB
wraoa7T+hhevpriB7WRz+dtLBm7KBTWxR0tMOqvzmNrl+CzHLLtkRVYVh3BN
Ka5zO5FdBx6i2xqumF1ZUNLtnmLiEfDbCn23AH1gfh3uPNbQbmbO6RKyPMn6
T94D6DIDLe9wE1RhI/5bgnbNvRXg2J0e2cwe3cxxzo/6xI/R4DV3eoN1Nnug
y605xP0EZRGHzFQnRdkVLnQKEZGwHXcYh8WEhYXktmV88SVNdtp8wTkZLeX1
+VpnkApqng9Yg6A1AZjjigOdaPdHEY6Z3SOq558vrpz0ggnjtM4JlDNpSBC3
xr41cP1Rblv0ZwGts9agNylw9S2KoHU52bnnJHRlrAtaFb0uDX1Cd5mE33nt
iYQf+8Lk4Mid7IBFQQFNAiuTwhDERDZWRg4hDfgq8JXAd6XHQ76iKoU7r1Kw
JiJvMcMnwSU+JX3LIR/UTt0HEKRjZzZ17U4BwmuZ2tXSuVdNQHi6kILawkEb
jxOVK0r1XbubLjfSsaKw79q3033WzqffkaoDEEZB8GcjJr5+6h16y5smLzp1
hN52BVG8M3RZO/z5inqiV5khmqYbDVqX49gPEAPmDHlGMpPXvOSALRJ44uMc
8aIvCliQGjyflXBsLKAxQTwlzyoRCMxtS2nOAHuNqkqQrsMDbW4YD2SjDYqY
Aq+OBRXusPkn177i+3jN6gQeAoBcG0cI+LO5Y8MVYqWOK0nYHirjZYGJTb5g
DDwey03ctRAzwznFjgkit9H1XjHGUddBtIfffzx2gaAfbif0A+mDdSob58w6
5plS1DhHcCfXKjXXdZ5dUnNmYJjUdrzCncTIhKJt/HOYe4Pdz2awm2t7ozCX
FXG+nyvSL2Hgl9QQV21jDfq+4wwaO6lJCEJbfNhYR33m+8F7NkMS55O1V8uk
rNPRZF0cyEcYFGTqYt/O8lYgpDVFCehenMPccxwU5sAgEz0EuQs1bae2EHGW
7yaZ75kzxN8rU/wgAog5Y/gszoVPRHQWX8QH0Me6yC9S4J4XwOHdn0Y7t3ms
xJti1PptA264OKgdTXLyD3jSFKWahtfb2jgJr3lydrpXFkZneD+pQ0tXdbTr
FvQhS762CV5okHizQuLEPQaJxgvrU6N3gBfWpkZuO0vRblX6ys0S7fZde5Ag
cSfxQYLEdcvpWEj8EHm+6wr7SZ6vk0DiBdIIBcnJ3EnCC3fSR3ACvHDioorq
SYsr6wg36gliMgQvVoa1SDeEMDA3sDBDRJfme13v1pLvhj8NVVcBm2/fpHNJ
Myafw1Q1J4lDh51idpZQ3zPbr0YzicNw2lYNI16QrJ+goMTJNu/ahFdyaRMR
8pys1Ooo4/RvFRTtjhGS6Kq+LDNmiXJgePiAd+rRpF/clTIwAEe1Fba4u2j8
xhY+NtUb9oYyT++BE8SF2O7wfnFkhQy5e2gmNkvMxFIOEw9JdiS0yTBTi2+b
xgFve2CZjQudoIOEp+71Fhvh72aEOEWNMkJMBKayDmWvN0u0VilzoLDAN+Hh
3NUzkq6TIQKLF/vd415vZWIRb78nLH/hMyJ2qtzw1ik3QMc6NsNGhbsk6xfE
vnm5aT8GRQ6AOfVHX6MFwIyHqz0eYhw6plwAC6GyW3oAwjgBwk+igW8iKhf+
ns4lhZyOpwmGc0mbNRouiEj4IxlbHDGxICyMQ41Cny3aFdRtUDs7mzsctDlf
SH1ir5jxrkrp3IydZo0wEKc91uIA06mK8qJZQ1/t5+yjJVkGP5acwjEPA3fy
2PHKWqt0sl9Mhv/+QE6CJoobBTcezNL5o8DXiAfWEQ9EQHyWA2KUbPutLQbw
0bEj1XfNGgK9Twn0kOYD8PXTAkfHEPfOBRV8lt4wqCDFwxWggqcnL66ooU+i
nt52hriPYN6rFVmDnogVHBvpv2DcriKXrOUziAHrgB3jXnNYF+BXnlQ7LOgN
AS5PAY5niwh9g6Xjy/gZUDl6Hd5NM8Iwx/MPkEjcoTXzvLGGZEohh6leD/Qe
32RvbaLvoZYene45EXdQRlslojKWus474czH2PjHjxMHelGM3JyNfXqzHaJY
IvbWJgpGsnkoSVLYe1FDxznijIgqpjMeE/1RoEFpAsxcIWOXB7DoOC8Vw7UQ
pW/g7OFcf4w8CvkjQGzuLfLDvk/cR2zj47n9+tLbEfC7H0eAjIeizNE2UBu+
/oAndlfokHVkVYZoBnaEtoJivzIdnU3fuU3RbJaPbYXfCceLWQHDZML3ymxi
0Z+cB0BjjmdHUNCQcFc7tEx7ghAXNjxLuG29Hj4YMWkLzffDMHx7KFCNm7Qu
0SYtFDzQAMruqwdkdur7h7Oue53tw6Ld6zbx8O19wWB2yfXlRwb3QFr8xFpu
y2qqgd2miEFjd/MS2Fs3bhLF4pJEuQzuadQk+ng4EKOUz3knpJ9TnOTurJ9x
kOO0wjgpIL5EMuSGg9FqvtlRoUPiuv2oYISsLpPygS4B3NbT6WEU6A7edJIC
22MEbvsI2JDxA8Ah4weAQ8avT7ofZ/w6CMB9RwAOZQwQuw8J2EDsjk16nYnd
WQK4OrqembCwIgMNMbR1EYAzbsVR4asV+gdDt6T+VSsP/Nek/0PS0TpX/qZf
8hUSkXqwODngdAxU9JyBWSQ9kf1HblmhQIQh7tXKkPPxOgEIo85iKKYeknGw
bfranbjkbglBZR4cNF9JN+1cB4nqJONeD8H9jD094Bn6MCgZfp6r1olim2i9
rKF9IjL3fBbcar5C7B80bT8KDh7JYmyfKDXZZr5gYC2fzj+RH6ZuZge8mZBw
vFgj632XspM6hsmCr7ehFzZILJmrK/HwJQHJRcxXTQPMHxpzVLHVMHdLw61B
MnWVyXpEB6zJkGmqmWA1yQcITnluGMoPeVEZiWTlYjZjNaRidHB4SjuZgRYA
C0LgZ4NxY6i8YjTYm7ul+sC5OQIgT7xWKEQJ8ZLmB8AU5HWo177JPQ08Z3XJ
3nraPdDEDteNZft19rOm+lDUffdgo9i0WcT62aw2npHYNELIPFqd1uC0yoLT
ZKS3YaFXVyAY4jFjz4QK+uZeQR9I5KS1vUQEQDo+cFaRzaLQboefeQqG8wGJ
ZT4V9/nzlS4LdAcuwA48YbdQs1HfZCkOza1VaEy67TRRs4rCwRtLiJ5Zmg7o
Fabppqb6r0Ga7oLOfde2j6DXXyYvZnr2lZQrKkonLqoEPUNYWk+/ZwjNshNx
LKrMKqLQRyXQNMkLcMSRLcaOkIw+kkeT25A0nirFbKkx0NfDgp635HZcTmbZ
9eRFNn1q4iKX5WvJ/yARyhdjwraauwyb4ZO0f0mkcsXjqutNaNhozomgT3nO
vcZCS9wzn62ZkmLjqlYf7KTYm2CplVhQO6szcVDh5i+dpZ2e6cwUFQJaEYqo
gXQuuTIUuk4ybAVirHjDgQSj2SU+xX9T0HXPBYn9UdbGLWHK0sbmMqp9OW5h
B0NM0hAhGRZHJSZsTzz0+5E50DaN15k+scC6zCGT1bWlaVj4L76xyYpM05eJ
TtWqBmYTpo2jMQ4Q6auK6tykcHCvBydJntEXhU6nx9eI+w9oFNoDXvy6VnS2
eQxOiBB5FqL0vMesFroiqIVykuz7Ol8M9Aq6EdRR4auhg1iljz2BNnfpb98F
vdubu+vZjOP/4+y946Sqz+/x+5rZBlhQsQQxiVFjiS1qoikmKuzMHVCxlxhL
jImaaGJi+dijqCioKCgqIl1BQXpvu3QQFRAVC4oFBWnSFrbv/p7zlPf7fWeH
5Pv6/XEZWGZnd2fvPfc853mec+R/hTOhOYtvBHZE2AgjmMyfGAnzEAeE5aNQ
yhJ1BZK2SnexHsMVlc6HKqtEzAkab/xV/b8P1rDCDJ9Lg5EBFIqWt2wtsxb7
V3d9ARwjxl7mT9l/az3wj0+lYLxpVVP5Xz5MNWKrpm1j5uZVDeU3fVRfftOH
tRkTzP78/tbMH5ebYKY9BCeY9SJ6ZYJZApj2efCJWbvG0Y+9io713EIYuwOU
qo5Ap/Hfo7c3EWA03T+5qumu8Ttdd+WOsY4dYWgQ/tl3jd3hbCPt/2y4EEM2
UpVb4KSJlJH5vOEpmLDGTA5WoGU7hM0o7xijFeje/CyU+LiroHqw8IS7J6gz
pzp0wuFKzYKj4gIgqmXtv3j5waa0DeJ4QmS4p2HX2cod/UQ8qe3dG8XUMR0Y
OKp5IwDOPS0wd3xJbB3ZNhYvpxZrF3HNCR/sXhuJGJqbCBtGhb6xYaPA383U
JpZwi7FQTNTSHoMetGDb/d1YnWPw+V6RRr3u/Nxb7f8jqEYF4xJ78g+6qtGZ
mVmspYztit5llWIQASUTBgdIN6A/r5k4iLNOd+hkj6vRTJ4lulU2Fh6b5bYV
8gdAXGaXRzYuGp+31MRltbqgUCZpqpp3jxgMbLGPYc9WLhhTwDYuFosU0RYG
sv8PbLWUPmYUDGwKpA3wRi8U8Y58Ke/I78+vjnIUOIV9eMtKtF15bI9ChsPi
Ar4zaU9IZ2CIYprLeG1pKWTIhkuFrsEW6wl5+6W36H7pDTwk2gLYdMFUonDc
RC/me9AU6xTul3YL8M10D7FW/xcPbN72meW54zZ8yydRmvDto6byGz5oKodT
cCO8s9o2ZK5/r6H8+hV15de/V5P503u76f+qMtes2KpN0m/KvTiGGbhR9G8T
x04rv2JZLCC3v4DcqU9V7BrRffbuBYRWn981fsdmgpddd47dXktvSv0dyr7o
/5ro3Wq6Z9JOjunmewEQq9RNXvIOiHgQGAETlBJGJW65WG7DkhuQ7+4A+RjJ
hNPxvQbPwRmMmzaPIY7VHo48sYyhFb1urJjgjo4nQzeBZQ19BxzFx4ENKY7m
Syvs8SHsDt/RaB+LHOykSJ9grwSnMz6HgRP0AsRuRJSDKy2y7nLzznbekUX2
p/+YeHJf/uKWwMnNbCWhpqWAeIQf+fZJAng6G/JgEp6c97MfvBVUKzaUC0Us
DFoSOWwdGJSsdeb/ne7J2wfjUbpbP6HigaU3I3QWwmGe/4p05d2+5QkW9HE5
vLfnBtcLNi3MCK/Z+16udrB/UP/Aqw3qhngrKjTA1Q3fYnCsF0rnJb1pROdS
uKilEVrka815fKQ1urr3Ang21jBrg3COPuLgvAjrEat0R+Fjdu9oHvuZwzkW
xiZrtFDld+IIm4d2rXRdYVPzvmoPMlfXTPFJwL2pX8mLgBvysilSY4u4oYCv
qUe4Ym+GIQC3F98SiMZIcpoX7Yv4Y1ixx/gvgaVs3hdxGxfTv6g4n5q7K9/j
2gyNemgeGi4ouoe0jJMNwBCDvxC6rx64Ndw8zc8aQioa16PE3jNqmKOT327I
90Ed8r37yyKeXirzc5qyd8Pgl/nLh02Z61Y0Zq9bQfh37Qrg37Ur6jPXLK/N
XL28JvPHZbuo6tyRuWzp5sxFizdkLl7yRebStz7IXL707cylS6dT9Qnt7AGq
RjEoclDm6veyCfz7y7Pzqmc/M696JcHIBsKa7XTUENLUEVI00BvRRNjT9NDU
qqYnePFNGd04xT8JHrhvokAWDiDT3fIU7xUuTwM0it2DABZqUuZ/hqbSoL5b
+R6exq84Weexx/FTtZm9Dz8X1PIhBVV4JjwxW2Y/JTaqykX83TNBtn0CWIR5
Ozu45/eDRrso5pD7RRahgMsQS0S3vGEj0OCA12HN4irbsCgSSxWs4vYPzpPA
z/IlDRggiuNY4Atmc1LYRK6LLFZ4JDSPJRO3CNTa2rStM8/9xsxzv9agAIdu
IqPx7ten0UGy0m8t0WDUg9utdMeOH/m2OQfy1n09Z5JjqI8DNS3BrhC09dNl
4HaMbjZSYCunkvchXQDL+rDxR0vreFg5PderftItf5i3dSJKtj9BGzyuBy0P
yBHB23DUgjBiK2IWJ/5pjHApiGEpwBL9H+bSINlrgboXcIyJ3d6MaHtxL8A0
/VnrxPAR0AiIRA9h5MeSM6t5swxl/CUJAywxTdLSCIK5ACWy9hz+wAL9/rxA
j01UgBfaHta/xK0ey/S4NDhetkJTHTUV2+pVnP53jt3RInG2xebpCHWxfeX7
dEjqQlkNriEg6HTqCYyVJRdPjczhXixGhH6RELnEtkN4MxWqf13VRNVoEwFX
Y/bqFY14JABryPzx3TqqQmuJrO0uv/ztKgKzrQRkG7PnL1yb7broM3pcmem6
aH75BYsnZi5c3DdzweKHyy9dmo0vXrR/Nrsoygii7Sfb9mB0fZ6ZV/MWof3n
dNpsu3fSzirCmVq67uuJDTXSBd9EwND06IxdTXh3kZF538S8WlQgq5viEG4T
xu6UkBkA4r3GyYnfB8QUW5NLPK0V+jJiWgonZXo10Dy8WoCVOrW4N3/l/9DL
4Fctz5fpRnTDHpm+iwscTIDi+riP8VbTlz22cTRztG9i4idY1AucseRswMfv
0NIYZ8it7BdN1I/OBpkE3OqsTtQPM+W2/hnu/GB4CsWsBauYF4N36d07gWiy
G7HePXJH8RHbELOdgXUikJXogNnD34K+MeZ9G+JfS3tMC5xrK/rcbToYfFuA
dYRxGfqUmE7kHNG33KPrmrsQxp3/5HfNXZ/eYKN7wksl7OWS580/Xkz1DNXV
wdjh3NUO54TJYWYnhY40fY620qVroIWrhDtW+TV72diSwpU+B4QFDO4FYnAv
8gp9Ldd60N/A4oYq1BGLi8Tav0xMb5XNAe9GS8GprE4gL4WSlH426G5G49ro
aIaBXmtGw3k6rMazGarSgc4B+N6UVy71q/ZliVV7a2SituZVeyRD2pa9FOP7
OstbOb29AwEuF7w9qKD+oyv3PAA9vcpyI6N0PtzdFmTZ2joq1rPywtguf8nn
bYSBbJ2xxhMiXrDMgA0t28L51+o0g117KhQ+DQCPKtcbCfCoes1c915T5qpl
jVk+3m0kJlZPYFeXueLt6szlb+8mMNuRvXjJFgK59dnO87+i42M63s50mT8n
c+78YZnOC3pnOs+/Jdtp9llxp8oE3v3oYrr/Teg1f/cn9A6uI2jZQe9bNSFQ
PcFKA9jb7WBw06qazH4FSzEPTA6W3HQ4GqgleoncVdi/YHICovh5+DtazfQ6
UYrjz8UG4d5JeRjamp8qGCpfGr9eoJoRycTT28grT/dGMVbF8D1wplA7/PbF
akfs/u6Z6KhdxPjHxW6UdnAWJPbg1Nibse8O9VPkrFV9Bfx8wEHZktmpxlrb
9bL9M2/FGP5dI9YnZvUkc0JFCTe9K51SApTY21lvtjALfl7cAQwVz31SiFXX
Xt6CE/N0umkhzax0qBk/ss7fkh/RPVMePEPJYdpb6MxpjLCNb7Sabmgo+U9v
g5m5+4vm3P1ojXR+CJbnXYgJnv/E+uYLiAFe2GsDZxRf9KyMuyBojxNCLYjv
xe8tQMIQ0qHkKyEb3Mb1rm7l8S0HrFBRMrKsAmOEj0z3/kq821ohJwr2PPtq
yMnL5iqpRFDsb6XGhZaHITboea9rvWso+WZLlEyjZUq/hunE8aDeARD3cQDZ
2ul7Mh1i7BCOTLO/5Q4q/QAEkylIfsXJLX0LgtPNriA/V3b1ixM7q0+4eG9E
UaZV5eZLV0R1ejkjH7izWGPi79ANMOJZ5sdQQws5HoTn+d90gTQ4B45+zQv3
6ijdgg96fYZLWygl/1wtVLAsQMdPZJDyJkJHpoSEkNdQeZv9w7vRfo3ZK99p
yFz5dj0BY03mMgLIy5ZWZS5Zso3AcXO2y7xvs/G8z+N43spMZu6SbHbe2Gxm
zoi4vLJbtnzONdlOFSdlz66IygUh2/KfpxzQfdYOMMLKZ+ZXryGU3Pr03F1V
D03dVUtvWMNd43c0AiUJ5cAIE1EXosElURL4012zdWzW+sEAzux5QFiPpvJ6
gL77JknXNXwuPsZrPMFz8X3gde/zBbUxU2SUPqZnfmhEDYcxnjeAtWIx3zdR
BEMUVIwTmijpiEUiClo/ZIyb9gMGAonl5CI+Cbgt4W9EfCC0yh+/U+gm5EJv
FGXOn2w+MFAubz9H7mYq05JDoxbKqZA8vvg9XVwtTIoxT0cHZuyueGFz8+V9
NdFTz0e1i5Ih5GK3lsYTtuKoIusIPPrBZDKMehCnqDQ7fhYlTPCkiXLH55it
A2MkTMz935rmzvd+0dz5/i+bz/3P183nd18nG7tPAZwv6oXVOCx3XNx7E4eP
Xvr8ZgnrUsXTC6Fqd4p34PAWmMiLSIPkjfzz0BaYyDOXtvOfXynjzHhmgRgv
9dUoBHPZzS+KDQ/BF6U6bss2moaH+Zg4brW2dT9vwNiImjU5YAQE7p2Hja0Y
GzkVaoOvnDEHPPtbSfGVXAWCRzahKymUkzlc9/w11Jd3wehuZOv9btV/XuFV
f2UzRboQYeQH/+I4zbxAO+144F1PYTmILjt8CAMptmYkTqfiRHf1gIJaYGiS
0VW2KAtSSs3JFkr5lbot/oOn1kNK+fePxUkRtBK64PVUS//hXULMdxU16bji
7drsZXRcunQ3oebO8gsWbc10Xbghm527lpDyIzqW0zE7Lq8YR1Syb9xpzv30
eG3csRLI2SkEzkOP6j23ZiiB5vvPzN219tl5u7fT32uIhNUTLDT+37gdTXfQ
8XBALTmKg950nIcBcDGU4BcQgiF+QQ+rDHi3+y38kJ9n4WWGbAayQf0t3BJk
cdauhEsPXpdL+klC7Yy6uufPbvl8FpOwTVTKT8G3hQrkXkZOJx8KevKEjcte
46J9p0qX+DJWzNmaJhfrXLngtt1t+i4Ct4f09e/R5rStjJixKLqb7PI+ZJsL
sLgaXgbObc9ctNRAucjPcPZT2c02tL2SA072h34oW6/uz4696qMcCo0SSJRw
cmHyyctuPJaSYTPlTMJMWbcakvai6RZa5FrpQWPMr63TITNUg2fvWuMmmolp
Np/bbW1zV6Bqj3Xsg3DRU981X/S0LA1f0ptvAjKmSD9gGJoobp26v3e4Y5o2
IxPqj9cGdbm4esr+oDlN3B78OoGuYJrQbdAhxkTeC+qF0h+d4ne1/l6pDNOj
amQRe8Iy6wxZU9z0SDtghbtJCtphlPbAypsVBK0ozdc3Jpln3mpZqVmxb2oW
DrrBY22lcdF1TXi5RsZZ/doYA5RpnXyvgeHGSFfKSF8/HulzXgMFokJnCsjq
9ZmSLsGd0iXV6RCuynW+DytU17NNB1baOTW0+U+DzLoDf7YyByNZwn1Z0sV5
+faFMEmcOCp9a3aa21RY3hJuWbKAN7+8e77SMAJ2PWOaCrR1vrWrfBF/zQow
1BSgNtoPQFtHFLUuc9lb1ZlL39qVuWjx9kzXxZszXeatJ1D9jI5V2U6VbxEt
nR53qhhOx7O58sr/y5ZXdiWa2vq88yZGHUO0PbsHUVQU8qvpFraJ3ugqeqx9
fPbuBiJyjcS2iKLubKK7e1OPPPRidJxa5Yb5UIx3D1DRQkqgZN4/xaMiRM/u
SlENbRkNK0Vuvi8o/u9Xitojj3Pi+Y/NEpgLZE+mv/mvbc/vJU1J/n8r6R+Y
YmU9gSfKeinpfVkvUbvFLgzqfh/nHQnjTctg2yy2/qCP4c+9WTN/UNtBOPD5
qIFu0ZHqm9WeBjvMaEiIv4Kkalxt6RyWqpH2/qZlCftm7nbQiQn7ZrgoXDeQ
nvangWCyBLbNV73M0MuOgOYAJEn3slXsIpkEamEMkxJPqMxjPEshJ3GaeWtx
Mm7jP98m53i0MZ6hI3ffl82d6cgSY83eS4+ErfAF7PLIN+IX+LgyV8LWi5/Z
wCt4l/YJ8NWPYbrWPX72tgKtCq/WuM4nrzaO+GcdmLbcr1vf0CZ2G75J2pYa
NEExCfUuU4OXO1WTfkDCVvqlBLV7ZN2cNxy6cvMlJQ3kNzlyffSnstiBw806
F+mehtBWOvZ1lLUkgFct5yPOYNZE1IC+MpzSh0GBp+pEDx0lexqRfvX9pJ9B
+r/5GZiFKBEF4qaip5mEb65vkO8xJ40mzjXu7rZNnY/oI/Q5Fg1zpWZ9AiNt
YZc3m/rwAnZa4kku5EUCXdpt4dXGMBp2fQChmJ6VkUQgqEzulHgIvUnJ6p9W
apVP8Ll/Y/YKrvAJPpfWMFe9eMlOgtBtmfMWboo7z/uKIHJNttOclZlOlQuo
up9K/34t12nOUwSff4s7zrmw/JzZgNBzBEH3FUHU+CpaP9/SW/s9FQTVveZV
1xEKNtL72EQIJc1soFKF56tAJEieAibQUX4kPeUK6b6EUU/gjzZhiKK/EF81
lPNapzz3kT3wVXGXlde9j/0rwIhLAjE08Xy5BbfmT+HGEGx+pu/ivXgFUv32
mLcKbW0tG1Zq66vQyZ/2sGst7hL9AEy4HasciqZ8cGN9mhT/eBmT2G953Ruq
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
JFgMqMFxcoWIRE2Qu5OZLK7fYqqEMEntk03bCz3TdjW9w2Dx36tSDxWisKz4
wTJlk6ppsMCG99+UiPZNJ2OqAJt0tqzJuNOlKBNmsjDlgUqEmSq+Kq4/7Ivi
+kM/K6r30MdFdQd/UFRnwHtmsgCb9GpBTp/tBdk9NrTO6bHWTBMrC7K7oUTM
MlPF1Ouy7x3aKvuugS0yO/cwJeLO5hmdbr463vGv18Zv/a0pERVmskCZwGRx
9TVpt2CywLa3jnmgTEiB0DqBvQDqxE7TyH1qnn8nDPafNTWi0jzvqlEnTNNW
M/8tBzDTvMmC3MrNczXEPEmdwFMd8DDpxdMUO7PA1Rpf6pNuzehkaawfIE1A
FNQS+nowUCTGcbAfeGeq9W1Z0QEA0I53ig4VOoz4y+QtUR4q064gtNTQmkLy
XLfITpkKhmo4w3SUrHztqoBoqSNuHZ28/M3x1PVaaYhTQqHIpA+27mCYl1ou
+iA7imRIPlG1tZ1GXQGlhkwQXiUnJD2SHzp+cMFOCBVl5xBe/ebRv1yq8kIH
TcL0o23HKBIuMey74rmpOP96IagW+7tm8536TqYasKESoPG8OzjNVitpvOGQ
YuM0p6woxdfMxeqsP4JwsUkLB5HIBJKojZ0yWKXGAiNECkoXrF66NwdDgsTi
VcUIyYyFe+oA8hdgR1UqM1742f20X7ZLiUR0KZFIvY+4RwQ9cnbq8VRZ4h14
NImnEmdTvNz8tPG2ceKsSCA6BwPEjXAgwFlWXOsHWUBLDdHxAiuHr2l1HEcN
of1xDLXDvBuqB7z/zANc1CNHQqXjoUO6RNbBIttzBfwspA5q96An0u/xYWiu
uPt93iWnu9Jxu5fzccNOpqOyUtvih9fIqDC/3IodsS/gVE+r7OSIolZiFH3N
0ywJ8seK5uwVrTXjB0RGVV+PoylIOU3dkM1DuGY005ox6Vz7pjpajDM14xFT
M0Z+W9pgxFFTN74uqT/0SHG9oZ8X1R9yoLDu4H1FdQbuMXXj7cK8B3e2ze37
YpvcXhvNSLHOPJ5sk9vtcTNazLsu+77prbPvHdUy6+4RLbLu6tMi887uLTNu
79wy7babzGjxl6vjt6Fu6CaiVcu0mzFaQCWE0QLrZK0ZPGJcMmzBG+c2m6fO
J+O3nf5m3LZTZ8ZtO3PePCmpXkzcfqZm3ptsCo/WbzI9c9m9DvUCT7W5rB20
m4jF5pk6S6LIUFfwbAdiUE15BxNFiLECKCyk0YQqRmhZQdrPT1W3WRUaKrhS
ZCdtK1ABUkwV/oI6WlhUJqoOMuTr4hWZtQdDWwtvIInZU60LBMxo9nGmxQXD
RjKxxX/cempZNxg1L/TLhJQKGSrqhKir1Z7w1dcleQHBpDkF1cf7DcTSJUhv
pDvnlX4AuvkhL3vf0YDkD7PbKxaJaLFg+9cs9h141dWKMZIDrMPCvDfkuDbO
wtLkmDkeQ7LtwKMHCDN3npVATiGYtrtKYb5c8EsabaAr8RlIeMHXlWG3LkRd
ea64uGbQ0HLPHDwqQfVvB0ZvUaOYhzfpte7D1qVLLw/Gw/MW5SaPioemsWPi
0Qy8h9Y570MOKrBh44EXQhf37wJ4Nomsr5WuiswiylRJVKZlqnSYiDJVdriQ
HTQ51dwwM1QndNZIOBoqIQMHKf95Tx0qGub3GBPH7+UhvrHhuoGa0d6MHP8p
4nzgQfFBpLMANZTtts+bOJiQyo7kqYhH101vsrEM6Y5Ie0RWXebpFLKT/X3E
TlZpqdKIlpQ9ZQPSH7ETotzdNl8tOVG0tA6obLAHwrVMR/1QZo3vLTKzxkKW
/186N3nOoJpBW2uqG6ZmnG3XZNwZoqMajT5ewjXjGzNnfGVqxqHieg8dLKo3
+KOiuoPMrDHwnaL8fpAevVSQ88Dm1jmgo7qvMvUCdNR8UzNmXZfdZUKrrLsf
aZVFs0a/5pl3dm2RcXuna9Ju/aeZNXST0a55oiPqBmYNyJAwa2CDnXtV0DnD
Lxv5f57+8rlV5km/Z+zW01+aZ+Yp8+Q5Z4CgyvxZY15WM3vn+RrAPvPbTEON
2yYHPHm0x+CqwFVj/ptuwkDVwPNoXriy8KQRkOUqPa+JtXrd7UMiKlWW7Si8
eZsOnkayWKgquA5OCX44T+wNDReB1o1/t+3Y+HlY4KREFs4U1rlaE+iYsc0b
M3SJDdRWdDftfQzlxHwHyjSJpZguxeNsVGM+HGlZg/SQiY1WE+tjk22dFVIZ
ielRgil7OlQ8ta+SvhuqNRgqkP6c4G9Mfzik+uUxw1YPqiCezDTLD1IgyZnK
SyOGC9soQcGLaP53CQqe60MGlw5lsV5zu4lJtLjGdqIOAbJ/KTberyGye0eR
mCd5rSydO+fFH6b7hcSPEaPZJW7DD2N25vAP0Diei9OouTRMwjvx6ILfekkI
o9/6iZQGi3fJtEdlGjGjclYZOWKkZ40j4kHvygJJANTikUipfaIT4UXkzxiL
cFcZ9hjBvxfW5FI1ePi7SE/5/1Ba4rTYdhcFUjGm+gtvb9Yw3/ifJHkBXjq0
zJik92RxsdT1Coh5e1WvVgz/gv4eXmok01Z6luDdlaGI3Cu0lT0OTkqp2Y0h
4rZ3YK6j1NXfnS25ej6S9ukPO6CA1VSuX/E2XDRQJRvgspZk+KhrDW/2QEgN
tuFXydzRMsxXcQ1BpDMbNtBF8Pyq8kvmoIZUcQ3xlU9TpIZM8NYaY06UNBz9
bUmD4UephtQfetjMHZ8X1Xvok8K6g8zsMQgrjbcK6/R7tTCv7/aC3Pux0ljd
OqfryjbZXR67LqvLgtZZ94GvQh3B7DG4ZWbnXq3S7+jSMuO2jtem3UqrjWt5
tYH5AxtxKKGwEYcSqkGL4C5SQqX7hSTvmtEbT00fu+XMHvOc+XTc1tMnx249
c3bMVlNItvIMYp7YNVhMekWED4WCJlRcmK/iTTmenDp3yNsSknhiV8tpzfMq
DjbsIdoqesKmvJYOOUt2yxtE9yB4sAtQpb8xj0sZWUr27LXvQp7al1pjhQ8r
hpeBhsx6ZYTWHHrlZt4+4OCwBNn4YBjAUt2UmBitKxIku1WvSd9X3fOHyKjF
V50nGVSVtCR3tOV7VISWRl89zt7ou3i/Ug77UDDS7He27H0rl5JCGxeLSrWv
5DTHpc4swtWWXHvzoFqnaG2hBAmZICZDwfR/jKYwn3GhZJAB9WmnYUqK6Vrs
8dqLZ6LGwPSnwrvGDnF1m44PAOVXBg05qCwSrmsdk03VCZJCKqmCcVS4frKw
6opdKxqR4FbN3TCa2+Sjl86EfDFcWjiTfaQDAGtmPrLuXkayEQWuLp47aT6X
RGqQ12YMhce8TJguWLcp28XrFD2F4wEmNdVFtmwpqC4uP+m0JulMbvBy8Exa
LPNqM7KY3x2VVKmsiucWnVQSKRktU2WU1hpHtJYV0v7faK1E2HPCC97WmzdM
KN33RVgtaGs7v1d7+M+Nb3jrkNzUYRe/9w4kfrmVViIVpRuF0Sp+PmjnAi8K
I6aXlGO7GqEXpro8mbwK+fHyUHmp+P4iLS/IAZIRxSstOqI0mQxaS64jxp8u
bTwWW/PjxQ1GHDOlxYwoRGsdKqr/EDbm+4vqDsbGfFdRnf6vtc3ru6Mgr/eG
Njk9n2md3fWpNtn3LWuT03WRKS1zWmd3mW7KyxhTXh5umXXXg6a89G6Zdcdd
LXklgvICagvlpfjaxM0oL9ic66UEBFe4Wk7zq0vO5WM3nZkwduvZl82z5WNT
M741T50z5u+VZlSpHoONyA46hKOqkqCq0pS4DDyF5gvzhTlk6ktn/ApEC1JU
H9LhuqpB7NdMrwqpNw554HAFissYo0d2wJhH33bL+yXhMYa3JmsPeldx77v5
xOPCclJuTTBBpJBwCd4mopt5d1hB58zuHO9Jb7gBjYQzhrWf2hTyIC6WFjbz
6LAkddjlimdOEb8QNoVz0eR5KQ3htMDgR+aj/sJdnlk8qWHleFGrhWw+pJLE
qZIIyRWQO2dcdyJhiVboDG5O5JxZ8juET0rYQiLFRO2PtCyBhpr5mo46KCTZ
oUIywS3HvWJymscJCKvq0JvjN2rySw7U/Vwnv6Tg715GqJSVRCgWT+83YvZU
j4gvA1iasT5ZUkXx+6snf+YjxkgLFnf2oztJGfYqlGHR4siXfcgbTnPBdGu4
mpghBnVk1Qnz632/O+Vw2/mVquHSQcZUBk0wt3ItPn+OSrbyRYbFZQRvfI/I
dTVk5A6xrrvtUeclZ6oLLUtiqCypmLCYjjnTbV5wQOcaiTANlpAio8d3fEcd
qS8P1Up/feboL12495HrDbadu4ds51KEzJlaw2Eg6S5WqaP1qw/PL37W3B9T
5Sp5RJgzVw4oa46ShZkFy3Dzy9VgwbwKY8YYEGHLsUT5oVueUJW5YiGsjMwj
RZXhCmMX7jTANBl3MjzADMUAg4X7weJ6QzDAgATbXVin/+uF+f1ebpvfd2ub
3N4YYFBlzADTFVVmgVQZDDCoMg+1zLyrf0teoGDxDiLsL6bS/PpqPuXA4l1P
ObB4hz5L7/EkYl3Uvdldxmw5vdU8i/aZoeUbUx5OmyHm/Fhhw8zraiSKJ42e
ZelUQeYIc4Ud/KQXlUjeBtk8nv14qpI43xMD4/95ZDljCxG62UfD4w3zZJmO
J3sZ08158e0Jv5me/YHWAcJKiSBSJ1HLigV/p0FjX5UvZVKtl5rqb4pQZTZ5
73PnxuHPOqs+1K12Bh2K6DJjA7s5a2UJyG80HrK0u+BZ2qXbMcbPj7dcWA4v
3z91NqcYCAGi6jCqeaKP7vLz2eNWPyVlRE8x6MwuaOC7HSVVEowYqYwx/CQo
bywR1ivHbs4plwRsmaDyZCe+1RIS8BYiXe0z7EPmEr7fyLTvovuTSClB8Ton
N0SaOD3njbOcihXnL+JlPQvh2YTqFz8CV1AMwpBvk1wuTtZVzauhIFbrG0h/
0s7IvCYuFWW6OKzio6MwuYqSbjNHkykxK/jqyTPJE5GZBFYZK0IxJsuPB/V9
hZflyGxmvSkeusWHxFgvte9dajNO6EC8E8YYM7SY3+CbfW2vdwpywyys5v8+
86hXVBJ+UfHOAKPrFRwDkpN/yvVKHMwYVZW4EGKDPkdpcWRYwBF98RAZ9n8t
KRrczPlStVBiuA/54w5XT9SwP8SK5TtWzD8KtKyYzC3Yrfy3nVtcWH3z2saW
6gpixWZzQYlu45tibJlEtyHmcaqs8diTZTS2PAxGDNv4w0X1h2Ebb4W+RXUH
vmWKyqumqGxvm9dniykqa01RedoUlSdaZ9+3pHVOl4WmqGBsmdyKtvKdh2C7
0irzzq6tMm6/vXlaJ3+7AjUXBL9Qc2Er/z1vuxIuKDl/NL/uWK/ss+uVrafP
m+cTFZRBz52oGbHxVM0jW8/QkjJNwo9my3iP3m2CVBPet9ShBtO/HcE8AsCz
6i8pJ3jKzX9LO2t/75LpGDMJVH7U7V2Szsj5JKFSH5lSSlBmfP6L6sC+Kt/Q
z9FluUR90S79UHIpwbv7XiErdKWdSZzS4yLzwkyES3PPtJoLQYJkv1v1dFsH
lTRvUHGlJebfmBwJlRUZVGqsAECts/XiQrNPqH2e/xZvM6xzRxDnEmN+YNkp
fPPiEdPq+aSJYi2WALFyXDqO+PzWTGzGp7wM6mmytOeTvBZdtLk+bGcT0tK2
RIuHbEz0HYTc4k+XJoQSP0yloO9Q5YDReO7pvDyJ8ftL+XjRlQ/+EjKsuBkP
tdvGJaPvQkg1NWTjnRmqJnNkBtIi4qWEgeeitcpaePWdiuG0xHy1fFhid/Oe
z5MwXDSNRHgt835dpGrcI5UDlYHeGmqwPGuqjQ8HdXGPla6AoKB0tt5QHHTQ
aQFMszvOh6BLjwjZXNvUD1c64iEFl1ctzM+Pbgol9iVlwTBfNRTBFK016rCu
U1A24n4BGXzIeoIMiKRe476w6wf//zBe6cmM1x+J8YphDsH2pTbC6/lkwssW
jmeihJcfT/jvCa9L5KLQEV7n+apwsowiE0+LHYiMIqTh+tKMITgPMaPIQx/R
KFJ34DtFdfu/2bZO/1facuXY2Ca315o2Od1WCeGFyjHXVJAZZhzBKAI9F/by
ILxC+5Rf8DiCUQR7+f9uznou7FOg50LliPuFI+/K8VvOLjWFY9fYLac+M9B/
0hSOs2YaqRq16VS1mbxrhm84VfPwptM1o7dwhPwYUrnw82KyPLulGMRZnDmG
FvZAFBBiAHwgixJi4zxCDO/rDRoQb76LRTuRYiIJw0nKNFm3+Iv7uG8Eu4Ap
cfkgi4Uz010L9vaYQZ79JHlhosVDb+H9YmOVvum07vcdAUMjTII+qqepigHf
zYs103szF464zTyIOcOnOkk1QuN2uD5wvcOXqnPHbMZpsuTTPYECmd1PvG1t
tAMx6Ev2XXXXHVFWK9WGRBxXnYorwmr5klrliyI3fnzLke7f+Nm7DjFrPUNB
CuECMsltR4iVmub4JVtB4lJBdDDzQ8SmkvXUDnw11nbKDkBZtj3RD2t3PW+d
lwD0c6ZsgaPL0qRK/sFIoZojxidyNh/w5JRF38ZICf72qgdZBIrXVODGjyDu
SK0nZS3vsVn1QmzWfZKCex+7T9F7quMJDzesGustL6Nc86dFPWb6aZpJvNxx
zC16aHhL7YMIFRPzs6DTdH1Mp9Qw3uensaNUaASxlYQe4Lq4osRtJakYkbyY
zw6rggdEPANRTbp9EDYM5IoSd+7dd1La7b92c5xY3B9D+Fadkhgxh7wED0Gd
QfBQcVeHzSruomqifFbbteZXzd6RKKWFOvLTJ3gl3ypcRpTRorW8lBFydk3F
aOneZJIakpjhY9yJ0kZjjpc0HPVNcf0RX5uhAyXks6L6D31SqIfpdQbuKqo7
YGdbZrReKMh7QPcmGD5WmFKC4QNlBMPHuOuy7h7aKpPkXT1bQBKccZuekqCM
YPiAvEtPSbA3gbyr0S+CW9L4nCRSRrA3eWEsb+WPjX0Be5MzlYPWnqw2v5E1
5pe9ZoQpJVgbahnxPYD05FcZL70sAZhNf0UorO3CeNXje7MXOGslMlZwtXlZ
Lea42swRadhj0Z1JkGnDEXl3e+aCHrzI28V9hRitVj5lkxJ7Fy/0F0NQLk0Q
UT4Ll3+r5aovUn5iXg0Bo4aHqSV80xGnfQxuDa1zlNq86iOUTlbXF3PR+6q8
Vz28V+zlbQe+Q3IAkEML4XiYnE/QD0PyGVBM2PEv3dkGSiyvlJM0XwHsXyZa
H6lMDeTlh8dtWYTmnsL+gnBdqP13xHlHPeK8AvlWUAsIO5BMfJEHCPPlp6gc
bILCGK+IrgWERcBYh2T7qT124eEWHVyV58npfQb9tLIuLIyI2aIVYwYZmKOO
54QoPq0a8JelqrHG+YIbaPerRiK8Clnp1YwYSob5rvwigU18HyoEqD7ptFtR
Vkxv5gfRhIP0Nuxbcshkxc9Hx6JdiwVuENXRkGMsb5yNCqG5wX/n63TSfZHb
YQzFwqm9vrb64DB3xbayIg0OaA/vV41fc0L6/wtJsD0l2Y81fOhGPe6kXHeo
lMuUh1ve9u0JdQjJSfYk9Nfu5De7jWJ8zRTiqbr8M0QvcDKq6uKtCJeQ62or
ITUVkRIiyq5KLSPMYU3VixLwV2YSGX+SS8joY/A2gaKrxPFXcoWIi5KBZhJ5
8PXCOg/uKMzru4UXIz3BYT1pHphEoO7CJAJ11yOtsu6BuksXI3e1TLvdvyzB
+r1Q/E4wiaCM6GKETMP/H64jbHeV22/MljPYvX9g6gh276dGbjxd+eCzJ6rM
jF1jfnFrhq7nGiIwoZMIdoVQ3Y/e7O1NMugJRWmJumF/wQ4gATNddWl779TF
DPtRF5Vx3vIET2BvO89VJMtu51F5Jr/kzlySTuQTciK/xypkneI4QxbzUR4r
zF2FlGKspzXf6+OykdGjcz0GRCpw3IVBxG1iu81ei3mDiA0QwgAiS49V4liy
Yi9ffCze7V9gKEwCbJk1wkWGHn5ro8ysi+Wv7FVHyJZEjKlcDGaQync2Yf3D
pYTwBJJJvxOAzZESr4AjPc2tHLVJbvnSiM3R3B5RQQVOfSt/s9WkXmgc0Rt3
FWxFxxFVBPOS/bwKEAIl8vA6uXsPuChlUp+C3xq83N7Mi5mymqzLT03SkYTl
S9gfzqJ3RJLGU4rWGYqqfyM8oUid4YJpPrvPbWnU5oOu1nARSNilu8iGo+NJ
ImTL1ReH9KacxOj2MUH1Cy67eJaazyWRofQGMFqPs48Xu+oGfC6fydbnYkZ+
64JQmbF7dz1DsX5ZM+RyRXkuunv/c8gNBf9NUwGxz3hxmTFfLuYUbOPJ+nao
x3CpsGtQsrCrr3euKMIuvnPPDguG7/QOFrEdAdN14xvOyzwR9jL/s1uT/D6i
7oKVVjlZaUmZqZu6zLTxy8yzXGZ+8ZT6mPsL+BjorqCFLTPl35cjFAiIL51X
LUcoqfbvZlIhGy0mvBqPNdPKI47wqifTSr2HPimqN4gUXkV1BrxbWNfu37cV
5PZ+viCn17NtuMxgWkGZmX9ddhdMKxOvy7pnZKusu7EuwREjSK/bmqd1vMFM
LFiXgPTCxOIfMUZLTajS1L9t3NYza8yEAh0xNiYnh6w7eb7P6hOV5ve9pueT
x2vM/9cwcpyiJ8kYaUof3sSXWeb1+DvdfelGZcYrojveHiXE8olTnveGI7Gc
hcZpO6ZgrJniFQ/zdsyJZbP9yjvukAW8GP6cL2XLF4v5SxXUnsXeAj9Tjll8
ogtM06p93kEKTzVcWpQZQ92JcFzVxHFVW45LXRCZNWsUOnLfejgsz9LzRLW3
XSFWiDQ1CAWl1uaT6ftVhSuwM9323NJ3E+aZH5nuP8JZQjqicLXJV+fzpN27
P5dMYEkSVQ9KWVtj4Aph8uniIcJByCOdI5UXZZzwhxNbUeI2Sc4gUIpSYr5u
Eg9jd54ZqiE6o2Jomc0ll38QGUxZiepsrhi6iNN7oBrld/TyZdG71vbd/ogW
K0doEIQuN9/mHwYTgCmmFi92Wi0iZVohZDc/oIEpwoxSEF099P4kyLP1A3QV
Hv2eOUH1iKOU+KRl0NqT9E8xZL31dlnP6RtcafK0+uicQ8aQuninNNBF30oQ
6bcXbuFw6ICVwul83hh21ZKVu3/+Lj4qUlOknsS1vkiNwQiT7o0wX1kJsakn
3tCSE64nkvBMQi66Y1Rfxg/d5j3hu6f4exOtKDq3hN1T8iNzy8th9xQtKOrN
6A4a+RC+/b8ZW7B2T6onF2hm+fHj7qrx++LHqxcp4YJSlSzomiQblPEnyxqP
OVHakAoKLhq/NMXkCxSUwnosGWZBlyko+f3fNnPLK4V5fV4ocIIu0F/YooD+
wmWjyoaxRRkgW5S7W2TcrlsU3b9D1AXpMOgv35/XirpifkVphMsU7OAxvxw2
I/yx/mtOnDVzS2Wvp05Umw6nxvwqY51CFcSvKPi1xi/tgDUnyDjCe73lyLQ6
MDvG081kuWd8VJ6k0xzpFTBRlhYiyhbw2bysWXKopKB/98ky0BxElr11Pvm6
JS63GkyfpNjHpHv5e3rT/rRctzgDKyW94l5lqY35EscsZr4ujzJf9OemQ5HK
8kkVnVI+vd8xXmy064zTwcw8qg6HIoNAH0/XfttlH/AyXYpb43TtxeO1mex6
c0uDkJditMzgo6EXl5A6mlyJ63nupDUwRz8OrIN6iYNAE5xdxEGgbJCu9UZD
MnyWzCs2cX8Xzwftpr7o7KJsV2Rm4ZEl22qD7YrpLf5NWvh2KEkkXUY330dy
cXiMW2THOGYEo9pp1U3LLQ6Pddn0DeHpgKcOHkjM012KV2BSkmIQc/WGtgux
TnEabgZy5EfAqU1p9EPGDx+GYcM26A98KMmQ9RofDxQj80zlQxe+bEmnS0o4
gaF6eTWGRV1p7O0rcXhyQe+t5fkORTcpQbKDo60xulVRG0e5gMRiBYMKKDFc
yKdJZeH9iZq7D/wsvI2H228vGlNSOTZm+myYC+pAVbnxTVQVNle5ONlc5Y++
b6OrKUjLC2dzRIwb23preQ1fgrsKispV3p180OoCnzj6tlyS0oHwJVtUrMVK
lWfwDlGXf4fCOxVeyx8taTAMOxU9cRRCbNDeojrYq/R/iwx/8/uhqGwi50Yu
Kkvb5Ny3QIoKphQohYe15J0Kk2EZnWD8q6eOUfPfH18ddIKoS1fzCb+eNMZO
BZeOr4/ZcuqA+V092vfp42d6P3X8nPnlrurxxPHqvk+fqDG/rTVaLx6Rc6z+
z3KADWoKTSngQTbZvUtMSPTRW/iXni65NnO50dIySwixackkmBxT1jNP03P2
mFJ3L4/tOmePKslMUgYb9I0RmZi7iRT2DIcIMJfUExiVHy9Ovp9MJz6KFjH7
rJqLg6V0oa/HMH5xcTGpKWgxLS14RQzFJKgP315iwNSUEXl5Kz9w/FvIu11v
TATRRE7FSMZevePFHXFmJJeJRxf7kEY97nKZEm7ZYk8azYsbJlUYADNISshn
J7zIvoxKiwHEJP/IWotomp1UGj9xWk1M4mzQzsJBnWjGOM1XEHOFJtNXiVn1
mEeU8WyTbldLWnPktpGntzT7bS3x7OpzU8WTJKJFJEYuAInQDY63XdKLRfze
k5LL/CDMd6hF1y5XzHeijNcDNIwwMaa5roPWyiwY51nweXIFC5BYcjrG9pL0
08RhJIdTDVnvnUlyOapjk6mw2odk+M7FbjrpJLQXphQuIcfsOp41wTeIsAsH
9bKIhzjYUV9xVzfShez6moYS2HRJzUgkmXFFy8aDsnbXYaTbvto94p23ijeM
cNkIuG6kR/itl9Xvl4NB0qJ2v+TlyPxWk+TjeN/NsYVnE/8f3RxRNhZzZt93
F8L0N4hhGgl+KqXD36PYWURW8WNPgtxiV65hX5XUHybni1B0UdmAM9f77LLy
4Gtt8/u+1DbvAXLmap3T7SmeReg6HjsUEFtwWcEOBS4rWMVDB3yzEFu/NyVD
zX9RNlTRhVV80+bBzXQhLzeMnOXXCHv4jY9sObP/wWdOfv3AquMnzRB8rucT
JypNM1RtmqGaoetP1lBN2HyKntCDZf64/ylOUlCrVFqoyBwSk8nDvC8Bh309
Fw5d288QLnxS+Kg+IapicGB6JanQPuu18ASiu5YpO876ZYCnlqilix7DqJPt
Y7vOpxCAQdur2a9knRj2d8nwblpQIkIMV50Qw7VZ0mI3yk0IqknUudcWib34
ouHunhdyd1fLKZ0ItFhg1sDMIW69IqzKoGphmS4leLhkePcmjuSSsrDYG0DA
B6l5/BSvNOBfH1hPQabrneMUdEP9VtsywViXoDejiI6NNIPELOkVxO02xS7j
g7hVBNutPIvCclJVBpW0hXfzdIpphjgk/+71MxBppKOj1PPWk+y8bxCAf1Ny
B8CvzHlvNEvzZxFrsR8XlbCq3fhQ0VaOxrZyPORNH7oxp9JBJl38o8OTCa/r
v4bnOJh5YWrR3FiXBW5+fCOpxo6UH6t5mK+QKghxW7ZapNvtCv5EtbibA6li
KBnmI9iCoZRWDGwWLhNDLvGel6N1YRFCi2ks85lYCvw13Y9gvoDst8OwL9JS
ZkcNjHinPKDjxYdBLJVAKyL5VVv4m7VS7Iz7dyJ/fgWFQ1ftv98BTus32/Gy
X27V0SIgx18uEu2lQGgCt+SIhENdXeofBUetFMIqkiNCBQIJgOIKf/EslAjz
mMGzhSWsJntaLbpvFwuukUcdYTX0C9mAHDAFAoTV3sL8/rhxh+XvjoJccoU3
BaL7M21yyLpxYZusbjNb8+ZDD0XEGf62O1qk3YbNB64P9VCkpGWiIzYfP2uZ
3ilpyZ7uF4hLsfp4xvxOvmN+Vz83gH+ixxPfnjUDRWWPlcerTD9SYwoA6X7R
OeI5j4Gi9youDljVYYQe7hUIGSxoomDDuhPWBVV9IszrE562i6TAwmnRn1vl
9CRH+ko+BdOjR8wYOA6Y/krIsEVornR62Ryxmn0scmJiGht611fP2LEEYmSh
dPwzem95Erc+g+wShgGEXm3NRvyqkcReZTrP90PVVov1nKxP1nzinLM+5LRv
KRhcL+J2uGCPkyVkfKjOis4DhMP2lI9nJbY96whJWZMzQZiIscZYaXYDb3vu
3bI5MfVEjTe9cz79dHpoR+g1XAK1AX6qOwUNA4DU/nnoeu6OzdeC/YmCXswN
G/T7MloJLbc5CRrRbck4bxcfLSSTdyTv4/EPqSbOxA1+7EK4nviAvG8+wE9Z
eUL7L8Dq7rSo0yWZAcTklnOxL3Z7R/3GeGOvGyV7g6OOMuqSrzVFFMK8PUl4
GeL48wQ7q6T7mw+rDqNCYSpIOn56CVQRmt7sGwSujEgiLsaXvqvDybhdee2+
FKGzNkDWzR2yIYn7XipBEoM1Pbp6B1ulaxFMH1iDgLH6Fa1BvgjS/s1B+4CD
WKr7wq3u+xLOi0sPDwPLWdlNyLvukB3hVH/f6eII89Xb8T9njXTY5GfK2tLi
R1TR7CGmwC0kW/ZnT0XzRnj++LHsQ34o8wd2Id+j2aOmnLIJZ2t58eYPvigR
+xQqLTJ7mNJC+VTkJB+5QxTaaqAEjvR9rSCn97Y22b1AW5nS0uPJNtndFrXO
IRnwlNZZ94xuxc5c2IF0bZVxB3Yg/7zWXZJAAuzvQK5sGdwc2oFk+KXlsqJh
604s7PXUiVdMKTlofrWOdl/57ZkeK46fN3+v7r7ieE3/NcpZnaZ9xwNPu7kD
qnTirMyMoWtVlYIOfd78yj7Dbz/wuRM0cvu8l3+WgrlmtFiumtdlCKdFKxAz
fGC1oa58YtESeLePCVtIFvob+BxrVKzbd9Sgidu9uuO28EHcX5foYQZB7y4l
s7Q8cR2pl0RUqVkKCsj6gyzi1ZNBLM2xY4FPr+2L9+i4kebKhzN0F8Sq45Bq
13l7yqBiIQ0NocWEQC0gVUSu3B97Dr2X+Q69vobLasS0clh/rZfO+H7u+m9k
KwhaYwAdoAr/1j3lEK7PahfoJKsRYeldGbEFRHciW+V3wg4hIYGwvSG0AuFM
uw/Bl41vTYPIJKc4hn8FA8Xk+ryf/x2edONe3Pkkx30jUb5vjIXNLtU6zHck
ox8sykXClm4p494skh/SB2MOGSD6qsGyMxq63q0zNFKR57XNooLLsElafnYK
SOKHN2stzqQnoRaTYc+76oPejsr4IJ1OcmwtwaPLco65jcq3ZB0S+N5cN4S2
7UcDf93+12nfmK/if0kl7OrIH2QqERFwDPHkHo2VKbVELkc0iUSvRrqDvpJw
8litsbZ6iNhRphKKtRWNFi/UM7mI/EkILHUGtrG2mynV1vweeLsPDCq0US9c
HxQLc/WczSG5/uerLlz/01oqyI+WO/aKqseimgpOtq3p4JJtq61PsGOvRAE8
0RtMHj7G1WOEqR6UcPg5W6M89LGpIPB2fI9TDvu+1jbvgRfbZPfcKCmHTxSw
r/xcU0EwnOCI5KGW2Xf1bplOxlu3NE/rpBt0DCXYoGMo8ZcdesGe5ReO/Cu6
rjg2z/zubO6x8sTHpmh8bf5+0swl58yfVd1M8eiz6gTNJfgd7CdkVU9EfiLk
sw5hhfJWtoXczNJ5yoE2b95H3kb3IaMjdQOvG7nJjjUxR2xlWOZqjie/UndJ
ZrfqW3+vhZGDFGC/LlImegzXHJIunQ8fsIhMS2OksBRRT5bIUiSphmTSLKL+
7uvohFCoKV6HM5WSsHoruWSMO3PeuGt23+OxJ5QCoscMoSSQnX7NcK7uM1/T
y/Nag6acUUpwqRV8abXQVNnJLymdKJZXmhguoKUzB4BPzuqoWmD2wB2c5e6f
48oBImaYrJJHoH1WEivmKbe860QePeqExo6odgv8JbcBvM4gM8u9XDpQMdRB
QM868dB/D7LejPv/Du+F/x1kOAsZ7It8wasX+iMW8orqRVw2fbQ1XxuqC7Sr
OEXE0ynVEwSadjLazWChjC3vT/O2o7WYJDgexRULN9/x52Stli0WcSoWIBK6
r9TBI+5LswLen8epYMjiI6iNzjrq7c0zQim5lIVuhg6ir4Z/gdFhKJeLmDo2
wluLJ49AYw37kZ4XI0fXfUhAx8OVDCw77vGMT3xNLxWMXdDzgqWSkkF7j9fE
WZ5Scf9Cp+x0vv4STx2/2a5TR+xCebtNuC10w4efdEiG8nDR0iQShByCzzKD
h5QO1JifPJE65nCxqRmP1XS4dL6pGXMjiehIQ0fdmHaeLkeaTtZFObmelDYY
9a2k4n5t6oZEHA47WOyScfcUajJubu8dBbm9thVkU81YY6aO5QW53RcX5HSf
0Tq768Q22V1GtMq6B64n97RwR4epzBpRM0BkYdOBdFwJx83jyvFw95XHnui+
4tj+7iu+PWSGi5Pdn/j2rPmVqsSwgUXHkHWnavqsPlHTm5WAcakVUJoPeNab
ITafJuwn4aDQXPfLHiRCc1nZ/LDn3QIVT6EIFZaQkgKQwC5dACxuxwxWBWeH
NFxaA+YLCnqDhsq5ADYoGQveDpFTbjEC2ODbZyATp2/x7CGX8aCTJB/eBquY
90PlkJRzEU5V0nRh/gzUHHjFXmvlbiuGO5537S0jenatylrrs8vWAbrnUMIK
j3lvhGKjvD2HaX9BgOnZol8pOH/cRaWrOaIce3BXm07gryvZwXL10A/nbj0o
gQnSUew+8CBl6dD1imWS/GT+L8xVPaJZtfGIyjfXVgp27GKlLr7+xbtZaLVC
fu4y3bEYIYN2TGrx75/goH7HUL/NZ18Z5auSLJFDmjRdmD/qHSRq/fDYqQxr
w8W/1rwidBlXwP4Mdz+zxY7Z+if/JPTOZqu7s2GJWjjyPY31bBtDc0YQs9OF
gdu+q8NaYh00vBVIwDuQTDtkhBJLnKSXOascFA13u04OWvZAhHRViFRHPG45
Haa3pxljqBSNTCkanmv8gIPu/qMbaKr7PgguQcVAweByYUvG++HNB6gqPjJE
IC77LoKy+ttrftVwfJXeG/6G9VXl8MnqsJnHDVSO9q5ylHhZJCqxopLhrUGw
K/+ZxqprmJUXqf6D5RqOW1N++fya8kvNtPEdUznwoATE2VI5KFMd7ifwzMK0
YY9AShuOOmqqx9elDUYeKW444ouSBsM/K6o/7EBRvSGmagzeW1RnMHS7CMd9
pW3OA9sKcu/fVJBzP/LUVxXk9ETVmN8mp9ukNtn3jW6d1cVUjbu6t8y447bm
abeZqkE3huVXs9sJpgzsx5NSD3P8spHTw4wTy8zjne7EUZ04Do5Ky0a3Fd/W
PPjMiZpepnz0EB8GDBmmUWlGv3bYhWAJjmfGyE1uN+KTWLofoYS4yH5EC435
JPRxRm4M7UhCgl+Axlh7qtiEWl8RAdstiVoCQmHlkVaWqZpMud1h35WQIDjV
eh19LCYWfAD1u+drPj4V4OMSW0Wc9JcvGvVigTCJtymOiZLmNsNz2FUBrTdv
1El5m4GyEPJEfDHsiahzR5SnyrEb8BmyxUhVM2TCsCyRghy3u0SgsA4XPXS4
cqw8YaCs1xNY0IpCiOiYkwxl5l1IIiTRtCrd1cgo70wkiN6JZNNXpvtxZRHB
sOGniR82uKenEMWy9kC1+SI0ct5TRAepouc1piUu+fPexika7xV4CS3OAuCx
FHMIz3v58vWeExN5/klPkuN5DZLX6EX1wR/LMpEziXAaCv2QEq5i8MQywq8U
cv+r+e//hpRCvdAFh+zKI0uONHv+oQ8JV5/xjfm30GJhVxoT+LKjYuThC+XD
vzAF47CZNA7HMG7EuHD4g4Zdb/T/FAaKREftR83gB2aNrqCnTP2Iu/rBlx9Y
n+M+PcF6XBSNf76ORwzVI4bSgXArLRxYdGjR0AXHr0zBuH4rikYMq/MYNFbM
UmU4ZS6tNmRrjuniF6sxUfz308F1rmSgXOBxlSevoiFjGUuqLl9QU36ZKReX
zSNFrlcuTKnQcjH1XPtmU84qMVXWaMxxUy6OlTYc/U1Jg1FfmSHjcEnDEZ8X
Nxh+oKj+0I9MudhbVHfwe0V1Br5RmI/QkT4vmXKxqSC39zpTLlaZQWNFQW6P
BaZczDLlYnTrnC7Drsu+r1urjDs7t8zofHPztDv+eG36beUtErehVMCnV28E
MVzYdUZuqFS06bni+KPdVn77lnmCY8r41pSKUz2e+Pa8sFI1XU25wJ/dCAAw
zmZQJSBklwzQvm7FweUkqOvWHGH0pzUHUEXXIkNUirU5NF4oY4WCgkIkrVem
DCdQYSkRRQ235wGsJipcUxqyT9db56MHH0n3hhq0hY8B5a+/8fAUvZ4Rfdxe
FbANH99uP7Yr5A5Sq01uhid89RSu/GGyreSzNodc/N0gEAPSZSECim/azltP
ch0hNM7WEk6pvNb9kcJPHd/kLcDFtYPWuJSCYQqDaWT5No0bWRWSDmYm/cKw
9awgjdviIGLVR/QRWoTXDwWtO6sBrQzMQGFeA9RjeNDFN0oCDmZgVGlKREy8
+NfIzQx7Krv5YgU/Atls0MDHs97ukDTZ83zhiltf64L9sc8V+ZqymPPFSkvt
J2fvdMEjuiGiwCx2cUmVaLLttIs1SSRPFq5O0M93eGiy4BKRlqTBdeNEmpVU
+bvwuDN9z/XPBLGsoPrAtYGHiF+O4tpQYepCBRx3TYGg4gAaaegXF9oNPeQ4
KMlNJxEV8tK77wfud/8wyDPl4UP8jcuE0lJdPuD6gLkCllc6U2BncRNRUDe+
EUeFQBLuDXYXzkOF7i7+wMca5b/cZr4zUx3MU4uGinIZLNptcgeBxaK85Shc
UxWufQbeJlevdgOFXyF4mGATE6Ggyq9YGIOgKrjKFAd4l8xHgagyBUKKg2Wg
aI4gvW2T8SfMLPFtWaOxR02B+NoUiCMlDUceMsXhoJklPi6uP/QDUxxMYRj0
dmGd/jtNcXipbf6DWwrz+j5fkPvAmoKc3ivNTLGkbW73mW1ye05pndtjaOvs
Ln1bZ957T6uMe29vmXn331qkd/7ttel3lbRM3I4991XNg9v01g+sU5DvF4W8
n3dbeXR2t5XHZFVxHKuKE6ZInO++4niV+RWqNh1GTZfHv61Rxzb2kEZxSCfW
E40Knvj9HN8Ul7oAjIiuMbDOZtXGCfEGPU74gd/rSP2Iq0r3+ZO2vIx2pcMe
Du5g0gkLjWkvh7CdN+F84pEmN+vn/TxeuR7MS9pqqME83ie0qXAO8oFn2phF
NAjuPdRNnI/LdBH6/2PsuuOkqpJu/7p7AlFyBsOas66ugTwznVDMq2LOrhEU
QcVMlCAoKDlITpJzBkHMAbOCgkgeYIY4efjqVN26777uYb/949HDDGGmX/e5
p06dOuUMMGN8zIkMCTqxt/7ToqIo3LQU+Un2aqDfG+ajQoNjeaYax0Wa2eJh
d2KYuA6zDVY72J+622Al29BNNFSpRPsU6vDEbTNHhIji9FddXeNFHVeT3Iwe
ZkKjD+YJjGS/xl0xm2q/lVdBLYZM3A09I4C22n3RJ884abmK0NXwKjqtkBCz
oNlNjwl+63dG8wKHRejEXN0TvBmvDWfx4692Rialp5EqTMm5Xs2ZhSmyh4rG
leHGyv5Obxhd7sxwThb+QJPuN9rDG3doQ0HYnhdOe+cd5zZ550YQ75mgOYv5
VqX0LyS0RAZEtKh4ypktN+4p7KfKp//vwXGiR0kfI98sDbmbgxRFgJJaAisM
r+eEKzo1gicS/fZRAZPot/dEQg8RLjL2oqxAVeEdGmhvv7QNJUOXrUGcHSgu
XvjTFBd6avCJIc3usPQrdGH6Q5uC+ADZVg98JymJ938r5cU9RpNCWaFHxk0b
T8R4cXrs+g30y3Xr6b0cQ887QWdGnHvfcm4ghldLimuXooy4agn9J+yWggp1
xSJxTV22wDYxzBS5OTRmBOi0OHNqEPN9gfPL4qdPKotp5FXTcSXRJmNRTxRH
G4+kWmJYYXaD949nNxhylI6Nw3Rs5OfUG3Qwq+6g3Ky6A3dn1em/k46Nv+jI
+KNtrd6/ta7R84fWNd78lq7PW53yxoZW1V9f3araa0tbVn9lfotq3ei46Dqh
ZZWuQ6mmeKdFlRdeuybz+ZeuqfTc49dU7vjQVZnP3HpVpY7xKzOebX51+D8X
XpH+n2bOFN8p7mlRveZLC/PffGHWkeVUOvxG7+99VC4coY8LO885XPLU1ENl
9HIpf2p6fnnHmYfdE0MOjLBFflNBhDw96hTCBzMwbnQmQP5rjh7VRQ1Vy/1N
ioFOIwPlgxmJtZpVf+/ISDMtRB7i+0oMuGa4Q44KaX7Xta1fTmTc5B/xqKCh
YfUoWHE1bRXOXXfiTzZfVfUlNPL6088K7F46PI77zktjlc18P7iHxhRNBMmo
wLQ51YaE4LSo5DstODrspJG3la3TVGmrVg9DvIXhEiP+3gY5bOw4hAJSAVtc
sQt8nd+Ko5J4L2PjUduN2jdf5FV68hLBbVZrZ3dMpgGv0hm9RHKyE+Oe6lTZ
VZ1shwI/iPaxgcATfygKmqePDwspLAzMV+PDAgUGDgtYDXiX2B4pLvDI+ZPm
xIClbZGsmJdjw5mS8XxTtp10sjWOQc9h69iYxbrwkU6HWLdbOg/94zTCbeWU
FBR9CLlHaFlI7pjdncgdOrM7HjeM9VXvVA/6z4vwyfQoOdU9u21y58Kz24Zs
kOKjHOKOKPd0G6qoCtVD0tFQF652Lm7mnMT2g/bRuxjdiusRMWIueGyvG7CP
CxB6DKICsVoUzoxXt5/IefkvaFH0a5i1qBxMbrxIjy9tC2KEAzUKnyJ/SL2h
tQbVGJFHf6SLjo9Hf0Cd8cgPkJ5QdyDOCmcILj0/7jJy1L8/PxG7aSNVGTdu
pGPjhk/ojR1DDwNHB/ZHoeSI4ehYLWoUVKjmy43JFjMcS/kECUKXCvzTqzku
mltOtYYX1X421RlnTyuPaYIVAkewQQqx7aeOL4k2+7Ak2nhUcaTxiMJIo2EF
OQ2HHos0HHoku8EHh3LqD8nLqT/4QHb9d/dl1Xt3JxUb29vW6f8nFRu/ta3V
6+c2NXt816Zm969a1+i+kQqOta1qvLWcio6FdHp8RKfHxNbVuo1qWa3rwObV
uvRuXuWFl1pU6fJC80rPP3xN5efuvbZK5+uvqdwl5+rM565qUanj+S3TOzds
WbkTq0415MiQOqPqiy9Ig+InerGgr32IjorCZ2ceLnp00qFSIhXlT0zNL392
5qHyTh/hyDhi0j4BBml2RuMFE6mGukK+VtOupNEeRl8jSMOI280ZAMTfV/VJ
AvVsH8OcG5X4rHnVGHIBTDbYxAn41cMDxijtQQySYQ/T01B7pkRWaFNcs+NV
k+LlI18V2nLD/Fs6/IG/PupLb8DcDIA4HY3qJp7R/BNGzhriBO+5Ogqj3yYe
JgzKeTLlR5/QIVeGp4pXTu1WbCqqaHd5SHCE4IYXWRBI8Dm4QdfDHrcbNLTv
UyAz+Z7y5FYY76xTncg5O7hVQf8yMKnPypMdHeydQ5mR4ROjejr20b46liEz
fjX5vkINQ1GBJoqc23Ya0YKyPlHTzUjeTJOYP5snIucx/uuZQecDfY69tTyM
Tx/RT+ycGDKrIQVGMMllm7JL3hOmwmasBTcL/zcOhjnSKjEKVxqfXWqjxtdm
8NkGNpBpl03hZxxurWj2XA95B3vI3C+1GNtFu04Haa2do+/H90bfeVph9PZc
ta5Tqo6vg9FpJooMrCnMl4Jjcj5vk8IjQnmfMB+jEHlsYr4d48AZgi44z2Xc
gt22tw09QM/drR8csGrVbUN15e3Ng/fTN8gHCh0iyECUTR+7pNltFg4i+fCN
ncQBcl6XGXG+uv11IgedcLineAPhZuOS8hIQI0/8gkrliZ/hoMW0xmM/ejs/
cGxIGiLKjRDODJwsNmn3MytYqWeK03YltUqmNELulHhADFNXSGLVNUus1zZ+
2fzy+IV0cJw/p9zWGzIAWJY4Z0ZZ4uzppYkzp5XG/zGlNH76xJLYqROKo03H
FtHBURBtNPJYtNGIo5GGIw5HGww/lNNg6MGchu/vy2kweA+VHTuy6w7cRgfH
Zio1fm5Tu8/3bWr1+bptzV6ftanVa13bmj1XtKnRYyEdHLPpAJncuvobo1tV
e3VIy6ov9aJDo3vzql07t6jS9Wl6vLdF9a63N6/6Qta1VV9o0aJa5wvbVH2h
cVbt5zLbBB6o6Z4X1dq/8NFheGcxdAHvbD59fOw/k/KLHppwqOS+MflSYkyj
EoPOCyQ4CwHxcjtRxZqEZ/40f5buD9QmnBNvm04GC1beGSHNjJon3lhsxKg1
x7yZjXUmKdHx376xOKnlXUEWPBtOjFmkkjlqVIXSpRb8lvzcCyZ57xPfAEca
j467k4NJ/e0qJoCpwI6ADP5EODDe3Khw9I1Pj3YyWKY3pJpIT0qttc1ru0jj
R2/GW839WqE4x4HNNpLTDyibaT83wPHWWNTX+JbkRPQkvFnnw5s0q4M7Z0FA
MsBDfCYY4SmgypNTTkiSBZSnKq7yxHdQ8yqlbih0V5CYhk8lW4XZA0GMARaU
RTfiDjbqg3QZftnO8xZcRWBXPYdK4mjAAmJuU5glwyWM5SGvjFDNKRD0witD
7viemaeszp+bbU8Fb/uXzgnCpLvkL89/ZfawyIkvcYrjjAtN48OMoyDAJ3wg
5LWQfDuz3Dvo5df72xch1xRFX2X5z9+7CJlpcF1VqLumCDFTdoXMPCR+qWmy
J/2RiZyjywIU3dY7vU2CksmOPHY9HEzOFLe534aJ1qbhVk5KL9zhTVvgEEB7
u8sfxjnrGwGvRqfBL97Mno6AP2i2Psny2eRhvYAk4VbxjgIbuP5xRcGF3gJa
4H9ywBTOgMt5X8d/OwPKEmdOpTNgcmnsjEklsWbji6NNRusZcDxCZ0C04Ygj
kQbDDkXoDIg0fD83G2cAFQ50/ZVVu9/mNjgDavXZ1LZW76/b1u71aZuaPde1
rtlzWeua3ekM6D6z9Slv4gwY2braq++0rPZir+ZVu7zSomrXLs2rdX2csP+B
ltW63NC82vPxFlWeu7xl5S7ntaraqXZ2tadqu/hfB11qeGE/p1cAutT7O848
fPSRifmF94/NL7lnTH7pAx9KzfCM1AwqMXFyGV4WjxNpwCoY87WQV09INxtI
AOCGlvSy6UAQ/gdC5gCAl6nHMn83e0AFXQt0wns6plrX9xQybwr8G3zmrD4W
cA0y/uUPmfy2Uq3JTaoyrQinjVGDib7WFOY8SOlzjzHaktvOkIXshW7k7Nhv
7ES1NincMG4nUzXdY6E1TnoWGAmbQRQ/IU9ZLfcizHtLH0gwwc/01RvjZs2u
Mzsz7Neqp3j5tVvdxzkRlPTjfr0ueRautqQOTM6iAEOt4teWVsvd+cAcnmOc
sEA5CDB5nq6HZ/JhIEy+snsesDg0x3QkFuo85HYzgkfnAb0KENWF0wHHgWlu
G21JVqnMMW0JHao/6XCFtrGhFM3ZLG5cns3Av3gKnwLQsNAMWW4SJpea/1Nq
B9lEKfEjziJ4Xk6L7Vzp7tHg7hHxukdBeyxI5RC2J7m52yHzAhC3rNWbHLkp
ZH0FxNLEixKscHstgQN9+Znp3mnw6ETe+CT9CJ66wzTFAZ2mwEFgxu6QZtte
qoJAUnLULv9B8IaJsK3gIJBc9JBTEfDWjcett+nhH/yZ6FVTswa9QBB/1iD2
Nf23SuCfFeRFcataJKSUU2CmcwqYSuD0iXwKxBqPKow25lPgWLTh8CORhsMO
oxKINHh/f3Z9PgV2USXwV1ad/lva1n77FzoJcAp81bZWr41tavZa06Zmj+Wt
a3Sf17r6m9PpFJhAJ8CwVtVfGUinQI8WVbu8TCfAc82rdHmyRdXOd7as/uJN
Lat1bX1NVT4FUAXUaFOjU6COTzZCp+G152cdQl8a3tZ9/5lyOP+hCfkF943N
L75ndF7pfWPzyql+LH9mBvrTspOSbjJOApSNKBWxDMw5CaRKcFsR3RZU1Iqo
yccCvu62I/qsOspHw8sV2GPd5vU7vpaEBBN2Xy6tDGOAsn3Oio4ChfahpjVg
u9Fu+FSaXfShAVST7UhEZT4JZPmndwK4XYp3RfWQk0CGc70s1KKQ6Tr4jgFz
pWnPIWlA2us51LAnAqJW9TTA/4x3e3ez/4cj51d4UaWKvJwhJODgRGd4J0Cy
jTXpc2u9FrJzMgRMiJ2MPjjHgpESRZfAuXAy7Qj/+PvGkTv6q0J/OrnslHLl
Iu3p6+iCDE3jYKimypFVcOYmHwx/S61gwht50bvqSPgakJrR+k9bNIT8xwJW
APt1JPpsscpFKAhk8DvNpkfCXYsL/4uERVbiHZEY41i41Ru6nK9rU9DC/kEX
z4aSjAUn2W4brOBosJqfO7ad5I1d7ffGyq0xrYiFR8LuUlr80glQQDSQ/iiU
JT0R7h+bl+5bGYtkKDslMdhXFYSStvdV8meaJ89gu3nmoaQIwcgTFSTPpuaZ
V0rdw+SeBVISBDgYig5xpyRIzZy9xs2cnW8OAysNBWSJ+Ll0EDiy0Bk4DLQk
GKOHAcoCKQnkMMjLaUiHQYPB+7LqU0lQd9DfbetQSVCn7690INBh0AclwQY6
CHAYLG11yltz29ToPq1V9dfHtq72+uCWVV/uT/T/TSoHXmxRreuz9Ihy4NaW
VbugHMBhgHLgjJxTngu3CbxZV84CaT7Xe7LzrCMYjdtEp/0OAvaD94/LP3bv
mLyiu0fnl941Kq+MAF8lIXoBiPzTkUqBR9FzGievABgbUB44JUPIdBlAC7sY
ODdL7o3/tQa/zni0bvUxG0fbbaE/QYqPgSXyunzb72HSBgMm7CRc7YiRIfy2
qHdsXG0mEyt0p3X3xnsbfOlSzh6OqjYqatL3/ib1pO+LUndy+JsMJpnP7p6w
Ga5hu6F7YvJks87u/gxZyF1uofPOCgUQl9241tdlEY/1CMEWZswoXlRr2Aal
mIvHcrlQCNkzwOSE91ubnOmg3F8BnhhkyPMfnWJVID7Y6e8M/sRLV9J8CnbW
mh6AK5EFHYlsug1NsnxfJg5nubC+xcD6VrQHFiMiC+iaqfoPY7t2lDWTg/6S
JwBJ+kmmb5SBx1DMjB1EHPqLQXB6+i9W7CzTDe/0O/wa5t/j/1ix00RALv+7
jF4zbu6KbsGabg7yceYeOiRf3WXWRSyg7uF5KFkBWpeqAGVaBcgxsHJpjFKb
+FaFHL9TBRwf5O6xScTxP3Q5Pr3F3Nk3d/4NyJ5K8wHtu+jGuemwluO/uI13
6yXHalSA64+nJIoHJBq2SWo0061uNJMoPULxK4oTX+EfXrD7jjQTNoXny76j
c8oSZ1WE6kLx6TpuBH8H1YccyGFUf49o/kDTISZUr/P2j4TsX7Wt3fszovmr
WtfouaT1Kd1nE72f2rr6G6NaV3sNqN6nRbUurzev2qVL8ypdQe8h9APVI82r
dP7XNdWfu6RFlefrZ1fpCFQP1HNhvW6HznOOojO88bHJh3ZQybbv3jH5R+8e
nVdIkF4MWH9kQl75k9odNi8J5fZY6Asj2hN0yDOsz3Q4ftCIiM+YLzyvLYI0
0wtQDQgQ3NMZlvblcNTgdnBPMbMn5zMxr+ddF4vsmjBvwEGcqkHPc5TOCK7t
YR17G/SxyXOqYhWgCU6g7KTvZXO4q+QM9rUHdFkcjyh5OO7R+U1Fls0nBauG
zGqHKc7qVPz1ERx4K9NoXPesFuEGdQ7qH9RMOOw0pscJ3BadN8Dg7Pd0hlXb
8di7bJqSJXbJMN5jmWw0gKXdafTy4dyFLQCA9Kp8b/BcfuCkrio/V/Xel9Ch
5Dxokih4PswbAjcxrCK/OzButRjAJtg3UJWuEMs36UyeVbpRYj4PYRhm9kCU
G2+2mZAEdQB3bK0gJBm8kubOe0Do/2PDKsC8hoD7rnIl6vyHK0JyEz5ukdz4
AYLu4vAhjpIf8iv5J5FsvFavhhx6CG6ouCvThF2ZBm9B4eRp3OkFL4dLCG9f
TKK5Sg0Rc8n4DpvAC8HuRN+9af5QJCev1fRsvVXaWyoAbqyte/JXf7Sem4nU
4WsD3JVTgfu2CoAbE2dIaz0lWaX376qzeXoL3Dw9peSg4+fPCpwj+gwoOWsz
UxW4S6KNRwO8AdwF0cajjoGSo1NLwJ1P1wGi47nZ9d/bTcC9I6tOvz/b1u23
2QA3KPlnbWr1/rhNzV5LWtfsMbdVjbfGt6r+Gjq0g1pW7YoO7WumQwt1HsAN
XQYd2itbV+58VqvqXQDcgQYuaJ+CaKOBxKU/eXD8oV/vGZO/mzj4YQLr4x1G
HgRol9JdLafzWXWZ8mcIf8HD7+fUk3s59YR7/fRKwMnuCjfqC1AJ37RyA04f
N8N6eUAiVMM3uG00/NrMzLsrc09q5GKc4LVF/rA+9vwYlt9/TUXN3DALQI7+
zIFKmQa9XSUGyJ3S1N2QvHEik/k3hnXVsT/K4aATNpn1l2muN1B944HklFO7
psamnNaD29F2fuUQEcn2PTNX1m+tx8fetLZceTp1qQJWlakG0ocDOo/zVgDH
ti/5a6LDOM+ONGwRprO2gjCdtP/iAK3O3wlumEai4jsfYdDdZsBush0LneH1
bZhwpBePpoesLC9p5pKU6sd5S9XTLFU3YG/MPfQHCPEV5XHxvMDvJS5px7+3
0Om+2vjDXYzs3qoOHnGmF5CufWK6vsOP7PP/8BBeRkZk08YYD92t0Pa+EV+C
Btt13O9db7VF0kCy1ePTbCdFQb3bfGwFcjZw8xsVhAqM65kZOoJMhHyyxhoR
oIe5ERtyG7EB3vpD/4UubuDIu4FCyhnZIbvr7JjbhwUtf91VW/4MVcjKUyK4
Aez3fqczxI7aIjncJrQoyYATz1kdNJp71qrAvwTXkzH9Wiflzp83Yfj4HNXd
BdNByKG3nzG5JNb0wxIm45BZmowmTB99nGUWIeT5xn2TCzKeVXcQYXr/vyCz
CCHv+x1h+5eE7R8Trq9sU6vnnNY1uk9vfcobw1pVfQUdVzhu0HHt1Fww/e5W
1bui4wpMh9Z+RotTWGtv6EJ6M0jtPe8fm7+QIPyHDqPy/qbHfLqPx+gq6jAy
r/TesQfLHp+UX053m439j2Lf4IeywUMHzNGEf3Javk9iec5AOl4h4Ox4rLgz
m247s0Bmq63oKFkda/ZU4u42ZwHaYKRoyL7kNXTZoaOtvaQGrTtyDBIPItlX
Z1VD9qjwlgiFT3yw0VNaxn1TFOQVl2FfBB5daVael0IZ700cDtjj4uU4yDSX
M9vlufus2P4zaCs0ViJyRP+0KNe4IQkbME+Aed/ip9DEcgTGvWRk7beWyl5J
3nhxzM5sadJoX//eAyPGBrQf6/Zctag3ArsB94CYNGv52rDd/ejOdwWf16MY
R+L7n3ozXcrbCduCdvdp6IRdoS26i8C6dj5nenbMgKbFaoJsCqybGHMV2NWM
4wgxCu6sxegg2O929FiDJ4zRk/8W4TZbPTM46qghRx0hIB2XhFeI1KMBFst3
eMHpiw2+z05i7ryJ/FsxpSquf+ANYcDav/H/cWtq2ISG2qWxnY1HMHBr5H0W
4HZXuEKA72gAXvn6o5PgvPRWLphUU3o2PJQ/gJhsXUl9MzdY9yt7J4jf4zZZ
K1W8mkcbrNjm1pHjsZ/9HUun3ZC65GRT22T9LiWijui8zTf9tzMjDDLPTdYN
OhcsyRFXeWFDuFqtdMKxjQhzxaITiUvnu8Dv6usC+iDzZ5lG6+mThcg3HVsc
bQrQH1NAwH/ckHkC/eGHIg2GEeh/sD+nwZA92fUGwacPyyXI/C8E/j+0rd2X
QL/vxja1+qwg4F/cumbPaW1OeWtc6+qvsc2Gri6mwfpQi2pd0GBt36LaC9DU
ob40y6n5ImyWgUaC+mLPb/bAnSP3z75z+IHP7xyZ9zfdzwP0eIRuKRC/mC47
yvXk1EPlD004dOK+pG2yD43Pc4i6WLOA+Cy8T8R6c3nZPDlNXkqdHE9myAg0
glRa1APq64sCb+BeH7stSBJXCEBkGCW1IfuSTh0nwf471pdTiWsAmDk9E6dn
A3zHB/xpVpkBL0dHVadrjnsTY6LGh2xaqDTCZPpW/TW2V+gLgBOAq88AR3DP
qoUuira87nMvBc5JgLPzt7rrRhfdY40jPjZZoQHB/rBkhXq4H5KUffqR0z1c
r+uLUq7IXoOnHR5ZxXS5NaLdaFvBrob7qtBYR/x9BSOtJ48iGJQPivd9ho1a
MuqMgfiMiiBe9xUZqK/qg3gX5gH/jkTDOM8GmSUso6s5BsuSJOeUl7XyuDBd
GBzmjeD4hT+SdXsM9Xt03d5q3rSUvB98gYV6D+4B8yrSMNyjFvxMJ7pDdvjX
b7k0wXzvrDOll0RdO/fJ7MAKeHlfIU+bybRmSjVSPjUtn3VUjG/dPzbP5JAS
0IeSMP52Ca8OgsbTd2eT5frsDdhQOUkJUo39rV30PvIt7Hx5mxnC+v3kOaQK
8boJWtT1QLCC6GrxUaZ5y5+Nqh6LrAlIitxVSSlyqzw274C6P0FuXhKwGzYP
H6X46Etip04kYP+wONpsXFGs6dhCw+aPxhqPPkLAfojYfF5Ow6EAdUjr3DAl
UP8jq+47v2XV7f9D27r9vyVw35hVu8+6trX6LGpbs+es1jV6jG19yptDW1Z/
lUD95ddbVn8ZkjpAHZL6dddWfuGaa6u9IN75StwoDTR2Qb167K6RB0YSqG8g
QN9CgL6X7uRhupGFd45QUM8rA6A/PCG/HDPcTpbgwUA1ZvTA9Ken+TGd2D8P
7uHrD7DqLphOryAj4GRaAceNqMLnnp/NAjwXkoFmluir3MLdQSPHJDdVWcZZ
pn7848k+e2MyFC1adXjAeZ+VKaO/GQbNJchLpq5SUyJ4SpJ+FjdJQeO/VHqY
sKnC9TOS53k6v62B5OOSkHyEkwZj05/NGJQKrRq408uEeaKqAZJj8W9yAnR3
Z9OvrN+SPoXMOfX1r59ZayIsk3w1IuyuhYKVDPV42kUhO8K3Ak/tazIaEZBE
AcmIADkdKdNTQcb6dHelm6vPaA/VWcsTCGpu3i/uegH2NopY7kA9fYEd8qLE
i6piqbwYKaszEAPD1SbDAoxJf2DOLgIMgzXj+j7G9XT22YR5C/eGXLuVmzGe
vouPPUYvYE8/5epdZRVBvMbL4icav8lOcuuq0BFfWJBPMU/qemul9ANt+kWm
6TjRHTP1bt/VmhPOVD5sgT7oAX2GBfpnZzpSzaR87p2G7MqbPF17ExBOX4nx
XrOntY0KQt9+YC6nwkV6m/xpeuFEepoAh55O+o96ZV7TNWrbkPQTCJv4aUL8
TA/xn3Jk+UdNjOj9IPN3fwO3ZHKKqBrp3bbqjTZBNAj05zC4wJUVAz9aqirL
c1iDpv0w+JfHL3KGqc6bJWz+7BlsmYydNgHDU3SNL46e+mFhrNm44/EmY48x
6DcedTjacMTBaMPhBwj89+bUH7wrp957f2fXfXdrVr2Bv2fVHfQzAf832XX7
f5FVp9/atnX6LiU2P7t1rV6TCfQ/aF39jXdbVX/9NQL/F1qd8sp9raq/iIEp
sHj0UeGMqZ1d7eVAUx/gX9Bh5IEP7xxxYAnduN8I8PfQdajDiLyCDqLdwDFf
RmBfRmBffs+YvHIEjhPWy67VeoT9B7mbjsk7baOi5pP+TL4stSCyj1cNaEJH
r9XKB4Or2j9p/41DciaE3DNBZjqc3muflceMEc8H/KL4SFxML1lF6w36V0lp
vXYzU1zQjRT2Tas2ELQxQSGjvJumK7+pKquw86kXPvYhe2C+U66qO4ytIbI+
azbcXvtWV7x78D7UyVp7LwnidS1MP6OFv21x1iZvBiS0OY2hHlj7llkPI6t2
TfSmSW7us8pTrLjQT4X2sCfES0d2rXcy6FYaLH4P4j80+ZK4GW8a5yueSshM
75udACPNbBD92IGgnSazGG9OwHQrXzmU3kyzCqP/JYnRG7vLHAX3kAvuoNO7
NQrUNc3I19aw3UXRXMyS6xmzLZTnAtjpI07+CcpH63OFxNNXlN0b1cYM7nKa
3DK2y+gRkszhVapxbU8jvih0DJAZngHSk+FFrdFw1KCYxKRXojPOpqGaIaBu
8TzdkPbDjOV4tzGWj5MAnjDjeWV3hZnl7LJDQPYHgLRrcFvQHwct0kya9b3z
pmQI77L9kgC8KgG43SPgD4XW4DZFckgy938btKGeaKze40K5wrgzDiuZnkHg
ONF2G9sWcaLbNAhaPY9XOdE7l2v8zoLy+CWE4hfPFwoPUV50mVKI8SzEYwTq
9InFhOhFdBXGTh13LN503NFYkzGHo41G5UcajdgfaTg8N6fB+7tz6g/ZkV1/
yLbs+oO3ZNd792ei8t9n1Xvni+y6Aza0rdtveVbdfgva1O49sQ3R97Y1egxs
XeOtXoTonVvVeuvJ1jXfvLXlKa/HWlZ/EVoMmqpV29R9MtDMh+Kn3jU67827
RuTNo5u2iW7ednrMJ/RWBb6EaHoZ3eMyusXlHei6Uw5tSXJtwPccHscnp4gA
/+yMw/zagEh/ryPbQJZBofdMBSiOR/ADID/o/7MzbAnga7+qFAOUSOLsgbBR
6wHI3Zd5co3Dwxn6PROltGBBLvXPV7B/IM1QIccwKdgORHcs9BmaNm0iM5GK
IjJMfZ8Mk2QL4Sgxtb9opPJwxfONBa5dIgXTPc+5WNz6pOK6avFBDtDM8BkR
3chM2VbvtCH6eU7IAGs0gRr2DMHVa4X3f3QzXB2nrZQKksqNr/c0OxYZbyAs
pLGmNMriOQebBjzZPWhzTIMnQ+6wQ9DNdJK4ZFREhx8mWWu3RB3wfEK1mYB+
boPzObbWZJiwNoPjQstzVX/xoTU9r6rJg40vM+sGDGAH5EdItz5VDCeM8MKO
9GnRuz3EO8EDuq3Cl1VubY5ii8Ht62V8ZF3meEUsUnJDnqOMKZC826yzMcT6
urTIwMeRxVnN7oVxcptP0BufUV3ZuRvw367/PnqebCBniHPVTChnQHA97G02
Bh3v8ifncQYRqgaJ3Q3jtAE5vxtMN1L7A2Dl93+LsdX7TKbavU62mkK7C+s3
bQxwrFoQ0Tj0LJrMZgH3yBpWaGTC6RIB9avRXQU9N7rMlbyNsjx++aJyC+wX
zStLXDCnLEGgHj+bAP3MqSXxs6aWxM6cUhz7x+Ti6BkTC2OnTyiInTb+aKzZ
h0eiTcbkEz0/EG00ch9R8z2Rhh/siDQcup0etxDA/5Zdb/D3BO5fZ9cb9El2
/XdXEz2fR/R8ettavUe1qdXrg7Y1e/VsU7PX621r9H6ide3e97ep3TPWttbr
zdvW7K4ZBoFTBdAly6BKlw4jDoKWf0f3axuB9X66d0cJyFmHuWN4XukdI/LK
7hxOQI5Fo4DzQGO5t+b0vnfMQZ5dgLj+xBS1POb7BHggu7ZUbdvVoDl+DySH
CP+4cdtYm+SspFGoFznOwNb7QfuCDfE8VJUTXeeIZtM7qfMKQEZsG9twxE7D
bBLnhNVtHBk+OR8B2o2Jagvo0Idrvck0FD1JjhFMr2ZtfpyB/J2H4aPcHGST
dGIK7YBTaad5QP6xXe4R0LVRbztgrivSWVVfeJTbEl2tDzGNAVhD23uZ8GO2
tIccIcaguXHLNGC1Rc03Kt+7iot2cIHkr5od7GxGdfYw8Mquz+SJcU2P1j8U
9vmHCNXDJkrMrlUxyosNt0wSXxTbQ0zN0xxHi51TolOJsDqzIqxmCcXANH0N
mok6XZRhB1m2T7O0WrugErMN1aSKdEI+l2vop6YbameL3ME2jWKqZDer6cIX
HcXG61UDzPmlH8KHgs/plglBvHzGDJM/AEn8vjF5HJZM343aHvi9ONqfmay4
DKbdbsC+gERfhk/E++47Ee9noy+DgGqM/fTZ4yVgQjxRpfylrRKb3GUrsJyx
+gX88vwWKCcdDed+8lePa8Pv8hDyL7+X/MvqJv/yW8FqxWeTXYYWaOyGT+ja
KI/tP5H8Mk7BJKROt/Tb+tPZ+7IsiPyyIHTzwLkQUcoJocvj/yR0vozRmZB5
LiHzzNL4OXSdPb0kfs6Mktg504tj50wrIpQuIJQ+Hv/H5CNEvw/HTvvwYLTJ
6P2RxiN2xxqN2hVtNPwvot5/Ejr/Fmk09PucBh98RR9/RhR8FVHvRVl135nW
ts6ACVl1BgzJqtt/ICH1q1m1+3XOrtP3vra1+93atl6/q6L1+5+X03BQ2j8D
I05zQbna7R1G5g8jcEXH87c7Rx7IvdMRx+mGld76/oGy24ceLCOALr9jxEGG
ZWmBZNCNPnji8Ul5nnkVC3kEjAOyiac6A7KAbb6lzyrBqYKOv/fw+DwG9afF
CxO0bVGNPZPIsiPeQBIzb3ytttk6bqaHDE9m48xiYLDXClUN/XWTZ/P2ai/T
xt8OrcyhzOzvNlvNT8LDBY5r+BaUKPJoyqSvm1XRpPgnxpvmT5AcqEEiVe0Y
yQCfYuJFDSfN9ushhhpCmXXP5WbcM8PK433M9th+XhvBtabXtISa4djuLNeI
iCO2FY37groFsIz/Twl2X454eIeD4oBLI2TLMF/SA/3Q6Ep2O65VxZVq82xt
MjJL/IuF5Uo2VyC5BarQDDZcC5DMikfYfqTahwFlaB97PKeKT/YQUA7bNc54
JFC2zkOTJq24LCsVCtJ4OqGSHVrDZdQ2Jzj6GLiG5L3gV1NCvjwfxyl9ROe6
loWa+qqkWV2HGgOG0T4QnAd5C+8DnGfP4cRjdQkKALsSEWchVQBnGBBvIMKM
PElEgl0vj/Q36TP0EyNjMgGgfpuXoNiYSQDzKyePmYy8aMKK06S7+dwWQWmo
Io//BPXksR/RpdR8MMRNQud++Ht0NR/aBNeKUmqZDb3t80DIo9H0uyA0EjhZ
uNNptvNeTxcYNTFp41XEVt6VgfNc22I5QXc5oXZ5/CqC6isWlSUuI5i+cE4p
kWi6ZtP1UUni/FnF8XNnFiXOmV4YP2v6sfiZ047Gzph8iGA6L9psXG6s8ai9
RKB3RBqNBERviTYa8QuR6U05jYZ9SSR6A0H0ciLQ87PqDphC8Dymbd1+gOg+
bWr3e6NNnb5PZ9Xu/1DbWv2yI/XfAUTXTTQYHDjDh89X3Tli/xBC27WEuz/T
/dpF1yH6/fF/Dz1Q1H5gbskN7+4vu3XIfmB0+e3DDwKjA2I2TWf5A1GjSS4V
7mXTuwHnMxQRwLdjQWRejL+mWvf9Y/MsX+6YZGV03IqC7jZnTL8sPc7K/MJ1
9Q+OMjazMymRY5JM1t1JLE6CXTek8vUl3sItMcHL8i6cBP1VEMlwaPPwL8Q0
PepLO+8/1HQhZTVIoZcU65kLJIPL8icDxYajV7WG7t6pcKwzOu5MvUbIKj1W
E+LbFWxrdTQPs0ZdxosAy28s0SHSbguOmsxyhuY5cnWZYyzsC45I6gv93/Tz
9jJpbrjYrDOUNwMO+8ID6DG2kmBlKGDjD370xR9Yd7lnRbR2xGSLuTdKlO5D
abj/wIEJgRsAmln2oOfbaTuyHi1a9sc+jSPMugb3NzkqwOB0yCXPxmwTshKH
Cfr/FItW3jcrfpVA81SZswtHVS1tL75mDkE+DBdJoUe1CMLWjgQa8W/xmsaF
cxIvZAVsvEXwjoPmaDKBfR8jD/iRCUnr1MdJVQvAvn242Uj1bm7wxI3v7acf
/qbBInZgKuhGfPqGQbn0MtB4YMTLA7YjvXZ70S1v7eSAR9jL3zCzQjwvtF1S
g9WRovmOPmd5SMaGxI0SkFSXGorbQq+tkv1lBfOen6f4y2VsKGtV4AJ3Ea6H
0y2WG5xeQpR6YVniUtBpF6dnlSTO+6g4fh5wekYB4fTxxD+mAKcPx06fcDDW
ZOyBKOP0qJ2RxiO3EU5vJpz+mSj0d3R9Hmnw/rpIvfdW5NQbNIcwehJR6dFt
6/R/r23tvj2zavd9mR6fyBIaHc+u2+/i7Hr9G0Xq9A38w8XpU6BW9+sgPcev
TM8R7sFjNw3OLbpuwN7i697ZV3bze7ll//7gQPm/hx4ULi3CVUBtozin7zHN
xQ7Sj8yjdwqOae1gPPBhHk8KEV6LVFbVNDz8ovbDE4SVu4zbB9dhkyNqdW+P
cIuoXcmaUno7fclufjJtZovq2dkitaH3W+PfeoX3EGaFeKjGgL7OLLnE3RXF
B+o6k5p2F9IHxieiDUUWte0u2OO6Zc7MlBZYoiXb/sQglhKj6ExkV/LFKDpD
82ag6ogzaekpHKpyiA3EKhyZbpOR/+EeZhLfYLYO4dt/e65X3XQx7hZl1a+a
JBbdSAyPg/x/IvKza9wx5mj54cVzhU5M+tH6TgIexQ6EDHSXmI3whNshS60F
rdM4PhFRiTywsxtqxolAQxaliUvnnmCZ2lxJlFp1Dugbq3fZcBWPUrPThf4L
fGuu92/Y51CmRnxZEKjL2W9i/Szgi41DnxV4U8AbPazuY7JM8Vp7y3nsvtxr
L7y5VGMX0pk2oPmC1+VL8+SQpvdOUN5jGNGseuLZ6UJ9np7mWcCfniYNR7yR
HhcrOIN1B532qez3gQ+reAQ/ga1RPg/47v8vWwUgnDTGyX6R5FyVTbLq4y5v
0ud2z/b9hYAxbN83bbSZKmwUqQiMl3uk+VoC438Z0nzJvCQwdknzDCLN044z
aT598uH4aRPyY03H7o82HrOPAHknATKB8UiA8U9Emr/NafgBNI112fXeW5Jd
d+AsIs2TCYhHZtVhTeOttnX6PU+/B2G+sW3t/q0jdQaqphE4U8C4lrQOnyWS
O9m0DaE05/572MEj7QflFtBpWBzru7eUDsoyCBv/NqTZAHHQ6Bp6y+4Y4bWN
zaNMc9GTeN9Y0T6eIpQFwoIgP2i0jHt0/0s6G8LRXXzaNYR/ZJvXeB09aoKc
9bXV0VhFHDBOswqHszowELTWEMnoqmVXzqpW4cIpG0SsJuKPbOxlmmHm72iG
lNtHDBugGWBif13/xkC7lkhKfWcftMZ5CXnmPxBy1iadxFBNPxrG3StVNOhu
t+yZ3UkBN7HQVTX431x9nKluKluWYHR+IuYptEPQOGLSbtQCksn/X7cFwvNU
k2bIFwjWsSmd2TG2eLHMpIu04cXGKHsO+6C32INeWXVRyQbo4ppDNFnS1MVa
B2kCFo4mJ5MxFHPBqfGHU7XlhjY3RXLzizg7H/QYEIyP+ZEu6M6S52UaxSZC
QcdyR5mmAoQsPfrNo9XSBq5Llq+O8fJM9Dq4b77kqOTN2YTbSr6E2446Xmk6
P3jj3a95hv8Dzt4gU5U8a0OvFM+S58Csm3XSdWsFEVZBZryVDMY6CvM93yZz
3oBA7RX+jBOF2etOknHij67ySO/lRHovMaT3wrlKekuF9NIFceLs6cfj/5h6
NH7G5COxZuPzQHpjTYCzo3cR1v5FOPtHpOHwnyONhn2TA+24wZC1OfXfW0w4
+1Hbuv2hHQ8ljO1LGPt6dp1+HbNrDYB2fFN2vb7NI/X6ndamQZ/K7RuNOMuF
2ToP3T06Dw29TwgR/7xj5MHdVJrktxuQezzed29h7O29pTcMzC27ZfD+sts+
sNoE3yLgKW4TahfcKnxMn5e7mQkrHo9OPm3mrB5WaXkM9xZEWa5lW31qzHBl
CegQrC6bFiHsfDbsys+Hwz6tVLCRmx/+hl9VI3SKiMGuOuasXt/J2E7Vuyc9
v3Tr40jq+1Xk1Qiat4t6+ZSIvq1DiauNBiD6gI6TD3DeXQOgSDvBsUkgG+K2
4n8bNZd9mRr6Z4Rjg7GZFmMh7vZc4WGqwUURIdJty66rwipDK0qPWYiQUev2
i4bgKsICWd8wcnWPFRKxolZw1dZtqzPDb1/Z5Jt7DziD7y7IFhvTQ2Vfysls
mXdhoXiFDDCKdS63vGkFEBv2KxDiiUuzqSV4hOw8k0cv6X8LcyZ9JkdQIocM
AcW4ZBGVLPCl0yPjfwBL3DO8SOm16c0ongQs9e3D4a8f/u9gaUhpClj64kUM
J31Z40U2e2CpMeBP/Ur3yBcBrqFQ8EfcmRz251qXoRBAHTDBIvEctiwHhJme
5yVCtTKJUM2X+lkpvBAXzjWIOUckApEJihLnflTIEsGZ047FT59EaDnhELFS
Qsux+2KMlqO3EzP9I9p4xC/RRsM35TQiVtrg/dXZdd9dkFX3nRmElGOz6vaH
jAu0RKcNMi7Q8rqcOv0vz6oziOWBc1yorAoZt0+HEQfXdRiV9xMxz79vGLQ/
j9jo0djbe4qivfcUJ/rtK73pvf1l//7gYNntww4GWcfN4HsFlMTmJ9wf3CeD
luZ+pjHFhMntYWNtuHc0um+gn7VNGzaPLc2PGqk3WROAzVltEVCKoR2ohQI4
WmFSbNICokz+dD3+tJsjpTqA1v7dnEwptyGnCZbJueFGB1BvhI4oSvlGpI6e
IkzuKXU0sx5K/8RkkGGz8px87QFrnUmP1Mw8FxsJnYJeZl5mhVY1rTffgLAL
23I62xNYA1SKOZdBD+fKkUB12zrja5Y8kV1cXJyXhItLuIoNsvG5mmXrbtvR
HcoZ941n6QP1nPSjnbC0wFgtWbNlUJz1mzc8CGV1jfTBWH8lBAycahGR3Wki
zuILSfRT1Nl0Oz2oKu3CbQyNjIxmWyzv7eB9TpNYqAAoSlpMYeB/RcVUCln5
/6WQ947Ns9kckpiXmWQPNqj4nlBIRcWTjWuzN/iVv4Q/otvlg0S3VFeTAs9q
K438hlFREpeu9KRTN20JFNJtb+ksh6WRGpPnUMirl4puevF8AcULFRQNMHK5
PqMwcfaMgviZU48ZCkmgOO4gXQSKY3cTlfybgPHPaKORv8UajfieaKSAYv3B
84lCTqUS3e1tqWZ6d5s6fdHbuiin/kDubZ3rgmJ9gCIcvgvomf+u/cDcre36
7TtAgHg42mfv8QiBIvHIkhsH7S+7xd/f4ntzwyARuHFvcJ88HimaasigIxQZ
VNeGPHrehBBPe5zC0PfEFP94H14kj5rdfOpswT+kGU1GMw0kuxTC/DdtA8x8
TVwKVexSNq3O3zYZHa8u9AcveYPfaUwmudA002xeCEVVlzraqT/QxleNwIqk
Ik2csFsj03RKwl79FCiDZouVwycDQUsmJZeuig8qexqo7G7egEn9Lp9Syurl
YlVUj3DD6ojhiiCBWoYDALsoToZcnAwo29EpeIuX81J4JP1NQkz6FTY1s7nO
8OuwDzA5tkQim9WFUNFaarv/RxwJVRguOa9ui4HK7Tajzg7RCTKeCJz23+v0
DJ8HDPMcuobATyFlL3e6WZhXIosxvitmzP//+ONqr9jGLkA/f6wYKb3lATwc
d1KkvM3skZFsuv0nruvP7abwSbPpkuOLOm4+eaioL5fuwQrii0AdKwoVvdHQ
x8Q6M/ZsE4zO9VfbgMlrl0mlfcUicWsJfyxNXDTX44+ASfBH02KKnzHlSOzU
CYfjzQCTH+YSf9wTbTxmB11bo41G/x5tPHJTtNGIzyMNhq6LNBiyMLvuoOlZ
dQeMya47QFtLXYkzPkrQidZS60gDbi2hyj5PUFJWwNRFJsW8297fv6Fd/31/
UlW9N/r23rxI773Hc3rvKYr03F1y/YBcRkiusocJQvJ9MO0/LHhT7giUlOgp
K3eGuN7uIBfPPuI2j8TI4z3G3+VW2I9P9qpqOEmEaVa3Hack1ugfiPtI1E42
3jo+r5BXh/t9An2NlM8+gfk+hAwZgMT7nteTeZGkAV3M7o5Ea01tAqcDsuM7
jeVPbaz0WHbMa+Jg9shL4JcRhH7+CWIVOyuMeavkJ5UrK3QGBDSVtYsJ6cA3
xd8axzTT98BwOEeaQ/SIH/uIQ3IyLBhqs98BRPxLhLEZjMk6Iw3Pbiooptno
Z7BHM9Yd0Lm/8W5GhY9DpjGHRJa+xruhGEbcA/THtd4MGoDvDGemYUNuKmtc
x2BozVd7Obn5xCq6Fv0l9XS6WAsEDH8W1mjyAJFBhR1yII5o7J8cDo8bODxm
tccX5x72gjo18seHg1MFB0EGOow0XYCQE56fmuQGwohp4JQkt+RwZZBGtNpl
eMyDQphaOfwhCQlVdrz7Gxv78BW6One6M8BfyPDYTSbUp916yX244ESMKWPS
Hi1ttSsOwrmKNjuw8OJ5pXwJFlIdPbuYsLCQ6ugCsURNPxo/bcKh+Gnj82LN
PtxPWLiH6ukd0SZjt8YajyEcHP0D1dJfEWUkHHx/cXaDdz/Krvfu+Ox6g97N
qjuwe9s6/U/a1TnfB4T/vmNE/phEv/2r4m/v/Yno4d8EggfoGT6S03NPYU6v
PcUEeFxDE9BxZ+e2oQfKrx+YKx6Ivnv5EVYJp5B2gTDsVte4q1JgN+bWD6yu
j5l2D14UCHuwBXdSCBCgkAMjph+qqAHP71i1zGKL55NTbRhQwMPDkGnDuyV1
j2VevI/jmTIzZrUZB7rbbvRRb84sKR+ixwp/PsRLxliogQbIxtH6Wo1JXqZC
Km1MgcCUMds1Jh+T3sHJwTm+fVQh65WRn0usZRqZoQWzeRY1Gr2zN64n89US
uyuw6PHEgCnjX2KTpYOJaAUv00Fi0CXeUbnOJElnpKRdaCK+Ta2TxKIqdsPU
IpOuoD1v7cMYDxM3b/5RUR0t47cwoqafWLdPMBDXip2WEGa4EIiaGbsvw2at
sYiJwzG8NXC9mRE8OQT2MkFJpnZOCsVJzrbEy/kJE3t2P/e5TfRZ2CQkqKio
hJATEoiIwE4aldEriTtD6exTFZ20M5BCLJd9bnMgWDEe6kCt5pxxqOU3yETw
snDo27Z4qNukbBjO+gAHIgTO12Erfx3dxiGGqJ9h5b8MvqMF8B6V8nXJfABi
CQFiMZHDosR5BIZnz4CoeCR+xqTD8dMn5sVOm7CfCOJeAsWdVEdvozqawHDM
j9Emo76iOnp9pOHQZTn1h8zJbjhkfE6DIUNyGgzunV1/UOfsOgPvJ5IIMfGq
tvXZa3Shi4Onnndd311Dc3rtnZXVY/cmwr2/snvt3ksYSDi4uyC75+4iwkfG
Qe1w3/Bubnm7AbmMgVRe83AFTiisePEgT2Y1dEL6xvcEJ5PLar3Xd+p07dT8
FAHxHt8IQA0boOPRw8PuxhF+cfEmY+N2e2KqU2W7FFHFR9P59XdaQp4mKcak
2QoD3cwCc7NfxNgqK1tEfHu1hJ69klyHzz0swASIyDDltFw9/bFhEv3IcJcp
aiP+h3o2890LkfWv48B3pkkRMrEG7eGwbVN1nHFYp9Nk06fk9qfhGQkb2WGW
+WGVAJq+dXVbFbOFyCGAOriFnrhOwWpHn8f0AXrpmtAp0cuqIuouxKpM+9gJ
T5RPM9pXOVAHG71XA5efVUEJTM8pR0ManFu9R3AOXRixiHqFr9A8rH0H1fvQ
6INDPy0MBG3WXNhYghXttFOmFLyHGdAW6wReJEkq7Gxv6NsktIvnJwn3rIM6
zZcr4Jn5wCvSeKMe+KAGgkU1H0YgMMOpiZ2gRxDB57fgD3bajF+9NIGAlMZp
HhlES+WhH9BOCUiaQD2QQi8c5k4nUcCWxRtNKIwzcZocJ5Blq+PyePPlAMAg
KGGgWVkCrejLFpTydcn8EiKGxYSBRUQICxLnzjyWOIvI4JlTDsfPmJwXO2Py
fsLBvYSHO2Onjt9GWLgl1mTcT1Qof03F8fpIo+Erog2HzclpNHxipPHw4ZGG
H/TNbvDBi0QSH47WH0L4N0ibKRf5eGCTNn0PvJbda+8UwrxPCf820yPw7xA9
rccJC4vpmS658V2RDW8evL/8unf2lcf77SuPEf7pcBlECtwZUxQHmMablJ+b
CffaD8IIxH/DwAzBKhVI/DzQYF9tfoWg+fKQGW9KLo/x+ARhI/z2ip/A1SeM
M9Px2wd8GKh0zVcON/XRHjcsksdZl3j6o5tA0H+tjddgg6eOmiieovQEW3Ly
Exk8TE2LEILVurrS2R2d4XBAn9eSjoSkBHQREpcLE1E7JH5sCfQ4ZKJ2xG9H
j7DlidoqGIkTha4Q3rMMjoGwXX9r3tqSIxPiH8aUyAGhgpmWCr66yOtmd19m
0VEdPiY+QfsrUhxn+AIcIRWim7zIFsKIZMnQjHNbEH+811MHz06BxlyFxmRY
lDWkSWUwa4LoK0MXVBpo2idpJsCN87IsBVwjeVl9DAnHj0svo7A/WkXoXzo/
t3glarYKnBgmHY8Ds0ZKh9GLysr0RWUhYgXKIAzpIB/0Bgz5E1YQhuiwQK6H
MT30/B+crxJEvAoUweRwFRuI+JNYz+//FutF7/0GiqA7eZ8EgbHr12P2PiAj
nZXM8D1vrxAoVAhss7I83pIg8OplWElx1RLg35WLyxJX4FpYmvjnQuBgSeIS
xsCCxPmzj8fPnXk0fjZxwLOn5REXPBA/a9q++D8m7yI83B47fdIf8dMm/hRv
NuGbeJOxnxAPXBlrPHo+FcjTqVAeTb/vG2sy+tVo09EPxxuNujnScOSF0abD
IAheLPgny0CrdyWO9wFdn2f32vMbPe4iDAT2Hc3ptbuIfl9yw6D9pfSUlxF+
lVPNC9wrjyIFAQT8FE4eZvrngza6hh0k2NMpsFy+a7h7ohmKbhg2XRW4Hx+h
Mvc+z5YjkBdmeSQkqSqCdybToRrjHV5F2llRvHzQeNqfNPNFTr3sNp3TbXZ6
Z6eQpkdpPlfl/opvaYUBHp40Ms4eJxg3ZMabwZtYRVwi3Ki78KIg8E3DpVar
uFhhKni6EyOoAMh6IVZcZzDxUOMg4Fo6TIfxHNHPR8yZntBHjQ6AC9rC09Pw
vBH1CDHUSRWmy947OTO0/v1OmpbloJwjK6LhUsUue9af10lCSXbaBMRqU8Nn
tQHGwQ4On4s6ElfusJvW/DgnxS5Lfh4FpHfdhv0yEf9xrkcA1xikW0L/6Gx2
nbMVHX6dSrzFe9rPJdZEI00QATtQVHBB3uGXkg641luo3MNYwOkupPPdr2RZ
3/NOB0Qd3oA7uCnS+Eiv7GKdKZQ89wyP5QzKtYPsxMje3otmLhEOLX4F7tIE
7jQKUBY4YHSy8x+AOc0c0WnJZ373Sl5ugmwCzHHqyH3fYmXDvYbyge6ZfnHs
xo1BjLDT/89D7MiQul4h7yxhflEqfbNXlccAcxixAdO7ZllZ4lq6rl5amriG
rquXlCauWlwS/9fi4vjlC4vil8w73u7COceo5D1MlO9Q4ryZB+Pnzsgl2Nsd
P2fm33RtiZ857efYP6Z+Ez91wiexZmNXRZuNXRhrNm56rOnYoVQCE8SNfSHa
dOzj8cZjWyeajL2iXdMxGYkzBwcucTHutDuy++wbnd1jzxrCs++ye+7ZSRh3
gJ481vrA8doPyC297p3cMgKzslifveWRPnvKJd5FUhej9AgjU5JpRsw078g4
K1IbrR74vo/jaff4LrrT90g6oI7hyEAOvSfuN/TP7Y4Auh6zU+1eVCAe8fkn
vBLYK2tF5rJhU/R+D3J3OWQVQ6v0E8ppNWvHZtYetwjzSqq9RqMDOSbVkLg3
sfsAileaLBxe4bln+unmAmsuXOtz44iwVysZ6my805tLvK05WttDH+D6fjxW
YpiJt4m8ICVIPzHW0j4xReosXPTukxMjbOvfTsLvgi61m51K7ea41A6/VnXM
22bDvQN66shU8LPFb3Wr9oHbgc9p3h2bWP7WOOxyf7W7V8raNAt2jHMnTqxX
rHNwDn8ZOCfh3c7O+p/5CgivS/PBHEB4xBeFsjdP616J+FrnDIeukuQs9MxQ
6oZZHakmTN5TSCzw6csWi0rw8tN5w3v4SOdRhntGm3mGDFvx3mHoHd47SEAl
2DO5HlWs1o65Q9GcTN3Vy4R6dDdF76vbAXtdzZR4JeCg+K6BgZ22mLyl36Ta
5QnDH1DpPvJDkIfEK0m4x4PfydghRsXvNmke4HkwEd7yGf7CrZ8FzpF+iHpo
brBj4uXRyNryWNbq8lhbutoQILZeWUalb1m85fLSeItlpfFrl5bEr15SEr+S
APCy+QWJC+ceI753NHHBnPz4BbMOxM+ftTd+7ke7CQS3Jc6esZkA8Ceqfb8m
rrc+1uzD5bGm4+bHm46bFG8ybhjxvO6JpmNeJEC8LdF4bCTaaFTj65sMC1zm
gl+1tgRwfQjolhPB+5oK3W0EgrmmwIXAV0xPaAmBXRk9oWXR3nvpkZ788hzl
09VZcYUxRlu+oHG8Wai/pK3gbgAF0SZ2zDNeM0QaWiGGxDtdR02Iwa+20w/x
ehyPquHaewX5eiJPTs1P2ThsOZ7R6vTYBUY8M81wR89mk+Y0CUw5G9DkZV3Y
ZXafBcXkINPkXeeggSwI+Kqz1NxMX3OMnuYSuQlzGd4WgOpGRDrGQiDIUzcn
mIirpOkebQCnxXNwH3JyHiaKF2bII7TTGjbE3Did4O4w637PmjrWkDtnEVAa
j6Vof9fXzDC+dQfhQjzgHWIwNtMwpsVbwzI75LTO+KWYF62o71l3Ldq2RVIg
NHdpCcUY3c40VI4gLsNP4+hvrNwlBhZQuIwTM3UzTabFN9cHjXqVa9XPCtPt
MmaJK0pPyYjFJGr3pUd5MRIh2otzPRMptFpGtNmecAc00ziM+2z8BXbuVefC
5T6+P/kycjtaaN0dI+TdADp3nZmh1llq+n0QHwQ5Wa6axTYOKwKmoYfR7S/N
xPAeu21np3TOy9sg4nXdSj8aB2IA6jputmHP9CgzJhknIoR4kf/85FinTdNX
tL47vwycn2R70U0unxmAk9nqaMwHbmXxVHArjV9N7O5fi4sSALcL5h4ncDsS
v2D2ofj5sw/Ez5u1j4BtR+KcmVsT58zYHPvHtB/j/5jyBRWx6wjYlkWbjpsd
bzp2PLG7d4nd9abiFcyuQ7zR2GujjUaeHj111OU+bDunbd/c1yO9uXnxMeHc
n4Rne4jg5RO+Qbwryum+s4Q+V5rTY3dZpOeeZGyrwcodbOq3mvKVk/4G7POd
NF6nN8UYGDTMDkSwQleM6eoD5jI8KY5do4cMvDnOF5FBMk48ON7rcTgpoQ6+
VZYtjpO8CX/fXKBX8zpAV8lX0762+EhFDA/4oCOAYTsdJxrWURv5s8KLSHZj
fyT/WHciBU3ujxua/PZqYUsoi834nB3JA/IJyxP0A7Q9InaxANMG+t7uHSMG
zMcnCzLS00hfoz9J3yyos9I+pr1C+zp5Bkp3WNLTNo+4bhcBwpDtc2AERUzY
IUv5pKHNuxYBhdU5nQeC3ezN3uZwELwlf5UxFK7Y4a2ddUS7kOnQinvFjjyf
w2wvQ9iegUPV7gCFsjwXWRjVWcOzq3XxqAGiv3j7zFHo8sb6H6S4HfllYZps
13nvE1Eij7uBQmrh6W9UVZxs5lgwFqDq7Lx/eYEngrhtf225dzJSH79Ax/Nh
HsQHxiWLFz8+/bDRbx5Qd+wYyeDEWwl9Q0QJcSzFe/xI3wJxEXr9S0yFxFVA
gLpeFpCfiPTY5Y3ivbXLegbtdB7B6ht/e+7qLn+YxrAZzANeunn5ipcPngQv
b3fGny1eggyu+3/I4HIlg8XxKxeDDBYKGZx7lDAzP6Fk8JyPdlAlvDV+9vTf
Y2dO/S522qTPiQiupap3SazpmJnxJmNH0DWEKmEQwadiTT+8MdaIq2FUwv90
8fKU6ok3Dzya03sPmh0ohtHs2EVXHl3H6NApjLyyvTjnzb9L6eMyXJEeu8vp
a0BMozc0YP0BdqRbh3harI+Y9xaNQgrmAw4mGtikm3uLyYhqPyg3GTcZNrUx
rFUxoMAlg3d7ZDAg7bMMX2PYt13lIw80nzDxyw+ailqDiJIGqh0LYYYtkd9Y
nNLQ9YOlm8vz6iKTyZNpplGOVZzLg9VQFirr2v1xOmGsMWk69qEQ+ZyxlYMw
4yR52Cx7BknG86NxLyIKElDSd4o/94QKglwZ43khoAzZxI4KdsxYeJzrwGM9
a5DWA0L32Rp4tG1gYAr2DmKSTk3Oc7GUG6tbgZBmUx9v+tujsx52D5TN61lv
0uXPM9i43lBEYOLKneWMurPsnsJZv9mcILnkc0FAJJXxAEgFRpTEKIfxTb6/
URYmutk99DmTN/8+581zNoQJxASj1KUysl3gNc5de32JzNXRRZ/DrxlcQL9q
5jl1JxteSWL8p9cloep/psirF/NXTxn5lg+0aVIK4A5C2taSAGXTHSovVTCK
p1ZqICcC2cRKHfz/8iEiKiTCOdPRHVquEBt/pIJ5E3eMBRur+LN6kmeWrzcz
yzmrgY3ExggdA02FT7Za6WFj82WEjUuL41csKkpcMg+FMnHJuUcSF84+nLhg
9kHik/vi5320k7BxG3HJX2JnTPk2dvqkT+NNP1wdazZ2UbTZ2CmEiaOpUAaP
fCXRdOy9scbjgI3nRhuNYJXwCgHHutIJuYtADp2QFUQg0QmBE+Ygd0Je33Gc
mHcxPZbQc1RGz1VZpPuu8hwBR+aTsBP12s24iFL5ugEpmCgNkxoMi0mVsty1
YeKT4XOMKusb392f0lSxyJhmS2a8803fxLinvS6a9VSZub4kfVHsgfTCeXqa
Z5kBKqKUwesLrzcn1lhXjrg6ojvBZzQi108t6QcumuhfkQhOQIfCBypNwcyw
REh4a5eczPYGtqJWOuniJVNKK1162WWsiJpeh1JLVM9Knh8kvISwQGw8yGGH
Yf403mi46I+G8CyFTKdYOXbqwsWwBUsXMMUeXsWHlG8Z84+iJCKUEVSDpojk
N8ziNUfzTUmNnairdpVjWYfuwzMLNeh3Hzu7lSyPTMZKbGaaZ7dpYzEflvnN
2Vwa5g9DJ+b8ji+WeoDJhmzByPGEkcjHQYIOYu4KiNiPsPk5Xp6OPuLPghaD
XCI4GNIoMnPQPsMjhi97st6CWM90O8aki9AhQvdYZhPmusxJEmn/n0llnPMT
5V3x3+JzIGXBuIb3LWQueg+HKox18CaV2VgDXyHCg6WD7I7lVYCQD5thk7u+
NuN456auV3JnlNFPATpmr66o2i5lhGy+DJV2SfyKhUXtLplXmLho7rF2F80D
ezyUuGDOQbqAjrvi534E5vhr/KxpxBwnbjQ9lPlUZU8xrBE9lI7EHB9KNB0H
1gh0/JcLjFWhIA7I7rV3iWmfABhzs7vvPkRPxfGcrlsLI13/LCFwLDXgGAQy
BtKBjXZvVXujenBDS7r2hIa1+Gtcg6c4BI0aPMjTGdEQkzayQc7hSR2WEHdY
gFz32KllbiErGspWXQBiHZt/hho6aRuHNF4m5vtyK0GtALRuxqXTXw5ycV45
hT8953QDVVKi31c2q5rcCBqOoVnqkUWOg+EqE1JiMzvKzHG9q1KBz6aLLXAT
wI7Yb4P3lFFtzXQC9GLKIa6jlRB74915XI0BFKn+DnKRncl//ClpJku60HQj
M0pbJejXGaWNErZtFNNKEZNMJYuE+L4xjQhQR9Ya6BcM0jIvIvnqmCmet0Vs
MEu3lwXR1kUEmMlWMJcsCg1rk1i3E3Gz+FyDhCwsEmiCcapciWaMbLBe+CfW
muJzi7aW4Xf0NTyW8ecWmEfYFEEgUU2P+aYwiGibQDUOucFSQvR4Jv/ghdzg
cYLZYyRj1N40crqzn2gA78PVxXPQJjFOAsbIx+n/gHliHmNWGEgarTvgH617
TypmrpYrADx3uk5HSl7aZgDPiWbATgsdKXEH7LRiBivswK3kk87WgRTeyKSw
PBr/mCBvDQhhNhNChr7/BnvzCxIXzT/e7mIUzPMOt7tw7kEqnPcROdzJ3ZNz
ZqBg3hQ/Y8onsWbjlxPEzY2JuIjOyRvRJmPQOkbnBLDHnZOrXNyrdXlWr1zY
Y6AuonMCUrgn5/WdeTkvbjtCmFdIz0hxzivbSwn7yiJ+UghOyOAWMzugkHBs
uslAPnnSa9pi2nVP3/aBNP9l5E46y8A/ZY1JLmtro+H2CqvOxn090tdmqcIr
LzRh3a2QH3csg16zTlp02mdOTlz322mC4In0nz07U+zH8lWhi44nIpBpSJIb
dkj1cQhYJnNyp9qt0piV67XCcfM5WxxMkgLXxGbEV8yJs/xtSLVAq9sPPw0P
2hC86VpGGCpRO8M6E+SKOYOqLKm2nnAwTwAfP5e001OaTjpz4iiKxj5dw7PO
LJCoV/xAb6/2dnYgd3Kot8+Z0QWBMkZNDEJKpGdv2d+emLgqWVA0a5N5/kN3
/ci+n4AAYCb/WYiSy3eUW3FyrWkgc+UNcplJlXiZnR7GI9RH/BGoj1S5e2kL
Tg6NzhFjcm5CUg6Nmfv272Azo5j/8+Qw+JxxTuhx71E6yO1oMob5HXKzoXTE
LJzB4SSTNNyByuU6cwoiAVvVitckJ8Pa3d/o3LBAW6YDa2bTmizMJFhbVx7L
WQtUWxPkirdxWVxgrZRhrQXVudcsZQ2w3aULChOXEKRdMu8oQdshgrU8Ynb7
4hfO3kX17l+Jcz/aHD97xndU526MnzphFV3z4qeNB6SBxaEZjH4JIO2SWOPh
1W6oMyZwtQtpNSEAPkX0bWJ2jz1omPyW3X3X35Fu2w9Eumw9nNP5j2PR5/4o
plq3hIC/jJ4hQBpdgLTdCmkQAnvsAoL12K38zk7iRIxTBmfMbYanQaEVlwwX
xAFZoJQhfO49T/xzMS1oQsdvM90zn7Vw+MF05fT0/kUz2K1sOXDcLNc0QV8C
ZpmmxJNAGjgUnqlA9gNGzRIUg9bCWYrTk5a16Z9Nc6pfp5TVNG5X+RPV7zjP
eEgGFroIIZe4mSniWoJqimxzPBKn8wTq2nPbxMnoxlYL4qv0XzwwTnwYHsCF
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
qVlJcyhH/CooGzoV8opD7AqJH/UWpgtcdRDNHRzx768M1FpnYFrCppfUZgdQ
7AmPW/GLHNfrfronA7aInUN2ZZwsrXRqU75c9hcrldbShWoXoWMgWH6+v9kr
yV91wa6qdIa4g2H2wNEjYPoEH2jhhFF6Aatb5R/lsSy05R0n40Xuqu14lb4q
tc8hbAS9+3O6ZGMJ1gmEOJjWnWcOlTPHS5SdZtEfoXeI0yuCyxUedxYPoSNR
RsTMK5XIL1N0MMzZ4q2kDhTA8O14Dh4cXh/N52DdNatqu9GW59GB2ROA2fQ3
0ysYs+R805+Jg029O7IEjjUBvL5GeKXbMsJsMRnHArr2vDSgaCP9XZZSKDyd
HGxdeA184gL2zOsbNZqI8BeARQkK2xkB2NUmm91LQD1IIC0igJZGwlMq6L2V
dBFgp1TTLSArnhXVZQXs3a5nnVcTvWtODWXANeSZayIA7t1zAVv1vACxA1m3
9Ay44pbHyR2oau1KY+YnM/xrpnT36xszlz8KNmUCLKvGLqgVfyp4O9LDm1aQ
P1JcbvW+5d3tnvpuGxMr1zU46kiR5nD8rEVoZ5iDKRjcDtrv1p+YWUm/jydu
lSHpbbRjREtKBi5E8x3YxObXE+38z3P9vFtW6zbq/7oFgHFNt7qHCLhFMcrQ
qE2qJinbB6NLeesF3c82S0NEPFe2MxK8s41Gv0vTqAufxruCat1zWVWuj2pl
8FmbmAFkWqpVSKhWmPbcjOrWuG1YwagD4bwTdnfKKyZ77d1AqG6lCLMFZDFi
AoPM49PtCJXfTJewF8gkb5qiTyZJ/+XqV4cwMoHKcrpKXh1cVEi3u18ZWLyB
0Ln4hQFFM+kTH3l/p1qo/MwF5Tnnhv8z/ol4/uSPogJK5KQId1dLTjp1Z/Tm
iQeit0wqjN4yuZiu8tgtkyuijSZXxRpNro7iAijzJ5twdyaFu3O0zCSgu2s2
AzJ624waAm4Nhc303BwDzIyQuPmCoELzgd+90BchrWVN+YYqxOuCbeXwMWRi
YrVPp9ZjSwbqauyGvMbucf5S8uGau219DV6fQLa3VnqHm9bWQqmu8nBdKQFV
ezx3tvNyV/Wj2qxtljGFfdCIjnLuahZjPNrjkC73Ccj+jeO4MfuM2dzwNPTU
+3i3YOA/7bzG2x1kERAjFH1ahMIaEuP2DZ6n+hMqFYjQHwsROvuwhMg8p9cr
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
ESWmleEtOFDZGh4Zo/d+OqlUNsodm/6WjrQ91mSs28+tSHVbUuXqy+JMV/Rd
XV3GqmSrq/fQtZleWz1gTWLe0PXVE6bu5TMdm3GwZoUc5wv5a0N0GO6Mnvyr
22HQAH0iWeHZkVM6L4yc0mk5HfH1FMxsCTfstIOOMx3lzvvpKqD3k4XuQha6
CwUsvbwg/fyMIP3CgZCdPa8fHVu6m01fBznnegibbHrt4qEgfuBII6+9ZqQp
CY326FpqpnF0cYy1vsphzTjhlgS9U62cLpP85voHxG5z5ybNsvI8HO8sZWWJ
2V4gh9mNTp40rTcdyH9yZYj7DSEz7cVXQHoQebY7xx06CNTyRrdNcmJ1N/kR
GaTjDKrkq0qXtNMr9UxnLnM+krtxP1oV2prm7c2sigx36fMBFaBt5UxGYlKF
Owu/HeJhlSD3FXLZiD/eS1JY3rHYW5j46EVIpbTeYan4Ogn5v4mlwhzOMssG
9XBT0ppqP68ySfYacv3VFIkkfluZqCDbXQbVV7p291uV3ESHegkd7ml00AcP
3ZDsMXl3Cod6lXuoTzwzcvqvCDtgn3GoNezAoR5Hh3lKuGHHBeFTOvweadhx
VaRhp82RkzttjzT8dWekYed99N6D5mAXEwBgoxGJ41BXxc+ng31B/yBOdSA7
SWc8FTv3txSd+VT8vP6p+PkDAnK8j/UfbTneONx1RB9jvGONI32dOdLaaZNu
dRBv0qNNwXoD/8zjzc7cVm3CRyCkZHkwOZrN06F7ZfjmyQv3Om0BVvEzsQlT
ex9fiR7BY27zjOWUTAMtWyhUujaAt7Qt58O/QkMYGcsK1NFCc6ezkLtCvOVD
aQtk1dFHUyFzDADjSGdzA+B4d7uvHTnRGUYc7id7mQWhPWXkBMVOluvrIlVN
RCsPmArnI2ZE+Nm+dY6ZuCpjH4zGKH2pSooFscaWDgAvtfWu1Lczy5NkwpO/
zKuo7ry4ik53dSWd6oreK1ga/GDvFdU76XZj7+VVi3surZrSZ3l1315LE9/2
XZmKTt5Vs8Y94WdqYI1C/muRU7vghKOQ35/M8Cg63RPDJ/8yPXJS+0Vk3ldG
T+6wjk76VjnhnXbTad8fbdiJTninQjLvJVGuSPYqZ9N9Hor5/avpEFfT8U7G
zu2bpAglRa+n4uf2Nce8fzp2gTnqIQ5IcrzzfdVwMdvXjsLZDsJuk12r1Tz+
+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
\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"b2fc9085-dff3-4763-9494-f96de94b9815"],

Cell["\<\
All slices along the z-axis (I think) displayed side by side. Very satisfying.\
\>", "Text",
 CellChangeTimes->{{3.912445631267643*^9, 3.912445647997089*^9}, {
  3.912447257273122*^9, 
  3.912447259910925*^9}},ExpressionUUID->"0523a527-9135-41ff-91cc-\
a27f8aea4859"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Image3DSlices", "[", 
  RowBox[{"Image3D", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"maxCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
    RowBox[{"Max", "[", "maxCube", "]"}]}], "]"}], "]"}], "\n", 
 RowBox[{"Image3DSlices", "[", 
  RowBox[{"Image3D", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"minCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
    RowBox[{"Max", "[", "minCube", "]"}]}], "]"}], "]"}]}], "Code",
 CellChangeTimes->{{3.8963317489102383`*^9, 3.8963317547401857`*^9}, {
  3.896333381775753*^9, 3.8963334130694427`*^9}, {3.89633467388951*^9, 
  3.896334689438015*^9}, {3.896334841120194*^9, 3.896334848670566*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"d51e056e-190d-42a3-a07a-ca0d26fe9e42"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfig15nG0NeQ7b
qnoK2QHZdrbni+1UPSfZrV61Csg/bLc99zZQ7LNdkgSbPVCN/YtKOfvVq7Ts
826b2ZOrD0STqw/EJ1cfSJxcfRB58vSB1JGrD6R+IPSB3EuuPlA4kasPEj/k
6QOlC3L1gdIjufpA+YBcfaD8BwAE1lwW
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfig15DtuqegrZ
GfI429meL7ZT9Zxkt3rVKiD/sN323NtAsc92SRJs9kA19i8q5exXr9Kyz7tt
BqbJ0QdUD6PJ0gfik6sPJE6+PiF7cvWB1JGrD6R+IPSB3EuuPlA4ka9vkh25
+kDpglx9oPRIrj5QPkDOF6ToA+U/AOUpWSs=
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9hewMeZzt
bM8X26l6TrJbvWoVkH/YbnvubaDYZ7skCTZ7oBr7F5Vy9qtXadnn3TYD0yA+
qfqA6uH6SdX3xcYfrp9cfSBxcvVB/EuePpA6cvWB1A+EPpB7ydUHCidy9YHi
h1x9oHRBrj5QesSWTonRB8oH2PIHMfpA+Q8AxFpWPA==
      "], {{0, 15.}, {15., 0}}, {
      0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfig15nO1szxfb
qXpOslu9apWdIc9hu+25t4Fin+2SJNjsVT2F7F9UytmvXqVln3fbDEyD+CBx
UvQB7UHTT7y+Lzb+KPpJ0bc9NxpFP7n6QPLk6gOpI1cfSP1A6AO5l1x9oHAi
Vx8ofsjVB0oX+NINPn2g9Ig/veLWB8kHuPMJPn2g/AcAqr5bQg==
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfim3PF9upek6y
W71qlZ0hz2G77bm37WzPf7ZLkmCzV/UUsn9RKWe/epWWfd5tMzAN4oPEIfLE
6TPkccbQT6y+Lzb+GPqJ1bc9NxpDP7H6qualY+gnVx9IHbn6YOFFb30g95Kr
DxRO5OoDxQ8x8YhNHyhdEJN+sOkDpUdi0i12fZOIyi/Y9IHyHwCDIVxK
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9J9mtXrXK
zpDnsN323Nt2tuc/2yVJsNmregrZv6iUs1+9Sss+77YZmAbxQeIgeZA6YvQZ
8jhj1U+Mvi82/lj1E6Nve240Vv3E6Kual45VPzH6bM8XY9VPrj6Yu+mtD+Re
cvWBwomUcEVPV6TEJ7I+ULogJR0h6wOlR1LSL7I+UD4gJd8g6wPlPwCPoFxQ

      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilevWmVnyHPY
bnvubTvb85/tkiTY7FU9hexfVMrZr16lZZ932wxMg/ggcZA8SB1IPSF9hjzO
ePXj0/fFxh+vfnz6tudG49WPT1/VvHS8+vHpsz1fjFc/Pn0MDA149dNbHyX+
pCR8KYlXStITJemYkvwDyn8AEhBaVQ==
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfig15Dtttz71t
Z3v+s12SBJu9qqeQ/YtKOfvVq7Ts826bgWkQHyQOkgepA6knpM+Qxxmvfnz6
vtj449WPT9/23Gi8+vHpq5qXjlc/Pn2254vx6senj4GhAa9+fPqSJNoo0k+J
uykJL0riiZL0QUm6pCQ/4NMHALCnV9k=
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfirfn3razPf/Z
LkmCzV7VU8j+RaWc/epVWvZ5t83ANIgPEgfJg9SB1BvyHLZbvWoVTn2GPM4E
9ePS98XGn6B+XPq250YT1I9LX9W8dIL6cemzPV9MUD8ufQwMDQT147OXlvrx
hTMhf+OLX0LhjS9dEYpnfOmZUPoCpUtC+nGlK1B+IKQfV3oGABIQWlU=
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfim3Pf7ZLkmCz
V/UUsn9RKWe/epWWfd5tMzAN4oPEQfIgddtzb9sZ8hy2W71qlZ2q5ySs+gx5
nInUj6nvi40/Ufqx6dueG02Ufmz6qualE6Ufmz7b88VE6cdlLzH6cfmX1vpx
xS8x+nGlK2LCHRRPxOjH5l9Q+iBGP7ZwAqVLYvRji19QfiBGP7Z0BQCPoFxQ

      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfipMk2OxVPYXs
X1TK2a9epWWfd9sMTIP4IHGQvO35z3bbc2/bGfIctlu9apWdquckO9vzxXbo
+gx5nInWj67vi40/0frR9W3PjSZaP7q+qnnpROvHZi+x+rH5l1j92MKZHvpB
7iZXPyi8yNUPiidi9aPbC0ofxOrHDK9JdsTqRw9nSH4gTj96/AAAgyFcSg==

      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9hexfVMrZ
r16lZZ932wxMg/gg8SQJNnvb85/ttufetjPkOWy3etUqO1XPSXa254uBfGc7
ZH1APkn6kfV9sfEnST+yvu250STpR7eXFP3o/iVFP3o4k6IfRA+EfpC7ydUP
Ci9y9YPiiVz9oPRBin5ke0HpkhT9qP51tiNFP3I4AwCqvltC
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfil9UytmvXqVl
n3fbDEyD+KqeQvZJEmz2tuc/223PvW1nyHPYbvWqVXaqnpPsbM8XA/nOQLaQ
HUwfkE+yfpi+Lzb+JOtHtpdU/cj+JV2/kD25+kF8cvWD6IHQD3I3ufpB4UW+
/kl25OoHpQ9y9YPSJan6YfaC8gOp+mH+BQDEWlY8
      "], {{0, 15.}, {15., 0}}, {0., 
      1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilev0rLPu21m
D6JfVMrZq3oK2SdJsNnbnv9stz33tp0hz2G71atW2al6TrKzPV8M5DsD2UIg
cVuQPiCfLP0we8nRD1JHrn6QPLn6QeLk6gfxydUPogdCP8jd5OoHhRe5+iHx
RJ5+UPogVz8kXZOnH5QfyNEPogHlKVkr
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfivNum9mvXqVl
/6JSzl7VU8g+SYLN3vb8Z7vtubftDHkO261etcpO1XOSne35YiDfGcgWAonb
Atm2IH3k6gepJ1c/SB25+kHy5OoHiZOrH8QnVz+IHgj9IHeTqx8UXuTqB8UT
ufoh6Ys8/aB0Sa5+UH4gVz8ABNZcFg==
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.896331755379592*^9, 3.896331765428173*^9}, {
   3.896333386471965*^9, 3.8963334133407717`*^9}, {3.8963346614386787`*^9, 
   3.896334690766985*^9}, 3.896334753576983*^9, 3.896334849032866*^9, {
   3.896415056361308*^9, 3.8964150704640007`*^9}, 3.912445573446383*^9, 
   3.9124467675607347`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"6089ec0f-ec43-4e5b-bd74-f70880f89d89"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9J9mqegrZ
bc+NtgOy7fJubwOyb9sBpeyB4vaek1Ts826b2U9S8bQHqrG/vS3XnoGhAcjv
tCdXH4gmVx+IT64+kDi5+iDy5OkDqSNXH0j9QOgDuZdcfaBwIlcfJH7I0wdK
F+TqA6VHcvWB8gG5+kD5DwDddkZu
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9hey250bb
qXpOssu7vQ3Ivm0HFLYHitt7TlKxz7ttZj9JxdMeqMb+9rZcewaGBiC/E0xD
9JGnH6SeVH0wGqSeVH0wPkg9qfpg4iD1pOqDyYPUk6oPpg5Ek6oPWT2p+mDu
RHY/sfpg4YMcbsTqg8ULcnwRqw+WHpDTCbH6YOkQlq5J0wdJ/8j5glT9AHky
TiM=
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfirfnRtupek6y
y7u9zW577m07oJC9qqeQveckFfu822b2k1Q87YFq7G9vy7VnYGgA8jvBNIgP
0keqfhgNUk+OfpD9IHUw/cToQ9YPUgfTT4w+ZD5IHUw/MfqQxUHqYPqJ0Ycs
D+MTqw9dHbp5+PQhuw+bP/DpQw4XbOGHTx9yfMDSCbH6kNMBcvokRh9y+kNO
n6Tqx5Y/iNUPAOG8UKM=
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9J9nl3d5m
tz33th2Qa6/qKWTvOUnFPu+2mf0kFU/77bnR9re35dozMDQA+Z1gGsQHiYP0
kaIfpg9C37YjRT+yOSB1pOqHuR8kj6wfnz50/SB5ZP349KHbD+Ij68enD584
IX2UmIvuLli4o/sHmz708ECOb0L60OMBPZ3h04ce/5jpjHj96OmMNP248wkh
/QACIkws
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfivNub7Pbnnvb
Dsi0V/UUsvecpGKfd9vMfpKKp/323Gj729ty7RkYGoD8TjAN4oPEIfK37YjV
j6ov2h6knlj9yPpAfJA6YvWjuwMkT4p+ZP+DxNH1Y9OHXb8nhn5s+vD5H1k/
Nn2Ewg/dfELuQY83XPqwhwNmesGmD1v4Y0svxOrHll6I1Y8tvRCrn5j8gks/
AGXzRrQ=
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfirfn3rYDUvaq
nkL2npNU7PNum9lPUvG0354bbX97W649A0MDkN8JpkF8kDhIHqQOpI8Y/ej6
QDRIPTH60fWB+CB1xOhH1wcyD8QnRj/2cPAkWj96+CG7B1k/sj5iww+mH1kf
KeGPrg93+GGPd2L8jyveidGPK96J0Y8r3onRjyveidFPSr5B1w8AvZU1Sg==

      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfioHAXtVTyN5z
kop93m0z+0kqnvbbc6Ptb2/LtWdgaADyO8E0iA8SB8mD1IHUg/QR0o9NH7H6
sekj1n5s+oh1PzZ9xPqflHAgJvwIhT8yPRp/Qy/+QPoBbps2zg==
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9hew9J6nY
5902s5+k4mm/PTfa/va2XHsGhgYgvxNMg/ggcZA8SB1IPUwfPv349GHjI+vH
pw+fOCF9lJhLiX8oCUdi4mE0/oZu/AEAI5BEQQ==
      "], {{0, 15.}, {15., 0}}, {0., 
      1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfij0nqdjn3Taz
n6Tiab89N9r+9rZcewaGBiC/E0yD+CBxkDxIHUi9qqcQUI4BzsemH58+EI0s
jq4fnz4QH10eWT8+fSBxbObD9OPTB5LH5S9C+iDqCYcnNn2EwhOZJice8MU/
Mfpw6ydsHy79xIUndv3E+A+XfnLjAUQTE5649AMAbps2zg==
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfivNum9lPUvG0
354bbX97W649A0MDkN8JpkF8kDhIHqTOc5KKvaqnEFCOASh+2w4mjq6fkD4I
jZBH1k9IH4iPrg6mn5A+kDg29xGjD6KOuHDB1OeJUx+6fnR9+MIFXT+x+tDt
waYPkg6I9x96+iFWHzb9xNqHTT+x7sSmn1j/YddPXLhg0w8AvZU1Sg==
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfiiepeNpvz422
v70t156BocF+kkonmAbxQeIg+bzbZvaek1TsVT2FgHIMQPHbdnm3t9nB5JH1
E6fvth2yOph+YvSB+Oj2EKsPJE6a/xD6QPLY9OHSj6wPJI/NPlz6kfXh8h8u
/YT0YTMf3T2w+CDGX8jhgJwOiAlPbPpA8UOKPnT9pNiHmf6Idye6flL8h64f
AGXzRrQ=
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfirfnRtvf3pZr
z8DQYD9JpRNMg/gg8UkqnvZ5t83sPSep2Kt6CgHlGIDit+3ybm+zU/WcZAdT
B9NPrD4QjayeFH0gPqnuhOkDiaPrI6Qfpg8kjm4fIf0wfSBxdHWE9MP0wdQh
yxPSj0sfNnPxuQuff7Dph/FB4YQvHLHpR05H+OIPm37k9EuqPmT9pNqHrJ9U
dyLrBwACIkws
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfim9vy7VnYGiw
n6TSCaZB/O250UC+p33ebTN7z0kq9qqeQkA5BqD4bbu829vsVD0n2QHV2MHU
k6oPRJNjH4gG8ZH1EasfRIP4yOqJ1Q+iIXyEOmL1g2gQH1meWP0gGqYeJk6s
fnR96Obh0w+Tx+YPQvph4tjCj5B+BB8z3gjph6VDbOmFkH5Y+idHH4wmxz6Y
fgDhvFCj
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfihkYGuwnqXTa
g+jb23Ltt+dGA/me9nm3zew9J6nYq3oKAeUYgOK37fJub7NT9ZxkB1QDpIXs
yNUHomH6SNc/yQ6mnlT9IBqmjlT9IBomT6p+EA0TJ1U/iIbxSdWPzRxi9YNo
ZPeToh8ijwg3UvSDaNT4Il4/iEZOJ6ToB9HI6ZMU/aB8QK4+EA0AeTJOIw==

      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfiiepdNozMDTY
396Wa789N9p+koqnfd5tM3vPSSr2qp5CQDkGoPhtu7zb2+xUPSfZAdUAaSEQ
2xakj1z9IPXk6gepI1c/SJ5c/SBxcvWD+OTqB9EDoR/kbnL1g8KLXP2geCJX
PyR9kacflC7J1Q/KD+TqBwDddkZu
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.896331755379592*^9, 3.896331765428173*^9}, {
   3.896333386471965*^9, 3.8963334133407717`*^9}, {3.8963346614386787`*^9, 
   3.896334690766985*^9}, 3.896334753576983*^9, 3.896334849032866*^9, {
   3.896415056361308*^9, 3.8964150704640007`*^9}, 3.912445573446383*^9, 
   3.912446767579706*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"caee3b95-5e6c-4420-846b-cafa9b8d5c83"]
}, Open  ]],

Cell[TextData[{
 "This is where the actual ",
 StyleBox["Markov chain", "Section"],
 " stuff begins."
}], "Text",
 CellChangeTimes->{{3.912445654502932*^9, 
  3.912445664631343*^9}},ExpressionUUID->"49bd5e14-9583-45dc-952d-\
0822b9efa7c7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"selectRandomSite", "[", "]"}], " ", ":=", " ", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"2", ",", " ", 
        RowBox[{"dim", " ", "-", " ", "1"}]}], "]"}], ",", " ", "3"}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"coinFlip", "[", "]"}], " ", ":=", " ", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"{", 
    RowBox[{"checkPopUp", ",", " ", "checkPopDown"}], "}"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeVal", "[", 
    RowBox[{"grid_", ",", " ", "pos_", ",", " ", "newVal_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{"grid", ",", " ", 
     RowBox[{"pos", " ", "->", " ", "newVal"}]}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Check", " ", "if", " ", "you", " ", "can", " ", "pop", " ", "up", " ", 
     "a", " ", "cell", " ", "at", " ", "pos", " ", "in", " ", 
     RowBox[{"grid", ".", " ", "Works"}], " ", "on", " ", "both", " ", 
     "height", " ", "values", " ", "and", " ", "3"}], "-", "colourings"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkPopUp", "[", 
    RowBox[{"grid_", ",", " ", "pos_"}], "]"}], " ", ":=", " ", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], " ", "~", " ", 
      "Join", " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "~", " ", "Join", 
      " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}]}], "]"}], "]"}]}], 
     ",", " ", "\n", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"grid", "[", 
           RowBox[{"[", 
            RowBox[{"Sequence", " ", "@@", " ", "pos"}], "]"}], "]"}], " ", 
          "-", " ", "#"}], ",", " ", "3"}], "]"}], " ", "==", " ", "2"}], " ",
       "&"}]}], "]"}]}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Check", " ", "if", " ", "you", " ", "can", " ", "pop", " ", "down", " ", 
     "a", " ", "cell", " ", "at", " ", "pos", " ", "in", " ", 
     RowBox[{"grid", ".", " ", "Works"}], " ", "on", " ", "both", " ", 
     "height", " ", "values", " ", "and", " ", "3"}], "-", "colourings"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkPopDown", "[", 
    RowBox[{"grid_", ",", " ", "pos_"}], "]"}], " ", ":=", " ", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], " ", "~", " ", 
      "Join", " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "~", " ", "Join", 
      " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}]}], "]"}], "]"}]}], 
     ",", " ", "\n", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"grid", "[", 
           RowBox[{"[", 
            RowBox[{"Sequence", " ", "@@", " ", "pos"}], "]"}], "]"}], " ", 
          "-", " ", "#"}], ",", " ", "3"}], "]"}], " ", "==", " ", "1"}], " ",
       "&"}]}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"If", " ", "heads"}], ",", " ", 
    RowBox[{
     RowBox[{
     "check", " ", "if", " ", "site", " ", "can", " ", "be", " ", "popped", 
      " ", "up"}], ";", " ", "otherwise"}], ",", " ", 
    RowBox[{
    "check", " ", "if", " ", "site", " ", "can", " ", "be", " ", "popped", 
     " ", 
     RowBox[{"down", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"coinFunctionAssociation", " ", "=", " ", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"checkPopUp", " ", "->", " ", "True"}], ",", " ", 
     RowBox[{"checkPopDown", " ", "->", " ", "False"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"coinSignAssociation", " ", "=", " ", 
    RowBox[{"Association", "[", 
     RowBox[{
      RowBox[{"checkPopUp", " ", "->", " ", "Plus"}], ",", " ", 
      RowBox[{"checkPopDown", " ", "->", " ", "Subtract"}]}], "]"}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"coinTosses", ":", " ", 
     RowBox[{
     "list", " ", "of", " ", "random", " ", "coin", " ", "flips", " ", "in", 
      " ", "the", " ", "form", " ", "of", " ", "a", " ", "list", " ", 
      "checkPopUp"}]}], ",", " ", 
    RowBox[{"checkPopDown", " ", "functions"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"sites", ":", " ", 
    RowBox[{"list", " ", "of", " ", "random", " ", "sites"}]}], " ", "*)"}], 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "generates", " ", "numSteps", " ", "new", " ", "coin", " ", "tosses", " ", 
    "and", " ", "sites", " ", "and", " ", "adds", " ", "them", " ", "to", " ",
     "the", " ", "the", " ", "beginning", " ", "of", " ", "existing", " ", 
    "lists"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extendRandomLists", "[", "numSteps_", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\n", "\t", 
    RowBox[{
     RowBox[{"coinTosses", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"coinFlip", "[", "]"}], ",", " ", "numSteps"}], "]"}], ",", 
        " ", "coinTosses"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"sites", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"selectRandomSite", "[", "]"}], ",", " ", "numSteps"}], 
         "]"}], ",", " ", "sites"}], "]"}]}], ";"}], "\n", ")"}]}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Execute", " ", "one", " ", "step", " ", "of", " ", "the", " ", "Markov", 
    " ", "chain", " ", "on", " ", "grid"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"OPTIMISATION", ":", " ", 
    RowBox[{
    "maybe", " ", "put", " ", "this", " ", "in", " ", "the", " ", "function", 
     " ", "that", " ", "performs", " ", "multiple", " ", "steps", " ", 
     "instead", " ", "of", " ", "calling", " ", "it", " ", "over", " ", "and",
      " ", 
     RowBox[{"over", "?"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneStep", "[", 
    RowBox[{"coin_", ",", " ", "site_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"initialCubes", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"maxCube", ",", " ", "minCube"}], "}"}]}], ",", " ", 
       RowBox[{"outCubes", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"maxCube", ",", " ", "minCube"}], "}"}]}]}], "}"}], ",", 
     "\n", "   ", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"coin", "[", 
            RowBox[{
             RowBox[{"initialCubes", "[", 
              RowBox[{"[", "#", "]"}], "]"}], ",", " ", "site"}], "]"}], ",", 
           " ", "\n", "   ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"outCubes", "[", 
               RowBox[{"[", "#", "]"}], "]"}], " ", "=", " ", 
              RowBox[{"changeVal", "[", 
               RowBox[{
                RowBox[{"initialCubes", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], ",", " ", "site", ",", " ", 
                RowBox[{
                 RowBox[{"coinSignAssociation", "[", "coin", "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"initialCubes", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"Sequence", " ", "@@", " ", "site"}], "]"}], 
                   "]"}], ",", " ", "2"}], "]"}]}], "]"}]}], ";"}], ")"}]}], 
          "]"}], " ", "&"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "2"}], "}"}]}], "]"}], ";", "\n", "   ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"maxCube", ",", " ", "minCube"}], "}"}], " ", "=", " ", 
       "outCubes"}], ";"}]}], "\n", "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Executes", " ", "the", " ", "algorithm", " ", "for", " ", "numSteps"}], 
    " ", "=", " ", 
    RowBox[{"len", 
     RowBox[{"(", "coinTosses", ")"}], " ", "steps"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Additionally", ":", " ", 
     RowBox[{"logs", " ", "files", " ", "every", " ", 
      RowBox[{"numSteps", "/", "100"}], " ", "or", " ", "10", " ", "million", 
      " ", "steps"}]}], ",", " ", 
    RowBox[{"whichever", " ", "is", " ", "lower"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Returns", " ", "1", " ", "if", " ", "the", " ", "grids", " ", 
     "converged"}], ",", " ", 
    RowBox[{"0", " ", "if", " ", "not"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nStepsMarkovChain", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"numSteps", " ", "=", " ", 
        RowBox[{"Length", "[", "coinTosses", "]"}]}], ",", "\n", 
       "\t\t\t\t\t\t\t", 
       RowBox[{"logInterval", " ", "=", " ", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"10", "^", "7"}], ",", " ", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Length", "[", "coinTosses", "]"}], " ", "/", " ", 
              "100"}], "]"}], ",", " ", "20000"}], "]"}]}], "]"}]}], ",", 
       "\n", "\t\t\t\t\t\t\t", 
       RowBox[{"outDir", " ", "=", " ", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"logDir", ",", " ", "\"\<coupling_\>\"", ",", " ", 
          RowBox[{"ToString", "[", "dim", "]"}], ",", " ", "\"\</log_\>\""}], 
         "]"}]}], ",", "\n", "\t\t\t\t\t\t\t", "i", ",", " ", "tempMinCube", 
       ",", " ", "tempMaxCube", ",", " ", "tempHeightDifference", ",", " ", 
       "tempStepNumber"}], "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Running for \>\"", ",", " ", "numSteps", ",", " ", 
        "\"\< steps...\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Logging every \>\"", ",", " ", "logInterval", ",", " ", 
        "\"\< steps\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"Catch", "[", 
       RowBox[{
        RowBox[{"Monitor", "[", "\n", "    ", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", " ", "=", " ", "0"}], ",", " ", 
            RowBox[{"i", " ", "<", " ", "numSteps"}], ",", " ", 
            RowBox[{"i", "++"}], ",", " ", 
            RowBox[{"(", "\n", "      ", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"i", ",", " ", "logInterval"}], "]"}], " ", "==", 
                 " ", "0"}], ",", " ", "\n", "       ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Export", "[", 
                   RowBox[{
                    RowBox[{"StringJoin", "[", 
                    RowBox[{"outDir", ",", " ", 
                    RowBox[{"ToString", "[", "i", "]"}], ",", " ", 
                    "\"\<.mx\>\""}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"maxCube", ",", " ", "minCube"}], "}"}]}], "]"}], 
                  ";", "\n", "        ", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"tempMinCube", ",", " ", "tempMaxCube"}], "}"}], 
                   " ", "=", " ", 
                   RowBox[{"{", 
                    RowBox[{"minCube", ",", " ", "maxCube"}], "}"}]}], ";", 
                  "\n", "        ", 
                  RowBox[{"tempHeightDifference", " ", "=", " ", 
                   RowBox[{"checkHeightDifference", "[", 
                    RowBox[{"tempMinCube", ",", " ", "tempMaxCube"}], "]"}]}],
                   ";", "\n", "        ", 
                  RowBox[{"tempStepNumber", " ", "=", " ", "i"}], ";"}], "\n",
                  "        ", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "WHAT", " ", "IS", " ", "THIS", " ", "LINE", " ", "DOING", 
                   " ", 
                   RowBox[{"HERE", "?"}]}], " ", "*)"}], "\n", "        ", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"displayGrids", "[", 
                    RowBox[{
                    "tempMaxGrid", ",", " ", "tempMinGrid", ",", " ", 
                    "blueColourRules"}], "]"}], ";"}], "*)"}], "\n", 
                 "        ", ")"}]}], "\n", "      ", "]"}], ";", "\n", 
              "      ", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{"OPTIMISATION", ":", " ", 
                 RowBox[{
                  RowBox[{"don", "'"}], "t", " ", "need", " ", "to", " ", 
                  "check", " ", "height", " ", "difference", " ", "each", " ", 
                  RowBox[{"time", ".", " ", "If"}], " ", "difference", " ", 
                  "is", " ", "1000"}]}], ",", " ", 
                RowBox[{
                "only", " ", "need", " ", "to", " ", "check", " ", "again", 
                 " ", "after", " ", "500", " ", "steps"}]}], "*)"}], "\n", 
              "      ", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{"OPTIMISATION", ":", " ", 
                 RowBox[{
                 "maybe", " ", "have", " ", "a", " ", 
                  "quickCheckHeightDifference"}]}], ",", " ", 
                RowBox[{
                "that", " ", "checks", " ", "a", " ", "few", " ", "cells", 
                 " ", "randomly"}]}], " ", "*)"}], "\n", "      ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"checkHeightDifference", "[", 
                  RowBox[{"maxCube", ",", " ", "minCube"}], "]"}], " ", "==", 
                 " ", "0"}], ",", " ", 
                RowBox[{"(", "\n", "         ", 
                 RowBox[{
                  RowBox[{"tempHeightDifference", " ", "=", " ", "0"}], ";", 
                  "     ", "\n", "         ", 
                  RowBox[{"Throw", "[", "1", "]"}]}], ")"}]}], "]"}], ";", 
              "\n", "      ", "\n", "      ", 
              RowBox[{"oneStep", "[", 
               RowBox[{
                RowBox[{"coinTosses", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
                RowBox[{"sites", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}], ")"}]}], 
           "\n", "    ", "]"}], ",", " ", "\n", "    ", 
          RowBox[{"Grid", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<Current step: \>\"", ",", " ", 
                RowBox[{"ToString", "[", "tempStepNumber", "]"}]}], "]"}], 
              "}"}], ",", " ", "\n", "          ", 
             RowBox[{"{", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<Height difference: \>\"", ",", " ", 
                RowBox[{"ToString", "[", "tempHeightDifference", "]"}]}], 
               "]"}], "}"}], ",", " ", "\n", "          ", 
             RowBox[{"{", 
              RowBox[{"cubesSlicesSimultaneously", "[", 
               RowBox[{"tempMaxCube", ",", " ", "tempMinCube"}], "]"}], "}"}],
              ",", "\n", "          ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"cubeLayers", "[", "tempMaxCube", "]"}], ",", " ", 
               RowBox[{"cubeLayers", "[", "tempMinCube", "]"}]}], "}"}]}], 
            "}"}], "\n", "    ", "]"}]}], "\n", "  ", "]"}], ";"}], "]"}], 
      ";", "\n", "  ", "\n", "  ", "\n", "  ", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<-- The height difference after \>\"", ",", " ", "i", ",", " ", 
        "\"\< steps was \>\"", ",", " ", "tempHeightDifference", ",", " ", 
        "\"\<.\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"tempHeightDifference", " ", "==", " ", "0"}], ",", " ", 
        RowBox[{"Return", "[", "1", "]"}]}], "]"}], ";", "\n", "  ", 
      RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\n", "]"}]}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"startChain", "[", 
   RowBox[{"dimension_", ",", " ", "t_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "coins", ",", " ", "timestamp", ",", "\n", "\t\t\t\t\t\t\t\t\t", 
      RowBox[{"dirName", " ", "=", " ", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"logDir", ",", " ", "\"\<coupling_\>\"", ",", " ", 
         RowBox[{"ToString", "[", "dimension", "]"}], ",", " ", 
         "\"\<_logs/\>\""}], "]"}]}], ",", " ", "\n", "\t\t\t\t\t\t\t\t\t", 
      RowBox[{"finalDirName", " ", "=", " ", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"logDir", ",", " ", "\"\<coupling_\>\"", ",", " ", 
         RowBox[{"ToString", "[", "dimension", "]"}], ",", " ", 
         "\"\<_samples/\>\""}], "]"}]}], ",", "\n", "\t\t\t\t\t\t\t\t\t", 
      RowBox[{"steps", " ", "=", " ", "t"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"dim", " ", "=", " ", "dimension"}], ";", "\n", "\t", 
     RowBox[{"sites", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "\t", 
     RowBox[{"coinTosses", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "\t", 
     RowBox[{"converged", " ", "=", " ", "0"}], ";", "\t", "\n", "\t", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"converged", " ", "==", " ", "0"}], ",", " ", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"Reset", " ", "stuff"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"maxCube", ",", " ", "minCube"}], "}"}], " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"generateMaxCube", "[", "dim", "]"}], ",", " ", 
            RowBox[{"generateMinCube", "[", "dim", "]"}]}], "}"}]}], ";", 
         "\n", "\t\t", 
         RowBox[{"Quiet", " ", "@", " ", 
          RowBox[{"DeleteDirectory", "[", 
           RowBox[{"dirName", ",", " ", 
            RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}]}], ";", 
         "\n", "\t    ", 
         RowBox[{"CreateDirectory", "[", "dirName", "]"}], ";", "\n", 
         "\t    ", "\n", "\t    ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "Generate", " ", "new", " ", "coin", " ", "tosses", " ", "and", 
            " ", "sites"}], ",", " ", 
           RowBox[{"and", " ", "log", " ", "them"}]}], "*)"}], "\t\t", "\n", 
         "\t\t", 
         RowBox[{"extendRandomLists", "[", "steps", "]"}], ";", "\n", "\t\t", 
         
         RowBox[{"steps", " ", "=", " ", 
          RowBox[{"Length", "[", "coinTosses", "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"dirName", ",", " ", "\"\<sites.csv\>\""}], "]"}], ",", 
           " ", "sites", ",", " ", "\"\<CSV\>\""}], "]"}], ";", "\n", "\t\t", 
         
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"dirName", ",", " ", "\"\<coin_tosses.csv\>\""}], "]"}], 
           ",", " ", "coinTosses", ",", " ", "\"\<CSV\>\""}], "]"}], ";", 
         "\n", "\t\t", "\n", "\t    ", 
         RowBox[{"converged", " ", "=", " ", 
          RowBox[{"nStepsMarkovChain", "[", "]"}]}], ";", "\n", "\t    ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"converged", " ", "==", " ", "1"}], ",", " ", "Break"}], 
          "]"}]}], "\n", "\t", ")"}]}], "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"timestamp", " ", "=", " ", 
      RowBox[{"DateString", "[", "]"}]}], ";", "\n", "\t", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{
        "finalDirName", ",", " ", "timestamp", ",", " ", "\"\<.mx\>\""}], 
        "]"}], ",", " ", "minCube"}], "]"}], ";", "\n", 
     RowBox[{"(*", "\t", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"StringJoin", "[", 
         RowBox[{
         "finalDirName", ",", " ", "timestamp", ",", " ", 
          "\"\< colourings.pdf\>\""}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"displaySlicePlot", "[", 
          RowBox[{"to3Colouring", "[", 
           RowBox[{"minCube", ",", " ", "blueColourRules"}], "]"}], "]"}], 
         ";", "\t", "\n", "\t", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{
            "finalDirName", ",", " ", "timestamp", ",", " ", 
             "\"\< heights.pdf\>\""}], "]"}], ",", " ", 
           RowBox[{"displaySlicePlot", "[", "minCube", "]"}]}], "]"}], ";", 
         "\n", "\t", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{
            "finalDirName", ",", " ", "timestamp", ",", " ", 
             "\"\< height plots.pdf\>\""}], "]"}], ",", " ", 
           RowBox[{"displayHeightPlot", "[", "minCube", "]"}]}], "]"}], 
         ";"}]}]}], "*)"}], "\n", "\t", 
     RowBox[{"DeleteDirectory", "[", 
      RowBox[{"dirName", ",", " ", 
       RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}], ";", "\n", 
     "\t", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<The chain took \>\"", ",", " ", "steps", ",", " ", 
       "\"\< steps to converge. Here are the results:\>\""}], "]"}], ";", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"cubeSlicesAllAxesSimultaneously", "[", "minCube", "]"}], "\n", 
      "\t", 
      RowBox[{"cubeLayers", "[", "minCube", "]"}]}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.896460344757543*^9, 3.896460344892894*^9}, {
   3.8964603775487823`*^9, 3.896460427172718*^9}, {3.896460505525404*^9, 
   3.896460507683814*^9}, 3.896460598098578*^9, 3.9121841491362123`*^9, {
   3.912185176747891*^9, 3.9121851950010757`*^9}, {3.912185273068263*^9, 
   3.9121852790699263`*^9}, {3.912185375050088*^9, 3.9121853774319563`*^9}, {
   3.912185782189267*^9, 3.9121858163212442`*^9}, {3.91218618071176*^9, 
   3.9121862071829767`*^9}, {3.912187031857287*^9, 3.912187033409878*^9}, {
   3.912413041483397*^9, 3.912413047210799*^9}, {3.9124132533760777`*^9, 
   3.9124132695067797`*^9}, {3.9124133063997383`*^9, 3.912413327221567*^9}, {
   3.912413421740149*^9, 3.912413427966223*^9}, {3.912413722012274*^9, 
   3.912413722503805*^9}, {3.912414130718193*^9, 3.9124141336035213`*^9}, {
   3.912414204746469*^9, 3.912414262804587*^9}, {3.9124143519006166`*^9, 
   3.912414421557913*^9}, {3.91241449233878*^9, 3.912414496095799*^9}, {
   3.9124146536513567`*^9, 3.9124146650573673`*^9}, {3.912414714602222*^9, 
   3.912414727267124*^9}, 3.9124148030817137`*^9, {3.9124168506681767`*^9, 
   3.912416856065777*^9}, {3.912417188142894*^9, 3.9124171944126053`*^9}, {
   3.9124172646892433`*^9, 3.912417293326352*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"6babd98d-b119-4bcd-9c2e-7c324a23bf54"],

Cell["\<\
Do not run this unless you want to start the simulation for a cube of size 15!\
\>", "Text",
 CellChangeTimes->{{3.912445692094102*^9, 3.912445717763008*^9}, {
  3.912445752519793*^9, 
  3.912445752790062*^9}},ExpressionUUID->"c6dc01b4-d9e3-41d4-a11f-\
2a7a1bfb6ae9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"startChain", "[", 
  RowBox[{"15", ",", " ", "2000"}], "]"}]], "Code",
 CellChangeTimes->{{3.912412868042281*^9, 3.912412919960894*^9}, {
  3.912414752290742*^9, 3.9124147552345533`*^9}},
 CellLabel->
  "In[429]:=",ExpressionUUID->"079fc432-aa5d-4e3b-8dc1-2ab978cbc470"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "2000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 2000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.9124148178812113`*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"cb9a0ce4-ea62-4c56-b218-a6b23141e656"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.912414817883876*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"88de0c62-6f08-4b1a-a6ff-af411f862be6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "2000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "9506", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 2000, " steps was ", 9506, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.912414823034919*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"4130b192-24fe-42cb-ab2d-893cd2637c7c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "4000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 4000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.912414823174*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"7c11b217-1799-499c-bcfd-815c18965efe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.9124148231767387`*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"cf2c6d8c-fbaa-49e5-9111-ef2382824263"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "4000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "9506", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 4000, " steps was ", 9506, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.912414833858685*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"074e25b6-17fe-45a0-9176-4d7be8582130"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "8000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 8000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.912414834127819*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"7d77fe8b-ab57-47c5-9d90-92a7a96b0523"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.912414834130933*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"fad3935a-b201-4d51-bc67-f05e14aa33fc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "8000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "9506", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 8000, " steps was ", 9506, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912414852130447*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"5d8543d5-8da5-4443-873b-bd08472bbf7e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "16000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 16000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912414852691204*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"8c456664-06c9-45a4-b90e-5bf4dff908ab"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124148526940002`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"e81475ea-e674-4aaf-aa78-6e48327c7adc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "16000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "9506", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 16000, " steps was ", 9506, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124148956278477`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"912a99bd-56f0-47ec-9a45-fb830a19ba30"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "32000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 32000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912414896772156*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"3955792e-6a61-47b1-8a83-66643ac4cb4c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124148967751007`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"8041e9d3-40de-429c-81e5-d8a569ac918e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "32000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "8878", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 32000, " steps was ", 8878, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912414966034191*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"73f38ab5-536b-4469-9637-94b980091967"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "64000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 64000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912414968308062*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"0d443d62-0e63-4722-b1b7-deba12f3a191"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912414968310853*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"5a7f47c9-d52a-4d8b-91a7-10c9fe81f727"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "64000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "7638", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 64000, " steps was ", 7638, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912415106425127*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"902f528b-c9ba-431f-8699-90837ab28d6e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "128000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 128000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912415111069091*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"bbc4fe57-3363-4f16-85ae-de81c202aad0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124151110720463`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"9a029207-c78e-46d2-80dd-acb855169a09"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "128000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "5512", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 128000, " steps was ", 5512, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912415390586821*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"c32df61f-89d8-4010-8f1f-29563288eb79"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "256000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 256000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912415400086726*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"d192bba6-50cf-4711-9e9a-15aee38d5b89"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124154000900087`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"b7e666e9-92b0-4472-bbac-94e05fb53ccd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "256000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "2662", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 256000, " steps was ", 2662, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124159510999527`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"31c9dab0-5003-49ec-bd3c-1db79e7f464f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "512000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 512000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912415969422639*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"2b5ae421-52cf-446c-966c-326c02c448f5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124159694259872`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"a0c7e168-ddcc-43a3-af76-cf29585bd920"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "512000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "528", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 512000, " steps was ", 528, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912417070426071*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"41b3afc5-49e2-49b5-b53a-20ede96cca42"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "1024000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 1024000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912417107751834*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"61f50e41-4102-4807-874b-7da40b50f749"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912417107755316*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"81d1fd93-f271-432a-bbac-c26e7a074213"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "1024000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]",
    "38", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 1024000, " steps was ", 38, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912419255168951*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"81c8d74c-cea0-4901-80ba-84972b68ef0b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "2048000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 2048000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912419329947432*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"c42251f0-90ee-4078-a67b-76b315bf5e80"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20480", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20480, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124193299515047`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"7c27a79f-0a5d-4748-b93a-42dba9dffd28"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "981377", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "0", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 981377, " steps was ", 0, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912421408537613*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"276daed3-ce8c-4766-ad81-8f5e0e4db71d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The chain took \"\>", "\[InvisibleSpace]", "2048000", 
   "\[InvisibleSpace]", "\<\" steps to converge. Here are the results:\"\>"}],
  
  SequenceForm[
  "The chain took ", 2048000, " steps to converge. Here are the results:"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124214085419703`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"0b8b7123-3ede-4d62-9cb3-2387bfcdb046"]
}, Open  ]]
}, Open  ]],

Cell["Finally, the output for the cube of size 15 :", "Text",
 CellChangeTimes->{{3.9124457307074623`*^9, 
  3.912445748355562*^9}},ExpressionUUID->"4fb8cb37-2a12-47da-b2ff-\
cd1b9c17dba2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"outCube15", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
     "logDir", ",", " ", 
      "\"\<coupling_15_samples/Sun 24 Dec 2023 21:13:28.mx\>\""}], "]"}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.912443107223297*^9, 3.912443134657501*^9}, {
  3.9124431746889563`*^9, 3.9124432064471292`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"133e8dfb-481b-420c-aaff-48447d5a9a0d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cubeLayers", "[", "outCube15", "]"}], "\n", 
 RowBox[{"cubeSlicesAllAxesSimultaneously", "[", "outCube15", "]"}], "\n", 
 RowBox[{"cubeSlicesAllAxesSeparately", "[", "outCube15", "]"}]}], "Code",
 CellChangeTimes->{{3.912421610557783*^9, 3.91242162992883*^9}, {
  3.912443214832703*^9, 3.912443266269453*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"41b7f8ba-34ea-4163-85b2-17ab13b150fc"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 6, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 8, 1}}, Typeset`size$$ = {
    406., {181., 185.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`displayCube[$CellContext`dim$61260, 
        Part[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
         "], 
         Span[$CellContext`i$$, -$CellContext`i$$], 
         Span[$CellContext`i$$, -$CellContext`i$$], 
         Span[$CellContext`i$$, -$CellContext`i$$]], "DeepSeaColors"], 
      "Specifications" :> {{$CellContext`i$$, 1, 8, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{452., {224.6875, 230.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.9124216304565353`*^9, 3.912421789055585*^9, 
  3.912443216129654*^9, 3.9124432666758337`*^9, 3.912446792842936*^9, 
  3.9124472811518383`*^9, 3.912585256460669*^9, 3.913939137776622*^9, 
  3.915413111536447*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"4ff69286-4aa8-45af-820c-c01cfeb704af"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
    551., {267.6875, 273.3125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> \
$CellContext`cubeSlicesAllAxesSimultaneouslyGrid[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
        
        "], $CellContext`i$$], 
      "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{597., {312.6875, 318.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.9124216304565353`*^9, 3.912421789055585*^9, 
  3.912443216129654*^9, 3.9124432666758337`*^9, 3.912446792842936*^9, 
  3.9124472811518383`*^9, 3.912585256460669*^9, 3.913939137776622*^9, 
  3.9154131118519917`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"b91d8995-9073-44d5-a76d-dcdbec466f5c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        180., {267.3875, 273.0125}}, Typeset`update$$ = 0, Typeset`initDone$$,
         Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$61308, 
              1] = {$CellContext`i$$}; \
$CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
             
             "], $CellContext`args$61308]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{243., {312.6875, 318.3125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        180., {267.3875, 273.0125}}, Typeset`update$$ = 0, Typeset`initDone$$,
         Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$61309, 
              2] = {$CellContext`i$$}; \
$CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
             
             "], $CellContext`args$61309]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{243., {312.6875, 318.3125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        180., {267.3875, 273.0125}}, Typeset`update$$ = 0, Typeset`initDone$$,
         Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$61310, 
              3] = {$CellContext`i$$}; \
$CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
             
             "], $CellContext`args$61310]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{243., {312.6875, 318.3125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.9124216304565353`*^9, 3.912421789055585*^9, 
  3.912443216129654*^9, 3.9124432666758337`*^9, 3.912446792842936*^9, 
  3.9124472811518383`*^9, 3.912585256460669*^9, 3.913939137776622*^9, 
  3.9154131119769897`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"a51bd0d0-5eb4-4335-a5f9-f2e725270d51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"viewChangeSteps", "[", 
        RowBox[{
        "n_", ",", " ", "maxGrid_", ",", " ", "minGrid_", ",", " ", 
         "steps_"}], "]"}], " ", ":=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"gridsList", " ", "=", " ", 
            RowBox[{"NestList", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"oneStep", "[", 
                RowBox[{"n", ",", " ", 
                 RowBox[{"Sequence", " ", "@@", " ", "#"}]}], "]"}], " ", 
               "&"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}], ",", " ", 
              "steps"}], "]"}]}], ";", " ", "\n", 
           RowBox[{"Manipulate", "[", 
            RowBox[{
             RowBox[{"Grid", "[", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"displayCube", "[", 
                  RowBox[{"n", ",", " ", 
                   RowBox[{
                    RowBox[{"gridsList", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", " ", 
                 RowBox[{"displayCube", "[", 
                  RowBox[{"n", ",", " ", 
                   RowBox[{
                    RowBox[{"gridsList", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "}"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "1", ",", "steps", ",", "1"}], "}"}]}], 
            "]"}]}], ")"}], "\n", "\n", 
         RowBox[{"checkHeightDifference", "[", 
          RowBox[{"n_", ",", " ", "maxGrid_", ",", " ", "minGrid_"}], "]"}]}],
         " ", ":=", " ", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"maxGrid", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", " ", "j", ",", " ", "k"}], "]"}], "]"}], 
              " ", "-", " ", 
              RowBox[{"minGrid", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", " ", "j", ",", " ", "k"}], "]"}], "]"}]}], 
             "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", "2", ",", " ", 
              RowBox[{"n", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"j", ",", " ", "2", ",", " ", 
              RowBox[{"n", " ", "-", " ", "1"}]}], "}"}]}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"k", ",", " ", "2", ",", " ", 
            RowBox[{"n", " ", "-", " ", "1"}]}], "}"}]}], "]"}]}]}], ",", " ",
       "2"}], "]"}], "\n", "\n", 
    RowBox[{"viewAfterSteps", "[", 
     RowBox[{
     "n_", ",", " ", "maxGrid_", ",", " ", "minGrid_", ",", " ", "steps_", 
      ",", " ", "logInterval_", ",", " ", "prevStep_"}], "]"}]}], " ", ":=", 
   " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"step", " ", "=", " ", "prevStep"}], "}"}], ",", "\n", "  ", 
       RowBox[{
        RowBox[{"PrintTemporary", "[", 
         RowBox[{"ProgressIndicator", "[", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"step", "/", 
            RowBox[{"(", 
             RowBox[{"steps", " ", "+", " ", "prevStep"}], ")"}]}], "]"}], 
          "]"}], "]"}], ";", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"time", ",", " ", "finalGrids"}], "}"}], " ", "=", " ", 
         RowBox[{"AbsoluteTiming", "[", 
          RowBox[{"Catch", "[", 
           RowBox[{"Nest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", "\n", "  ", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"step", ",", " ", "logInterval"}], "]"}], " ", "==",
                     " ", "0"}], " ", "||", " ", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ",", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Export", "[", 
                    RowBox[{
                    RowBox[{"StringJoin", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", " ", 
                    "\"\<output files/coupling_\>\"", ",", " ", 
                    RowBox[{"ToString", "[", "n", "]"}], ",", " ", 
                    "\"\</log_\>\"", ",", " ", 
                    RowBox[{"ToString", "[", "step", "]"}], ",", " ", 
                    "\"\<.mx\>\""}], "]"}], ",", " ", "#"}], "]"}], ";", " ", 
                    "\n", "    ", 
                    RowBox[{"Print", "[", 
                    RowBox[{"checkHeightDifference", "[", 
                    RowBox[{"n", ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ")"}]}],
                  "]"}], ";", " ", "\n", "  ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                  RowBox[{"Throw", "[", "#", "]"}]}], "]"}], ";", " ", "\n", 
                "  ", 
                RowBox[{"step", "++"}], ";", " ", "\n", "  ", 
                RowBox[{"oneStep", "[", 
                 RowBox[{"n", ",", " ", 
                  RowBox[{"Sequence", " ", "@@", " ", "#"}]}], "]"}]}], ")"}],
               " ", "&"}], ",", " ", "\n", "  ", 
             RowBox[{"{", 
              RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}], ",", " ", 
             RowBox[{"steps", " ", "+", " ", "1"}]}], "]"}], "]"}], "]"}]}], 
        ";", "\n", "  ", 
        RowBox[{"{", 
         RowBox[{"time", ",", " ", "step", ",", " ", "finalGrids"}], 
         "}"}]}]}], "\n", "]"}], "\n", "\n", 
     RowBox[{"displayTime", "[", "time_", "]"}]}], " ", ":=", " ", 
    RowBox[{"DateString", "[", 
     RowBox[{"time", ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Hour\>\"", ",", " ", "\"\<:\>\"", ",", " ", "\"\<Minute\>\"", ",",
         " ", "\"\<:\>\"", ",", " ", "\"\<Second\>\""}], "}"}]}], "]"}]}]}], 
  "*)"}]], "Code",
 CellChangeTimes->{{3.896460701243726*^9, 3.896460711875445*^9}, {
   3.8965083628926687`*^9, 3.8965083911961737`*^9}, 3.912412819884923*^9},
 CellLabel->
  "In[158]:=",ExpressionUUID->"974ffde9-b169-46f3-a1ad-6a3e27e09793"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack1", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \\\"2\\\", \
\\\"}\\\"}]\\).\"", 2, 70, 905, 34808859521578452723, "Local", 
   "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.915376310587242*^9},
 CellLabel->"",ExpressionUUID->"93d1431e-35bc-4136-90f6-642c65238361"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack1", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \\\"2\\\", \
\\\"}\\\"}]\\).\"", 2, 70, 907, 34808859521578452723, "Local", 
   "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.915376310647935*^9},
 CellLabel->"",ExpressionUUID->"3ebc18e9-12c7-4fa8-96e0-8c688b100f8c"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack1", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \\\"2\\\", \
\\\"}\\\"}]\\).\"", 2, 70, 908, 34808859521578452723, "Local", 
   "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.915376310696179*^9},
 CellLabel->"",ExpressionUUID->"9c75a3eb-7687-42c6-8039-e707d08b8d6e"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \
\\!\\(\\*StyleBox[RowBox[{\\\"Developer`FromPackedArray\\\", \\\"::\\\", \
\\\"punpack1\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 70, 909, 34808859521578452723, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.915376310748128*^9},
 CellLabel->"",ExpressionUUID->"566fb994-dd67-4f56-9988-cff3192c46bb"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 758.25},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1. Inherited,
FrontEndVersion->"13.0 for Linux x86 (64-bit) (December 2, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["DarkStyle for Notebooks", "Title"], 
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Tongue menu cells", "Section"], 
         Cell[
          StyleData[
          "WolframAlphaShort", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "WolframAlphaLong", "Backspace" -> "Input"}, EvaluationMode -> 
          "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaShortInput", StyleDefinitions -> StyleData["Input"]], 
          EvaluationMode -> "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]], 
              CellBaseline -> Baseline], None}, {None, None}}, ShowCodeAssist -> 
          False, FormatType -> TextForm, FontFamily -> "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaLong", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "Input", "Backspace" -> "WolframAlphaShort"}, 
          EvaluationMode -> "WolframAlphaLong", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[WolframAlphaPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData["WolframAlphaFullOutput"], 
          CellMargins -> {{20, 10}, {Inherited, Inherited}}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ExternalLanguage"], CellFrame -> 1, 
             CellMargins -> {{66, 10}, {8, 8}}, 
             StyleKeyMapping -> {"Backspace" -> "Input"}, Evaluatable -> True,
              EvaluationMode -> "ExternalLanguage", CellGroupingRules -> 
             "InputGrouping", StripStyleOnPaste -> True, 
             CellEvaluationLanguage -> "Python", 
             CellFrameMargins -> {{4, 8}, {8, 8}}, CellFrameColor -> 
             RGBColor[0.2549, 0.23137, 0.42549], CellFrameLabels -> {{
                Cell[
                 BoxData[
                  DynamicBox[
                   ToBoxes[
                   ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged; 
                    FrontEnd`Private`MakeExternalLanguageMenu[
                    ExternalEvaluate`FE`GetDefaultCellEvaluationLanguage[], 
                    ExternalEvaluate`FE`GetExternalLanguageMenuData[]], 
                    StandardForm], 
                   TrackedSymbols :> {
                    ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged}, 
                   ImageSizeCache -> {
                    35., {10.64208984375, 17.35791015625}}]], "Output", 
                 Background -> None, CellFrame -> 0], None}, {None, None}}, 
             CellFrameLabelMargins -> 0, AllowInlineCells -> False, 
             Hyphenation -> False, AutoQuoteCharacters -> {}, 
             PasteAutoQuoteCharacters -> {}, LanguageCategory -> "Formula", 
             ScriptLevel -> 1, MenuSortingValue -> 1800, FontFamily -> Dynamic[
               CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
             FontColor -> GrayLevel[0.97], Background -> 
             RGBColor[0.18, 0.172, 0.22]], 
            Cell[
             StyleData["ExternalLanguage", "Presentation"], 
             CellMargins -> {{101, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "SlideShow"], ShowGroupOpener -> 
             False, CellMargins -> {{110, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "Printout"], 
             CellMargins -> {{48, 10}, {8, 8}}, 
             CellFrameMargins -> {{2, 8}, {8, 8}}]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Notebook options settings", "Section"], 
         Cell[
          StyleData[All, "Working"], InitializationCellEvaluation -> False, 
          DockedCells -> None, DefaultNewCellStyle -> "Code", 
          ShowPredictiveInterface -> False], 
         Cell[
          StyleData["Notebook"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0., 0.8, 1], "HoverColor" -> 
            RGBColor[0.78, 0.64, 1], "Thickness" -> 1.3, "Widths" -> {2, 8}}, 
          StyleKeyMapping -> {
           "==" -> "WolframAlphaLong", "Backspace" -> "WolframAlphaShort", 
            "=" -> "WolframAlphaShort", "*" -> "Item", ">" -> 
            "ExternalLanguage", "Backspace" -> "Code"}, 
          AutoStyleOptions -> {
           "CommentStyle" -> {
             FontColor -> RGBColor[0.89, 0.56, 1., 0.95], ShowAutoStyles -> 
              False, ShowSyntaxStyles -> False, AutoNumberFormatting -> 
              False}, "ExcessArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "FunctionLocalVariableStyle" -> {
             FontColor -> RGBColor[0.52549, 0.843137, 1.]}, 
            "GraphicsCompatibilityProblemStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "LocalScopeConflictStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "LocalVariableStyle" -> {
             FontColor -> RGBColor[0., 0.8200000000000001, 0.32]}, 
            "MissingArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "MisspelledWordStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "NoKernelPresentStyle" -> {
             FontColor -> 
              RGBColor[
               0.16470588235294117`, 0.6313725490196078, 0.596078431372549]}, 
            "PatternVariableStyle" -> {
             FontColor -> RGBColor[0.11, 1., 0.08], FontSlant -> "Italic"}, 
            "StringStyle" -> {
             FontColor -> RGBColor[0.98, 0.71, 0.], ShowAutoStyles -> False, 
              ShowSyntaxStyles -> False, AutoNumberFormatting -> False}, 
            "UndefinedSymbolStyle" -> {FontColor -> RGBColor[0.42, 0.94, 1]}, 
            "UnknownOptionStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "UnwantedAssignmentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 
                0.1843137254901961]}}, 
          CodeAssistOptions -> {
           "AutoConvertEnable" -> False, 
            "HeadHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}, "MatchHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}}, TranslationOptions -> {"Language" -> None}, FontColor -> 
          RGBColor[0, 0.7, 1], Background -> GrayLevel[0.15]], 
         Cell[
          StyleData["DialogStyle"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["NotebookObject"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["LinguisticAssistant"], FontColor -> 
          RGBColor[0, 0.7, 1]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Title and Section Cells", "Section"], 
         Cell[
          StyleData["Title"], FontColor -> GrayLevel[1]], 
         Cell[
          StyleData["Chapter"], FontColor -> RGBColor[0.8, 0.8, 0.8]], 
         Cell[
          StyleData["Subchapter"], FontColor -> RGBColor[0.65, 0.05, 0.65]], 
         Cell[
          StyleData["Subtitle"], FontColor -> 
          RGBColor[0.196078, 0.694118, 0.862745]], 
         Cell[
          StyleData["Subsubtitle"], FontColor -> 
          RGBColor[0.196078, 0.394118, 0.562745]], 
         Cell[
          StyleData["Subsubtitle"]], 
         Cell[
          StyleData["Section"], FontColor -> 
          RGBColor[
           0.1399099717708095, 0.5224231326771954, 0.6501869230182346]], 
         Cell[
          StyleData["Subsection"], FontColor -> GrayLevel[0.749996]], 
         Cell[
          StyleData["Subsubsection"], FontColor -> 
          RGBColor[0.823529, 0.490654, 0.202274]], 
         Cell[
          StyleData["Subsubsubsection"], FontColor -> 
          RGBColor[0.954147, 0.694224, 0.124651]], 
         Cell[
          StyleData["Subsubsubsubsection"], FontColor -> 
          RGBColor[0.913237, 0.365469, 0.0854353]], 
         Cell[
          StyleData["Text"], FontFamily -> "Gill Sans Light", FontSize -> 14, 
          FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
          GrayLevel[0.683803]], 
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[0, 0.7, 1]], CellMargins -> {{81, 10}, {4, 8}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "Subitem", "*" -> "Subitem"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "Item", 
          CounterAssignments -> {{"Subitem", 0}, {"Subsubitem", 0}}, 
          MenuSortingValue -> 1600, FontFamily -> "Source Sans Pro", FontSize -> 
          15], 
         Cell[
          StyleData["ItemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubsubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          CellGroupData[{
            Cell["Chapter", "Subsection"], 
            Cell[
             StyleData["Chapter"], CounterIncrements -> "Chapter", 
             CounterAssignments -> {{"Subchapter", 0}, {"Section", 0}, {
               "Equation", 0}, {"Figure", 0}, {"Subsubtitle", 0}, {
               "Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1150, 
             MenuCommandKey :> "2"], 
            Cell[
             StyleData["Subchapter"], CellDingbat -> 
             StyleBox["\[MathematicaIcon]", Alignment -> Baseline, 
               RGBColor[0., 0.043, 0.9]], CounterIncrements -> "Subchapter", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1200, 
             MenuCommandKey :> "3"]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Input and Output cells", "Section"], 
         Cell[
          StyleData["Code"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontWeight -> Plain, FontColor -> GrayLevel[1], 
          Background -> GrayLevel[0.1]], 
         Cell[
          StyleData["InitializationCell"], 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellFrameMargins -> {{10, 10}, {5, 5}}, CellFrameLabelMargins -> -5,
           FontColor -> GrayLevel[1], Background -> GrayLevel[0.25]], 
         Cell[
          StyleData["Input"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontColor -> GrayLevel[0.7]], 
         Cell[
          StyleData["Output"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontSize -> 13], 
         
         Cell[
          StyleData["Message"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          RGBColor[
           0.704600595101854, 0.24277103837644007`, 0.22278171969176777`]], 
         Cell[
          StyleData["Print"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          GrayLevel[0.3]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["misc", "Section"], 
         Cell[
          StyleData["InformationCell"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.760174, 0.600641, 0.675288]}, FontColor -> 
          GrayLevel[0.3]], 
         Cell[
          StyleData["InformationLink"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["InformationLinkLF"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["CellLabel"], 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontSize -> 9]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Formulas and Programming", "Section"], 
         Cell[
          StyleData["DisplayFormula"], FontColor -> GrayLevel[0.85]], 
         Cell[
          StyleData["DisplayFormulaNumbered"], FontColor -> GrayLevel[0.85]], 
         
         Cell[
          StyleData["Program"], CellFrameColor -> GrayLevel[0.4]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          TextData[{"Styles for ", 
            StyleBox["Mathematica", FontSlant -> "Italic"], 
            " System\[Hyphen]specific Elements"}], "Section", 
          CellChangeTimes -> {{3.601920784160323*^9, 3.60192078489342*^9}, 
            3.60356525124664*^9, {3.6037117681643677`*^9, 
            3.6037117683195887`*^9}}], 
         Cell[
          CellGroupData[{
            Cell["FormatType Styles", "Subsection"], 
            Cell[
             StyleData["StandardForm"]], 
            Cell[
             StyleData["CellExpression"], FontColor -> GrayLevel[0], 
             Background -> GrayLevel[0.75]], 
            Cell[
             StyleData["CellLabel"], FontSize -> 9, FontColor -> 
             RGBColor[0.603861, 0.615915, 0.607843]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
            "Graphics Styles", "Subsection", 
             CellChangeTimes -> {{3.603565272271762*^9, 
              3.603565284491351*^9}}], 
            Cell[
             StyleData["GraphicsAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["GraphicsFrame"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["Graphics3DAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Arial", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]]}, 
           Open]]}, Open]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "13.0 for Linux x86 (64-bit) (December 2, 2021)", StyleDefinitions -> 
  "Default.nb"],
ExpressionUUID->"15b5dd27-6829-4586-82c0-a7ea75e62e6d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 75, 0, 38, "CodeText",ExpressionUUID->"ec0c784a-ce9d-4c5a-b232-cf84abfadbcd"],
Cell[636, 22, 436, 8, 66, "Text",ExpressionUUID->"1c0f1225-b49f-4433-89f2-3809bd6fabfe"],
Cell[CellGroupData[{
Cell[1097, 34, 2752, 67, 221, "Code",ExpressionUUID->"e646de66-4019-4a45-9f24-b862c681f906"],
Cell[3852, 103, 439, 10, 28, "Message",ExpressionUUID->"4e896bef-be97-4176-9320-885695276cad"],
Cell[4294, 115, 305, 6, 41, "Output",ExpressionUUID->"16f1a296-eb73-47de-b328-a8609255a50c"]
}, Open  ]],
Cell[4614, 124, 553, 11, 92, "Text",ExpressionUUID->"7def9534-b5ec-46ec-afcf-1dbb61179113"],
Cell[5170, 137, 396, 8, 46, "Input",ExpressionUUID->"5bd8729e-1b5d-4b5f-b063-cb7f0991f434"],
Cell[5569, 147, 162, 3, 32, "Text",ExpressionUUID->"8a942dd6-5ed6-43b7-bf58-29d355d7d106"],
Cell[5734, 152, 545, 12, 56, "Code",ExpressionUUID->"25294259-c6c3-46b8-9874-58800bbfe360"],
Cell[6282, 166, 192, 6, 52, "Text",ExpressionUUID->"137fda44-2f58-466e-b9cf-77f14954051f"],
Cell[6477, 174, 2844, 79, 303, "Code",ExpressionUUID->"27a3c9a8-323b-4c69-ac0d-666ac9c09b77"],
Cell[9324, 255, 339, 7, 52, "Text",ExpressionUUID->"ba87411f-0479-4ab8-9fa6-a40adbcfb0e3"],
Cell[9666, 264, 14577, 371, 1231, "Code",ExpressionUUID->"fcac06f5-8334-4b9b-ad54-5a70c0e8fdd2"],
Cell[24246, 637, 14885, 303, 551, "Code",ExpressionUUID->"34a5ce17-7bbe-4b28-b8dc-8f3c89a7e4af"],
Cell[39134, 942, 5804, 135, 283, "Code",ExpressionUUID->"43c9ca43-dc34-48cc-ba70-58f0db2b1acf"],
Cell[44941, 1079, 2769, 41, 412, "Text",ExpressionUUID->"b80fafbb-a30b-4188-b067-42d643f41c2b"],
Cell[47713, 1122, 24824, 605, 1100, "Code",ExpressionUUID->"1cb6fad7-3d75-46e5-bdfd-cc2c5aa8136f"],
Cell[CellGroupData[{
Cell[72562, 1731, 286, 6, 47, "Code",ExpressionUUID->"f4ba13d1-148e-4edf-aee7-cb940163b900"],
Cell[72851, 1739, 18114, 343, 2211, "Output",ExpressionUUID->"2fe483c3-7064-433c-acb8-81e54fc3a415"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91002, 2087, 490, 9, 47, "Code",ExpressionUUID->"e4a19d2d-941b-4e72-be2b-a9812fd4f8fc"],
Cell[91495, 2098, 12831, 242, 1927, "Output",ExpressionUUID->"40cde0d1-d8bc-4e26-aec7-4f9b3b932895"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104363, 2345, 279, 6, 47, "Code",ExpressionUUID->"9795074e-43fb-4107-b494-babd7733eaec"],
Cell[104645, 2353, 9112, 166, 654, "Output",ExpressionUUID->"071ee6e1-aae1-4dea-978f-353b957945d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113794, 2524, 187, 3, 54, "Subsection",ExpressionUUID->"3cf80991-5947-4fae-80f3-2de0a0a27c13"],
Cell[CellGroupData[{
Cell[114006, 2531, 303, 5, 34, "Code",ExpressionUUID->"4010bd6b-b10a-4a65-9a18-a530dbaa938a"],
Cell[114312, 2538, 493, 11, 28, "Message",ExpressionUUID->"5cba76dd-9b79-44a9-8f94-ae878b8ba7fe"],
Cell[114808, 2551, 10810, 269, 208, "Output",ExpressionUUID->"f4a347de-8587-41f9-97f0-6fdeeedea021"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125655, 2825, 275, 4, 34, "Code",ExpressionUUID->"52c139c6-ba1f-4750-b7c4-512e8ca86c1c"],
Cell[125933, 2831, 203, 3, 38, "Output",ExpressionUUID->"a61ac58d-31b8-4dfd-89a5-771a2f2dc211"]
}, Open  ]],
Cell[126151, 2837, 1563, 38, 138, "Code",ExpressionUUID->"2148de09-ed05-4808-bed8-2a80b8dfc5bc"],
Cell[CellGroupData[{
Cell[127739, 2879, 677, 10, 34, "Code",ExpressionUUID->"57af5111-0f01-4f8c-80d8-9d8ac3a7ab54"],
Cell[128419, 2891, 3917, 74, 302, "Output",ExpressionUUID->"650338cc-4e51-4692-b991-d23fd3fd6275"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132373, 2970, 797, 11, 56, "Code",ExpressionUUID->"1c71fc96-a296-4b0b-ab7f-73c9848f5424"],
Cell[133173, 2983, 3496, 64, 654, "Output",ExpressionUUID->"2c1d3422-ef7f-4fe4-80b7-0a4ecc1ddf2b"],
Cell[136672, 3049, 8603, 166, 654, "Output",ExpressionUUID->"ebcbb6f7-f20e-4739-bb83-333a850d7d8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145312, 3220, 556, 9, 56, "Code",ExpressionUUID->"af9d4561-7cad-4ed1-ba9c-ad923ed74cc4"],
Cell[145871, 3231, 5160, 102, 654, "Output",ExpressionUUID->"7d2a1274-27fd-457f-8d63-4928f3d44c6c"],
Cell[151034, 3335, 3388, 64, 655, "Output",ExpressionUUID->"8db44f02-6a9f-477f-86b8-10a012be52d3"]
}, Open  ]],
Cell[154437, 3402, 658, 11, 72, "Text",ExpressionUUID->"00cba1b4-7863-4035-b775-b728565720c5"],
Cell[CellGroupData[{
Cell[155120, 3417, 419, 7, 34, "Code",ExpressionUUID->"8a6f1077-1d8d-412d-b17e-7e387e7a6104"],
Cell[155542, 3426, 6701, 140, 931, "Output",ExpressionUUID->"20f7c4cb-b0db-4a16-82ed-b1c3b2f82431"],
Cell[162246, 3568, 528, 10, 28, "Message",ExpressionUUID->"eb7999d1-0e6f-4802-8d3d-1e74b4723a73"],
Cell[162777, 3580, 528, 10, 28, "Message",ExpressionUUID->"3c20dc61-67a9-4faf-a1cc-174ff023f5ce"],
Cell[163308, 3592, 528, 10, 28, "Message",ExpressionUUID->"24cb0583-3aa6-4852-a107-8a0feebcafbb"],
Cell[163839, 3604, 443, 9, 28, "Message",ExpressionUUID->"72f7c2e6-06bc-4260-9684-24b69d4742b5"],
Cell[164285, 3615, 530, 10, 28, "Message",ExpressionUUID->"ea0c4d14-b57c-4889-b608-dddce031db83"],
Cell[164818, 3627, 528, 10, 28, "Message",ExpressionUUID->"1e477417-0ef8-4681-8e43-6d9bfe1a5981"],
Cell[165349, 3639, 528, 10, 28, "Message",ExpressionUUID->"6deb6a29-72c6-4415-b107-f1cd625960e0"],
Cell[165880, 3651, 443, 9, 28, "Message",ExpressionUUID->"df309c55-5be4-4a3e-95d6-8760f17f36c2"],
Cell[166326, 3662, 8112, 170, 389, "Output",ExpressionUUID->"0cf7af11-1c17-42bb-9958-8cd8ecfaa108"]
}, Open  ]],
Cell[174453, 3835, 462, 9, 52, "Text",ExpressionUUID->"d7acfd83-2905-4c91-8de5-560bb0ab3d78"],
Cell[174918, 3846, 1023, 23, 76, "Code",ExpressionUUID->"4a151634-84be-4917-bc9d-83c658b41256"],
Cell[175944, 3871, 195945, 3228, 359, 3000, 63, "CachedBoxData", "BoxData", "Input",ExpressionUUID->"cabde1b3-64e9-4f2a-bb8d-089c9750c524"],
Cell[371892, 7101, 254253, 4183, 359, 3140, 64, "CachedBoxData", "BoxData", "Input",ExpressionUUID->"b2fc9085-dff3-4763-9494-f96de94b9815"],
Cell[626148, 11286, 277, 6, 32, "Text",ExpressionUUID->"0523a527-9135-41ff-91cc-a27f8aea4859"],
Cell[CellGroupData[{
Cell[626450, 11296, 757, 16, 56, "Code",ExpressionUUID->"d51e056e-190d-42a3-a07a-ca0d26fe9e42"],
Cell[627210, 11314, 9167, 213, 56, "Output",ExpressionUUID->"6089ec0f-ec43-4e5b-bd74-f70880f89d89"],
Cell[636380, 11529, 9216, 214, 56, "Output",ExpressionUUID->"caee3b95-5e6c-4420-846b-cafa9b8d5c83"]
}, Open  ]],
Cell[645611, 11746, 239, 7, 52, "Text",ExpressionUUID->"49bd5e14-9583-45dc-952d-0822b9efa7c7"],
Cell[645853, 11755, 25555, 614, 2221, "Code",ExpressionUUID->"6babd98d-b119-4bcd-9c2e-7c324a23bf54"],
Cell[671411, 12371, 277, 6, 32, "Text",ExpressionUUID->"c6dc01b4-d9e3-41d4-a11f-2a7a1bfb6ae9"],
Cell[CellGroupData[{
Cell[671713, 12381, 294, 6, 34, "Code",ExpressionUUID->"079fc432-aa5d-4e3b-8dc1-2ab978cbc470"],
Cell[CellGroupData[{
Cell[672032, 12391, 716, 14, 24, "Print",ExpressionUUID->"cb9a0ce4-ea62-4c56-b218-a6b23141e656"],
Cell[672751, 12407, 714, 14, 24, "Print",ExpressionUUID->"88de0c62-6f08-4b1a-a6ff-af411f862be6"],
Cell[673468, 12423, 837, 16, 24, "Print",ExpressionUUID->"4130b192-24fe-42cb-ab2d-893cd2637c7c"],
Cell[674308, 12441, 711, 14, 24, "Print",ExpressionUUID->"7c11b217-1799-499c-bcfd-815c18965efe"],
Cell[675022, 12457, 716, 14, 24, "Print",ExpressionUUID->"cf2c6d8c-fbaa-49e5-9111-ef2382824263"],
Cell[675741, 12473, 837, 16, 24, "Print",ExpressionUUID->"074e25b6-17fe-45a0-9176-4d7be8582130"],
Cell[676581, 12491, 714, 14, 24, "Print",ExpressionUUID->"7d77fe8b-ab57-47c5-9d90-92a7a96b0523"],
Cell[677298, 12507, 714, 14, 24, "Print",ExpressionUUID->"fad3935a-b201-4d51-bc67-f05e14aa33fc"],
Cell[678015, 12523, 835, 16, 24, "Print",ExpressionUUID->"5d8543d5-8da5-4443-873b-bd08472bbf7e"],
Cell[678853, 12541, 714, 14, 24, "Print",ExpressionUUID->"8c456664-06c9-45a4-b90e-5bf4dff908ab"],
Cell[679570, 12557, 714, 14, 24, "Print",ExpressionUUID->"e81475ea-e674-4aaf-aa78-6e48327c7adc"],
Cell[680287, 12573, 839, 16, 24, "Print",ExpressionUUID->"912a99bd-56f0-47ec-9a45-fb830a19ba30"],
Cell[681129, 12591, 714, 14, 24, "Print",ExpressionUUID->"3955792e-6a61-47b1-8a83-66643ac4cb4c"],
Cell[681846, 12607, 714, 14, 24, "Print",ExpressionUUID->"8041e9d3-40de-429c-81e5-d8a569ac918e"],
Cell[682563, 12623, 837, 16, 24, "Print",ExpressionUUID->"73f38ab5-536b-4469-9637-94b980091967"],
Cell[683403, 12641, 714, 14, 24, "Print",ExpressionUUID->"0d443d62-0e63-4722-b1b7-deba12f3a191"],
Cell[684120, 12657, 712, 14, 24, "Print",ExpressionUUID->"5a7f47c9-d52a-4d8b-91a7-10c9fe81f727"],
Cell[684835, 12673, 837, 16, 24, "Print",ExpressionUUID->"902f528b-c9ba-431f-8699-90837ab28d6e"],
Cell[685675, 12691, 716, 14, 24, "Print",ExpressionUUID->"bbc4fe57-3363-4f16-85ae-de81c202aad0"],
Cell[686394, 12707, 714, 14, 24, "Print",ExpressionUUID->"9a029207-c78e-46d2-80dd-acb855169a09"],
Cell[687111, 12723, 839, 16, 24, "Print",ExpressionUUID->"c32df61f-89d8-4010-8f1f-29563288eb79"],
Cell[687953, 12741, 716, 14, 24, "Print",ExpressionUUID->"d192bba6-50cf-4711-9e9a-15aee38d5b89"],
Cell[688672, 12757, 714, 14, 24, "Print",ExpressionUUID->"b7e666e9-92b0-4472-bbac-94e05fb53ccd"],
Cell[689389, 12773, 841, 16, 24, "Print",ExpressionUUID->"31c9dab0-5003-49ec-bd3c-1db79e7f464f"],
Cell[690233, 12791, 716, 14, 24, "Print",ExpressionUUID->"2b5ae421-52cf-446c-966c-326c02c448f5"],
Cell[690952, 12807, 714, 14, 24, "Print",ExpressionUUID->"a0c7e168-ddcc-43a3-af76-cf29585bd920"],
Cell[691669, 12823, 837, 16, 24, "Print",ExpressionUUID->"41b3afc5-49e2-49b5-b53a-20ede96cca42"],
Cell[692509, 12841, 718, 14, 24, "Print",ExpressionUUID->"61f50e41-4102-4807-874b-7da40b50f749"],
Cell[693230, 12857, 712, 14, 24, "Print",ExpressionUUID->"81d1fd93-f271-432a-bbac-c26e7a074213"],
Cell[693945, 12873, 837, 16, 24, "Print",ExpressionUUID->"81c8d74c-cea0-4901-80ba-84972b68ef0b"],
Cell[694785, 12891, 718, 14, 24, "Print",ExpressionUUID->"c42251f0-90ee-4078-a67b-76b315bf5e80"],
Cell[695506, 12907, 714, 14, 24, "Print",ExpressionUUID->"7c27a79f-0a5d-4748-b93a-42dba9dffd28"],
Cell[696223, 12923, 833, 16, 24, "Print",ExpressionUUID->"276daed3-ce8c-4766-ad81-8f5e0e4db71d"],
Cell[697059, 12941, 796, 16, 24, "Print",ExpressionUUID->"0b8b7123-3ede-4d62-9cb3-2387bfcdb046"]
}, Open  ]]
}, Open  ]],
Cell[697882, 12961, 189, 3, 32, "Text",ExpressionUUID->"4fb8cb37-2a12-47da-b2ff-cd1b9c17dba2"],
Cell[698074, 12966, 463, 11, 34, "Code",ExpressionUUID->"133e8dfb-481b-420c-aaff-48447d5a9a0d"],
Cell[CellGroupData[{
Cell[698562, 12981, 413, 6, 76, "Code",ExpressionUUID->"41b7f8ba-34ea-4163-85b2-17ab13b150fc"],
Cell[698978, 12989, 2906, 56, 478, "Output",ExpressionUUID->"4ff69286-4aa8-45af-820c-c01cfeb704af"],
Cell[701887, 13047, 2755, 54, 654, "Output",ExpressionUUID->"b91d8995-9073-44d5-a76d-dcdbec466f5c"],
Cell[704645, 13103, 8357, 164, 654, "Output",ExpressionUUID->"a51bd0d0-5eb4-4335-a5f9-f2e725270d51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[713039, 13272, 7148, 170, 365, "Code",ExpressionUUID->"974ffde9-b169-46f3-a1ad-6a3e27e09793"],
Cell[720190, 13444, 403, 8, 28, "Message",ExpressionUUID->"93d1431e-35bc-4136-90f6-642c65238361"],
Cell[720596, 13454, 403, 8, 28, "Message",ExpressionUUID->"3ebc18e9-12c7-4fa8-96e0-8c688b100f8c"],
Cell[721002, 13464, 403, 8, 28, "Message",ExpressionUUID->"9c75a3eb-7687-42c6-8039-e707d08b8d6e"],
Cell[721408, 13474, 443, 9, 28, "Message",ExpressionUUID->"566fb994-dd67-4f56-9988-cff3192c46bb"]
}, Open  ]]
}, Open  ]]
}
]
*)

