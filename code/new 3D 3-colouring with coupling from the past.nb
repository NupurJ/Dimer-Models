(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    462805,       9026]
NotebookOptionsPosition[    437519,       8526]
NotebookOutlinePosition[    456241,       8943]
CellTagsIndexPosition[    456198,       8940]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["", "CodeText",ExpressionUUID->"ec0c784a-ce9d-4c5a-b232-cf84abfadbcd"],

Cell[BoxData[{
 RowBox[{"Ideas", ":", "\n", 
  RowBox[{"-", " ", 
   RowBox[{"ListPlot3D", "[", "]"}]}], " ", ":", " ", 
  RowBox[{"plot", " ", "height", " ", "function"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"-", " ", "try"}], " ", "colours", " ", "\"\<Tomato\>\""}], ",", 
  " ", "\"\<Gold\>\"", ",", " ", "\"\<LawnGreen\>\"", ",", " ", 
  "\"\<SteelBlue\>\""}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"-", " ", 
    RowBox[{"Image3D", "[", "]"}]}], " ", "with", " ", 
   RowBox[{"Image3DSlices", "[", "]"}]}], ":", " ", 
  RowBox[{"prints", " ", "all", " ", "slices"}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"ListDensityPlot", "[", "]"}]}], ":", " ", 
  RowBox[{
  "useful", " ", "if", " ", "we", " ", "want", " ", "to", " ", 
   "blur"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"-", " ", 
    RowBox[{"ListContourPlot", "[", "]"}]}], ":", " ", 
   RowBox[{"gives", " ", "contours"}]}], " "}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"ListVectorPlot", "[", "]"}]}], ",", " ", 
  RowBox[{"ListVectorPlot3D", "[", "]"}], ",", " ", 
  RowBox[{"ListStreamPlot", "[", "]"}], ",", " ", 
  RowBox[{"ListStreamPlot3D", "[", "]"}], ",", " ", 
  RowBox[{
   RowBox[{"ListSliceVectorPlot3D", "[", "]"}], ":", " ", 
   RowBox[{"for", " ", 
    RowBox[{"flows", "?", " ", 
     RowBox[{"(", 
      RowBox[{
      "look", " ", "at", " ", "density", " ", "functions", " ", "also"}], 
      ")"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"ArrayPlot3D", "[", "]"}]}], ",", " ", 
  RowBox[{"Raster3D", "[", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"Graphics3D", "[", "]"}]}], ":", " ", 
  RowBox[{
  "example", " ", "on", " ", "website", " ", "tells", " ", "you", " ", "how", 
   " ", "to", " ", "space", " ", "your", " ", "cell"}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"RegionPlot3D", "[", "]"}]}], ":", " ", 
  RowBox[{
  "shows", " ", "only", " ", "region", " ", "for", " ", "which", " ", "pred", 
   " ", "is", " ", "True"}]}]}], "Code",
 CellChangeTimes->{{3.8961935040712976`*^9, 3.8961935381558247`*^9}, {
   3.896194936842407*^9, 3.896194938170011*^9}, {3.8961976953367853`*^9, 
   3.8961977638117313`*^9}, {3.896198335144771*^9, 3.896198366856309*^9}, {
   3.8961986608628683`*^9, 3.896198674854718*^9}, {3.896198716270617*^9, 
   3.896198716661545*^9}, {3.896198782094411*^9, 3.896198791070257*^9}, {
   3.8961989110295343`*^9, 3.8961989204212313`*^9}, {3.896198964157205*^9, 
   3.896198979236967*^9}, {3.89619921442766*^9, 3.896199283091106*^9}, {
   3.896199362138769*^9, 3.896199418306302*^9}, {3.896328007182756*^9, 
   3.8963280077184763`*^9}, 
   3.912310676550824*^9},ExpressionUUID->"e646de66-4019-4a45-9f24-\
b862c681f906"],

Cell["\<\
Ideas for visualisation:
- layers with slider. all three dimensions. either together or separately. \
maybe make both for safety. also have height plot. 
- translucent cells? - DOES NOT WORK
- get max height cell from both max and min grids and scale.\
\>", "Text",
 CellChangeTimes->{{3.912187496858489*^9, 3.9121875178478317`*^9}, {
  3.912187612260333*^9, 3.912187642990597*^9}, {3.9122412710676527`*^9, 
  3.912241278745646*^9}, {3.9122413209842653`*^9, 
  3.9122413417334547`*^9}},ExpressionUUID->"7def9534-b5ec-46ec-afcf-\
1dbb61179113"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<DarkMode\>\"", "]"}], "[", 
  "]"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"5bd8729e-1b5d-4b5f-b063-cb7f0991f434"],

Cell["Output Locations", "Text",
 CellChangeTimes->{{3.9120763950365133`*^9, 
  3.9120763988073053`*^9}},ExpressionUUID->"8a942dd6-5ed6-43b7-bf58-\
29d355d7d106"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"currDir", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"logDir", " ", "=", " ", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"currDir", ",", " ", "\"\<3D output files/\>\""}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.912076419771578*^9, 3.9120764205557737`*^9}, {
   3.912310139246233*^9, 3.912310139990097*^9}, 3.912311323635508*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"25294259-c6c3-46b8-9874-58800bbfe360"],

Cell["\<\
Colour Templates
(uncomment displaySwatches[] to pick a colour!)\
\>", "Text",
 CellChangeTimes->{
  3.9120763846005793`*^9},ExpressionUUID->"137fda44-2f58-466e-b9cf-\
77f14954051f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rybColourRules", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "->", "Red"}], ",", 
     RowBox[{"1", "->", "Yellow"}], ",", 
     RowBox[{"2", "->", "Blue"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rybDarkColourRules", " ", "=", " ", "\"\<DarkRainbow\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"fancyColourRules", " ", "=", " ", "\"\<CandyColors\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"blueColourRules", " ", "=", " ", "\"\<DeepSeaColors\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"pinkColourRules", " ", "=", " ", "\"\<ValentineTones\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"orangeColourRules", " ", "=", " ", "\"\<SolarColors\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tigerColourRules", " ", "=", " ", "\"\<SunsetColors\>\""}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaySwatch", "[", "colourFunction_", "]"}], " ", ":=", " ", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"generateMaxHeightGrid", "[", "21", "]"}], ",", "3"}], "]"}], 
     ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "colourFunction"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaySwatches", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gradients", " ", "=", " ", 
        RowBox[{"ColorData", "[", "\"\<Gradients\>\"", "]"}]}], ",", " ", 
       RowBox[{"len", " ", "=", " ", 
        RowBox[{"Length", "[", 
         RowBox[{"ColorData", "[", "\"\<Gradients\>\"", "]"}], "]"}]}], ",", 
       " ", 
       RowBox[{"swatches", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", " ", 
       RowBox[{"i", " ", "=", " ", "0"}]}], "}"}], ",", " ", "\n", "\t", 
     RowBox[{"Grid", "[", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{"Nest", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", " ", 
             RowBox[{"displaySwatch", "[", 
              RowBox[{"gradients", "[", 
               RowBox[{"[", 
                RowBox[{"i", "++"}], "]"}], "]"}], "]"}]}], "]"}], " ", "&"}],
           ",", " ", "swatches", ",", " ", 
          RowBox[{"len", " ", "+", " ", "1"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Ceiling", "[", 
           RowBox[{"len", " ", "/", " ", "6"}], "]"}], ",", "6"}], "}"}]}], 
       "]"}], "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"displaySwatches", "[", "]"}], "*)"}]}]}], "Code",
 CellLabel->"In[3]:=",ExpressionUUID->"27a3c9a8-323b-4c69-ac0d-666ac9c09b77"],

Cell["\<\
The following codeblock contains functions that will be evaluated either at \
the beginning or at the end of the simulation. They generate min/max height \
grids, and go between 3-coloured grids to height grids.\
\>", "Text",
 CellChangeTimes->{
  3.9120770127480183`*^9},ExpressionUUID->"ba87411f-0479-4ab8-9fa6-\
a40adbcfb0e3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"initialFaceGrid2D", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", " ", "+", " ", "j"}], " ", "<=", " ", 
       RowBox[{"n", " ", "-", " ", "1"}]}], ",", " ", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"i", " ", "+", " ", "j"}], ",", " ", "n"}], "]"}], ",", " ", 
      RowBox[{"n", " ", "-", " ", "2", " ", "-", " ", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"i", " ", "+", " ", "j"}], ",", " ", "n"}], "]"}]}]}], "]"}],
     ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "0", ",", " ", 
      RowBox[{"n", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"j", ",", " ", "0", ",", " ", 
      RowBox[{"n", " ", "-", " ", "1"}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"initialCubeBorder", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cube", " ", "=", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"n", ",", " ", "n", ",", " ", "n"}], "}"}]}], "]"}]}], ",",
        " ", "\n", "\t", 
       RowBox[{"top", " ", "=", " ", 
        RowBox[{"initialFaceGrid2D", "[", "n", "]"}]}], ",", "\n", "\t", 
       RowBox[{"bottom", " ", "=", " ", 
        RowBox[{"Reverse", "[", 
         RowBox[{
          RowBox[{"initialFaceGrid2D", "[", "n", "]"}], ",", " ", 
          RowBox[{"{", "1", "}"}]}], "]"}]}]}], "}"}], ",", " ", "\n", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "top"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "bottom"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "1", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "top"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "n", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "bottom"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "All", ",", " ", "1"}], "]"}], "]"}], " ", 
       "=", " ", "top"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "All", ",", " ", "n"}], "]"}], "]"}], " ", 
       "=", " ", "bottom"}], ";", "\n", " ", "cube"}]}], "\n", " ", "]"}]}], 
  "\n", " ", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Generate", " ", 
     RowBox[{"the", " ", "'"}], 
     RowBox[{"empty", "'"}], " ", "grid", " ", "with", " ", "only", " ", 
     "the", " ", "boundary", " ", "cells", " ", "filled", " ", 
     RowBox[{"in", ".", " ", "Internal"}], " ", "cells", " ", "carry", " ", 
     "the", " ", "value"}], " ", "-", "1."}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"initialGridBorder", "[", "dim_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"initialGridBorder", "[", "dim", "]"}], " ", "=", " ", "\n", "\t", 
    RowBox[{"Normal", "[", 
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i_", ",", " ", "j_"}], "}"}], " ", "/;", " ", 
           RowBox[{
            RowBox[{"i", " ", "==", " ", "1"}], " ", "||", " ", 
            RowBox[{"j", " ", "==", " ", "1"}]}]}], " ", "->", " ", 
          RowBox[{"i", " ", "+", " ", "j", " ", "-", " ", "2"}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i_", ",", " ", "j_"}], "}"}], " ", "/;", " ", 
           RowBox[{
            RowBox[{"i", " ", "==", " ", "dim"}], " ", "||", " ", 
            RowBox[{"j", " ", "==", " ", "dim"}]}]}], " ", "->", " ", 
          RowBox[{
           RowBox[{"2", "dim"}], " ", "-", " ", "i", " ", "-", " ", "j"}]}]}],
         "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"dim", ",", " ", "dim"}], "}"}], ",", " ", 
       RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Helper", " ", "function", " ", "for", " ", 
    RowBox[{"generateMaxHeightGrid", ".", " ", "Fills"}], " ", "one", " ", 
    "concentric", " ", "square", " ", "of", " ", 
    RowBox[{"cells", "."}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fillConcentricSquareMax", "[", 
    RowBox[{
     RowBox[{"Hold", "[", "grid_", "]"}], ",", " ", "k_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"(", "\n", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{"k", ",", " ", 
         RowBox[{"k", " ", ";;", " ", 
          RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"k", " ", "-", " ", "1"}], ",", " ", 
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "+", " ", "1"}]}], ";", 
     " ", "\n", " ", 
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", "k"}], ",", " ", 
         RowBox[{"k", " ", ";;", " ", 
          RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"k", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "+", " ", "1"}]}], ";", 
     "\n", " ", 
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"k", " ", ";;", " ", 
          RowBox[{"-", "k"}]}], ",", " ", "k"}], "]"}], "]"}], " ", "=", " ", 
      
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}], ",", " ", 
          RowBox[{"k", " ", "-", " ", "1"}]}], "]"}], "]"}], " ", "+", " ", 
       "1"}]}], ";", " ", "\n", " ", 
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"k", " ", ";;", " ", 
          RowBox[{"-", "k"}]}], ",", " ", 
         RowBox[{"-", "k"}]}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}], ",", " ", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"k", " ", "-", " ", "1"}], ")"}]}]}], "]"}], "]"}], " ", 
       "+", " ", "1"}]}], ";", " ", "\n", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", "grid", "]"}], "]"}]}], ")"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Helper", " ", "function", " ", "for", " ", 
    RowBox[{"generateMinHeightGrid", ".", " ", "Fills"}], " ", "one", " ", 
    "concentric", " ", "square", " ", "of", " ", 
    RowBox[{"cells", "."}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fillConcentricSquareMin", "[", 
    RowBox[{
     RowBox[{"Hold", "[", "grid_", "]"}], ",", " ", "k_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"(", "\n", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{"k", ",", " ", 
         RowBox[{"k", " ", ";;", " ", 
          RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"k", " ", "-", " ", "1"}], ",", " ", 
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "-", " ", "1"}]}], ";", 
     " ", "\n", " ", 
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", "k"}], ",", " ", 
         RowBox[{"k", " ", ";;", " ", 
          RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"k", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "-", " ", "1"}]}], ";", 
     "\n", " ", 
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"k", " ", ";;", " ", 
          RowBox[{"-", "k"}]}], ",", " ", "k"}], "]"}], "]"}], " ", "=", " ", 
      
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}], ",", " ", 
          RowBox[{"k", " ", "-", " ", "1"}]}], "]"}], "]"}], " ", "-", " ", 
       "1"}]}], ";", " ", "\n", " ", 
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"k", " ", ";;", " ", 
          RowBox[{"-", "k"}]}], ",", " ", 
         RowBox[{"-", "k"}]}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}], ",", " ", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"k", " ", "-", " ", "1"}], ")"}]}]}], "]"}], "]"}], " ", 
       "-", " ", "1"}]}], ";", " ", "\n", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", "grid", "]"}], "]"}]}], ")"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Generates", " ", "the", " ", "grid", " ", "with", " ", "maximum", " ", 
     "height", " ", "by", " ", "starting", " ", "from", " ", "the", " ", 
     "boundary", " ", "and", " ", "moving", " ", "inwards"}], ",", " ", 
    RowBox[{"filling", " ", "in", " ", "concentric", " ", 
     RowBox[{"squares", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"generateMaxHeightGrid", "[", "dim_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"generateMaxHeightGrid", "[", "dim", "]"}], " ", "=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"depth", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dim", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
          "2"}]}]}], "}"}], ",", "\n", " ", 
      RowBox[{
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"k", "++"}], ";", " ", 
            RowBox[{"currGrid", " ", "=", " ", "#"}], ";", " ", 
            RowBox[{"fillConcentricSquareMax", "[", 
             RowBox[{
              RowBox[{"Hold", "[", "currGrid", "]"}], ",", " ", "k"}], "]"}], 
            ";", " ", 
            RowBox[{"initialGrid", " ", "=", " ", "currGrid"}]}], " ", ")"}], 
          " ", "&"}], ",", " ", 
         RowBox[{"initialGrid", " ", "=", " ", 
          RowBox[{"initialGridBorder", "[", "dim", "]"}]}], ",", " ", 
         RowBox[{"depth", " ", "-", " ", "1"}]}], "]"}], ";", "\n", " ", 
       RowBox[{"Normal", "[", "initialGrid", "]"}]}]}], "\n", "]"}]}]}], "\n",
   "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Generates", " ", "the", " ", "grid", " ", "with", " ", "minimum", " ", 
     "height", " ", "by", " ", "starting", " ", "from", " ", "the", " ", 
     "boundary", " ", "and", " ", "moving", " ", "inwards"}], ",", " ", 
    RowBox[{"filling", " ", "in", " ", "concentric", " ", 
     RowBox[{"squares", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"generateMinHeightGrid", "[", "dim_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"generateMinHeightGrid", "[", "dim", "]"}], " ", "=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"depth", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dim", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
          "2"}]}]}], "}"}], ",", "\n", " ", 
      RowBox[{
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"k", "++"}], ";", " ", 
            RowBox[{"currGrid", " ", "=", " ", "#"}], ";", " ", 
            RowBox[{"fillConcentricSquareMin", "[", 
             RowBox[{
              RowBox[{"Hold", "[", "currGrid", "]"}], ",", " ", "k"}], "]"}], 
            ";", " ", 
            RowBox[{"initialGrid", " ", "=", " ", "currGrid"}]}], " ", ")"}], 
          " ", "&"}], ",", " ", 
         RowBox[{"initialGrid", " ", "=", " ", 
          RowBox[{"initialGridBorder", "[", "dim", "]"}]}], ",", " ", 
         RowBox[{"depth", " ", "-", " ", "1"}]}], "]"}], ";", "\n", " ", 
       RowBox[{"Normal", "[", "initialGrid", "]"}]}]}], "\n", "]"}]}]}], "\n",
   "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Takes", " ", "a", " ", "grid", " ", "with", " ", "a", " ", "filled", " ",
      "in", " ", "height", " ", "function", " ", "as", " ", "input", " ", 
     "and", " ", "converts", " ", "it", " ", "to", " ", "its", " ", 
     "corresponding", " ", "3"}], "-", 
    RowBox[{"colouring", " ", 
     RowBox[{"form", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"to3Colouring", "[", "grid_", "]"}], " ", ":=", " ", 
   RowBox[{"Mod", "[", 
    RowBox[{"grid", ",", " ", "3"}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Helper", " ", "function", " ", "for", " ", "toHeightFunction"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"findListHeight", "[", 
    RowBox[{"first_", ",", " ", "list_", ",", " ", "len_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"initialList", " ", "=", " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", " ", 
          RowBox[{"{", "len", "}"}], ",", " ", 
          RowBox[{"-", "1"}]}], "]"}]}], ",", " ", 
       RowBox[{"k", " ", "=", " ", "0"}], ",", " ", 
       RowBox[{"prev", " ", "=", " ", "first"}]}], "}"}], ",", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "remember", " ", "that", " ", "list", " ", "is", " ", "of", " ", 
       "length", " ", 
       RowBox[{"(", 
        RowBox[{"len", " ", "+", " ", "1"}], ")"}]}], " ", "*)"}], "\n", " ", 
     
     RowBox[{"Nest", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k", "++"}], ";", " ", 
          RowBox[{"newList", " ", "=", " ", "#"}], ";", " ", 
          RowBox[{"prev", " ", "=", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"list", "[", 
                RowBox[{"[", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", " ", 
                   RowBox[{"k", " ", "+", " ", "1"}]}], "}"}], "]"}], "]"}], 
               ",", " ", "1"}], "]"}], ",", " ", 
             RowBox[{"prev", " ", "+", " ", 
              RowBox[{"list", "[", 
               RowBox[{"[", 
                RowBox[{"k", " ", "+", " ", "1"}], "]"}], "]"}], " ", "-", 
              " ", 
              RowBox[{"list", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ",", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"list", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], " ", "==", " ", "2"}], ",", 
               " ", 
               RowBox[{"prev", " ", "+", " ", "1"}], ",", " ", 
               RowBox[{"prev", " ", "-", " ", "1"}]}], "]"}]}], "]"}]}], ";", 
          " ", 
          RowBox[{
           RowBox[{"newList", "[", 
            RowBox[{"[", "k", "]"}], "]"}], " ", "=", " ", "prev"}], ";", " ",
           "newList"}], " ", ")"}], " ", "&"}], " ", ",", " ", 
       RowBox[{"Normal", "[", "initialList", "]"}], ",", " ", "len"}], 
      "]"}]}], "\n", "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Takes", " ", "a", " ", "3"}], "-", 
    RowBox[{
    "coloured", " ", "grid", " ", "as", " ", "input", " ", "and", " ", 
     "returns", " ", "the", " ", "corresponding", " ", "grid", " ", 
     "labelled", " ", "with", " ", "its", " ", "height", " ", 
     RowBox[{"values", "."}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Edit", ":", " ", 
     RowBox[{
      RowBox[{
      "we", " ", "now", " ", "convert", " ", "our", " ", "grid", " ", "to", 
       " ", "a", " ", "3"}], "-", 
      RowBox[{"coloured", " ", "grid", " ", "before", " ", "computing"}]}]}], 
    ",", " ", 
    RowBox[{
    "so", " ", "it", " ", "gives", " ", "the", " ", "correct", " ", "output", 
     " ", "on", " ", "every", " ", 
     RowBox[{"grid", "!"}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Note", ":", " ", 
    RowBox[{
    "this", " ", "starts", " ", "with", " ", "the", " ", "initial", " ", 
     "border", " ", "grid"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toHeightFunction", "[", "grid_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"Length", "[", "grid", "]"}]}], ",", " ", 
       RowBox[{"heightGrid", " ", "=", " ", 
        RowBox[{"initialGridBorder", "[", 
         RowBox[{"Length", "[", "grid", "]"}], "]"}]}], ",", " ", 
       RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
       RowBox[{"cgrid", " ", "=", " ", 
        RowBox[{"to3Colouring", "[", "grid", "]"}]}]}], "}"}], ",", "\n", 
     "  ", 
     RowBox[{"Nest", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k", "++"}], ";", " ", 
          RowBox[{"nextHeightGrid", " ", "=", " ", "#"}], ";", " ", 
          RowBox[{
           RowBox[{"nextHeightGrid", "[", 
            RowBox[{"[", 
             RowBox[{"k", ",", " ", 
              RowBox[{"2", " ", ";;", " ", 
               RowBox[{"-", "2"}]}]}], "]"}], "]"}], " ", "=", " ", 
           RowBox[{"findListHeight", "[", 
            RowBox[{
             RowBox[{"heightGrid", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
             RowBox[{"Normal", "[", 
              RowBox[{"cgrid", "[", 
               RowBox[{"[", 
                RowBox[{"k", ",", " ", 
                 RowBox[{"1", " ", ";;", " ", 
                  RowBox[{"-", "2"}]}]}], "]"}], "]"}], "]"}], ",", " ", 
             RowBox[{"dim", " ", "-", " ", "2"}]}], "]"}]}], ";", " ", 
          "nextHeightGrid"}], ")"}], " ", "&"}], ",", " ", "heightGrid", ",", 
       " ", 
       RowBox[{"dim", " ", "-", " ", "2"}]}], "]"}]}], " ", "\n", "]"}]}], 
  " ", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculates", " ", "the", " ", "sum", " ", "of", " ", "absolute", " ", 
    "differences", " ", "between", " ", "the", " ", "heights", " ", "of", " ",
     "corresponding", " ", "sites", " ", "in", " ", "the", " ", "input", " ", 
    "grids"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkHeightDifference", "[", 
    RowBox[{"grid1_", ",", " ", "grid2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"grid1", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], " ", "-", " ", 
         RowBox[{"grid2", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", " ", "j"}], "]"}], "]"}]}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "2", ",", " ", 
         RowBox[{"dim", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", "2", ",", " ", 
         RowBox[{"dim", " ", "-", " ", "1"}]}], "}"}]}], "]"}], ",", " ", 
     "2"}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Format", " ", "time"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayTime", "[", "time_", "]"}], " ", ":=", " ", 
   RowBox[{"DateString", "[", 
    RowBox[{"time", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Hour\>\"", ",", " ", "\"\<:\>\"", ",", " ", "\"\<Minute\>\"", ",", 
       " ", "\"\<:\>\"", ",", " ", "\"\<Second\>\""}], "}"}]}], "]"}]}], "\n",
   "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**"}], "*", " ", "Display", " ", "Functions"}], " ", 
   "******)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Displays", " ", "height", " ", "grid", " ", "matrix", " ", "in", " ", 
    "array", " ", "form"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"OPTIMISATION", ":", " ", 
    RowBox[{
    "check", " ", "if", " ", "you", " ", "need", " ", "to", " ", "perform", 
     " ", 
     RowBox[{"toHeightFunction", "!"}], " ", "maybe", " ", "check", " ", 
     "max", " ", "value", " ", "in", " ", 
     RowBox[{"grid", "?"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayHeightGrid", "[", "grid_", "]"}], " ", ":=", " ", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{"grid", ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Displays", " ", "height", " ", "grid", " ", "matrices", " ", "in", " ", 
    "array", " ", "form"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayHeightGrids", "[", 
    RowBox[{"grid1_", ",", " ", "grid2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"displayHeightGrid", "[", "grid1", "]"}], ",", " ", 
       RowBox[{"displayHeightGrid", "[", "grid2", "]"}]}], "}"}], "}"}], 
    "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Displays", " ", "height", " ", "grid", " ", "matrix", " ", "in", " ", 
    "array", " ", "form"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"OPTIMISATION", ":", " ", 
    RowBox[{
    "check", " ", "if", " ", "you", " ", "need", " ", "to", " ", "perform", 
     " ", 
     RowBox[{"to3Coloring", "!"}], " ", "maybe", " ", "check", " ", "max", 
     " ", "value", " ", "in", " ", 
     RowBox[{"grid", "?"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayColouringGrid", "[", 
    RowBox[{"grid_", ",", " ", "colourFunction_"}], "]"}], " ", ":=", " ", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"to3Colouring", "[", "grid", "]"}], ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "colourFunction"}]}], "]"}]}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Displays", " ", "height", " ", "grid", " ", "matrices", " ", "in", " ", 
    "array", " ", "form"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayColouringGrids", "[", 
    RowBox[{"grid1_", ",", " ", "grid2_", ",", " ", "colourFunction_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"displayColouringGrid", "[", 
        RowBox[{"grid1", ",", " ", "colourFunction"}], "]"}], ",", " ", 
       RowBox[{"displayColouringGrid", "[", 
        RowBox[{"grid2", ",", " ", "colourFunction"}], "]"}]}], "}"}], "}"}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayHeightPlot", "[", "grid_", "]"}], " ", ":=", " ", 
   RowBox[{"ListPlot3D", "[", "grid", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayHeightPlots", "[", 
    RowBox[{"grid1_", ",", " ", "grid2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"displayHeightPlot", "[", "grid1", "]"}], ",", " ", 
       RowBox[{"displayHeightPlot", "[", "grid2", "]"}]}], "}"}], "}"}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayGrid", "[", 
    RowBox[{"grid_", ",", " ", "colourFunction_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"displayHeightGrid", "[", "grid", "]"}], "}"}], ",", " ", "\n",
       "\t\t\t\t\t\t\t\t\t\t\t\t\t  ", 
      RowBox[{"{", 
       RowBox[{"displayColouringGrid", "[", 
        RowBox[{"grid", ",", " ", "colourFunction"}], "]"}], "}"}], ",", "\n",
       "\t\t\t\t\t\t\t\t\t\t\t\t\t  ", 
      RowBox[{"{", 
       RowBox[{"displayHeightPlot", "[", "grid", "]"}], "}"}]}], "}"}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displayGrids", "[", 
   RowBox[{"grid1_", ",", " ", "grid2_", ",", " ", "colourFunction_"}], "]"}],
   " ", ":=", " ", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"displayHeightGrids", "[", 
       RowBox[{"grid1", ",", " ", "grid2"}], "]"}], "}"}], ",", " ", "\n", 
     "\t\t\t\t\t\t\t\t\t\t\t\t\t  ", 
     RowBox[{"{", 
      RowBox[{"displayColouringGrids", "[", 
       RowBox[{"grid1", ",", " ", "grid2", ",", " ", "colourFunction"}], 
       "]"}], "}"}], ",", "\n", "\t\t\t\t\t\t\t\t\t\t\t\t\t  ", 
     RowBox[{"{", 
      RowBox[{"displayHeightPlots", "[", 
       RowBox[{"grid1", ",", " ", "grid2"}], "]"}], "}"}]}], "}"}], 
   "]"}]}], "\n", 
 RowBox[{"\t\t\t\t\t\t"}]}], "Code",
 CellChangeTimes->{{3.9120775054307423`*^9, 3.9120775067779837`*^9}, {
   3.912236781613709*^9, 3.912236784533803*^9}, {3.912236856073638*^9, 
   3.912236858110496*^9}, {3.912236890690868*^9, 3.91223689407804*^9}, {
   3.912236933342312*^9, 3.912236950895697*^9}, {3.912238117368524*^9, 
   3.912238135414617*^9}, {3.91223818189043*^9, 3.912238216275185*^9}, {
   3.912238254847288*^9, 3.912238282381641*^9}, 3.91223831988457*^9, {
   3.912239306719515*^9, 3.912239306965551*^9}, {3.912239965731444*^9, 
   3.912239973579812*^9}, 3.912240790010014*^9, {3.912315528465104*^9, 
   3.912315530338512*^9}, {3.912315569715016*^9, 
   3.91231559464865*^9}},ExpressionUUID->"fcac06f5-8334-4b9b-ad54-\
5a70c0e8fdd2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displayCube", "[", 
    RowBox[{"n_", ",", " ", "cube_"}], "]"}], " ", ":=", " ", 
   RowBox[{"ArrayPlot3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"n", " ", "+", " ", "1"}], ")"}]}], ",", " ", 
     RowBox[{"ColorFunction", " ", "->", " ", "blueColourRules"}], ",", " ", 
     RowBox[{"OpacityFunction", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"Mesh", "\[Rule]", "False"}], ",", " ", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"cubeLayers", "[", 
   RowBox[{"dim_", ",", " ", "cube_", ",", " ", "colourFunction_"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"displayCube", "[", 
     RowBox[{"dim", ",", " ", 
      RowBox[{"cube", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", ";;", " ", 
          RowBox[{"-", "i"}]}], ",", " ", 
         RowBox[{"i", " ", ";;", " ", 
          RowBox[{"-", "i"}]}], ",", " ", 
         RowBox[{"i", " ", ";;", " ", 
          RowBox[{"-", "i"}]}]}], "]"}], "]"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "1", ",", " ", 
      RowBox[{"Ceiling", "[", 
       RowBox[{"dim", " ", "/", " ", "2"}], "]"}], ",", " ", "1"}], "}"}]}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.912251631350687*^9, 3.91225178129283*^9}, {
  3.912251861052581*^9, 3.9122518778996*^9}, {3.912315559142551*^9, 
  3.912315575703764*^9}},ExpressionUUID->"d998847f-5391-44c7-ae9b-\
344685206770"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Alternate", " ", "code"}], ";", " ", 
    RowBox[{
    "works", " ", "slower", " ", "and", " ", "more", " ", "complicated", " ", 
     "to", " ", "use", " ", "colours", " ", "with"}]}], " ", "*)"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"cubeToImage", "[", "cube_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Image3D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Max", "[", "cube", "]"}], " ", "+", " ", "1"}], ")"}]}], 
        ",", " ", 
        RowBox[{"Magnification", "\[Rule]", "Automatic"}], ",", " ", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
        RowBox[{"ColorFunction", "\[Rule]", "blueColourRules"}]}], "]"}], 
      "\n", "\n", 
      RowBox[{"cubeSlicesSingleAxis", "[", 
       RowBox[{"dim_", ",", " ", "cube_", ",", " ", "axis_"}], "]"}]}], " ", ":=",
      " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"image", " ", "=", " ", 
           RowBox[{"cubeToImage", "[", "cube", "]"}]}], "}"}], ",", "\n", 
         "\t\t\t\t\t\t\t\t\t\t\t", 
         RowBox[{"Manipulate", "[", 
          RowBox[{
           RowBox[{"Image3DSlices", "[", 
            RowBox[{"image", ",", " ", "i", ",", " ", "axis"}], "]"}], ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], 
            "}"}]}], "]"}]}], "]"}], "\n", 
       RowBox[{"cubeSlices", "[", 
        RowBox[{"dim_", ",", " ", "cube_"}], "]"}]}], " ", ":=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Manipulate", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Image3DSlices", "[", 
               RowBox[{
                RowBox[{"Image3D", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", "cube", "]"}], " ", "+", " ", "1"}], 
                    ")"}]}], ",", " ", 
                  RowBox[{"Magnification", "\[Rule]", "Automatic"}], ",", " ", 
                  RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
                " ", "i", ",", " ", "1"}], "]"}], ",", "\n", 
              "\t\t\t\t\t\t\t\t\t\t", 
              RowBox[{"Image3DSlices", "[", 
               RowBox[{
                RowBox[{"Image3D", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", "cube", "]"}], " ", "+", " ", "1"}], 
                    ")"}]}], ",", " ", 
                  RowBox[{"Magnification", "\[Rule]", "Automatic"}], ",", " ", 
                  RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
                " ", "i", ",", " ", "2"}], "]"}], ",", "\n", 
              "\t\t\t\t\t\t\t\t\t\t", 
              RowBox[{"Image3DSlices", "[", 
               RowBox[{
                RowBox[{"Image3D", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", "cube", "]"}], " ", "+", " ", "1"}], 
                    ")"}]}], ",", " ", 
                  RowBox[{"Magnification", "\[Rule]", "Automatic"}], ",", " ", 
                  RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
                " ", "i", ",", " ", "3"}], "]"}]}], "}"}], "}"}], "]"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], 
           "}"}]}], "]"}], "\n", "\t\t\t\t\t\t\t\t\t\t", "\n", 
        RowBox[{"cubesSlices", "[", 
         RowBox[{"dim_", ",", " ", "cube1_", ",", " ", "cube2_"}], "]"}]}], 
       " ", ":=", " ", 
       RowBox[{
        RowBox[{"Grid", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"cubeSlices", "[", 
             RowBox[{"dim", ",", " ", "cube1"}], "]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"cubeSlices", "[", 
             RowBox[{"dim", ",", " ", "cube2"}], "]"}], "}"}]}], "}"}], "]"}],
         "\n", "\n", 
        RowBox[{"cubeToImage", "[", "maxCube", "]"}]}]}]}]}]}], 
   "*)"}]}]], "Code",
 CellChangeTimes->{{3.912252328502087*^9, 3.912252402584948*^9}, {
  3.912252650618332*^9, 3.9122526787291117`*^9}, {3.9122531051650753`*^9, 
  3.912253150927306*^9}, {3.912253230768302*^9, 3.9122532863435707`*^9}, {
  3.912254001008072*^9, 3.9122540834580603`*^9}, {3.912261514870071*^9, 
  3.912261580410975*^9}, {3.912261701293288*^9, 3.912261725431531*^9}, {
  3.912261828728067*^9, 3.912261864242016*^9}, {3.912261904423257*^9, 
  3.912261912727086*^9}, {3.9122622152929*^9, 3.91226222689668*^9}, {
  3.912262260868675*^9, 3.912262280349835*^9}, {3.91226232504403*^9, 
  3.912262347229721*^9}, {3.9122626266737328`*^9, 3.912262639718912*^9}, {
  3.912268256667344*^9, 3.91226827857467*^9}, {3.9122707786212473`*^9, 
  3.912270794814865*^9}, {3.91231449065786*^9, 3.912314521883709*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"43c9ca43-dc34-48cc-ba70-58f0db2b1acf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Slices", " ", "the", " ", "cube", " ", "along", " ", "a", " ", "specifed",
     " ", "axis", " ", "and", " ", "returns", " ", "a", " ", "2", "D", " ", 
    "grid"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"sliceGrid", "[", 
     RowBox[{"dim_", ",", " ", "cube_", ",", " ", "args_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"ArrayReshape", "[", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{"cube", ",", " ", 
        RowBox[{"Sequence", " ", "@@", " ", "args"}]}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"dim", ",", " ", "dim"}], "}"}]}], "]"}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Plots", " ", "a", " ", "slice", " ", "of", " ", "a", " ", "cube"}], " ", 
    "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"TODO", ":", " ", 
     RowBox[{
     "pass", " ", "colour", " ", "function", " ", "as", " ", "argument"}]}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"slicePlot", "[", 
     RowBox[{"dim_", ",", " ", "cube_", ",", " ", "args_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"ArrayPlot", "[", 
     RowBox[{
      RowBox[{"sliceGrid", "[", 
       RowBox[{"dim", ",", " ", "cube", ",", " ", "args"}], "]"}], ",", " ", 
      RowBox[{"ColorFunction", "\[Rule]", "blueColourRules"}]}], "]"}]}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"TODO", ":", " ", 
     RowBox[{"add", " ", "labels", " ", "to", " ", 
      RowBox[{"grids", "/", "plots"}], " ", "in", " ", "the", " ", 
      "following", " ", "functions"}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Places", " ", "colour", " ", "plot", " ", "of", " ", "a", " ", "slice", 
     " ", "above", " ", "a", " ", "height", " ", "plot", " ", "of", " ", 
     "the", " ", "slice"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"sliceGridWithHeight", "[", 
     RowBox[{"dim_", ",", " ", "cube_", ",", " ", "args_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"slicePlot", "[", 
         RowBox[{"dim", ",", " ", "cube", ",", " ", "args"}], "]"}], "}"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"displayHeightPlot", "[", 
         RowBox[{"sliceGrid", "[", 
          RowBox[{"dim", ",", " ", "cube", ",", " ", "args"}], "]"}], "]"}], 
        "}"}]}], "}"}], "]"}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Allows", " ", "to", " ", "move", " ", "between", " ", "colour", " ", 
      "plots"}], " ", "+", " ", 
     RowBox[{
     "height", " ", "plots", " ", "of", " ", "different", " ", "slices", " ", 
      "along", " ", "a", " ", "single", " ", "axis"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"cubeSlicesSingleAxis", "[", 
     RowBox[{"dim_", ",", " ", "cube_", ",", " ", "axis_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"args", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"All", ",", " ", "All", ",", " ", "All"}], "}"}]}], "}"}], 
      ",", "\n", "\t\t\t\t\t\t\t\t\t\t\t", 
      RowBox[{"Manipulate", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"args", "[", 
            RowBox[{"[", "axis", "]"}], "]"}], " ", "=", " ", 
           RowBox[{"{", "i", "}"}]}], ";", " ", 
          RowBox[{"sliceGridWithHeight", "[", 
           RowBox[{"dim", ",", " ", "cube", ",", " ", "args"}], "]"}]}], 
         ")"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], 
         "}"}]}], "]"}]}], "]"}]}], "\n", "\t\t\t\t\t\t\t\t\t\t\t", "\n", 
   RowBox[{
    RowBox[{"cubeSlicesAllAxesSimultaneouslyGrid", "[", 
     RowBox[{"dim_", ",", " ", "cube_", ",", " ", "i_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sliceGridWithHeight", "[", 
         RowBox[{"dim", ",", " ", "cube", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "i", "}"}], ",", " ", "All", ",", " ", "All"}], 
           "}"}]}], "]"}], ",", " ", 
        RowBox[{"sliceGridWithHeight", "[", 
         RowBox[{"dim", ",", " ", "cube", ",", " ", 
          RowBox[{"{", 
           RowBox[{"All", ",", " ", 
            RowBox[{"{", "i", "}"}], ",", " ", "All"}], "}"}]}], "]"}], ",", 
        " ", 
        RowBox[{"sliceGridWithHeight", "[", 
         RowBox[{"dim", ",", " ", "cube", ",", " ", 
          RowBox[{"{", 
           RowBox[{"All", ",", " ", "All", ",", " ", 
            RowBox[{"{", "i", "}"}]}], "}"}]}], "]"}]}], "}"}], "}"}], 
     "]"}]}], "\t\t\t\t\t\t\t\t\t\t\t", "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"View", " ", "the", " ", "colour", " ", "plots"}], " ", "+", " ", 
     RowBox[{
     "height", " ", "plots", " ", "of", " ", "slices", " ", "at", " ", "the", 
      " ", "same", " ", "level", " ", "along", " ", "all", " ", "axes"}]}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"cubeSlicesAllAxesSimultaneously", "[", 
     RowBox[{"dim_", ",", " ", "cube_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{"cubeSlicesAllAxesSimultaneouslyGrid", "[", 
       RowBox[{"dim", ",", " ", "cube", ",", " ", "i"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], "}"}]}], 
     "]"}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Allows", " ", "to", " ", "move", " ", "between", " ", "colour", " ", 
      "plots"}], " ", "+", " ", 
     RowBox[{
     "height", " ", "plots", " ", "of", " ", "different", " ", "slices", " ", 
      "along", " ", "all", " ", "axes"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"cubeSlicesAllAxesSeparately", "[", 
     RowBox[{"dim_", ",", " ", "cube_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cubeSlicesSingleAxis", "[", 
         RowBox[{"dim", ",", " ", "cube", ",", " ", "1"}], "]"}], ",", " ", 
        RowBox[{"cubeSlicesSingleAxis", "[", 
         RowBox[{"dim", ",", " ", "cube", ",", " ", "2"}], "]"}], ",", " ", 
        RowBox[{"cubeSlicesSingleAxis", "[", 
         RowBox[{"dim", ",", " ", "cube", ",", " ", "3"}], "]"}]}], "}"}], 
      "}"}], "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"cubesSlicesSeparately", "[", 
     RowBox[{"dim_", ",", " ", "cube1_", ",", " ", "cube2_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cubeSlicesAllAxesSimultaneously", "[", 
         RowBox[{"dim", ",", " ", "cube1"}], "]"}], ",", " ", 
        RowBox[{"cubeSlicesAllAxesSimultaneously", "[", 
         RowBox[{"dim", ",", " ", "cube2"}], "]"}]}], "}"}], "}"}], "]"}]}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{"cubesSlicesSimultaneously", "[", 
     RowBox[{"dim_", ",", " ", "cube1_", ",", " ", "cube2_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{"Grid", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"cubeSlicesAllAxesSimultaneouslyGrid", "[", 
           RowBox[{"dim", ",", " ", "cube1", ",", " ", "i"}], "]"}], ",", " ", 
          RowBox[{"cubeSlicesAllAxesSimultaneouslyGrid", "[", 
           RowBox[{"dim", ",", " ", "cube2", ",", " ", "i"}], "]"}]}], "}"}], 
        "}"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], "}"}]}], 
     "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.912264406032669*^9, 3.912264407411809*^9}, {
   3.912266616300103*^9, 3.912266636080381*^9}, {3.912266783498019*^9, 
   3.9122668318250113`*^9}, {3.912267031331131*^9, 3.9122670330469217`*^9}, {
   3.9122673628898687`*^9, 3.912267395223302*^9}, 3.9122674254591417`*^9, {
   3.912267489260343*^9, 3.9122675033739357`*^9}, {3.912267533446159*^9, 
   3.912267553784122*^9}, {3.91226759392774*^9, 3.912267610948339*^9}, {
   3.912267954925317*^9, 3.9122679807820597`*^9}, {3.9122680344937572`*^9, 
   3.912268084845128*^9}, {3.912268284517149*^9, 3.91226833228021*^9}, {
   3.91226836499653*^9, 3.9122684599894753`*^9}, {3.912268505569618*^9, 
   3.9122685120518208`*^9}, {3.912268552753704*^9, 3.912268583420809*^9}, {
   3.9122686193107967`*^9, 3.9122686712850103`*^9}, {3.912269479663116*^9, 
   3.912269519288001*^9}, {3.91226960563202*^9, 3.912269647276249*^9}, {
   3.9122697907911673`*^9, 3.912269851937456*^9}, {3.912269978887829*^9, 
   3.912270022212962*^9}, {3.912270052870801*^9, 3.912270089606448*^9}, {
   3.912270131594943*^9, 3.912270159581514*^9}, {3.9122702372248087`*^9, 
   3.9122702931336193`*^9}, {3.912270332214175*^9, 3.91227045240093*^9}, {
   3.9122705625160007`*^9, 3.912270621791396*^9}, {3.9122707574806643`*^9, 
   3.912270862778894*^9}, {3.912270942473834*^9, 3.91227098524856*^9}, {
   3.9123128383139467`*^9, 3.912312878915883*^9}, {3.912313022608423*^9, 
   3.9123130611073503`*^9}, {3.9123131179412746`*^9, 3.912313169989504*^9}, {
   3.912313433965732*^9, 3.912313448461694*^9}, {3.912313498071694*^9, 
   3.912313499807131*^9}, 3.9123135697889214`*^9, {3.9123136877244463`*^9, 
   3.912313713464583*^9}, {3.9123144303868637`*^9, 3.912314458008833*^9}, {
   3.912314573514515*^9, 3.9123146467024508`*^9}, {3.912314677108584*^9, 
   3.912314686346047*^9}, {3.9123147195335407`*^9, 3.912314778497026*^9}, {
   3.91231484830643*^9, 
   3.912314904667511*^9}},ExpressionUUID->"1cb6fad7-3d75-46e5-bdfd-\
cc2c5aa8136f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cubeLayers", "[", 
  RowBox[{"7", ",", " ", "maxCube", ",", " ", "blueColourRules"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.912251791004142*^9, 3.9122518038093777`*^9}},
 CellLabel->
  "In[534]:=",ExpressionUUID->"57af5111-0f01-4f8c-80d8-9d8ac3a7ab54"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 4, 1}}, Typeset`size$$ = {
    416., {181., 185.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`displayCube[7, 
        Part[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
         "], 
         Span[$CellContext`i$$, -$CellContext`i$$], 
         Span[$CellContext`i$$, -$CellContext`i$$], 
         Span[$CellContext`i$$, -$CellContext`i$$]]], 
      "Specifications" :> {{$CellContext`i$$, 1, 4, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{462., {224.6875, 230.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.912251804469966*^9, {3.912251863648457*^9, 3.912251880093397*^9}},
 CellLabel->
  "Out[534]=",ExpressionUUID->"2b0e1a7a-fae2-45f9-9888-183be50f38de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cubeSlicesAllAxesSimultaneously", "[", 
  RowBox[{"7", ",", " ", "minCube"}], "]"}], "\n", 
 RowBox[{"cubeSlicesAllAxesSeparately", "[", 
  RowBox[{"7", ",", " ", "minCube"}], "]"}]}], "Code",
 CellChangeTimes->{{3.912254090814623*^9, 3.91225409850528*^9}, {
   3.9122626197887173`*^9, 3.912262635065693*^9}, 3.912266838845381*^9, {
   3.91226743894987*^9, 3.912267451869739*^9}, {3.912267618897295*^9, 
   3.91226761911683*^9}, {3.912268468866748*^9, 3.9122684720184383`*^9}, {
   3.912268678959939*^9, 3.912268689916807*^9}, {3.91227002852654*^9, 
   3.912270033277396*^9}, 3.91227109937913*^9},
 CellLabel->
  "In[202]:=",ExpressionUUID->"1c71fc96-a296-4b0b-ab7f-73c9848f5424"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 7, 1}}, Typeset`size$$ = {
    551., {176.1875, 181.8125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`cubeSlicesAllAxesSimultaneouslyGrid[
       7, CompressedData["
1:eJx1kMsRgDAIRAkQrcOWLCEN2P/NUR6ZcMiBhYFl+VzjuYeJyLmYNDXvR2AP
9IIa2AIlmeHtQ/+5TqQWzOxLTZ111Df5tY7VrTZ5XafPOnpMQbtclH2pCbP8
hdvxdU88TP7zAuPNBtg=
        "], $CellContext`i$$], 
      "Specifications" :> {{$CellContext`i$$, 1, 7, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{597., {221.1875, 226.8125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.912254098961012*^9, 3.912261732964941*^9, {3.912261845109248*^9, 
   3.9122618673733587`*^9}, 3.912261906632366*^9, 3.9122623704304457`*^9, 
   3.9122624080775127`*^9, {3.912262607107293*^9, 3.912262642199815*^9}, 
   3.912266839283944*^9, 3.91226703766444*^9, {3.912267431943881*^9, 
   3.912267452347896*^9}, 3.9122675229003057`*^9, 3.912267556992798*^9, {
   3.91226759769552*^9, 3.9122676195664177`*^9}, 3.912268091243443*^9, 
   3.912268472371093*^9, 3.912268515066235*^9, 3.912268690382292*^9, 
   3.9122697360651503`*^9, 3.912270033905272*^9, 3.9122701114791193`*^9, 
   3.912270164057863*^9, 3.9122743433164177`*^9, 3.91231016958733*^9, 
   3.912312895668007*^9, 3.912314851576214*^9, 3.9123148823273363`*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"22ee2cce-8bbd-4550-9aec-8bd2c6b84b1a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 8, 1}}, Typeset`size$$ = {
        180., {175.78749999999997`, 181.41249999999997`}}, Typeset`update$$ = 
        0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$70849, 
              1] = {$CellContext`i$$}; $CellContext`sliceGridWithHeight[
            7, CompressedData["
1:eJx1kMsRgDAIRAkQrcOWLCEN2P/NUR6ZcMiBhYFl+VzjuYeJyLmYNDXvR2AP
9IIa2AIlmeHtQ/+5TqQWzOxLTZ111Df5tY7VrTZ5XafPOnpMQbtclH2pCbP8
hdvxdU88TP7zAuPNBtg=
             "], $CellContext`args$70849]), 
          "Specifications" :> {{$CellContext`i$$, 1, 8, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{243., {220.6875, 226.3125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 8, 1}}, Typeset`size$$ = {
        180., {175.78749999999997`, 181.41249999999997`}}, Typeset`update$$ = 
        0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$70850, 
              2] = {$CellContext`i$$}; $CellContext`sliceGridWithHeight[
            7, CompressedData["
1:eJx1kMsRgDAIRAkQrcOWLCEN2P/NUR6ZcMiBhYFl+VzjuYeJyLmYNDXvR2AP
9IIa2AIlmeHtQ/+5TqQWzOxLTZ111Df5tY7VrTZ5XafPOnpMQbtclH2pCbP8
hdvxdU88TP7zAuPNBtg=
             "], $CellContext`args$70850]), 
          "Specifications" :> {{$CellContext`i$$, 1, 8, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{243., {220.6875, 226.3125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 8, 1}}, Typeset`size$$ = {
        180., {175.78749999999997`, 181.41249999999997`}}, Typeset`update$$ = 
        0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$70851, 
              3] = {$CellContext`i$$}; $CellContext`sliceGridWithHeight[
            7, CompressedData["
1:eJx1kMsRgDAIRAkQrcOWLCEN2P/NUR6ZcMiBhYFl+VzjuYeJyLmYNDXvR2AP
9IIa2AIlmeHtQ/+5TqQWzOxLTZ111Df5tY7VrTZ5XafPOnpMQbtclH2pCbP8
hdvxdU88TP7zAuPNBtg=
             "], $CellContext`args$70851]), 
          "Specifications" :> {{$CellContext`i$$, 1, 8, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{243., {220.6875, 226.3125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.912254098961012*^9, 3.912261732964941*^9, {3.912261845109248*^9, 
   3.9122618673733587`*^9}, 3.912261906632366*^9, 3.9122623704304457`*^9, 
   3.9122624080775127`*^9, {3.912262607107293*^9, 3.912262642199815*^9}, 
   3.912266839283944*^9, 3.91226703766444*^9, {3.912267431943881*^9, 
   3.912267452347896*^9}, 3.9122675229003057`*^9, 3.912267556992798*^9, {
   3.91226759769552*^9, 3.9122676195664177`*^9}, 3.912268091243443*^9, 
   3.912268472371093*^9, 3.912268515066235*^9, 3.912268690382292*^9, 
   3.9122697360651503`*^9, 3.912270033905272*^9, 3.9122701114791193`*^9, 
   3.912270164057863*^9, 3.9122743433164177`*^9, 3.91231016958733*^9, 
   3.912312895668007*^9, 3.912314851576214*^9, 3.912314882531155*^9},
 CellLabel->
  "Out[203]=",ExpressionUUID->"bc3535f9-f433-450e-a554-9ef3dad6e04a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cubesSlicesSeparately", "[", 
  RowBox[{"7", ",", " ", "maxCube", ",", " ", "minCube"}], "]"}], "\n", 
 RowBox[{"cubesSlicesSimultaneously", "[", 
  RowBox[{"7", ",", " ", "maxCube", ",", " ", "minCube"}], "]"}]}], "Code",
 CellChangeTimes->{{3.912314463602271*^9, 3.912314466831243*^9}, {
  3.912314540429406*^9, 3.912314547984791*^9}, {3.912314786181971*^9, 
  3.91231479931944*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"af9d4561-7cad-4ed1-ba9c-ad923ed74cc4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 7, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 7, 1}}, Typeset`size$$ = {
        248., {176.1875, 181.8125}}, Typeset`update$$ = 0, Typeset`initDone$$,
         Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> $CellContext`cubeSlicesAllAxesSimultaneouslyGrid[
           7, CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
            "], $CellContext`i$$], 
          "Specifications" :> {{$CellContext`i$$, 1, 7, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{294., {221.1875, 226.8125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 7, 1}}, Typeset`size$$ = {
        248., {176.1875, 181.8125}}, Typeset`update$$ = 0, Typeset`initDone$$,
         Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> $CellContext`cubeSlicesAllAxesSimultaneouslyGrid[
           7, CompressedData["
1:eJx1kMsRgDAIRAkQrcOWLCEN2P/NUR6ZcMiBhYFl+VzjuYeJyLmYNDXvR2AP
9IIa2AIlmeHtQ/+5TqQWzOxLTZ111Df5tY7VrTZ5XafPOnpMQbtclH2pCbP8
hdvxdU88TP7zAuPNBtg=
            "], $CellContext`i$$], 
          "Specifications" :> {{$CellContext`i$$, 1, 7, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{294., {221.1875, 226.8125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.9123145483787947`*^9, {3.912314787836027*^9, 3.912314800148036*^9}},
 CellLabel->
  "Out[180]=",ExpressionUUID->"9975b4f5-7239-4c7f-bdda-282e90357544"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 6, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 7, 1}}, Typeset`size$$ = {
    938., {176.6875, 182.3125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          $CellContext`cubeSlicesAllAxesSimultaneouslyGrid[7, CompressedData["

1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
           "], $CellContext`i$$], 
          $CellContext`cubeSlicesAllAxesSimultaneouslyGrid[7, CompressedData["

1:eJx1kMsRgDAIRAkQrcOWLCEN2P/NUR6ZcMiBhYFl+VzjuYeJyLmYNDXvR2AP
9IIa2AIlmeHtQ/+5TqQWzOxLTZ111Df5tY7VrTZ5XafPOnpMQbtclH2pCbP8
hdvxdU88TP7zAuPNBtg=
           "], $CellContext`i$$]}}], 
      "Specifications" :> {{$CellContext`i$$, 1, 7, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{784., {221.6875, 227.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.9123145483787947`*^9, {3.912314787836027*^9, 3.912314800551219*^9}, {
   3.9123153170426407`*^9, 3.912315343709846*^9}, 3.912316221933934*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"1e7f5879-86ea-449a-b751-18f27b9f3750"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cubesSlices", "[", 
  RowBox[{"7", ",", " ", "maxCube", ",", " ", "maxCube"}], "]"}]], "Code",
 CellChangeTimes->{{3.912252444092494*^9, 3.9122524530987253`*^9}, {
  3.9122534318234177`*^9, 3.912253432661413*^9}, {3.912253532371214*^9, 
  3.912253535336838*^9}, {3.9122536324392633`*^9, 3.9122536384850597`*^9}},
 CellLabel->
  "In[565]:=",ExpressionUUID->"8a6f1077-1d8d-412d-b17e-7e387e7a6104"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 7, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 7, 1}}, Typeset`size$$ = {
        1091., {177.1875, 182.8125}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Grid[{{
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 1], 
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 2], 
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 3]}}], 
          "Specifications" :> {{$CellContext`i$$, 1, 7, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1137., {222.1875, 227.8125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 7, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 7, 1}}, Typeset`size$$ = {
        1091., {177.1875, 182.8125}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Grid[{{
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 1], 
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 2], 
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 3]}}], 
          "Specifications" :> {{$CellContext`i$$, 1, 7, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1137., {222.1875, 227.8125}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.912252454018835*^9, {3.912252653140688*^9, 3.912252680770763*^9}, 
   3.912253117257453*^9, 3.9122531526212883`*^9, {3.912253237361538*^9, 
   3.912253264268676*^9}, {3.9122534174316597`*^9, 3.912253447631917*^9}, 
   3.912253545564445*^9, 3.91225363904545*^9},
 CellLabel->
  "Out[565]=",ExpressionUUID->"20f7c4cb-b0db-4a16-82ed-b1c3b2f82431"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox["\[Placeholder]", "\[Placeholder]"]], "Code",
 CellChangeTimes->{
  3.9122524589790897`*^9},ExpressionUUID->"e3ad0d73-88a7-4751-ab4b-\
17bb42c337cd"],

Cell[BoxData[
 Graphics3DBox[{GeometricTransformation3DBox[{
     {RGBColor[0.405188, 0.204349, 0.343389], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{0, -7, -7}}, {{
       6, -1, -7}}, {{6, -7, -1}}, {{0, -1, -1}}}]}, 
     {RGBColor[
      0.6333770000000001, 0.23392566666666667`, 0.37273666666666666`], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{1, -7, -7}}, {{
       0, -6, -7}}, {{6, -2, -7}}, {{5, -1, -7}}, {{0, -7, -6}}, {{
       1, -6, -6}}, {{5, -2, -6}}, {{6, -1, -6}}, {{6, -7, -2}}, {{
       5, -6, -2}}, {{1, -2, -2}}, {{0, -1, -2}}, {{5, -7, -1}}, {{
       6, -6, -1}}, {{0, -2, -1}}, {{1, -1, -1}}}]}, 
     {RGBColor[0.7996756666666667, 0.3505163333333333, 0.48605733333333334`], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNzsENwjAMRuGkpN2jN+ZhBAaA+bHlGFt6h/9g9VOVvPh+f1+fxxjjWTNr
2kfNLzN7+p/h4nB8lQOf5Y1XOeVuf427hg/xpGl0Ai+axltbzqQ0u++yp9N3
vGi67Ok0U9yd4IzhRSdoBp50gh1S7nZnc9fwJT5pbjqBB83NW1vOpDS7n7Jn
0nc8aKbsmTRh/gEOKUA5
       "]]}, 
     {RGBColor[0.831283, 0.533131, 0.662656], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNk2sOwjAMg7t12z04Dn85AgeA89NHTCPZmpEqPnWu40Tt4/19fWop5bnW
tlbl+gHItS9u5PzeyQvLIF/G5+JJPhYHOT1hnvnfuN/Ihf6NGvFG/0Z/8cFa
jRmmeYZpYD5Zt7NWI+/G6rHTp5tmkA/jyrrdepcmyJfxyTzKkHkGNeKNeQb1
Ys1k0F9cmUeaaZppnmGe4sI8ygDTZJ5Jn0a+jDWfSb1Ys9JZ8cY8OisuzKOz
YXqYT+YJuzNhcwhmE+vOhN2ZYK1J3o11Z7QP28+6sDnA+gXutwDcbwHWL6wv
4H4L+fsDFoxG/g==
       "]]}, 
     {RGBColor[0.742797, 0.6702466666666667, 0.8056613333333333], Opacity[1], 
      EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNktFtwzAQQ+XE8R5dqQPkowO089eSjrEAEn4fgp+FI48+39fP3/fvs7X2
vs52ncX7df4lrbPeT/Pj4m4+wEs3zC/whW2ad/DyLHgK9+t5uv40P93rtH+4
uddpnwFt+ABvzhDPCW3hXrhfebp9wplJd55wc7buDOHMJ9oBbfjhPOk1oS1o
C72EXkL9yjnsH27OOdwrvIMP8Ob8A/OPZ4fPgM+AdkI7oZ3IU/Ap+BTyFDwF
H8FnfeO0Nrz5Wyb+18QOT+xw6gfqwy9w9jm9JuoL9YVeQi+hfuUs/IvCzAsz
L917nvrwDj7AmXlh5qkv1AieK48wK+neZ+neZ2FWwnyke4ele4fjWfAx6gNC
ie4s
       "]]}, 
     {RGBColor[0.680889, 0.7972306666666666, 0.8930633333333333], Opacity[1], 
      EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNk9ttxDAMBHW+k/u4lq6EFJDUHz3IiMAuMgYEz8eIXCzs99fP5/vZWvuc
8zinuJ/zm5l1XoeH+AaXN8UdfB1euGuu2Rt3zQdb4G7AT8yp91AGc1eeIWfC
MT+VYWjXFl/gh/baSTiJObV3aq/Z/Uz0Y2eKmzLYMbsTOyG+wO5hKkPCqQwL
/Sw5Q9yUYaGTpZlL3MHux/7GzBC7E+9NzKwMG11tzRziC/xQHjtLfIO7Mmzt
CjiBXQk/MbMyBLoK7R1i92PH7G8mtHeLb3BXBjsJJ7Gr9iZ6SPSQ6CHz/5+y
s8QvsP+dRD92QnyD3Uk9f6gQjqQ=
       "]]}, 
     {RGBColor[0.659388, 0.872053, 0.882048], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNkMERwyAMBIWJ6cMpySW4gKT+IOAizeyDh4Z9LHeC6/nen2pm75gSk9xi
fpJyzuAOv4IdTm/AR/CEM2PBgaYtJ8/MamR2nAUX/E5X+o7vsNHl9Aqu+ANn
wG3jij+4m/7Ed7iRP9lBcMFf+B1u7L94ozYnfXG3wwdd2v5QdE34JFPkg/oD
/50QdQ==
       "]]}, 
     {RGBColor[0, 0, 0], Opacity[0], EdgeForm[None]}}, {{{1, 0, 0}, {0, -1, 
     0}, {0, 0, -1}}, {0, 0, 0}}], 
   GeometricTransformation3DBox[GeometricTransformation3DBox[
     {EdgeForm[GrayLevel[0.2]], FaceForm[None, None], 
      CuboidBox[{0, 0, 0}]}, CompressedData["
1:eJxdl0uO3DAQQ223W/eYK2WTfQ6QnD/WhxkBetDrNGYQwqBoVRVZPfn69efH
79dxHD/P4/j+OSaen79J5m/5xhGe/87PsZ7Pzyn+fP6IPxZ+Swf9Z519Fn4v
/qP3PnrvWJxn4XPxh+4Dh3uWxefOQ3fm/pfuf+r+k19VS1ct1HWrrlN1Harr
Ej6XJvX2he//ah/iRJpTv+qedenXhe+lWXXPqn6Cp05XP/s6Wxe+lk5Xn7v6
zFnmcmsuRfi9NJlX17yY3SXMXNBkjtyTmVbNtGumzPfSfF+aL7NgXsx36jTN
GsyMmDVzf2nu+OdZz5k1/sED4HPpM18ws8MDXZpDnEgHP+A3/ACmxrp0qjhN
nmni2D9dHHtpiBPdYd6nyWMt26tNc2zqScv2Xlt3aOJ0cbo0hzTB+JM7RBw8
j1d7tle7+oO3nYWms2D8zFkw3ubsED/SITt4Bs+Tl3J8ZqdlZwqM/8lRl6bz
FT0nU/QhqjfZWUh2FqJ6o7qSnQU0yRp1kRHvUjB1kTUwdZG7Ls0hzeg5GaQu
suN9C6ZGsukMgoswtaPZdXboefScbBZhekJ2wOwKsgamP5xtOgtm7ryr6+zQ
2aF3Re+K+GT2LcxuIY/gW7gIs3PIcpVmlU6TTtPZrrNdZ7vuM6QzpDN0nyHN
SCfS8U4As6/INRgPszeq+E188FsYP/Mu740hvvdG9K6Iz95gFuwHdsVLGJ/D
B9/CRZies2e6+EOcSJN9Qq+S7edk+znqVdSfZHs42R5Gc0gnOsuewYfsFjB9
YLeA6QNnwXiPs2D8xtkhfqTD/inCZJzdUsUB4xn2kncLmCzDiTiRDnvmLUx/
2A/eP+wZfAIHTE/gsEMuYfrAnok47JBbGJ+QQXZCEcYnZLaJ38X3rvBOiN4b
aZLxlzD7jdyByRQcslyOz4w710OcoXdF/EjTWQazf8hvFccZd5bJaTk+8zvE
iTjRu/x/OvJ7CdOHZGcKDvm9hclO1B84ZLkI0xOek2uyQ77IL7WTR3JKRshs
pONs+u9zMoWHyam/u50RsoDH8Ly/K/FqEcYD+NPe83eKvZRsH+INZsQcmS89
hMNM8RLz8hw9O8/LM2Iu/wB0HKvr
     "]], {{{1, 0, 0}, {0, -1, 0}, {0, 0, -1}}, {
     0, 0, 0}}]},
  AxesLabel->{None, None, None},
  DisplayFunction->Identity,
  ImageSize->{371.9699892716402, 370.81969098868575`},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
    "M10DefaultGradient", 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "RelieveDPZFighting" -> False},
  PlotRange->{{0, 7}, {0, 7}, {0, 7}},
  PlotRangePadding->Scaled[0.02],
  Ticks->{{{-0.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}, {{7.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}, {{7.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}},
  ViewPoint->{-2.429318922625781, 1.9462955140747948`, -1.3267793124949836`},
  ViewVertical->{0.08145333926907083, 
   0.5736547713340627, -0.8150371505935063}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.896330176088093*^9, 3.896330192665531*^9}, {
   3.8963303631655607`*^9, 3.89633038976855*^9}, {3.896330423233328*^9, 
   3.89633043410995*^9}, {3.896330509216579*^9, 3.896330517282062*^9}, {
   3.896330627519936*^9, 3.896330636247086*^9}, 3.89633073077172*^9, 
   3.896330781069508*^9, 3.8963314621825953`*^9, 3.896332227841249*^9, 
   3.8963381893310957`*^9, {3.8963729778830233`*^9, 3.896372986594284*^9}, 
   3.896373047968767*^9, 3.896373149514886*^9, 3.8963732109932213`*^9, {
   3.896406898297853*^9, 3.89640691466749*^9}, 3.896408665498767*^9, 
   3.896415387910993*^9, 
   3.8964154184164343`*^9},ExpressionUUID->"0cf7af11-1c17-42bb-9958-\
8cd8ecfaa108"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"generateMaxCube", "[", "dim_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cube", " ", "=", " ", 
        RowBox[{"initialCubeBorder", "[", "dim", "]"}]}], "}"}], ",", " ", 
      "\n", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cube", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], 
        "}"}], " ", "~", " ", "Join", " ", "~", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"generateMaxHeightGrid", "[", 
          RowBox[{"dim", ",", " ", 
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}]}], 
          "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "2", ",", " ", "6"}], "}"}]}], "]"}], " ", 
       "~", " ", "Join", " ", "~", " ", 
       RowBox[{"{", 
        RowBox[{"cube", "[", 
         RowBox[{"[", 
          RowBox[{"7", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], 
        "}"}]}]}], "]"}]}], "*)"}], "\n", " ", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"generateMaxCube", "[", "dim_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cube", " ", "=", " ", 
         RowBox[{"initialCubeBorder", "[", "dim", "]"}]}], ",", " ", 
        RowBox[{"depth", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dim", " ", "+", " ", "1"}], ")"}], " ", "/", " ", "2"}]}],
         ",", " ", "nextLevelTop", ",", " ", "nextLevelBottom"}], "}"}], ",", 
      "  ", "\n", " ", 
      RowBox[{
       RowBox[{"Do", "[", "\n", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"nextLevelTop", " ", "=", " ", 
           RowBox[{
            RowBox[{"cube", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "+", " ", "1"}]}], 
          ";", "\n", " ", 
          RowBox[{"nextLevelBottom", " ", "=", " ", 
           RowBox[{"Reverse", "[", 
            RowBox[{"nextLevelTop", ",", " ", 
             RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i"}], "]"}], "]"}], " ", "=", 
           " ", "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "2", ",", " ", "depth"}], "}"}]}], "]"}], 
       ";", "\n", " ", "cube"}]}], "]"}]}], " ", "\n", " ", "\n", 
   RowBox[{
    RowBox[{"generateMinCube", "[", "dim_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cube", " ", "=", " ", 
         RowBox[{"initialCubeBorder", "[", "dim", "]"}]}], ",", " ", 
        RowBox[{"depth", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dim", " ", "+", " ", "1"}], ")"}], " ", "/", " ", "2"}]}],
         ",", " ", "nextLevelTop", ",", " ", "nextLevelBottom"}], "}"}], ",", 
      "  ", "\n", " ", 
      RowBox[{
       RowBox[{"Do", "[", "\n", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"nextLevelTop", " ", "=", " ", 
           RowBox[{
            RowBox[{"cube", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "-", " ", "1"}]}], 
          ";", "\n", " ", 
          RowBox[{"nextLevelBottom", " ", "=", " ", 
           RowBox[{"Reverse", "[", 
            RowBox[{"nextLevelTop", ",", " ", 
             RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i"}], "]"}], "]"}], " ", "=", 
           " ", "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "2", ",", " ", "depth"}], "}"}]}], "]"}], 
       ";", "\n", " ", "cube"}]}], "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.895851743137969*^9, 3.895851743139699*^9}, 
   3.895924359871799*^9, {3.89592453810701*^9, 3.895924578194954*^9}, {
   3.8959252186688757`*^9, 3.895925220809202*^9}, {3.895925524859675*^9, 
   3.8959256363294773`*^9}, {3.8959256734090548`*^9, 3.895925702131855*^9}, {
   3.8959258099186487`*^9, 3.895925816806987*^9}, {3.8959259730488577`*^9, 
   3.895926282836673*^9}, {3.8959265493100758`*^9, 3.895926662644783*^9}, {
   3.895926706278529*^9, 3.895926786482958*^9}, {3.895926821613821*^9, 
   3.895926844925844*^9}, {3.895926900435109*^9, 3.895926936672982*^9}, {
   3.895926973114499*^9, 3.8959269735383453`*^9}, {3.895927198189516*^9, 
   3.895927215223157*^9}, {3.895927252199391*^9, 3.895927286790578*^9}, {
   3.895927406293037*^9, 3.895927410636898*^9}, {3.895927797828179*^9, 
   3.895927846144252*^9}, {3.89592793271642*^9, 3.8959279929073544`*^9}, {
   3.895931126242578*^9, 3.895931154621812*^9}, {3.8959313015059223`*^9, 
   3.895931377045375*^9}, {3.8959323011157093`*^9, 3.895932313219329*^9}, {
   3.895932461177787*^9, 3.8959325714721403`*^9}, {3.895932678723037*^9, 
   3.895932757580627*^9}, {3.8959328868123503`*^9, 3.895932888159932*^9}, {
   3.895935459823525*^9, 3.895935511447383*^9}, {3.8959357274782267`*^9, 
   3.8959357371406116`*^9}, {3.895936585436318*^9, 3.895936664508355*^9}, {
   3.89593717123914*^9, 3.895937174638939*^9}, {3.895937700482608*^9, 
   3.89593781260238*^9}, {3.895937851834051*^9, 3.895937883000745*^9}, {
   3.8959385051235247`*^9, 3.895938554533948*^9}, {3.89593860441994*^9, 
   3.895938624564167*^9}, {3.895938669851734*^9, 3.895938702339554*^9}, {
   3.895938816474195*^9, 3.895938875201742*^9}, {3.89593897753822*^9, 
   3.8959390346086817`*^9}, {3.895939281351036*^9, 3.8959394332172203`*^9}, {
   3.895939477153347*^9, 3.895939545154372*^9}, {3.895939589287294*^9, 
   3.895939606036065*^9}, {3.8959396848508453`*^9, 3.8959397130195103`*^9}, {
   3.8959398017319927`*^9, 3.895939804211789*^9}, {3.8959398409789457`*^9, 
   3.8959399341642437`*^9}, {3.895940025532848*^9, 3.8959400487644033`*^9}, {
   3.895940116780529*^9, 3.895940226988255*^9}, {3.895940507003642*^9, 
   3.8959405075474253`*^9}, {3.8959405866897993`*^9, 3.895940671176176*^9}, {
   3.895940703692581*^9, 3.8959407116663027`*^9}, {3.895940754848997*^9, 
   3.89594075729636*^9}, {3.8959407924797487`*^9, 3.895940922519642*^9}, {
   3.895940955351569*^9, 3.89594096823952*^9}, {3.895941016398425*^9, 
   3.8959411012133713`*^9}, {3.8959416217422657`*^9, 
   3.8959416510212517`*^9}, {3.895941751587575*^9, 3.895941811835779*^9}, {
   3.8959418894383717`*^9, 3.895941941232431*^9}, {3.8959420049647017`*^9, 
   3.895942005128944*^9}, {3.8959420661853848`*^9, 3.8959420678330383`*^9}, {
   3.895942138071947*^9, 3.8959422674461203`*^9}, 3.8959423198197193`*^9, {
   3.895942374462367*^9, 3.895942384931842*^9}, 3.895942746413762*^9, {
   3.8959427883930693`*^9, 3.895942810457045*^9}, {3.8959428545690527`*^9, 
   3.895942859976574*^9}, {3.895942894983653*^9, 3.8959428979759197`*^9}, {
   3.895942937507091*^9, 3.895942937591359*^9}, {3.895943262735242*^9, 
   3.895943267316884*^9}, {3.895966917004333*^9, 3.8959669469986143`*^9}, {
   3.895966997823306*^9, 3.89596704386239*^9}, {3.89596809177496*^9, 
   3.895968142191331*^9}, {3.8959682178881483`*^9, 3.8959682261725473`*^9}, {
   3.896029050033618*^9, 3.896029068137042*^9}, {3.8960291353107023`*^9, 
   3.896029139532143*^9}, {3.89602917515187*^9, 3.896029247645176*^9}, {
   3.8961074083514023`*^9, 3.8961076271262617`*^9}, {3.896108202159047*^9, 
   3.896108217674529*^9}, {3.89612133484925*^9, 3.896121334879374*^9}, {
   3.896333926923399*^9, 3.896333957460273*^9}, {3.8963342115459137`*^9, 
   3.8963342124743032`*^9}, {3.896334412981388*^9, 3.896334437790207*^9}, 
   3.8963344724866858`*^9, {3.8963347829749804`*^9, 3.896334788763483*^9}, {
   3.896337232426865*^9, 3.896337241139146*^9}, {3.896337276290044*^9, 
   3.896337298000836*^9}, {3.89633757679998*^9, 3.8963376254077663`*^9}, {
   3.8963376957588987`*^9, 3.896337842910202*^9}, {3.896337873366638*^9, 
   3.896337890286662*^9}, {3.8963379309026833`*^9, 3.89633795526123*^9}, {
   3.896338010019981*^9, 3.8963380326993437`*^9}, {3.8963381139954643`*^9, 
   3.896338122499373*^9}, {3.896338203438754*^9, 3.896338210235207*^9}, {
   3.8963382822578373`*^9, 3.896338305210328*^9}, 3.8963383916974993`*^9, {
   3.8963483268507853`*^9, 3.896348424583952*^9}, {3.896348514567173*^9, 
   3.896348516114107*^9}, {3.896348558057222*^9, 3.8963486335051517`*^9}, {
   3.8963487681597023`*^9, 3.896348850607461*^9}, {3.8963489171436357`*^9, 
   3.896348921088109*^9}, {3.8963489775137453`*^9, 3.896348990512315*^9}, {
   3.896349024592252*^9, 3.896349031358507*^9}, {3.896349186133471*^9, 
   3.896349204749407*^9}, {3.8963716164542627`*^9, 3.896371655926025*^9}, {
   3.896371756413437*^9, 3.896371790636338*^9}, {3.896372567219589*^9, 
   3.896372571050908*^9}, {3.896373316915986*^9, 3.896373358291664*^9}, {
   3.896407376844158*^9, 3.896407406656273*^9}, {3.89640745709867*^9, 
   3.8964074616951942`*^9}, {3.896407601239127*^9, 3.89640761911943*^9}, {
   3.896407650855463*^9, 3.896407652271559*^9}, {3.896407682339316*^9, 
   3.896407714302945*^9}, 3.8964078818960533`*^9, {3.896408474561571*^9, 
   3.8964084797293053`*^9}, {3.8964085304903517`*^9, 3.896408576912929*^9}, {
   3.8964088431539507`*^9, 3.89640886725655*^9}, {3.8964089190345383`*^9, 
   3.8964089912410507`*^9}, 3.896411364032544*^9, {3.896411555775547*^9, 
   3.896411560210909*^9}, {3.8964116249414473`*^9, 3.8964116268667393`*^9}, {
   3.8964117236814823`*^9, 3.896411733209247*^9}, {3.89641176893865*^9, 
   3.896411788777835*^9}, {3.896411829490048*^9, 3.896411854225235*^9}, {
   3.896413117100971*^9, 3.896413457913006*^9}, {3.89641348873833*^9, 
   3.896413593256999*^9}, {3.896414227715905*^9, 3.896414261627845*^9}, {
   3.896414345804163*^9, 3.896414366524419*^9}, {3.8964144449315357`*^9, 
   3.896414482055689*^9}, {3.896414532026331*^9, 3.8964145387787027`*^9}, {
   3.896414661241715*^9, 3.896414875292243*^9}, {3.9123161381909027`*^9, 
   3.912316140315507*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"34a5ce17-7bbe-4b28-b8dc-8f3c89a7e4af"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"minCube", " ", "=", " ", 
   RowBox[{"generateMinCube", "[", "7", "]"}]}], ";"}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"MatrixForm", "[", 
    RowBox[{"minCube", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], "]"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", " ", "7"}], "}"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.896408450237463*^9, 3.896408468106264*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"677679fe-0fd3-444e-8fed-86a92ef2cd8d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "2", "3", "4", "5", "6"},
       {"1", "2", "3", "4", "5", "6", "5"},
       {"2", "3", "4", "5", "6", "5", "4"},
       {"3", "4", "5", "6", "5", "4", "3"},
       {"4", "5", "6", "5", "4", "3", "2"},
       {"5", "6", "5", "4", "3", "2", "1"},
       {"6", "5", "4", "3", "2", "1", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "2", "3", "4", "5", "6", "5"},
       {"2", "1", "2", "3", "4", "5", "6"},
       {"3", "2", "3", "4", "5", "4", "5"},
       {"4", "3", "4", "5", "4", "3", "4"},
       {"5", "4", "5", "4", "3", "2", "3"},
       {"6", "5", "4", "3", "2", "1", "2"},
       {"5", "6", "5", "4", "3", "2", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "3", "4", "5", "6", "5", "4"},
       {"3", "2", "3", "4", "5", "4", "5"},
       {"4", "3", "2", "3", "4", "5", "6"},
       {"5", "4", "3", "4", "3", "4", "5"},
       {"6", "5", "4", "3", "2", "3", "4"},
       {"5", "4", "5", "4", "3", "2", "3"},
       {"4", "5", "6", "5", "4", "3", "2"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "4", "5", "6", "5", "4", "3"},
       {"4", "3", "4", "5", "4", "3", "4"},
       {"5", "4", "3", "4", "3", "4", "5"},
       {"6", "5", "4", "3", "4", "5", "6"},
       {"5", "4", "3", "4", "3", "4", "5"},
       {"4", "3", "4", "5", "4", "3", "4"},
       {"3", "4", "5", "6", "5", "4", "3"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "5", "6", "5", "4", "3", "2"},
       {"5", "4", "5", "4", "3", "2", "3"},
       {"6", "5", "4", "3", "2", "3", "4"},
       {"5", "4", "3", "4", "3", "4", "5"},
       {"4", "3", "2", "3", "4", "5", "6"},
       {"3", "2", "3", "4", "5", "4", "5"},
       {"2", "3", "4", "5", "6", "5", "4"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"5", "6", "5", "4", "3", "2", "1"},
       {"6", "5", "4", "3", "2", "1", "2"},
       {"5", "4", "5", "4", "3", "2", "3"},
       {"4", "3", "4", "5", "4", "3", "4"},
       {"3", "2", "3", "4", "5", "4", "5"},
       {"2", "1", "2", "3", "4", "5", "6"},
       {"1", "2", "3", "4", "5", "6", "5"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"6", "5", "4", "3", "2", "1", "0"},
       {"5", "6", "5", "4", "3", "2", "1"},
       {"4", "5", "6", "5", "4", "3", "2"},
       {"3", "4", "5", "6", "5", "4", "3"},
       {"2", "3", "4", "5", "6", "5", "4"},
       {"1", "2", "3", "4", "5", "6", "5"},
       {"0", "1", "2", "3", "4", "5", "6"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8964143940437117`*^9, {3.896414461823914*^9, 3.896414483544649*^9}, {
   3.896414524526495*^9, 3.896414540110299*^9}, {3.896414670363858*^9, 
   3.896414714880932*^9}, {3.89641474634375*^9, 3.89641480437281*^9}, 
   3.89641491856831*^9, {3.912183302053372*^9, 3.912183315416588*^9}, 
   3.912310157907295*^9, 3.91231614528097*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"a25f2e08-6430-440f-86ee-61a421c2e4c4"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cube", " ", "=", " ", 
   RowBox[{"initialCubeBorder", "[", "7", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dim", " ", "=", " ", "7"}], ";"}]}], "Code",
 CellChangeTimes->{{3.8963315301595716`*^9, 3.8963315999490423`*^9}, 
   3.8963316511910553`*^9, {3.89633391267474*^9, 3.896333913798381*^9}, {
   3.896333984558095*^9, 3.8963339860371017`*^9}, {3.896334238850512*^9, 
   3.8963342404267263`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"2148de09-ed05-4808-bed8-2a80b8dfc5bc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxCube", " ", "=", " ", 
   RowBox[{"generateMaxCube", "[", "dim", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"minCube", " ", "=", " ", 
   RowBox[{"generateMinCube", "[", "dim", "]"}]}], ";"}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"MatrixForm", "[", 
    RowBox[{"maxCube", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], "]"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", " ", "7"}], "}"}]}], "]"}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"MatrixForm", "[", 
    RowBox[{"minCube", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], "]"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", " ", "7"}], "}"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.896371577316053*^9, 3.896371603846746*^9}, {
  3.896373430967228*^9, 3.896373439340259*^9}, {3.89640694226118*^9, 
  3.8964069505477667`*^9}, {3.896411895267703*^9, 3.896411937489583*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"5a27674b-47e1-47cb-bd9a-3d1f3c532b69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "2", "3", "4", "5", "6"},
       {"1", "2", "3", "4", "5", "6", "5"},
       {"2", "3", "4", "5", "6", "5", "4"},
       {"3", "4", "5", "6", "5", "4", "3"},
       {"4", "5", "6", "5", "4", "3", "2"},
       {"5", "6", "5", "4", "3", "2", "1"},
       {"6", "5", "4", "3", "2", "1", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "2", "3", "4", "5", "6", "5"},
       {"2", "3", "4", "5", "6", "7", "6"},
       {"3", "4", "5", "6", "7", "6", "5"},
       {"4", "5", "6", "7", "6", "5", "4"},
       {"5", "6", "7", "6", "5", "4", "3"},
       {"6", "7", "6", "5", "4", "3", "2"},
       {"5", "6", "5", "4", "3", "2", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "3", "4", "5", "6", "5", "4"},
       {"3", "4", "5", "6", "7", "6", "5"},
       {"4", "5", "6", "7", "8", "7", "6"},
       {"5", "6", "7", "8", "7", "6", "5"},
       {"6", "7", "8", "7", "6", "5", "4"},
       {"5", "6", "7", "6", "5", "4", "3"},
       {"4", "5", "6", "5", "4", "3", "2"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "4", "5", "6", "5", "4", "3"},
       {"4", "5", "6", "7", "6", "5", "4"},
       {"5", "6", "7", "8", "7", "6", "5"},
       {"6", "7", "8", "9", "8", "7", "6"},
       {"5", "6", "7", "8", "7", "6", "5"},
       {"4", "5", "6", "7", "6", "5", "4"},
       {"3", "4", "5", "6", "5", "4", "3"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "5", "6", "5", "4", "3", "2"},
       {"5", "6", "7", "6", "5", "4", "3"},
       {"6", "7", "8", "7", "6", "5", "4"},
       {"5", "6", "7", "8", "7", "6", "5"},
       {"4", "5", "6", "7", "8", "7", "6"},
       {"3", "4", "5", "6", "7", "6", "5"},
       {"2", "3", "4", "5", "6", "5", "4"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"5", "6", "5", "4", "3", "2", "1"},
       {"6", "7", "6", "5", "4", "3", "2"},
       {"5", "6", "7", "6", "5", "4", "3"},
       {"4", "5", "6", "7", "6", "5", "4"},
       {"3", "4", "5", "6", "7", "6", "5"},
       {"2", "3", "4", "5", "6", "7", "6"},
       {"1", "2", "3", "4", "5", "6", "5"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"6", "5", "4", "3", "2", "1", "0"},
       {"5", "6", "5", "4", "3", "2", "1"},
       {"4", "5", "6", "5", "4", "3", "2"},
       {"3", "4", "5", "6", "5", "4", "3"},
       {"2", "3", "4", "5", "6", "5", "4"},
       {"1", "2", "3", "4", "5", "6", "5"},
       {"0", "1", "2", "3", "4", "5", "6"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896373223468034*^9, {3.896373368665174*^9, 3.89637338421276*^9}, {
   3.8963734161897097`*^9, 3.8963734413125134`*^9}, 3.8964069511576557`*^9, {
   3.8964118469459047`*^9, 3.896411864370466*^9}, 3.896411937899544*^9, 
   3.896414881838376*^9, {3.9121832990646257`*^9, 3.912183317701848*^9}, {
   3.912236910526445*^9, 3.912236916763802*^9}, {3.912269717430416*^9, 
   3.912269727211155*^9}, 3.912310160218156*^9, 3.912316148996271*^9},
 CellLabel->
  "Out[210]=",ExpressionUUID->"9ff6b25a-0e68-448e-bfef-73debea4f1e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "2", "3", "4", "5", "6"},
       {"1", "2", "3", "4", "5", "6", "5"},
       {"2", "3", "4", "5", "6", "5", "4"},
       {"3", "4", "5", "6", "5", "4", "3"},
       {"4", "5", "6", "5", "4", "3", "2"},
       {"5", "6", "5", "4", "3", "2", "1"},
       {"6", "5", "4", "3", "2", "1", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "2", "3", "4", "5", "6", "5"},
       {"2", "1", "2", "3", "4", "5", "6"},
       {"3", "2", "3", "4", "5", "4", "5"},
       {"4", "3", "4", "5", "4", "3", "4"},
       {"5", "4", "5", "4", "3", "2", "3"},
       {"6", "5", "4", "3", "2", "1", "2"},
       {"5", "6", "5", "4", "3", "2", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "3", "4", "5", "6", "5", "4"},
       {"3", "2", "3", "4", "5", "4", "5"},
       {"4", "3", "2", "3", "4", "5", "6"},
       {"5", "4", "3", "4", "3", "4", "5"},
       {"6", "5", "4", "3", "2", "3", "4"},
       {"5", "4", "5", "4", "3", "2", "3"},
       {"4", "5", "6", "5", "4", "3", "2"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "4", "5", "6", "5", "4", "3"},
       {"4", "3", "4", "5", "4", "3", "4"},
       {"5", "4", "3", "4", "3", "4", "5"},
       {"6", "5", "4", "3", "4", "5", "6"},
       {"5", "4", "3", "4", "3", "4", "5"},
       {"4", "3", "4", "5", "4", "3", "4"},
       {"3", "4", "5", "6", "5", "4", "3"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "5", "6", "5", "4", "3", "2"},
       {"5", "4", "5", "4", "3", "2", "3"},
       {"6", "5", "4", "3", "2", "3", "4"},
       {"5", "4", "3", "4", "3", "4", "5"},
       {"4", "3", "2", "3", "4", "5", "6"},
       {"3", "2", "3", "4", "5", "4", "5"},
       {"2", "3", "4", "5", "6", "5", "4"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"5", "6", "5", "4", "3", "2", "1"},
       {"6", "5", "4", "3", "2", "1", "2"},
       {"5", "4", "5", "4", "3", "2", "3"},
       {"4", "3", "4", "5", "4", "3", "4"},
       {"3", "2", "3", "4", "5", "4", "5"},
       {"2", "1", "2", "3", "4", "5", "6"},
       {"1", "2", "3", "4", "5", "6", "5"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"6", "5", "4", "3", "2", "1", "0"},
       {"5", "6", "5", "4", "3", "2", "1"},
       {"4", "5", "6", "5", "4", "3", "2"},
       {"3", "4", "5", "6", "5", "4", "3"},
       {"2", "3", "4", "5", "6", "5", "4"},
       {"1", "2", "3", "4", "5", "6", "5"},
       {"0", "1", "2", "3", "4", "5", "6"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896373223468034*^9, {3.896373368665174*^9, 3.89637338421276*^9}, {
   3.8963734161897097`*^9, 3.8963734413125134`*^9}, 3.8964069511576557`*^9, {
   3.8964118469459047`*^9, 3.896411864370466*^9}, 3.896411937899544*^9, 
   3.896414881838376*^9, {3.9121832990646257`*^9, 3.912183317701848*^9}, {
   3.912236910526445*^9, 3.912236916763802*^9}, {3.912269717430416*^9, 
   3.912269727211155*^9}, 3.912310160218156*^9, 3.912316149017912*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"a811f28b-2700-480d-a4e3-17a2dbe7809b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Image3D", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"maxCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
   RowBox[{"Max", "[", "maxCube", "]"}]}], "]"}], "\n", 
 RowBox[{"Image3D", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"minCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"Max", "[", "minCube", "]"}], ")"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"minCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
  RowBox[{"(", 
   RowBox[{"Max", "[", "minCube", "]"}], ")"}]}]}], "Code",
 CellChangeTimes->{{3.8963316730691643`*^9, 3.896331746094306*^9}, {
   3.896334624808174*^9, 3.8963346560064697`*^9}, {3.8963348102956*^9, 
   3.896334818678288*^9}, {3.896334880560091*^9, 3.896334900623008*^9}, 
   3.896415066154051*^9, {3.89641525094273*^9, 3.896415289726448*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"4a151634-84be-4917-bc9d-83c658b41256"],

Cell[BoxData[
 Graphics3DBox[
  TagBox[Raster3DBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOM5DJjoQt+x7bWvYl
261etcoOyLZ7YsFnv3qVln2RjLs9LnEQjUscxCdHHGQeLnGQO3CJ43M/LncC
1UNp7OIwe0gVB5mHS5yQ/0gJT3zuYWBoQJEnVZyQ//DFH63d/8Sij+b+ICZ9
4ot3Qu4gRR5fuOELb0L5iFD6JBRepMjjz3+40z2+/I5Pntz0iV8etzvxlT8A
escStg==
    "], {{0, 7, 7}, {7, 0, 0}}, {0., 1.},
    ColorFunction->"GrayLevelDefaultColorFunction",
    Method->{"FastRendering" -> True}],
   BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  AxesStyle->{},
  Background->None,
  BoxRatios->Automatic,
  Boxed->False,
  DefaultBaseStyle->"Image3DGraphics3D",
  ImageSize->{305.82244218466644`, 297.24353549648055`},
  ImageSizeRaw->7,
  PlotRange->{{0, 7}, {0, 7}, {0, 7}},
  ViewPoint->{-1.5974463491485018`, 0.3737014210994636, -2.959478401587073},
  ViewVertical->{-0.44063069032041324`, -0.7540601859752768, \
-0.4870706629172889}]], "Output",
 CellChangeTimes->{{3.896331695181623*^9, 3.896331731194665*^9}, 
   3.896331763393186*^9, 3.896333541735243*^9, 3.896334656876666*^9, 
   3.8963347502818003`*^9, 3.896334819057868*^9, {3.8963348819360027`*^9, 
   3.896334900983534*^9}, {3.896415052620182*^9, 3.8964150665424356`*^9}, {
   3.896415254695978*^9, 3.8964152931942873`*^9}},
 CellLabel->"Out[311]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzUnQd8VFX2xy8JkIQk9CaKva5lVaTouiurUtV1LfQuTRCkJxR1WdfeddW1
rr2hQgDB3rtSBEWRThoJ6cmkJ3P/v3Pv623emxlc/3w+N29mEpKZ987v3XO+
95xzL5u08NqpsyctnDF50tGD5k+ae+2MyQuOHjhnPl5KbMFYi8cw7j2atcRj
zpjty+OM/b97PEM8TGzBmf7vdMP3J4uHyQl8OUvJGcY65/dnPfMGsmMLL2FH
5Q9lXQ4MYa23DWNnGP7LOPGwLf2XNvmXiR85PmcQ65c7hA3JGciG5Q5mI/Ar
/p49kF2cN4j1OTCInZw/kB22bxD+xLmmXzVCPOycuGKY+FVddw1kJ+QMYOft
k/99Wu5AlolfvTxnMPsnjsvwfD5+/Qx8b3zuIHZl/mA2MHsAOxevnbp/EDs8
51KWWjDQ9CeuEA8PT+TKnyhQ/gS9Q7yr6fivN+DX3otf9wT+xHPZGHj8ND7J
ozjeh+/dhj93Ix4vxHEm/t/E7MFs2P4BbDB+/k95A9jpORezI/MvZm1LhjBx
oo0n+BLxMI3+Pr21bnsuYifmDhX/7wp8rGvxe+nv09/5Lx6/jr/7Fn5vwrt4
wDqtx9csPF2Bb72YN1j8yH8w7se4Hc//ge8vwnEWfmYSTvYIvMWh+LV/zh/E
/oifOfrAYNZh/yWMLpbpbV0sHrajt9t623LWvmwuO6rsOnZG4Xj21wNXsiuV
t3Zj9iD9reFUvY2/8ynG13iNJXxP77HbN/jeF3j+CZ69j8frMVYrP/8S3tMz
ePwYvv8gvn+ncjXpqs7GqZyM9z4S41J8vz9ePxvv+7jsIaxT7kWs5cf9ze/5
L+LhGeI94/N0KF/MjsXoV5PBrqzKYDMr5rHlZbPY/SVT2BNF49hLBcPYyvy/
ae/5O4yteE+/YOzAe/oVx59x/BHjB4yNGN/iZ77MpZ8fyD7A8W28/zV4b2/g
8Ss4PovxOP7fQ3ivd+Fn/onvL8Frc/D/pmKMxvu/HOfsQrx2Tv4AduLui4RV
k4aMH6WfeNipBefio3TEWz+ufBE7rzKTDataxOaFFrO7KxexZyoXsDcr57G3
y69nH5fNYF+WTmUbiiayrQfHsl8OjmS7Cq5i+w9czvLyLsXlOJA3lLGj8qDD
bIw9OK078ZZ+wVv/CcctOcpHxPiKTgne+od4m+/g8Vq89ibGq4r1P4Hv/Ruv
342P+S/8zFK8Ni9XqmUsXrsCCnLStukzni0enkefMWnnbHzG5ez4isXsvJpM
Nrwqk80PZbJ7KzPYC/jMb+Hxp7iE31cuZFvweX+umMN2ls9ie8tmspyy6exA
6TRWVDKZlRVPZBW4tJUHx7CKwhGsrOBKVpJ3GTuYdwkrwKcXnz1vCNuL97lT
XGp8drzPLThuypUm8BWOn+H4EQaJ7C08XwlTfA2f/Xk8fgqvPYzv0R3hFlJn
tsNNJ3+I7aZj/OiniYd/FR+dz2adKpewEyoWsfPxUUfg8i7Ax74XH/kFjHWh
DPYFPvpmjF9wWvbgsmdXLWT5lfNZIU5FMU5FGUZl+WwWwimpgUrryq5ldaXT
WV3xFFZbPIlVF01gIZySSpyScphESf7lrEickktYPk5JDsY+jF24dNvxEbaR
EvAx6ZSQhr/G+ByPP8J4D2Mdnq+iuw7GC7jsT+PofDMczCbmRrgZnmY4LyeK
h4PEbMNXsM4w7xNxbv6MzyzOC87FfZWW84Ljrzgv+3DMx/EgXivFz5djVMJc
qisWslr8njqcr3qMhsq5rBHnq7HietaIc9aI89UA6dTDhOogn9ria1h1MZ2v
sThfo3C+rmalyvkqhAnl4+ackyfP126cr19zlPOFz75ZOV/fYHyBz/8xnos7
nnKXppv3Szg63aUz8PosmOI1+H/qXfovONru0sbzdbR42JVeT+XPd+vBV7c5
i7/RZih/rc3Upmfa3FT/cOt/19yW+FLVEsfzdQDPi/G4HKMKoxrntRav1eF7
9RgJjTjprHcTzK0Zp1CO+RjzWHPFXNaE09hUbjmNUKN6GmvI7IrGsqrCkay8
cBgrPfB3VpwrTyPdi3JxKvfTaYSJyJvtQPYjTsMPGBvwsa0TB92oaeJ4A0ev
ieN6PJ+C46hsj4nDeBp7iIfdEyDHVP5ut8P5ipSzcCov5yvTZ/NVaffwN9Nf
bn4t9e3wi22+aHwmZWPDY0nb6h9svav2rlbZNf9KOBBa0kI7jdWLWQ3uznUY
DXjeSAOntYlOZzPOLTu3GQ/DOLFyLGThShoLMObbTy9ZaQVOb7nx9E5jtbjZ
1eBmV31wHKs6OIpVYC4ry7+CFeNGf1A9vRj7Yal7cuR85j6XDfI1l92cS3PZ
YJe5bKhpLjOd3s7iYbdEKDqNr+hyBH8z5Rzl9M7hq1LvxylewbPSPuIr0zby
N9N+Cb+etif8apuc5hfbFDQ9m1Lc+HRKWePjSZUNj7Surn+gVW3dXS3ra25N
bKi+oUUjTn1TaAkmt2b62qoZpz2MUx4OqQNnPJHjvCfQ6U6g883O0c+2YtCY
Xpsq1bNNBj2LNZTPxNnGfbTMcLaLxuNsj8bUMlxMLcX5l4mzrU0tHtOqmFrc
ptVcOa0+meNvWu2Lq2GcVo0nu63qz65g6Xx15548i052uyt4ljjZD+Bkv46T
/TGOmzF2hlel5eDEF+LEl+DEl4dXpFY1v9qmuvmlNrW4APVNz6c0ND2T0tj0
VHJT4xNJzQ2PJDXD9sO197QK19yeGK5enoDTistAp3kJ41WLxcC9Cl/xJVOe
ftYvHFpkMXunizBXXIQmuqMoF6Gh9FrcnKeKyaxGTGbyIlSKi0CTmTq/y8nM
c37P9Zjfc/X5/RHF47812z6/X4X/5zS/Gy9Csnh4jHoRjuLr2vfmb7a9Cid8
Pl+Z+iAuAF2ET9SLwFel5+J5ER6XYVRBGdX4uVr+Rmp9+PXUBoxGXJim8Gup
zc2vYLzcJowLFMbFCUMh4ab/JvOGJ5J5/aNJvP6h1rzu3la89vaWvPqfCTj9
dHFa4ivjUIcY5kvTMmy5IyXQtWG97FdmjnJlZuPK0A3pWjltOroZV+tuRv4l
ctpU3Yxcs5uxGUO4GbnSzfg4x+Bm5Lm4GbmKm5FncDMwBuerbsZQs5txquHy
JIiHJ7XkH/dvzzefeSz/4Mg+fFXbq6GBBbgUD+ESvIGhX54s7fKU4/shPK+F
ZurxvAHHRhybcGwOv5nWjN8RDtN4g0ZqGJeOY+7gza9ivNyG47Lxpucxnk3h
jU8n80Zctob/4LL9G5ftPly2O1rymptdL1siXbYE78tW5TRNz3b1dsQ0Td4O
5hExTVu8nVy6bHm6t0PTtOrtiGmavJ3cQ+TtKJetUcZDdMU68q/OPZH/0Oev
fEPfSfy7s5fzr894in9+4hr+Qc/P+VtdNuNKOV+xLHHF5NValYYpA19bhulh
Ig+vTOO4bDTwh3HxWHtOlw6q42H18r2iXL4XMJ7D5fsvxpO4fI8pl+9+XL47
cfn+hYt3Q4sEjyuoT0msj28fIIKLRT5AUBeLfIAv8LqTi/VyjoOLlae6WIMj
uljKpasWX7u05ByXbtu5J/MNvS7kG/tM4Zv73IrjS3xT74/w2ib+/dk7+Nen
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
T5vjJC2maysoLJlmCGgiZbUYAlHXmjy3rBaHPDTjPikqbnSQl0NYpe+ex9xF
NdMwZS1OC7iccG1sxFIQlDgRy82Bi8+JWCbzvf3N6urWFU4d7bewFPPOEzwr
bQ2OX8LJ26q0QctTunpSh09qmVbD3+pUz98/spF/cnwToq9m/vVpUl3fkbrO
DtvJYxsl43qopYeDTV66uq5RfMJI6iJ1FMw054q5qYusTMuwtq1du0RkVjRi
9wwtAjMkn6RHk3zCgjHJqEvxJnqW4rX1UMJs/UZjm6cWt/chKVviqE9JuRX2
DYkzlOxjTtzc1PsjvOYMJTf0a8t39rVIinYKuphnpc7DoK0rV0I+n2JQw05q
iJur7CpbpklqTYc6uHgN/JPjmvjnJ0tJfXuGlNT3TpJK1pv4GRs06KlcCRpe
lCkWCsgwJYSIK5RgioRENsgspy22zDnSOuYw5Ei7L0a7YI7Zcccc0xwwR4AE
EVIUfYqYcrkqF8tdYR28NQclSFjROfiawJTY4OHQuMJDQhYbfcDDjX0mQDd/
xlHAQ7NuqF8mbT0yA9q4V2lo+5HSpP1XsZVJlujSSY2mqbl7NV/Tvg6OXgP/
+NhG6KaJf6Xq5kxVN2GloFfXjWi/N1BZVTakcsikKplTlWrPqfIoMzBYd2tu
2qJH5xRumELNXL5eJhJ6Y4pMBVNcHwumMOnGi1QsDkoqoiq+Uxp9CcWIE6lt
iGeZ8WgRu0gsaxXMoM9Jf1qpXu9sl5sn1Z/aUV13GU8znRN7cAN9ahf2H/9i
QA+HRypideJ8hB7cOJ+9znuDwvm+sU42RCJOgw83AT4c7VpAu7nS3j7fKS1s
94vu0avSaBcEandbLXZJeKc79Tdq5J+dpEZIYf7tmYYIySiaVJ03+Fg5dgQP
puWs6MGDmipszfNfHBE8zIwAHnxSPR+JGFIrbkVzyspB5I7NXkVzi+iub/pz
be3eoQY4pilTubUJg5iuusaX2o11oXaG7KcYqZ1aoFqA/+dF7f6D127Gc5Xa
HQe7Jq10keppL9nC0XxV++FQxD8wqLHzOoyvMWhvENonhHbQKhbKWZVOjWtr
+fqu9fyDIxW2cIqFLZztzBYu1NmCfTfUOLCFbB9sgS6/iq2sbMHiqOkKWurC
F6aaFRQLXoiUi2FJZXLaf9W9xs2K7sw1bun6X3TrZmtJGpZRFou44mXYEbmL
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
4DpQq64Cg+kqIPb8oEbs/v4gsfv/sL4zSOz6ZjX+9q6vV+FA7/pWtdj93Wq6
RIi9N9TQNYTyBy4islwh+kPNvcWSsadScyaPHtcc/So3Rw8ResKYmzF49quD
CWOsNSlmqQqsC4LOEzhDTS1KfN3Y8z0XBHf+nzm3U+tHFe/u0nZDbEvbKNv+
LB57CLe3YX0DScR5WO8Wq8bb1wDZ67Wj5dfA5lJcC9Zj0fy/eMaOZJ261yu0
qrUZO6IDgiG3Ho13ZsbOuADUGG1bZxipvCkCVc6VdP76Ojy0z53Z2/TwO+h3
Hn5nkR6mD5ckHPQkCmmPvKfItW2tLPtZkaJKf21ZoNUooW40pNk1ou6opzxI
w78ihL/MA2QxfzCQX8vIj0X/zwZzaCf0MvJvAPKvw7q2JkQ9kL7za1j/WyV2
fLlS7PhSpdh5DdZXquhaEF4JcKWgqwb9LfrbfbfUxV4IKvrNApocvVSXlsUC
apewuJ5tA5WjYlDpVO6xjIDG/kXmno6knspmJcqj7okPXJ2BuvdpyJ/HYwZ1
P+YiPPd42Wm5pPAG80IwDC8wrwlv7Sd4j/8UnS2rmQdkLVrLLjkjzeEGKIOx
mjhNCxKLBJxaDgmorWz9V4Nap+Xr41G1qHdiS+GgkIxn4zxHDq45azpjieAi
qNOuM4m56LkEf7p86KuE3jT/k7G3RSjQylLKCiSeinQFqApLgXeblwAZ/X9d
G1wDbPxTtAZOb5L47yH8/6hG5/8S/9+rUVF/kMT/NcD/FytF9+cqRPfnK8SO
q3Et+IJ9Pdj5tSrKEvB7WN8bRFUE/u5gzjKoEgkIRfkP1PXXvNfVr+UVn8b0
gDNhOGG00HMOi0G6Tn/fhWZAHwSw9KD+4jAlBeqrUnSt3rG/F6XsAmTqSuvv
LkBonaJ3AT4oVo3Dv3K+jX5uEDsDof/7eIN/EV2LZYNYNzWILfYzgx3zwwax
NbGCmWqZJwTjYmJpwRrDf8HbE8IHXV91Zc9noH0xGMGowNTA/gFRZ76Axfds
vhGW9cmrC166VlBBwAKxQ+Xj9ylRJ6XDjPmADyCsA+XVnOLvZ4M8AvTBEugE
cgr0P0Ed/2MA8odYNxA4B3HQpuC969vVHMwJxDu+VAWQV4quqwD0/6nAMe1e
UoE4TaDv1qDHhYCSAUoKGPTfAOC/rUD/A/kaVFYo/tAEfX0abzgi9HxxJW/R
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
XeLlaXvxSr1M4rVdJvfBKX5TWLbHltNnvoKa6vvhf5WdGjs7FzVm4lyzY1m7
Yr3s2C897FgG+VwOdiymrL46nh3bHa+Uo7y7vsaTfAfFtC/zTm50NfBcDII2
8WXBcKijksc2MpTfYY9uNKe8cY+Dzh18u21H5oO2ZZzhTG3zM2kRRnyGnxHv
mFcTQrvChXaRsF04oEfJUPdKaXrzbuUosxNrB2DRBXh0IMXdBny1AWebxZbL
XhObZr8kXpmxSqybTP7ztJ39oJBGNqrw5oGon8J6JwI6md3y7tZIK5jvJ54/
axEy+XtV/U4XjA61oUb8ey9g3Aeo9wWTXmkvnkkzFcipwl4xltvjCNyBsVUW
zmx+yJmlFNx1obeVy5m5ttSZm2R9xbY7CmJElDP7WdmcWX4BXBL5nSCAC7tf
KYbXVzvylrhA7snO48praQMYM1t9mGf8W8wYKXeG4/0H6fSK/v69owhnsZWC
5ZoxJKsgP0b3aipuXhvfkLs4t9lzdnWtsAN6r9KI9CoJmYS81I/sVvKynWrj
qVNay5AitbkVayMA9AqAtBaAWo5LwDNi8yWPIfH+KyphXZXThjaNRR0rXhxz
JG6Hi5e5Kt/HRHxNrXhqMulciF1/StX5VPcTu0dsH++/ya7cCulft1bPfh9f
oohOD8vtbL04k6d/OaO8zdcgl8yzje+fvC2OZ0ttjzV4Np+27T/NsxmmlQHP
9gvm2bger7RxH+HUksTu0XLcN6ZVFuEHRcc8Wgm5juJvsUc96tRKH/1Up5zI
cLghKcX768a4u83xWuwq2afygN/NwO9S0hLagSbdKQ1lexnPJ7e5F3D7JNY/
8EJ/AozuAMh+hjT620inrwQEmwDak8SL4/YVa3mQxf4m8PeRbNyKMT9FJv84
gE51wVZF/u1R9hsE/j5Wpy0fK2t1kuJTyKdbgvd6PdN8kto3m8DXhCLn+dUy
899ktMm6M1WDq0BXPmJugkHMaTXbB9yhxwnEXJkdsqGYrXfgxWylDMRcBgnb
9ZaEjf5zNQaywhkDWZ+RSrd6XAou2ocm5+wP+dB+YDjY9bfDirGb72nbde8I
RPdpyE8z0tauG6FZrkR+VUKa7wB/64VStbF9LjC+oKT5uljI8ya0TPG7mncr
7egOtUndoSC/RUhbOXKaJuk5da4+pXbFaE7jHSgPfoz7ZFVP3SuTRdeiD4it
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
kgOv+xPhpeLwIqwmQrDwKnbgVeTAi7AaK2mgJaByG1BlhAtvVeGCWwHUrUpl
OUdeDnJbvcgjr6BouIDY2YwAcAsQrQQKewCxOgCnrqoDcv7i3i4/UBPxFfdB
+rq8GFgvUPPiAnpQcR5i7lrgVgstairvVjWV96rq6lHI/cBrXBxeYjxj8Cqm
NKEG9TxPPbwOApX9NeOB13i1i3u289o2ys3GcI5Tax14/cjr3yFLRY3xns8p
53L+Ca99AKwFXq97x6tpXHua9z1KOZH77uf6PbWT1RDv1Ix+wRezeobfa94Z
wyru3MV6vnHnWukFJ4k7N8Oiy66G8vcmevtFskjR30FPP1y28c4Y6n8TTsgC
R0u5JoseyRSG7XrNxTKtYT+oOqSXnpGLxioAVUWED6Voq3IQVQGiZLpENeCW
ARYeM4tpvhl44QdV/vCM5nXBt5rVBV9rUodCDhBoBUBVAKUV9E11Hm4/6g6h
tEIorRCoCoGqEKgy2WZC3jCokrgxDKqIJRVxpSLGVDjwSD+FY4/0VmEMZBil
hZeFdMX+dXHsYGcDJYyfwKhJiHqwUKB0qxU5B1qZAYmLm9TxUh1mFHHVFXRx
+YGWH2C5/TJzu5kP4+kDWb7Cnm5vkRGXt6iXywPGPMW3u9y1JX1cqkNNaT9X
DRCrxoJWA68qvnRlxZ3IMFVROVyVV49E7kNbjVWlnvRwyuX8MCLRwX4TGQic
xqsdXNvGe7ZQbuRc4LSK8keg8j3XvkEWIwu5Zx7XZyMfcv4e529Sfwlo/Yv6
49Qnc/0BIHUP5R1c78G1G/mcf3B+mXeyuijwdJPf6Lmt2+k5J8gDzZkWToPN
8bdiJ9vplVdcijHsgpEbpde3l/GQ06nPNhOvZQGftX9aqX+6YINe9ustwGiH
/vJUGeq/X3/RVob/5wGhAmBTjJTaMTnm0W21M2bHE5md7Yl80NxLXO7Do/QB
Iz/KyS/jIIBRHTCSR8QBlFMAGAWAUdArHn8QEKnTTHYMrz+ErxXC1wrR+qGK
uxTxngqVDUIGqBAwwvtGeis8I6S7CmH3QsAIa+aYts5GGyXBh7o7INjKCuTf
CmREblF1+bcoP6XK8MtrzXwAywekEJe3UKSLy1vQ1eUBVp7C7m53LaBy12Ak
3dXFvVzq8iqOVQCqEixV4pNVgKZyvmc5fmEZ0C8FTSUVQ1Uxiqq4aoQqBklF
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
/wP+H+Db\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"d38405ec-d1be-4a21-bd13-d2649ec53fa3"],

Cell[BoxData[
 Graphics3DBox[
  TagBox[Raster3DBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOM5DJjoRXr9KyW71q
lR2QaQ9k24eGhtozMDQA6an2uMRBNC5xEJ8ccZB5uMRB7sAljs/9CHfi8p8W
Fn+E4nAvJh/TPVo43U/If4TCk5A7iYkPWppPuv24+eSmK1qaj4g/UuKdGPtx
hx++eMEX3uTkI8L+wx+e+N1JevmCL7/j9x956RO/PG534it/ABf7oJ4=
    "], {{0, 7, 7}, {
    7, 0, 0}}, {0., 1.},
    ColorFunction->"GrayLevelDefaultColorFunction",
    Method->{"FastRendering" -> True}],
   BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  AxesStyle->{},
  Background->None,
  BoxRatios->Automatic,
  Boxed->False,
  DefaultBaseStyle->"Image3DGraphics3D",
  ImageSize->{305.82244218466644`, 297.24353549648055`},
  ImageSizeRaw->7,
  PlotRange->{{0, 7}, {0, 7}, {0, 7}},
  ViewPoint->{3.0851019147081513`, -0.18223053399998324`, 1.3780196690694217`},
  ViewVertical->{0.6297555579814934, 0.775488318765345, 
   0.04500893966665442}]], "Output",
 CellChangeTimes->{{3.896331695181623*^9, 3.896331731194665*^9}, 
   3.896331763393186*^9, 3.896333541735243*^9, 3.896334656876666*^9, 
   3.8963347502818003`*^9, 3.896334819057868*^9, {3.8963348819360027`*^9, 
   3.896334900983534*^9}, {3.896415052620182*^9, 3.8964150665424356`*^9}, {
   3.896415254695978*^9, 3.89641529320192*^9}},
 CellLabel->"Out[312]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzcvXecVdX1PnyYfqcPvdmwJxpijL0hoyBV0VhiQYqoIKgU6SaoSdRoNLFF
Y6wwoChd7Ap2hRmQ3nsv02dg6t2/Z+1yzj71njv4zfv5vH9szrl3Brj3rLXX
etZaz1q7z8Ax9w4ZMXDM0MEDT+w+auCD9w4dPPrEbg+MwluJzQyj2ctY/zjR
SMI9MwzXH68Yxv+f7//K/8xphveaMWYkshuNJDbFSN3Uw0jbNsDI2H+HkXVo
kJFbOsBoUdHfaF15h9Eer4/bM5C/l7Soi/z3ksW/N4b/2ZH+rQT8O0lskZHC
ZhoRrEw2s1Ue+yCnJVuQ1Z7NSz+OzY2czObknMlmZ3ZmCzLOZ3OyL6h7PXJO
9fjk3x0aaJx3eIBx0YH+xuUH7zSuPNTf6HbgTqPnwTuMPocGGP0O9zf+UNzf
uBnrtkN3Ggn9D9+Jz3At3r4Ev3bqwQFGXtmt/KuIj5cgPt5g/ucF4quyG5NZ
4d3pbO+ULHZobC7bdl0rtqlHe7az74ls2zVnsG19fsO29j2PbelzOdvasxvb
2udatq3nH9mWngPY5p53s5WXDmSLOw1iHzS/m83JGs7mZY5i87LGsblZk9mc
zEfY3My/sTkZf8frZ7Cew+uX8P4LDdPSn6l7PvWJqkdSHikfnfSn4nsSJh8e
aPwJX2NK8QDjMXyTv+J7PI71JO6fKr7T+Ae+/rOHxHUKvv4oXAfhq/fD47kM
3/X0Q7dz8aSsudEwouKr3sD/7ElSwNc8N8K+vyib/dijFVvWoyNb0eU09nP+
b1hR/vns5+4XseIHu7Cjk3uz6sk3sSMPD2BVE4exykkPsarJj7LKiU+xqkkv
supJ/8X1LVY66g2254432I7r32Jbe0/H45jJtvSag+sCrI/Z5l6f4fWXWF9j
fYf1LVt9+dfsp86L2OKTP2cft/8Uj+xTNi/7MzySL/BIFmN9jfUtXn+PR/kD
HtdPdMWj+rbm5cjio8+kfl71aPLH5ROSFpSPTJxTOrTZ+4cHG+/h8byPNQuP
ajauc/FY5uE6H4teF+D1f+SjexTXMbjehesNUJErDt1h/Kp4oNFq30Bo+wij
Xjy1rvzPXkJBhN5ms2nNW7O3M09kb6SdzqamnsNmpF/CpkWuYVMzbmDTIwNY
QcYIvJ7ApqU9zqZnPMUW/fYFtqTLm6ww/11W1HUBrp9ifY31A554ESvsuhLX
NWxlzzVsx4DVePprWMX4dXjqG/GEt+CJb8PT3gFp7MLag7UP7+9nZSP3sQN3
7WF7bt3Ndv5hN9t27S5IYDee8B489b14+vtwvx/rAO4PYh1gqy7bz5aes499
c8Ze9uWJu9mn7XexD1vtZPObb2fzc7bjSe/Ak9+BJ78T1120orMydza8nb69
9pXI1qP/TN1c/UTKxspHktdVTExeUz4maWXpAwk/lwxtVnR4SLMlUFwj4Sfa
fHlL8HSX4O77g/2NRbj/CGsO1nSsV7H+CSmRcj8EBb4br2/EXu56+A7j7P0D
jDYH7jLS2ADDqBFiuIz/ecqprCD1QTzax7FexHobaw4riHzGpqV/h/tCrFW4
34D3tuJ+J9ZerAN47zBWCVYZK0ivwHuVbGbzSvbZGZXs2wsq2U+XV7GlV1ZB
PNUQyxGI5ChWDe5rIJpatrpvDds5sIYdGF4Dha9h5WNrWOX4hBrIyMiqgXRq
IZFafqVV+kAt2z+4lu2+rYbtuqkGe6MG0jkKE3IUEjoKiRiJ+LOnkXmUbep+
lK24+Cj2wxH27elH2KKTqtlnHavZx22rIJlK9kGLSjY/r4LNyynHHkkoh4iM
k8uj72WWNbyZUVr3cqSk5p9pxdVPphyueiz5YOXkpAPl4xL3lY9J3AvB7C4Z
nrATwtleMqTZtsODmm2BId2Eh70OayUefiEJCGsxtsHHMLBzIZQZ+NlruD6H
9TcY2/EQ4L0Q0s24XoX3Oh+43WgLKxOBcyBHYVTpQopcz96OfIqHvJtNxUOe
FqnBtRbXOqx6vgoiRmID7pIa8UdiFH8YKVE2q1WUfXFWFOKIsh8vjbIlV0RZ
4ZUJ+KMrfqeoq5EaZeuvj7Jdg6Ls4PAoKxkVZeUPRVnFuCirnGAkRUkWaXQf
ZcX3Rdn+gY1sz22NeP6NeP6NbPt1jWxb34RG2G3jAvzZuxFioNXANlzVwJZf
1MB+7NzAvjm9gX15Uj37vGM9+6RtPfuwdT1b2KIOJqqOLcitgxjq2NzsWkih
JvpuRk396+lHa19KO1LzbOqRI0+kVFc/llxV9XByZcXEpMqysYkVZaMSyyGH
stLhCaUlwxJKiu9pVlw8pNnBw4Ob7T08yNiBZ76Z5AEZrMLzLcL1B6yv8N6n
ePZkvt6BbF7H9Xmsx/E7E/D+UNzfUjLA6AZvcE5pf6MD5ELOmcujXMjjUv5n
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
Kk0VNWlNekOlnruMWPNUzUzSSGf+0tDiqUyrr5JE72q+aOdZeMwyY6P4my9s
jbwxmi+CgObt9qRi5fiYQNPBFVI1lmVX53kby17i5/vulXs6oM6oY0wzU8TD
rSZkinjG8iTyoA59bDS5SAU2jFkimyKpO4POW56L9ZRkx2ezaYZNH1OPY6u6
/RMfh8Z37YPu0eBfD5jZRSYwg2Am3vvgJIs87wUzI5KudJs158PMMDnK56ZG
8mEfMsdkJjevFyXypg6YCdmW8QuQ5bSOCl5ODMKYHiVAs4mMJlFeSzMI8hMU
WUg3ljRllFQ4dDnRNYAjDhL8/OMpja1Byhx/9y3qipQ9ot5IGv02A3/jT7gn
Lgd1Q9oVMpfmZU7Dp6Kp0/64ksw1der6pTIVFekUz3MdUpQyrr1OMuaHenHn
nFyObHsXpecxXypQ6i0UlGydjHm8ytthejTaWT0aZt2wsyiyr+0ST93QmcnU
KtPlY4xw+NI2n3KQaDFb1bsVqVGy9K9QziyhnMpuUgBPyuc3YnX99U3hv53t
SBf5YkmVLiKyJqWLqDWDGiGJkEHtGSPxc0pnylTmacJRU7PGbfhYH+BDbZFz
qRUfziOd2V4onCeW5FNcz3QPkXNiSfIv9FAVliz1wJJm4pOfnjnCauBwHzVi
aHXvJHteafHJWTGadJtSSZRDhZpKe1Mdj+PCgknNvYqBQq2sDE660CBVTSM7
SapI8ZCqHoq0T7isD4nNrCGeZc/65PplfYiAqbI+1B1OvWqU9VkIU/UvmfWh
4+ztipfJ1nQhhPgVFGyXHLLpjRApPpkVhBA5F+isYIRIRYhNt3h0V3oixIg2
eUMVG10lbk3xhGVKFDEPFX/m5RgRexkxVNOFOfJNa7pQR+tu7OaNF33SPu6m
i44++uaRktGrLkX5XN/SwhRdKO/2rUwYx53KMedhnOBI5eQEpXJKZCqHuGfU
iTYLi6aaE68nnYZk2dQulY60+Rdbll8I9aI51t5AkD5ezHxjhqixq2M1rWlv
NiDIh+3fLrawd6lRV7x0bZqGbOv1rnJzmxNRakcd2VRvlK0UnqNcfJywXweF
GmxhTnO7nKpKQaDQl2M2WHHMQoJCjzri2us0o5ftH05QtYK6CD6VhWdiZpHD
ojrcV+dmx9RHZxrnkzMYP8tjWjrXRzrYMHwmZw3P5BREaMzlOCw6Ipgncmwq
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
shSHBqihRIBF8l8FPvev/7+2p81/AL6WKws=\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"c5806353-2d39-4c0a-ad56-6333f7bc88ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "6"], ",", 
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"], ",", 
       FractionBox["1", "6"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"], ",", 
       FractionBox["1", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "6"], ",", 
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.896331695181623*^9, 3.896331731194665*^9}, 
   3.896331763393186*^9, 3.896333541735243*^9, 3.896334656876666*^9, 
   3.8963347502818003`*^9, 3.896334819057868*^9, {3.8963348819360027`*^9, 
   3.896334900983534*^9}, {3.896415052620182*^9, 3.8964150665424356`*^9}, {
   3.896415254695978*^9, 3.896415293213668*^9}},
 CellLabel->
  "Out[313]=",ExpressionUUID->"d97cfb3d-818a-4fba-9d79-270e56743867"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Image3DSlices", "[", 
  RowBox[{"Image3D", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"maxCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
    RowBox[{"Max", "[", "maxCube", "]"}]}], "]"}], "]"}], "\n", 
 RowBox[{"Image3DSlices", "[", 
  RowBox[{"Image3D", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"minCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
    RowBox[{"Max", "[", "minCube", "]"}]}], "]"}], "]"}]}], "Code",
 CellChangeTimes->{{3.8963317489102383`*^9, 3.8963317547401857`*^9}, {
  3.896333381775753*^9, 3.8963334130694427`*^9}, {3.89633467388951*^9, 
  3.896334689438015*^9}, {3.896334841120194*^9, 3.896334848670566*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"d51e056e-190d-42a3-a07a-ca0d26fe9e42"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.1111111119389534, 0.2222222238779068, 
       0.3333333432674408, 0.4444444477558136, 0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544}, {0.2222222238779068, 
       0.3333333432674408, 0.4444444477558136, 0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544, 0.6666666865348816}, {
       0.3333333432674408, 0.4444444477558136, 0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544, 0.6666666865348816, 
       0.5555555820465088}, {0.4444444477558136, 0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544, 0.6666666865348816, 
       0.5555555820465088, 0.4444444477558136}, {0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544, 0.6666666865348816, 
       0.5555555820465088, 0.4444444477558136, 0.3333333432674408}, {
       0.6666666865348816, 0.7777777910232544, 0.6666666865348816, 
       0.5555555820465088, 0.4444444477558136, 0.3333333432674408, 
       0.2222222238779068}, {0.7777777910232544, 0.6666666865348816, 
       0.5555555820465088, 0.4444444477558136, 0.3333333432674408, 
       0.2222222238779068, 0.1111111119389534}}], {{0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.2222222238779068, 0.3333333432674408, 
       0.4444444477558136, 0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.6666666865348816}, {0.3333333432674408, 
       0.4444444477558136, 0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.8888888955116272, 0.7777777910232544}, {
       0.4444444477558136, 0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.8888888955116272, 0.7777777910232544, 
       0.6666666865348816}, {0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.8888888955116272, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088}, {0.6666666865348816, 
       0.7777777910232544, 0.8888888955116272, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088, 0.4444444477558136}, {
       0.7777777910232544, 0.8888888955116272, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088, 0.4444444477558136, 
       0.3333333432674408}, {0.6666666865348816, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088, 0.4444444477558136, 
       0.3333333432674408, 0.2222222238779068}}], {{0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.3333333432674408, 0.4444444477558136, 
       0.5555555820465088, 0.6666666865348816, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088}, {0.4444444477558136, 
       0.5555555820465088, 0.6666666865348816, 0.7777777910232544, 
       0.8888888955116272, 0.7777777910232544, 0.6666666865348816}, {
       0.5555555820465088, 0.6666666865348816, 0.7777777910232544, 
       0.8888888955116272, 1., 0.8888888955116272, 0.7777777910232544}, {
       0.6666666865348816, 0.7777777910232544, 0.8888888955116272, 1., 
       0.8888888955116272, 0.7777777910232544, 0.6666666865348816}, {
       0.7777777910232544, 0.8888888955116272, 1., 0.8888888955116272, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088}, {
       0.6666666865348816, 0.7777777910232544, 0.8888888955116272, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088, 
       0.4444444477558136}, {0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088, 
       0.4444444477558136, 0.3333333432674408}}], {{0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.4444444477558136, 0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544, 0.6666666865348816, 
       0.5555555820465088, 0.4444444477558136}, {0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544, 0.8888888955116272, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088}, {
       0.6666666865348816, 0.7777777910232544, 0.8888888955116272, 1., 
       0.8888888955116272, 0.7777777910232544, 0.6666666865348816}, {
       0.7777777910232544, 0.8888888955116272, 1., 1.1111111640930176`, 1., 
       0.8888888955116272, 0.7777777910232544}, {0.6666666865348816, 
       0.7777777910232544, 0.8888888955116272, 1., 0.8888888955116272, 
       0.7777777910232544, 0.6666666865348816}, {0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544, 0.8888888955116272, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088}, {
       0.4444444477558136, 0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088, 
       0.4444444477558136}}], {{0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088, 
       0.4444444477558136, 0.3333333432674408}, {0.6666666865348816, 
       0.7777777910232544, 0.8888888955116272, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088, 0.4444444477558136}, {
       0.7777777910232544, 0.8888888955116272, 1., 0.8888888955116272, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088}, {
       0.6666666865348816, 0.7777777910232544, 0.8888888955116272, 1., 
       0.8888888955116272, 0.7777777910232544, 0.6666666865348816}, {
       0.5555555820465088, 0.6666666865348816, 0.7777777910232544, 
       0.8888888955116272, 1., 0.8888888955116272, 0.7777777910232544}, {
       0.4444444477558136, 0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.8888888955116272, 0.7777777910232544, 
       0.6666666865348816}, {0.3333333432674408, 0.4444444477558136, 
       0.5555555820465088, 0.6666666865348816, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088}}], {{0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.6666666865348816, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088, 0.4444444477558136, 
       0.3333333432674408, 0.2222222238779068}, {0.7777777910232544, 
       0.8888888955116272, 0.7777777910232544, 0.6666666865348816, 
       0.5555555820465088, 0.4444444477558136, 0.3333333432674408}, {
       0.6666666865348816, 0.7777777910232544, 0.8888888955116272, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088, 
       0.4444444477558136}, {0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.8888888955116272, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088}, {0.4444444477558136, 
       0.5555555820465088, 0.6666666865348816, 0.7777777910232544, 
       0.8888888955116272, 0.7777777910232544, 0.6666666865348816}, {
       0.3333333432674408, 0.4444444477558136, 0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544, 0.8888888955116272, 
       0.7777777910232544}, {0.2222222238779068, 0.3333333432674408, 
       0.4444444477558136, 0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.6666666865348816}}], {{0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.7777777910232544, 0.6666666865348816, 
       0.5555555820465088, 0.4444444477558136, 0.3333333432674408, 
       0.2222222238779068, 0.1111111119389534}, {0.6666666865348816, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088, 
       0.4444444477558136, 0.3333333432674408, 0.2222222238779068}, {
       0.5555555820465088, 0.6666666865348816, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088, 0.4444444477558136, 
       0.3333333432674408}, {0.4444444477558136, 0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544, 0.6666666865348816, 
       0.5555555820465088, 0.4444444477558136}, {0.3333333432674408, 
       0.4444444477558136, 0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088}, {
       0.2222222238779068, 0.3333333432674408, 0.4444444477558136, 
       0.5555555820465088, 0.6666666865348816, 0.7777777910232544, 
       0.6666666865348816}, {0.1111111119389534, 0.2222222238779068, 
       0.3333333432674408, 0.4444444477558136, 0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544}}], {{0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.896331755379592*^9, 3.896331765428173*^9}, {
   3.896333386471965*^9, 3.8963334133407717`*^9}, {3.8963346614386787`*^9, 
   3.896334690766985*^9}, 3.896334753576983*^9, 3.896334849032866*^9, {
   3.896415056361308*^9, 3.8964150704640007`*^9}},
 CellLabel->
  "Out[303]=",ExpressionUUID->"c847e9b8-6d1e-48b2-8b14-2637ff4b6b81"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.1666666716337204, 0.3333333432674408, 0.5, 
       0.6666666865348816, 0.8333333134651184, 1., 1.1666666269302368`}, {
       0.3333333432674408, 0.5, 0.6666666865348816, 0.8333333134651184, 1., 
       1.1666666269302368`, 1.}, {0.5, 0.6666666865348816, 0.8333333134651184,
        1., 1.1666666269302368`, 1., 0.8333333134651184}, {0.6666666865348816,
        0.8333333134651184, 1., 1.1666666269302368`, 1., 0.8333333134651184, 
       0.6666666865348816}, {0.8333333134651184, 1., 1.1666666269302368`, 1., 
       0.8333333134651184, 0.6666666865348816, 0.5}, {1., 1.1666666269302368`,
        1., 0.8333333134651184, 0.6666666865348816, 0.5, 
       0.3333333432674408}, {1.1666666269302368`, 1., 0.8333333134651184, 
       0.6666666865348816, 0.5, 0.3333333432674408, 0.1666666716337204}}], {{
       0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.3333333432674408, 0.5, 0.6666666865348816, 
       0.8333333134651184, 1., 1.1666666269302368`, 1.}, {0.5, 
       0.3333333432674408, 0.5, 0.6666666865348816, 0.8333333134651184, 1., 
       1.1666666269302368`}, {0.6666666865348816, 0.5, 0.6666666865348816, 
       0.8333333134651184, 1., 0.8333333134651184, 1.}, {0.8333333134651184, 
       0.6666666865348816, 0.8333333134651184, 1., 0.8333333134651184, 
       0.6666666865348816, 0.8333333134651184}, {1., 0.8333333134651184, 1., 
       0.8333333134651184, 0.6666666865348816, 0.5, 0.6666666865348816}, {
       1.1666666269302368`, 1., 0.8333333134651184, 0.6666666865348816, 0.5, 
       0.3333333432674408, 0.5}, {1., 1.1666666269302368`, 1., 
       0.8333333134651184, 0.6666666865348816, 0.5, 0.3333333432674408}}], {{
       0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.5, 0.6666666865348816, 0.8333333134651184, 1., 
       1.1666666269302368`, 1., 0.8333333134651184}, {0.6666666865348816, 0.5,
        0.6666666865348816, 0.8333333134651184, 1., 0.8333333134651184, 1.}, {
       0.8333333134651184, 0.6666666865348816, 0.5, 0.6666666865348816, 
       0.8333333134651184, 1., 1.1666666269302368`}, {1., 0.8333333134651184, 
       0.6666666865348816, 0.8333333134651184, 0.6666666865348816, 
       0.8333333134651184, 1.}, {1.1666666269302368`, 1., 0.8333333134651184, 
       0.6666666865348816, 0.5, 0.6666666865348816, 0.8333333134651184}, {1., 
       0.8333333134651184, 1., 0.8333333134651184, 0.6666666865348816, 0.5, 
       0.6666666865348816}, {0.8333333134651184, 1., 1.1666666269302368`, 1., 
       0.8333333134651184, 0.6666666865348816, 0.5}}], {{0, 7.}, {7., 0}}, {
      0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.6666666865348816, 0.8333333134651184, 1., 
       1.1666666269302368`, 1., 0.8333333134651184, 0.6666666865348816}, {
       0.8333333134651184, 0.6666666865348816, 0.8333333134651184, 1., 
       0.8333333134651184, 0.6666666865348816, 0.8333333134651184}, {1., 
       0.8333333134651184, 0.6666666865348816, 0.8333333134651184, 
       0.6666666865348816, 0.8333333134651184, 1.}, {1.1666666269302368`, 1., 
       0.8333333134651184, 0.6666666865348816, 0.8333333134651184, 1., 
       1.1666666269302368`}, {1., 0.8333333134651184, 0.6666666865348816, 
       0.8333333134651184, 0.6666666865348816, 0.8333333134651184, 1.}, {
       0.8333333134651184, 0.6666666865348816, 0.8333333134651184, 1., 
       0.8333333134651184, 0.6666666865348816, 0.8333333134651184}, {
       0.6666666865348816, 0.8333333134651184, 1., 1.1666666269302368`, 1., 
       0.8333333134651184, 0.6666666865348816}}], {{0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.8333333134651184, 1., 1.1666666269302368`, 1., 
       0.8333333134651184, 0.6666666865348816, 0.5}, {1., 0.8333333134651184, 
       1., 0.8333333134651184, 0.6666666865348816, 0.5, 0.6666666865348816}, {
       1.1666666269302368`, 1., 0.8333333134651184, 0.6666666865348816, 0.5, 
       0.6666666865348816, 0.8333333134651184}, {1., 0.8333333134651184, 
       0.6666666865348816, 0.8333333134651184, 0.6666666865348816, 
       0.8333333134651184, 1.}, {0.8333333134651184, 0.6666666865348816, 0.5, 
       0.6666666865348816, 0.8333333134651184, 1., 1.1666666269302368`}, {
       0.6666666865348816, 0.5, 0.6666666865348816, 0.8333333134651184, 1., 
       0.8333333134651184, 1.}, {0.5, 0.6666666865348816, 0.8333333134651184, 
       1., 1.1666666269302368`, 1., 0.8333333134651184}}], {{0, 7.}, {
       7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{1., 1.1666666269302368`, 1., 0.8333333134651184, 
       0.6666666865348816, 0.5, 0.3333333432674408}, {1.1666666269302368`, 1.,
        0.8333333134651184, 0.6666666865348816, 0.5, 0.3333333432674408, 
       0.5}, {1., 0.8333333134651184, 1., 0.8333333134651184, 
       0.6666666865348816, 0.5, 0.6666666865348816}, {0.8333333134651184, 
       0.6666666865348816, 0.8333333134651184, 1., 0.8333333134651184, 
       0.6666666865348816, 0.8333333134651184}, {0.6666666865348816, 0.5, 
       0.6666666865348816, 0.8333333134651184, 1., 0.8333333134651184, 1.}, {
       0.5, 0.3333333432674408, 0.5, 0.6666666865348816, 0.8333333134651184, 
       1., 1.1666666269302368`}, {0.3333333432674408, 0.5, 0.6666666865348816,
        0.8333333134651184, 1., 1.1666666269302368`, 1.}}], {{0, 7.}, {
       7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{1.1666666269302368`, 1., 0.8333333134651184, 
       0.6666666865348816, 0.5, 0.3333333432674408, 0.1666666716337204}, {1., 
       1.1666666269302368`, 1., 0.8333333134651184, 0.6666666865348816, 0.5, 
       0.3333333432674408}, {0.8333333134651184, 1., 1.1666666269302368`, 1., 
       0.8333333134651184, 0.6666666865348816, 0.5}, {0.6666666865348816, 
       0.8333333134651184, 1., 1.1666666269302368`, 1., 0.8333333134651184, 
       0.6666666865348816}, {0.5, 0.6666666865348816, 0.8333333134651184, 1., 
       1.1666666269302368`, 1., 0.8333333134651184}, {0.3333333432674408, 0.5,
        0.6666666865348816, 0.8333333134651184, 1., 1.1666666269302368`, 
       1.}, {0.1666666716337204, 0.3333333432674408, 0.5, 0.6666666865348816, 
       0.8333333134651184, 1., 1.1666666269302368`}}], {{0, 7.}, {7., 0}}, {
      0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.896331755379592*^9, 3.896331765428173*^9}, {
   3.896333386471965*^9, 3.8963334133407717`*^9}, {3.8963346614386787`*^9, 
   3.896334690766985*^9}, 3.896334753576983*^9, 3.896334849032866*^9, {
   3.896415056361308*^9, 3.896415070480075*^9}},
 CellLabel->
  "Out[304]=",ExpressionUUID->"4a576f16-0a7f-47be-bb2f-4b2a5fed13b3"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"selectRandomSite", "[", "dim_", "]"}], " ", ":=", " ", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"2", ",", " ", 
        RowBox[{"dim", " ", "-", " ", "1"}]}], "]"}], ",", " ", "3"}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"coinFlip", "[", "]"}], " ", ":=", " ", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"{", 
    RowBox[{"checkPopUp", ",", " ", "checkPopDown"}], "}"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeVal", "[", 
    RowBox[{"grid_", ",", " ", "pos_", ",", " ", "newVal_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{"grid", ",", " ", 
     RowBox[{"pos", " ", "->", " ", "newVal"}]}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Check", " ", "if", " ", "you", " ", "can", " ", "pop", " ", "up", " ", 
     "a", " ", "cell", " ", "at", " ", "pos", " ", "in", " ", 
     RowBox[{"grid", ".", " ", "Works"}], " ", "on", " ", "both", " ", 
     "height", " ", "values", " ", "and", " ", "3"}], "-", "colourings"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkPopUp", "[", 
    RowBox[{"grid_", ",", " ", "pos_"}], "]"}], " ", ":=", " ", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], " ", "~", " ", 
      "Join", " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "~", " ", "Join", 
      " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}]}], "]"}], "]"}]}], 
     ",", " ", "\n", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"grid", "[", 
           RowBox[{"[", 
            RowBox[{"Sequence", " ", "@@", " ", "pos"}], "]"}], "]"}], " ", 
          "-", " ", "#"}], ",", " ", "3"}], "]"}], " ", "==", " ", "2"}], " ",
       "&"}]}], "]"}]}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Check", " ", "if", " ", "you", " ", "can", " ", "pop", " ", "down", " ", 
     "a", " ", "cell", " ", "at", " ", "pos", " ", "in", " ", 
     RowBox[{"grid", ".", " ", "Works"}], " ", "on", " ", "both", " ", 
     "height", " ", "values", " ", "and", " ", "3"}], "-", "colourings"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkPopDown", "[", 
    RowBox[{"grid_", ",", " ", "pos_"}], "]"}], " ", ":=", " ", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], " ", "~", " ", 
      "Join", " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "~", " ", "Join", 
      " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}]}], "]"}], "]"}]}], 
     ",", " ", "\n", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"grid", "[", 
           RowBox[{"[", 
            RowBox[{"Sequence", " ", "@@", " ", "pos"}], "]"}], "]"}], " ", 
          "-", " ", "#"}], ",", " ", "3"}], "]"}], " ", "==", " ", "1"}], " ",
       "&"}]}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"If", " ", "heads"}], ",", " ", 
    RowBox[{
     RowBox[{
     "check", " ", "if", " ", "site", " ", "can", " ", "be", " ", "popped", 
      " ", "up"}], ";", " ", "otherwise"}], ",", " ", 
    RowBox[{
    "check", " ", "if", " ", "site", " ", "can", " ", "be", " ", "popped", 
     " ", 
     RowBox[{"down", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"coinFunctionAssociation", " ", "=", " ", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"checkPopUp", " ", "->", " ", "True"}], ",", " ", 
     RowBox[{"checkPopDown", " ", "->", " ", "False"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"coinSignAssociation", " ", "=", " ", 
    RowBox[{"Association", "[", 
     RowBox[{
      RowBox[{"checkPopUp", " ", "->", " ", "Plus"}], ",", " ", 
      RowBox[{"checkPopDown", " ", "->", " ", "Subtract"}]}], "]"}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"coinTosses", ":", " ", 
     RowBox[{
     "list", " ", "of", " ", "random", " ", "coin", " ", "flips", " ", "in", 
      " ", "the", " ", "form", " ", "of", " ", "a", " ", "list", " ", 
      "checkPopUp"}]}], ",", " ", 
    RowBox[{"checkPopDown", " ", "functions"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"sites", ":", " ", 
    RowBox[{"list", " ", "of", " ", "random", " ", "sites"}]}], " ", "*)"}], 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "generates", " ", "numSteps", " ", "new", " ", "coin", " ", "tosses", " ", 
    "and", " ", "sites", " ", "and", " ", "adds", " ", "them", " ", "to", " ",
     "the", " ", "the", " ", "beginning", " ", "of", " ", "existing", " ", 
    "lists"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extendRandomLists", "[", "numSteps_", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\n", "\t", 
    RowBox[{
     RowBox[{"coinTosses", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"coinFlip", "[", "]"}], ",", " ", "numSteps"}], "]"}], ",", 
        " ", "coinTosses"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"sites", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"selectRandomSite", "[", "]"}], ",", " ", "numSteps"}], 
         "]"}], ",", " ", "sites"}], "]"}]}], ";"}], "\n", ")"}]}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Execute", " ", "one", " ", "step", " ", "of", " ", "the", " ", "Markov", 
    " ", "chain", " ", "on", " ", "grid"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"OPTIMISATION", ":", " ", 
    RowBox[{
    "maybe", " ", "put", " ", "this", " ", "in", " ", "the", " ", "function", 
     " ", "that", " ", "performs", " ", "multiple", " ", "steps", " ", 
     "instead", " ", "of", " ", "calling", " ", "it", " ", "over", " ", "and",
      " ", 
     RowBox[{"over", "?"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneStep", "[", 
    RowBox[{"coin_", ",", " ", "site_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"initialGrids", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}]}], ",", " ", 
       RowBox[{"outGrids", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}]}]}], "}"}], ",", 
     "\n", "   ", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"coin", "[", 
            RowBox[{
             RowBox[{"initialGrids", "[", 
              RowBox[{"[", "#", "]"}], "]"}], ",", " ", "site"}], "]"}], ",", 
           " ", "\n", "   ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"outGrids", "[", 
               RowBox[{"[", "#", "]"}], "]"}], " ", "=", " ", 
              RowBox[{"changeVal", "[", 
               RowBox[{
                RowBox[{"initialGrids", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], ",", " ", "site", ",", " ", 
                RowBox[{
                 RowBox[{"coinSignAssociation", "[", "coin", "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"initialGrids", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"Sequence", " ", "@@", " ", "site"}], "]"}], 
                   "]"}], ",", " ", "2"}], "]"}]}], "]"}]}], ";"}], ")"}]}], 
          "]"}], " ", "&"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "2"}], "}"}]}], "]"}], ";", "\n", "   ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}], " ", "=", " ", 
       "outGrids"}], ";"}]}], "\n", "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Executes", " ", "the", " ", "algorithm", " ", "for", " ", "numSteps"}], 
    " ", "=", " ", 
    RowBox[{"len", 
     RowBox[{"(", "coinTosses", ")"}], " ", "steps"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Additionally", ":", " ", 
     RowBox[{"logs", " ", "files", " ", "every", " ", 
      RowBox[{"numSteps", "/", "100"}], " ", "or", " ", "10", " ", "million", 
      " ", "steps"}]}], ",", " ", 
    RowBox[{"whichever", " ", "is", " ", "lower"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Returns", " ", "1", " ", "if", " ", "the", " ", "grids", " ", 
     "converged"}], ",", " ", 
    RowBox[{"0", " ", "if", " ", "not"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nStepsMarkovChain", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"numSteps", " ", "=", " ", 
        RowBox[{"Length", "[", "coinTosses", "]"}]}], ",", "\n", 
       "\t\t\t\t\t\t\t", 
       RowBox[{"logInterval", " ", "=", " ", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"10", "^", "7"}], ",", " ", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Length", "[", "coinTosses", "]"}], " ", "/", " ", 
              "100"}], "]"}], ",", " ", "20000"}], "]"}]}], "]"}]}], ",", 
       "\n", "\t\t\t\t\t\t\t", 
       RowBox[{"outDir", " ", "=", " ", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"logDir", ",", " ", "\"\<coupling_\>\"", ",", " ", 
          RowBox[{"ToString", "[", "dim", "]"}], ",", " ", "\"\</log_\>\""}], 
         "]"}]}], ",", "\n", "\t\t\t\t\t\t\t", "i", ",", " ", "tempMinGrid", 
       ",", " ", "tempMaxGrid", ",", " ", "tempHeightDifference", ",", " ", 
       "tempStepNumber"}], "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Running for \>\"", ",", " ", "numSteps", ",", " ", 
        "\"\< steps...\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Logging every \>\"", ",", " ", "logInterval", ",", " ", 
        "\"\< steps\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"Catch", "[", 
       RowBox[{
        RowBox[{"Monitor", "[", "\n", "    ", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", " ", "=", " ", "0"}], ",", " ", 
            RowBox[{"i", " ", "<", " ", "numSteps"}], ",", " ", 
            RowBox[{"i", "++"}], ",", " ", 
            RowBox[{"(", "\n", "      ", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"i", ",", " ", "logInterval"}], "]"}], " ", "==", 
                 " ", "0"}], ",", " ", "\n", "       ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Export", "[", 
                   RowBox[{
                    RowBox[{"StringJoin", "[", 
                    RowBox[{"outDir", ",", " ", 
                    RowBox[{"ToString", "[", "i", "]"}], ",", " ", 
                    "\"\<.mx\>\""}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}]}], "]"}], 
                  ";", "\n", "        ", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"tempMinGrid", ",", " ", "tempMaxGrid"}], "}"}], 
                   " ", "=", " ", 
                   RowBox[{"{", 
                    RowBox[{"minGrid", ",", " ", "maxGrid"}], "}"}]}], ";", 
                  "\n", "        ", 
                  RowBox[{"tempHeightDifference", " ", "=", " ", 
                   RowBox[{"checkHeightDifference", "[", 
                    RowBox[{"tempMinGrid", ",", " ", "tempMaxGrid"}], "]"}]}],
                   ";", "\n", "        ", 
                  RowBox[{"tempStepNumber", " ", "=", " ", "i"}], ";"}], "\n",
                  "        ", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "WHAT", " ", "IS", " ", "THIS", " ", "LINE", " ", "DOING", 
                   " ", 
                   RowBox[{"HERE", "?"}]}], " ", "*)"}], "\n", "        ", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"displayGrids", "[", 
                    RowBox[{
                    "tempMaxGrid", ",", " ", "tempMinGrid", ",", " ", 
                    "blueColourRules"}], "]"}], ";"}], "*)"}], "\n", 
                 "        ", ")"}]}], "\n", "      ", "]"}], ";", "\n", 
              "      ", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{"OPTIMISATION", ":", " ", 
                 RowBox[{
                  RowBox[{"don", "'"}], "t", " ", "need", " ", "to", " ", 
                  "check", " ", "height", " ", "difference", " ", "each", " ", 
                  RowBox[{"time", ".", " ", "If"}], " ", "difference", " ", 
                  "is", " ", "1000"}]}], ",", " ", 
                RowBox[{
                "only", " ", "need", " ", "to", " ", "check", " ", "again", 
                 " ", "after", " ", "500", " ", "steps"}]}], "*)"}], "\n", 
              "      ", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{"OPTIMISATION", ":", " ", 
                 RowBox[{
                 "maybe", " ", "have", " ", "a", " ", 
                  "quickCheckHeightDifference"}]}], ",", " ", 
                RowBox[{
                "that", " ", "checks", " ", "a", " ", "few", " ", "cells", 
                 " ", "randomly"}]}], " ", "*)"}], "\n", "      ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"checkHeightDifference", "[", 
                  RowBox[{"maxGrid", ",", " ", "minGrid"}], "]"}], " ", "==", 
                 " ", "0"}], ",", " ", 
                RowBox[{"(", "\n", "         ", 
                 RowBox[{
                  RowBox[{"tempHeightDifference", " ", "=", " ", "0"}], ";", 
                  "     ", "\n", "         ", 
                  RowBox[{"Throw", "[", "1", "]"}]}], ")"}]}], "]"}], ";", 
              "\n", "      ", "\n", "      ", 
              RowBox[{"oneStep", "[", 
               RowBox[{
                RowBox[{"coinTosses", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
                RowBox[{"sites", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}], ")"}]}], 
           "\n", "    ", "]"}], ",", " ", "\n", "    ", 
          RowBox[{"Grid", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<Current step: \>\"", ",", " ", 
                RowBox[{"ToString", "[", "tempStepNumber", "]"}]}], "]"}], 
              "}"}], ",", " ", "\n", "          ", 
             RowBox[{"{", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<Height difference: \>\"", ",", " ", 
                RowBox[{"ToString", "[", "tempHeightDifference", "]"}]}], 
               "]"}], "}"}], ",", " ", "\n", "          ", 
             RowBox[{"{", 
              RowBox[{"displayGrids", "[", 
               RowBox[{
               "tempMaxGrid", ",", " ", "tempMinGrid", ",", " ", 
                "blueColourRules"}], "]"}], "}"}]}], "}"}], "\n", "    ", 
           "]"}]}], "\n", "  ", "]"}], ";"}], "]"}], ";", "\n", "  ", "\n", 
      "  ", "\n", "  ", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<-- The height difference after \>\"", ",", " ", "i", ",", " ", 
        "\"\< steps was \>\"", ",", " ", "tempHeightDifference", ",", " ", 
        "\"\<.\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"tempHeightDifference", " ", "==", " ", "0"}], ",", " ", 
        RowBox[{"Return", "[", "1", "]"}]}], "]"}], ";", "\n", "  ", 
      RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\n", "]"}]}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"startChain", "[", 
   RowBox[{"dimension_", ",", " ", "t_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "coins", ",", " ", "timestamp", ",", "\n", "\t\t\t\t\t\t\t\t\t", 
      RowBox[{"dirName", " ", "=", " ", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"logDir", ",", " ", "\"\<coupling_\>\"", ",", " ", 
         RowBox[{"ToString", "[", "dimension", "]"}], ",", " ", 
         "\"\<_logs/\>\""}], "]"}]}], ",", " ", "\n", "\t\t\t\t\t\t\t\t\t", 
      RowBox[{"finalDirName", " ", "=", " ", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"logDir", ",", " ", "\"\<coupling_\>\"", ",", " ", 
         RowBox[{"ToString", "[", "dimension", "]"}], ",", " ", 
         "\"\<_samples/\>\""}], "]"}]}], ",", "\n", "\t\t\t\t\t\t\t\t\t", 
      RowBox[{"steps", " ", "=", " ", "t"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"dim", " ", "=", " ", "dimension"}], ";", "\n", "\t", 
     RowBox[{"sites", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "\t", 
     RowBox[{"coinTosses", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "\t", 
     RowBox[{"converged", " ", "=", " ", "0"}], ";", "\t", "\n", "\t", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"converged", " ", "==", " ", "0"}], ",", " ", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"Reset", " ", "stuff"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}], " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"generateMaxHeightGrid", "[", "dim", "]"}], ",", " ", 
            RowBox[{"generateMinHeightGrid", "[", "dim", "]"}]}], "}"}]}], 
         ";", "\n", "\t\t", 
         RowBox[{"Quiet", " ", "@", " ", 
          RowBox[{"DeleteDirectory", "[", 
           RowBox[{"dirName", ",", " ", 
            RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}]}], ";", 
         "\n", "\t    ", 
         RowBox[{"CreateDirectory", "[", "dirName", "]"}], ";", "\n", 
         "\t    ", "\n", "\t    ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "Generate", " ", "new", " ", "coin", " ", "tosses", " ", "and", 
            " ", "sites"}], ",", " ", 
           RowBox[{"and", " ", "log", " ", "them"}]}], "*)"}], "\t\t", "\n", 
         "\t\t", 
         RowBox[{"extendRandomLists", "[", "steps", "]"}], ";", "\n", "\t\t", 
         
         RowBox[{"steps", " ", "=", " ", 
          RowBox[{"Length", "[", "coinTosses", "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"dirName", ",", " ", "\"\<sites.csv\>\""}], "]"}], ",", 
           " ", "sites", ",", " ", "\"\<CSV\>\""}], "]"}], ";", "\n", "\t\t", 
         
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"dirName", ",", " ", "\"\<coin_tosses.csv\>\""}], "]"}], 
           ",", " ", "coinTosses", ",", " ", "\"\<CSV\>\""}], "]"}], ";", 
         "\n", "\t\t", "\n", "\t    ", 
         RowBox[{"converged", " ", "=", " ", 
          RowBox[{"nStepsMarkovChain", "[", "]"}]}], ";", "\n", "\t    ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"converged", " ", "==", " ", "1"}], ",", " ", "Break"}], 
          "]"}]}], "\n", "\t", ")"}]}], "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"timestamp", " ", "=", " ", 
      RowBox[{"DateString", "[", "]"}]}], ";", "\n", "\t", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{
        "finalDirName", ",", " ", "timestamp", ",", " ", "\"\<.mx\>\""}], 
        "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}]}], "]"}], ";", "\n", 
     "\t", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{
        "finalDirName", ",", " ", "timestamp", ",", " ", 
         "\"\< colourings.pdf\>\""}], "]"}], ",", " ", 
       RowBox[{"displayColouringGrid", "[", 
        RowBox[{"minGrid", ",", " ", "blueColourRules"}], "]"}]}], "]"}], ";",
      "\t", "\n", "\t", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{
        "finalDirName", ",", " ", "timestamp", ",", " ", 
         "\"\< heights.pdf\>\""}], "]"}], ",", " ", 
       RowBox[{"displayHeightGrid", "[", "minGrid", "]"}]}], "]"}], ";", "\n",
      "\t", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{
        "finalDirName", ",", " ", "timestamp", ",", " ", 
         "\"\< height plots.pdf\>\""}], "]"}], ",", " ", 
       RowBox[{"displayHeightPlot", "[", "minGrid", "]"}]}], "]"}], ";", "\n",
      "\t", 
     RowBox[{"DeleteDirectory", "[", 
      RowBox[{"dirName", ",", " ", 
       RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}], ";", "\n", 
     "\t", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<The chain took \>\"", ",", " ", "steps", ",", " ", 
       "\"\< steps to converge. Here are the results:\>\""}], "]"}], ";", 
     "\n", "\t", 
     RowBox[{"displayGrids", "[", 
      RowBox[{"minGrid", ",", " ", "maxGrid", ",", " ", "blueColourRules"}], 
      "]"}]}]}], "\n", "]"}]}]}], "Code",
 CellChangeTimes->{{3.896460344757543*^9, 3.896460344892894*^9}, {
   3.8964603775487823`*^9, 3.896460427172718*^9}, {3.896460505525404*^9, 
   3.896460507683814*^9}, 3.896460598098578*^9, 3.9121841491362123`*^9, {
   3.912185176747891*^9, 3.9121851950010757`*^9}, {3.912185273068263*^9, 
   3.9121852790699263`*^9}, {3.912185375050088*^9, 3.9121853774319563`*^9}, {
   3.912185782189267*^9, 3.9121858163212442`*^9}, {3.91218618071176*^9, 
   3.9121862071829767`*^9}, {3.912187031857287*^9, 
   3.912187033409878*^9}},ExpressionUUID->"6babd98d-b119-4bcd-9c2e-\
7c324a23bf54"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"viewChangeSteps", "[", 
      RowBox[{
      "n_", ",", " ", "maxGrid_", ",", " ", "minGrid_", ",", " ", "steps_"}], 
      "]"}], " ", ":=", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gridsList", " ", "=", " ", 
        RowBox[{"NestList", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"oneStep", "[", 
            RowBox[{"n", ",", " ", 
             RowBox[{"Sequence", " ", "@@", " ", "#"}]}], "]"}], " ", "&"}], 
          ",", " ", 
          RowBox[{"{", 
           RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}], ",", " ", 
          "steps"}], "]"}]}], ";", " ", "\n", 
       RowBox[{"Manipulate", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"displayCube", "[", 
              RowBox[{"n", ",", " ", 
               RowBox[{
                RowBox[{"gridsList", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", " ", 
             RowBox[{"displayCube", "[", 
              RowBox[{"n", ",", " ", 
               RowBox[{
                RowBox[{"gridsList", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "}"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "steps", ",", "1"}], "}"}]}], "]"}]}], 
      ")"}]}], "\n", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"checkHeightDifference", "[", 
       RowBox[{"n_", ",", " ", "maxGrid_", ",", " ", "minGrid_"}], "]"}], " ",
       ":=", " ", 
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"maxGrid", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", " ", "j", ",", " ", "k"}], "]"}], "]"}], " ", 
            "-", " ", 
            RowBox[{"minGrid", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", " ", "j", ",", " ", "k"}], "]"}], "]"}]}], 
           "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "2", ",", " ", 
            RowBox[{"n", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "2", ",", " ", 
            RowBox[{"n", " ", "-", " ", "1"}]}], "}"}]}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"k", ",", " ", "2", ",", " ", 
          RowBox[{"n", " ", "-", " ", "1"}]}], "}"}]}], "]"}]}], ",", " ", 
     "2"}]}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"viewAfterSteps", "[", 
    RowBox[{
    "n_", ",", " ", "maxGrid_", ",", " ", "minGrid_", ",", " ", "steps_", ",",
      " ", "logInterval_", ",", " ", "prevStep_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"step", " ", "=", " ", "prevStep"}], "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"PrintTemporary", "[", 
       RowBox[{"ProgressIndicator", "[", 
        RowBox[{"Dynamic", "[", 
         RowBox[{"step", "/", 
          RowBox[{"(", 
           RowBox[{"steps", " ", "+", " ", "prevStep"}], ")"}]}], "]"}], 
        "]"}], "]"}], ";", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"time", ",", " ", "finalGrids"}], "}"}], " ", "=", " ", 
       RowBox[{"AbsoluteTiming", "[", 
        RowBox[{"Catch", "[", 
         RowBox[{"Nest", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", "\n", "  ", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Mod", "[", 
                   RowBox[{"step", ",", " ", "logInterval"}], "]"}], " ", "==",
                   " ", "0"}], " ", "||", " ", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], ",", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Export", "[", 
                   RowBox[{
                    RowBox[{"StringJoin", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", " ", 
                    "\"\<output files/coupling_\>\"", ",", " ", 
                    RowBox[{"ToString", "[", "n", "]"}], ",", " ", 
                    "\"\</log_\>\"", ",", " ", 
                    RowBox[{"ToString", "[", "step", "]"}], ",", " ", 
                    "\"\<.mx\>\""}], "]"}], ",", " ", "#"}], "]"}], ";", " ", 
                  "\n", "    ", 
                  RowBox[{"Print", "[", 
                   RowBox[{"checkHeightDifference", "[", 
                    RowBox[{"n", ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ")"}]}],
                "]"}], ";", " ", "\n", "  ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                RowBox[{"Throw", "[", "#", "]"}]}], "]"}], ";", " ", "\n", 
              "  ", 
              RowBox[{"step", "++"}], ";", " ", "\n", "  ", 
              RowBox[{"oneStep", "[", 
               RowBox[{"n", ",", " ", 
                RowBox[{"Sequence", " ", "@@", " ", "#"}]}], "]"}]}], ")"}], 
            " ", "&"}], ",", " ", "\n", "  ", 
           RowBox[{"{", 
            RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}], ",", " ", 
           RowBox[{"steps", " ", "+", " ", "1"}]}], "]"}], "]"}], "]"}]}], 
      ";", "\n", "  ", 
      RowBox[{"{", 
       RowBox[{"time", ",", " ", "step", ",", " ", "finalGrids"}], "}"}]}]}], 
    "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displayTime", "[", "time_", "]"}], " ", ":=", " ", 
  RowBox[{"DateString", "[", 
   RowBox[{"time", ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Hour\>\"", ",", " ", "\"\<:\>\"", ",", " ", "\"\<Minute\>\"", ",", 
      " ", "\"\<:\>\"", ",", " ", "\"\<Second\>\""}], "}"}]}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.896460701243726*^9, 3.896460711875445*^9}, {
  3.8965083628926687`*^9, 3.8965083911961737`*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->
  "In[394]:=",ExpressionUUID->"974ffde9-b169-46f3-a1ad-6a3e27e09793"],

Cell[BoxData[
 TemplateBox[{
  "Syntax", "bktmop", 
   "\"Expression \
\\\"\\!\\(\\*RowBox[{RowBox[{RowBox[{RowBox[{\\\"viewChangeSteps\\\", \\\"[\\\
\", RowBox[{\\\"n_\\\", \\\",\\\", \\\"maxGrid_\\\", \\\",\\\", \
\\\"minGrid_\\\", \\\",\\\", \\\"steps_\\\"}], \\\"]\\\"}], \\\":=\\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"gridsList\\\", \\\"=\\\", \
RowBox[{\\\"NestList\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"oneStep\\\", \
\\\"[\\\", RowBox[{\\\"n\\\", \\\",\\\", RowBox[{\\\"Sequence\\\", \
\\\"@@\\\", \\\"#\\\"}]}], \\\"]\\\"}], \\\"&\\\"}], \\\",\\\", RowBox[{\\\"{\
\\\", RowBox[{\\\"maxGrid\\\", \\\",\\\", \\\"minGrid\\\"}], \\\"}\\\"}], \
\\\",\\\", \\\"steps\\\"}], \\\"]\\\"}]}], \\\";\\\", \
RowBox[{\\\"Manipulate\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Grid\\\", \
\\\"[\\\", RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"displayCube\\\", \\\"[\\\", RowBox[{\\\"n\\\", \\\",\\\", \
RowBox[{RowBox[{\\\"gridsList\\\", \\\"[\\\", RowBox[{\\\"[\\\", \\\"k\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\"[\\\", RowBox[{\\\"[\\\", \\\"1\\\", \
\\\"]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"displayCube\\\
\", \\\"[\\\", RowBox[{\\\"n\\\", \\\",\\\", \
RowBox[{RowBox[{\\\"gridsList\\\", \\\"[\\\", RowBox[{\\\"[\\\", \\\"k\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\"[\\\", RowBox[{\\\"[\\\", \\\"2\\\", \
\\\"]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]}], \\\"}\\\"}], \\\"}\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"k\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"steps\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}]}], \
\\\"]\\\"}]}], \\\")\\\"}]}], \\\"\\\\n\\\", \
RowBox[{RowBox[{RowBox[{\\\"checkHeightDifference\\\", \\\"[\\\", \
RowBox[{\\\"n_\\\", \\\",\\\", \\\"maxGrid_\\\", \\\",\\\", \
\\\"minGrid_\\\"}], \\\"]\\\"}], \\\":=\\\", RowBox[{\\\"Total\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Abs\\\", \\\"[\\\", RowBox[{RowBox[{\\\"maxGrid\\\", \
\\\"[\\\", RowBox[{\\\"[\\\", RowBox[{\\\"i\\\", \\\",\\\", \\\"j\\\", \
\\\",\\\", \\\"k\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\"-\\\", \
RowBox[{\\\"minGrid\\\", \\\"[\\\", RowBox[{\\\"[\\\", RowBox[{\\\"i\\\", \
\\\",\\\", \\\"j\\\", \\\",\\\", \\\"k\\\"}], \\\"]\\\"}], \\\"]\\\"}]}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", RowBox[{\\\"n\\\", \\\"-\\\", \\\"1\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"j\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", RowBox[{\\\"n\\\", \\\"-\\\", \\\"1\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"k\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", RowBox[{\\\"n\\\", \\\"-\\\", \\\"1\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}]}], \\\",\\\", \\\"2\\\"}]}], \\\"]\\\"}]\\)\\\" \
has no opening \
\\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"[\\\\\\\"\\\"}]\\)\\\"\\!\\(\\*RowBox[{\\\"\\\
\\\\\"\\\\\\\"\\\"}]\\).\"", 2, 394, 250, 32388282914663186954, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896508457193864*^9},
 CellLabel->
  "During evaluation of \
In[394]:=",ExpressionUUID->"2a7b0a62-5082-42c9-8d8f-9585d78d9448"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dim", " ", "=", " ", "11"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"minCube", " ", "=", " ", 
   RowBox[{"generateMinCube", "[", "dim", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"maxCube", " ", "=", " ", 
   RowBox[{"generateMaxCube", "[", "dim", "]"}]}], ";"}], "\n", 
 RowBox[{"viewChangeSteps", "[", 
  RowBox[{"dim", ",", " ", "maxCube", ",", " ", "minCube", ",", " ", "100"}], 
  "]"}]}], "Code",
 CellChangeTimes->{{3.8965082301616364`*^9, 3.8965083002729473`*^9}, {
  3.896508401342095*^9, 3.896508411237862*^9}},
 CellLabel->
  "In[390]:=",ExpressionUUID->"2baf9286-66b6-4c06-a25a-ed36a8f8d537"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"3\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\
\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\
\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"2\
\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\
\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\
\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"10\\\", \\\",\\\", \\\"11\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \
\\\",\\\", \\\"3\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) cannot be used as a part \
specification.\"", 2, 393, 240, 32388282914663186954, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8965084456048803`*^9},
 CellLabel->
  "During evaluation of \
In[390]:=",ExpressionUUID->"c1861ccd-0696-40c0-8240-6aae8c344519"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \
\\\"7\\\"}], \\\"}\\\"}]\\) of \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\
\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"5\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"2\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \
\\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"11\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\
\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\
\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\
\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\
\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"10\\\", \\\",\\\", \\\"11\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \
\\\",\\\", \\\"3\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"9\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"5\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\"\
\[RightDoubleBracket]\\\"}]\\) does not exist.\"", 2, 393, 241, 
   32388282914663186954, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896508445620874*^9},
 CellLabel->
  "During evaluation of \
In[390]:=",ExpressionUUID->"e1c70da9-8d19-4461-99c8-40a6aa6ac571"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"6\\\"}]\\) of \
\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \
\\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"2\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \
\\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"11\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\
\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\
\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\
\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\
\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"10\\\", \\\",\\\", \\\"11\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \
\\\",\\\", \\\"3\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"9\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"5\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\"\
\[RightDoubleBracket]\\\"}]\\) does not exist.\"", 2, 393, 242, 
   32388282914663186954, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8965084456310472`*^9},
 CellLabel->
  "During evaluation of \
In[390]:=",ExpressionUUID->"115e057e-1fb0-4828-9e1a-a428db4287be"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\
\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"5\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"2\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \
\\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"11\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\
\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\
\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\
\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\
\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"10\\\", \\\",\\\", \\\"11\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \
\\\",\\\", \\\"3\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"9\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"5\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\"\
\[RightDoubleBracket]\\\"}]\\) cannot be used as a part specification.\"", 2, 
   393, 243, 32388282914663186954, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896508445640394*^9},
 CellLabel->
  "During evaluation of \
In[390]:=",ExpressionUUID->"72060248-c12a-4282-97b3-a09b67929de4"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"6\\\"}]\\) of \
\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \
\\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"2\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \
\\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"11\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\
\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\
\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\
\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\
\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"10\\\", \\\",\\\", \\\"11\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \
\\\",\\\", \\\"3\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"9\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"5\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\"\
\[RightDoubleBracket]\\\"}]\\) does not exist.\"", 2, 393, 244, 
   32388282914663186954, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896508445649787*^9},
 CellLabel->
  "During evaluation of \
In[390]:=",ExpressionUUID->"58b37fd4-06f2-4d33-bd28-d62fe19d6a33"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 393, 245, 32388282914663186954, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896508445659152*^9},
 CellLabel->
  "During evaluation of \
In[390]:=",ExpressionUUID->"f10fa9de-7929-4227-b0c5-157aa6fdb1c4"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\
\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"5\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"2\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \
\\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"11\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\
\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\
\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\
\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\
\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"10\\\", \\\",\\\", \\\"11\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \
\\\",\\\", \\\"3\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"9\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"5\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\"\
\[RightDoubleBracket]\\\"}]\\) cannot be used as a part specification.\"", 2, 
   393, 246, 32388282914663186954, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896508445666482*^9},
 CellLabel->
  "During evaluation of \
In[390]:=",ExpressionUUID->"6e62f5ec-cf08-4e73-b241-ccfc139cf5d5"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"pkspec1\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 393, 247, 32388282914663186954, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8965084456760607`*^9},
 CellLabel->
  "During evaluation of \
In[390]:=",ExpressionUUID->"c2090f7b-c321-4c6f-91ec-d5922bbe5b40"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`k$$], 1, 100, 1}}, Typeset`size$$ = {
    828., {26.1875, 31.8125}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`k$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          ArrayPlot[
           Part[
            Part[$CellContext`gridsList, $CellContext`k$$], 1], 
           ColorRules -> $CellContext`colourRules, Frame -> True], 
          ArrayPlot[
           Part[
            Part[$CellContext`gridsList, $CellContext`k$$], 2], 
           ColorRules -> $CellContext`colourRules, Frame -> True]}}], 
      "Specifications" :> {{$CellContext`k$$, 1, 100, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{874., {71.1875, 76.8125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8965084124600077`*^9, 3.8965084458073463`*^9},
 CellLabel->
  "Out[393]=",ExpressionUUID->"08687325-36b4-4fa5-95e9-97cec23e9276"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"gridsList\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 63, 32, 22187177884966700809, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.912183942055503*^9},
 CellLabel->"",ExpressionUUID->"05a08924-8d57-4b94-abbc-7b6d65d9b75c"],

Cell[BoxData[
 TemplateBox[{
  "ArrayPlot", "mat", 
   "\"Argument \\!\\(\\*RowBox[{\\\"gridsList\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a list of lists.\"", 2, 63, 33, 
   22187177884966700809, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.912183942137759*^9},
 CellLabel->"",ExpressionUUID->"fc3b5ed3-e3ae-47bd-99e6-32c8a940b001"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"gridsList\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 63, 34, 22187177884966700809, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9121839421431847`*^9},
 CellLabel->"",ExpressionUUID->"27449a0a-b4fd-4f73-86ed-9a6b278bde69"],

Cell[BoxData[
 TemplateBox[{
  "ArrayPlot", "mat", 
   "\"Argument \\!\\(\\*RowBox[{\\\"1\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a list of lists.\"", 2, 63, 35, 
   22187177884966700809, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.912183942166046*^9},
 CellLabel->"",ExpressionUUID->"2c702ab5-2246-40fe-a555-79ed3b7dc30f"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"gridsList\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 616, 87, 22187615986563376449, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.91226623666049*^9},
 CellLabel->"",ExpressionUUID->"26a2680e-971a-4cd3-99e2-fd6cf49007b9"],

Cell[BoxData[
 TemplateBox[{
  "ArrayPlot", "mat", 
   "\"Argument \\!\\(\\*RowBox[{\\\"gridsList\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a list of lists.\"", 2, 616, 88, 
   22187615986563376449, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.912266236683214*^9},
 CellLabel->"",ExpressionUUID->"ea884877-c9b5-46d6-9986-82a42f66254d"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"gridsList\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 616, 89, 22187615986563376449, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9122662366903563`*^9},
 CellLabel->"",ExpressionUUID->"65a8a4f5-7d10-49a3-a3ca-8d0fa4c8d699"],

Cell[BoxData[
 TemplateBox[{
  "ArrayPlot", "mat", 
   "\"Argument \\!\\(\\*RowBox[{\\\"1\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a list of lists.\"", 2, 616, 90, 
   22187615986563376449, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.91226623670954*^9},
 CellLabel->"",ExpressionUUID->"c96609cb-f7e8-4515-b071-525149dcd9c4"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"gridsList\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 212, 229, 22188105527583823474, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.912317473129652*^9},
 CellLabel->"",ExpressionUUID->"c103560d-da96-48d6-8e43-39979a0bc6bf"],

Cell[BoxData[
 TemplateBox[{
  "ArrayPlot", "mat", 
   "\"Argument \\!\\(\\*RowBox[{\\\"gridsList\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a list of lists.\"", 2, 212, 230, 
   22188105527583823474, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.91231747319873*^9},
 CellLabel->"",ExpressionUUID->"854c963f-233e-4c22-b8a6-b37ba99999c8"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"gridsList\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 212, 231, 22188105527583823474, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9123174732391367`*^9},
 CellLabel->"",ExpressionUUID->"70133fb8-0fde-4f3c-81a7-19a57d81adb2"],

Cell[BoxData[
 TemplateBox[{
  "ArrayPlot", "mat", 
   "\"Argument \\!\\(\\*RowBox[{\\\"1\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a list of lists.\"", 2, 212, 232, 
   22188105527583823474, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9123174732799587`*^9},
 CellLabel->"",ExpressionUUID->"9f0b709a-522a-4fa8-8e71-85f6d20fe35e"]
}, Open  ]]
},
WindowSize->{720, 786},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1. Inherited,
FrontEndVersion->"13.0 for Linux x86 (64-bit) (December 2, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["DarkStyle for Notebooks", "Title"], 
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Tongue menu cells", "Section"], 
         Cell[
          StyleData[
          "WolframAlphaShort", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "WolframAlphaLong", "Backspace" -> "Input"}, EvaluationMode -> 
          "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaShortInput", StyleDefinitions -> StyleData["Input"]], 
          EvaluationMode -> "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]], 
              CellBaseline -> Baseline], None}, {None, None}}, ShowCodeAssist -> 
          False, FormatType -> TextForm, FontFamily -> "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaLong", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "Input", "Backspace" -> "WolframAlphaShort"}, 
          EvaluationMode -> "WolframAlphaLong", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[WolframAlphaPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData["WolframAlphaFullOutput"], 
          CellMargins -> {{20, 10}, {Inherited, Inherited}}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ExternalLanguage"], CellFrame -> 1, 
             CellMargins -> {{66, 10}, {8, 8}}, 
             StyleKeyMapping -> {"Backspace" -> "Input"}, Evaluatable -> True,
              EvaluationMode -> "ExternalLanguage", CellGroupingRules -> 
             "InputGrouping", StripStyleOnPaste -> True, 
             CellEvaluationLanguage -> "Python", 
             CellFrameMargins -> {{4, 8}, {8, 8}}, CellFrameColor -> 
             RGBColor[0.2549, 0.23137, 0.42549], CellFrameLabels -> {{
                Cell[
                 BoxData[
                  DynamicBox[
                   ToBoxes[
                   ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged; 
                    FrontEnd`Private`MakeExternalLanguageMenu[
                    ExternalEvaluate`FE`GetDefaultCellEvaluationLanguage[], 
                    ExternalEvaluate`FE`GetExternalLanguageMenuData[]], 
                    StandardForm], 
                   TrackedSymbols :> {
                    ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged}, 
                   ImageSizeCache -> {
                    35., {10.64208984375, 17.35791015625}}]], "Output", 
                 Background -> None, CellFrame -> 0], None}, {None, None}}, 
             CellFrameLabelMargins -> 0, AllowInlineCells -> False, 
             Hyphenation -> False, AutoQuoteCharacters -> {}, 
             PasteAutoQuoteCharacters -> {}, LanguageCategory -> "Formula", 
             ScriptLevel -> 1, MenuSortingValue -> 1800, FontFamily -> Dynamic[
               CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
             FontColor -> GrayLevel[0.97], Background -> 
             RGBColor[0.18, 0.172, 0.22]], 
            Cell[
             StyleData["ExternalLanguage", "Presentation"], 
             CellMargins -> {{101, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "SlideShow"], ShowGroupOpener -> 
             False, CellMargins -> {{110, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "Printout"], 
             CellMargins -> {{48, 10}, {8, 8}}, 
             CellFrameMargins -> {{2, 8}, {8, 8}}]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Notebook options settings", "Section"], 
         Cell[
          StyleData[All, "Working"], InitializationCellEvaluation -> False, 
          DockedCells -> None, DefaultNewCellStyle -> "Code", 
          ShowPredictiveInterface -> False], 
         Cell[
          StyleData["Notebook"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0., 0.8, 1], "HoverColor" -> 
            RGBColor[0.78, 0.64, 1], "Thickness" -> 1.3, "Widths" -> {2, 8}}, 
          StyleKeyMapping -> {
           "==" -> "WolframAlphaLong", "Backspace" -> "WolframAlphaShort", 
            "=" -> "WolframAlphaShort", "*" -> "Item", ">" -> 
            "ExternalLanguage", "Backspace" -> "Code"}, 
          AutoStyleOptions -> {
           "CommentStyle" -> {
             FontColor -> RGBColor[0.89, 0.56, 1., 0.95], ShowAutoStyles -> 
              False, ShowSyntaxStyles -> False, AutoNumberFormatting -> 
              False}, "ExcessArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "FunctionLocalVariableStyle" -> {
             FontColor -> RGBColor[0.52549, 0.843137, 1.]}, 
            "GraphicsCompatibilityProblemStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "LocalScopeConflictStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "LocalVariableStyle" -> {
             FontColor -> RGBColor[0., 0.8200000000000001, 0.32]}, 
            "MissingArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "MisspelledWordStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "NoKernelPresentStyle" -> {
             FontColor -> 
              RGBColor[
               0.16470588235294117`, 0.6313725490196078, 0.596078431372549]}, 
            "PatternVariableStyle" -> {
             FontColor -> RGBColor[0.11, 1., 0.08], FontSlant -> "Italic"}, 
            "StringStyle" -> {
             FontColor -> RGBColor[0.98, 0.71, 0.], ShowAutoStyles -> False, 
              ShowSyntaxStyles -> False, AutoNumberFormatting -> False}, 
            "UndefinedSymbolStyle" -> {FontColor -> RGBColor[0.42, 0.94, 1]}, 
            "UnknownOptionStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "UnwantedAssignmentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 
                0.1843137254901961]}}, 
          CodeAssistOptions -> {
           "AutoConvertEnable" -> False, 
            "HeadHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}, "MatchHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}}, TranslationOptions -> {"Language" -> None}, FontColor -> 
          RGBColor[0, 0.7, 1], Background -> GrayLevel[0.15]], 
         Cell[
          StyleData["DialogStyle"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["NotebookObject"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["LinguisticAssistant"], FontColor -> 
          RGBColor[0, 0.7, 1]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Title and Section Cells", "Section"], 
         Cell[
          StyleData["Title"], FontColor -> GrayLevel[1]], 
         Cell[
          StyleData["Chapter"], FontColor -> RGBColor[0.8, 0.8, 0.8]], 
         Cell[
          StyleData["Subchapter"], FontColor -> RGBColor[0.65, 0.05, 0.65]], 
         Cell[
          StyleData["Subtitle"], FontColor -> 
          RGBColor[0.196078, 0.694118, 0.862745]], 
         Cell[
          StyleData["Subsubtitle"], FontColor -> 
          RGBColor[0.196078, 0.394118, 0.562745]], 
         Cell[
          StyleData["Subsubtitle"]], 
         Cell[
          StyleData["Section"], FontColor -> 
          RGBColor[
           0.1399099717708095, 0.5224231326771954, 0.6501869230182346]], 
         Cell[
          StyleData["Subsection"], FontColor -> GrayLevel[0.749996]], 
         Cell[
          StyleData["Subsubsection"], FontColor -> 
          RGBColor[0.823529, 0.490654, 0.202274]], 
         Cell[
          StyleData["Subsubsubsection"], FontColor -> 
          RGBColor[0.954147, 0.694224, 0.124651]], 
         Cell[
          StyleData["Subsubsubsubsection"], FontColor -> 
          RGBColor[0.913237, 0.365469, 0.0854353]], 
         Cell[
          StyleData["Text"], FontFamily -> "Gill Sans Light", FontSize -> 14, 
          FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
          GrayLevel[0.683803]], 
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[0, 0.7, 1]], CellMargins -> {{81, 10}, {4, 8}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "Subitem", "*" -> "Subitem"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "Item", 
          CounterAssignments -> {{"Subitem", 0}, {"Subsubitem", 0}}, 
          MenuSortingValue -> 1600, FontFamily -> "Source Sans Pro", FontSize -> 
          15], 
         Cell[
          StyleData["ItemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubsubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          CellGroupData[{
            Cell["Chapter", "Subsection"], 
            Cell[
             StyleData["Chapter"], CounterIncrements -> "Chapter", 
             CounterAssignments -> {{"Subchapter", 0}, {"Section", 0}, {
               "Equation", 0}, {"Figure", 0}, {"Subsubtitle", 0}, {
               "Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1150, 
             MenuCommandKey :> "2"], 
            Cell[
             StyleData["Subchapter"], CellDingbat -> 
             StyleBox["\[MathematicaIcon]", Alignment -> Baseline, 
               RGBColor[0., 0.043, 0.9]], CounterIncrements -> "Subchapter", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1200, 
             MenuCommandKey :> "3"]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Input and Output cells", "Section"], 
         Cell[
          StyleData["Code"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontWeight -> Plain, FontColor -> GrayLevel[1], 
          Background -> GrayLevel[0.1]], 
         Cell[
          StyleData["InitializationCell"], 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellFrameMargins -> {{10, 10}, {5, 5}}, CellFrameLabelMargins -> -5,
           FontColor -> GrayLevel[1], Background -> GrayLevel[0.25]], 
         Cell[
          StyleData["Input"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontColor -> GrayLevel[0.7]], 
         Cell[
          StyleData["Output"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontSize -> 13], 
         
         Cell[
          StyleData["Message"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          RGBColor[
           0.704600595101854, 0.24277103837644007`, 0.22278171969176777`]], 
         Cell[
          StyleData["Print"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          GrayLevel[0.3]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["misc", "Section"], 
         Cell[
          StyleData["InformationCell"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.760174, 0.600641, 0.675288]}, FontColor -> 
          GrayLevel[0.3]], 
         Cell[
          StyleData["InformationLink"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["InformationLinkLF"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["CellLabel"], 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontSize -> 9]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Formulas and Programming", "Section"], 
         Cell[
          StyleData["DisplayFormula"], FontColor -> GrayLevel[0.85]], 
         Cell[
          StyleData["DisplayFormulaNumbered"], FontColor -> GrayLevel[0.85]], 
         
         Cell[
          StyleData["Program"], CellFrameColor -> GrayLevel[0.4]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          TextData[{"Styles for ", 
            StyleBox["Mathematica", FontSlant -> "Italic"], 
            " System\[Hyphen]specific Elements"}], "Section", 
          CellChangeTimes -> {{3.601920784160323*^9, 3.60192078489342*^9}, 
            3.60356525124664*^9, {3.6037117681643677`*^9, 
            3.6037117683195887`*^9}}], 
         Cell[
          CellGroupData[{
            Cell["FormatType Styles", "Subsection"], 
            Cell[
             StyleData["StandardForm"]], 
            Cell[
             StyleData["CellExpression"], FontColor -> GrayLevel[0], 
             Background -> GrayLevel[0.75]], 
            Cell[
             StyleData["CellLabel"], FontSize -> 9, FontColor -> 
             RGBColor[0.603861, 0.615915, 0.607843]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
            "Graphics Styles", "Subsection", 
             CellChangeTimes -> {{3.603565272271762*^9, 
              3.603565284491351*^9}}], 
            Cell[
             StyleData["GraphicsAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["GraphicsFrame"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["Graphics3DAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Arial", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]]}, 
           Open]]}, Open]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "13.0 for Linux x86 (64-bit) (December 2, 2021)", StyleDefinitions -> 
  "Default.nb"],
ExpressionUUID->"15b5dd27-6829-4586-82c0-a7ea75e62e6d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 75, 0, 38, "CodeText",ExpressionUUID->"ec0c784a-ce9d-4c5a-b232-cf84abfadbcd"],
Cell[636, 22, 2705, 67, 221, "Code",ExpressionUUID->"e646de66-4019-4a45-9f24-b862c681f906"],
Cell[3344, 91, 553, 11, 112, "Text",ExpressionUUID->"7def9534-b5ec-46ec-afcf-1dbb61179113"],
Cell[3900, 104, 188, 4, 24, "Input",ExpressionUUID->"5bd8729e-1b5d-4b5f-b063-cb7f0991f434"],
Cell[4091, 110, 162, 3, 32, "Text",ExpressionUUID->"8a942dd6-5ed6-43b7-bf58-29d355d7d106"],
Cell[4256, 115, 545, 12, 56, "Code",ExpressionUUID->"25294259-c6c3-46b8-9874-58800bbfe360"],
Cell[4804, 129, 192, 6, 52, "Text",ExpressionUUID->"137fda44-2f58-466e-b9cf-77f14954051f"],
Cell[4999, 137, 2686, 76, 303, "Code",ExpressionUUID->"27a3c9a8-323b-4c69-ac0d-666ac9c09b77"],
Cell[7688, 215, 339, 7, 72, "Text",ExpressionUUID->"ba87411f-0479-4ab8-9fa6-a40adbcfb0e3"],
Cell[8030, 224, 26146, 688, 1953, "Code",ExpressionUUID->"fcac06f5-8334-4b9b-ad54-5a70c0e8fdd2"],
Cell[34179, 914, 1625, 42, 76, "Code",ExpressionUUID->"d998847f-5391-44c7-ae9b-344685206770"],
Cell[35807, 958, 5804, 135, 296, "Code",ExpressionUUID->"43c9ca43-dc34-48cc-ba70-58f0db2b1acf"],
Cell[41614, 1095, 9597, 220, 551, "Code",ExpressionUUID->"1cb6fad7-3d75-46e5-bdfd-cc2c5aa8136f"],
Cell[CellGroupData[{
Cell[51236, 1319, 279, 6, 34, "Code",ExpressionUUID->"57af5111-0f01-4f8c-80d8-9d8ac3a7ab54"],
Cell[51518, 1327, 1959, 42, 481, "Output",ExpressionUUID->"2b0e1a7a-fae2-45f9-9888-183be50f38de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53514, 1374, 705, 12, 69, "Code",ExpressionUUID->"1c71fc96-a296-4b0b-ab7f-73c9848f5424"],
Cell[54222, 1388, 2504, 49, 471, "Output",ExpressionUUID->"22ee2cce-8bbd-4550-9aec-8bd2c6b84b1a"],
Cell[56729, 1439, 6646, 133, 470, "Output",ExpressionUUID->"bc3535f9-f433-450e-a554-9ef3dad6e04a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63412, 1577, 493, 9, 69, "Code",ExpressionUUID->"af9d4561-7cad-4ed1-ba9c-ad923ed74cc4"],
Cell[63908, 1588, 3910, 82, 471, "Output",ExpressionUUID->"9975b4f5-7239-4c7f-bdda-282e90357544"],
Cell[67821, 1672, 2195, 47, 472, "Output",ExpressionUUID->"1e7f5879-86ea-449a-b751-18f27b9f3750"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70053, 1724, 419, 7, 34, "Code",ExpressionUUID->"8a6f1077-1d8d-412d-b17e-7e387e7a6104"],
Cell[70475, 1733, 6701, 140, 931, "Output",ExpressionUUID->"20f7c4cb-b0db-4a16-82ed-b1c3b2f82431"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77213, 1878, 177, 4, 34, "Code",ExpressionUUID->"e3ad0d73-88a7-4751-ab4b-17bb42c337cd"],
Cell[77393, 1884, 8107, 169, 379, "Output",ExpressionUUID->"0cf7af11-1c17-42bb-9958-8cd8ecfaa108"]
}, Open  ]],
Cell[85515, 2056, 14843, 304, 564, "Code",ExpressionUUID->"34a5ce17-7bbe-4b28-b8dc-8f3c89a7e4af"],
Cell[CellGroupData[{
Cell[100383, 2364, 570, 15, 69, "Code",ExpressionUUID->"677679fe-0fd3-444e-8fed-86a92ef2cd8d"],
Cell[100956, 2381, 5839, 150, 282, "Output",ExpressionUUID->"a25f2e08-6430-440f-86ee-61a421c2e4c4"]
}, Open  ]],
Cell[106810, 2534, 515, 10, 56, "Code",ExpressionUUID->"2148de09-ed05-4808-bed8-2a80b8dfc5bc"],
Cell[CellGroupData[{
Cell[107350, 2548, 1123, 29, 110, "Code",ExpressionUUID->"5a27674b-47e1-47cb-bd9a-3d1f3c532b69"],
Cell[108476, 2579, 5944, 151, 138, "Output",ExpressionUUID->"9ff6b25a-0e68-448e-bfef-73debea4f1e6"],
Cell[114423, 2732, 5944, 151, 138, "Output",ExpressionUUID->"a811f28b-2700-480d-a4e3-17a2dbe7809b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120404, 2888, 934, 22, 76, "Code",ExpressionUUID->"4a151634-84be-4917-bc9d-83c658b41256"],
Cell[121341, 2912, 103284, 1701, 321, 964, 23, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"d38405ec-d1be-4a21-bd13-d2649ec53fa3"],
Cell[224628, 4615, 82012, 1352, 321, 956, 23, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"c5806353-2d39-4c0a-ad56-6333f7bc88ea"],
Cell[306643, 5969, 13068, 382, 664, "Output",ExpressionUUID->"d97cfb3d-818a-4fba-9d79-270e56743867"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319748, 6356, 761, 17, 56, "Code",ExpressionUUID->"d51e056e-190d-42a3-a07a-ca0d26fe9e42"],
Cell[320512, 6375, 10509, 187, 61, "Output",ExpressionUUID->"c847e9b8-6d1e-48b2-8b14-2637ff4b6b81"],
Cell[331024, 6564, 8538, 156, 61, "Output",ExpressionUUID->"4a576f16-0a7f-47be-bb2f-4b2a5fed13b3"]
}, Open  ]],
Cell[339577, 6723, 24514, 600, 2180, "Code",ExpressionUUID->"6babd98d-b119-4bcd-9c2e-7c324a23bf54"],
Cell[CellGroupData[{
Cell[364116, 7327, 6763, 169, 365, "Code",ExpressionUUID->"974ffde9-b169-46f3-a1ad-6a3e27e09793"],
Cell[370882, 7498, 3111, 49, 108, "Message",ExpressionUUID->"2a7b0a62-5082-42c9-8d8f-9585d78d9448"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374030, 7552, 636, 15, 97, "Code",ExpressionUUID->"2baf9286-66b6-4c06-a25a-ed36a8f8d537"],
Cell[374669, 7569, 7947, 109, 156, "Message",ExpressionUUID->"c1861ccd-0696-40c0-8240-6aae8c344519"],
Cell[382619, 7680, 9480, 130, 172, "Message",ExpressionUUID->"e1c70da9-8d19-4461-99c8-40a6aa6ac571"],
Cell[392102, 7812, 9428, 130, 172, "Message",ExpressionUUID->"115e057e-1fb0-4828-9e1a-a428db4287be"],
Cell[401533, 7944, 9425, 129, 188, "Message",ExpressionUUID->"72060248-c12a-4282-97b3-a09b67929de4"],
Cell[410961, 8075, 9426, 130, 172, "Message",ExpressionUUID->"58b37fd4-06f2-4d33-bd28-d62fe19d6a33"],
Cell[420390, 8207, 453, 10, 28, "Message",ExpressionUUID->"f10fa9de-7929-4227-b0c5-157aa6fdb1c4"],
Cell[420846, 8219, 9425, 129, 188, "Message",ExpressionUUID->"6e62f5ec-cf08-4e73-b241-ccfc139cf5d5"],
Cell[430274, 8350, 457, 10, 28, "Message",ExpressionUUID->"c2090f7b-c321-4c6f-91ec-d5922bbe5b40"],
Cell[430734, 8362, 1922, 41, 174, "Output",ExpressionUUID->"08687325-36b4-4fa5-95e9-97cec23e9276"],
Cell[432659, 8405, 422, 8, 28, "Message",ExpressionUUID->"05a08924-8d57-4b94-abbc-7b6d65d9b75c"],
Cell[433084, 8415, 381, 8, 28, "Message",ExpressionUUID->"fc3b5ed3-e3ae-47bd-99e6-32c8a940b001"],
Cell[433468, 8425, 424, 8, 28, "Message",ExpressionUUID->"27449a0a-b4fd-4f73-86ed-9a6b278bde69"],
Cell[433895, 8435, 373, 8, 28, "Message",ExpressionUUID->"2c702ab5-2246-40fe-a555-79ed3b7dc30f"],
Cell[434271, 8445, 422, 8, 28, "Message",ExpressionUUID->"26a2680e-971a-4cd3-99e2-fd6cf49007b9"],
Cell[434696, 8455, 382, 8, 28, "Message",ExpressionUUID->"ea884877-c9b5-46d6-9986-82a42f66254d"],
Cell[435081, 8465, 425, 8, 28, "Message",ExpressionUUID->"65a8a4f5-7d10-49a3-a3ca-8d0fa4c8d699"],
Cell[435509, 8475, 373, 8, 28, "Message",ExpressionUUID->"c96609cb-f7e8-4515-b071-525149dcd9c4"],
Cell[435885, 8485, 424, 8, 28, "Message",ExpressionUUID->"c103560d-da96-48d6-8e43-39979a0bc6bf"],
Cell[436312, 8495, 382, 8, 28, "Message",ExpressionUUID->"854c963f-233e-4c22-b8a6-b37ba99999c8"],
Cell[436697, 8505, 426, 8, 28, "Message",ExpressionUUID->"70133fb8-0fde-4f3c-81a7-19a57d81adb2"],
Cell[437126, 8515, 377, 8, 28, "Message",ExpressionUUID->"9f0b709a-522a-4fa8-8e71-85f6d20fe35e"]
}, Open  ]]
}
]
*)

