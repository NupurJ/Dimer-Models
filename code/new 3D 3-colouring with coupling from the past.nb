(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    729152,      13921]
NotebookOptionsPosition[    691991,      13280]
NotebookOutlinePosition[    710719,      13697]
CellTagsIndexPosition[    710676,      13694]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["", "CodeText",ExpressionUUID->"ec0c784a-ce9d-4c5a-b232-cf84abfadbcd"],

Cell[TextData[{
 StyleBox["WARNING", "Subtitle"],
 ": The dimension of the cube should never be even! The initial cubes will be \
invalid. I should probably introduce a check to prevent accidents..."
}], "Text",
 CellChangeTimes->{{3.912416699794735*^9, 3.9124167114307404`*^9}, {
  3.9124167607999697`*^9, 3.9124168075457*^9}, {3.9154126043786182`*^9, 
  3.915412605049501*^9}},ExpressionUUID->"1c0f1225-b49f-4433-89f2-\
3809bd6fabfe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Ideas", ":", "\n", 
  RowBox[{"-", " ", 
   RowBox[{"ListPlot3D", "[", "]"}]}], " ", ":", " ", 
  RowBox[{"plot", " ", "height", " ", "function"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"-", " ", "try"}], " ", "colours", " ", "\"\<Tomato\>\""}], ",", 
  " ", "\"\<Gold\>\"", ",", " ", "\"\<LawnGreen\>\"", ",", " ", 
  "\"\<SteelBlue\>\""}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"-", " ", 
    RowBox[{"Image3D", "[", "]"}]}], " ", "with", " ", 
   RowBox[{"Image3DSlices", "[", "]"}]}], ":", " ", 
  RowBox[{"prints", " ", "all", " ", "slices"}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"ListDensityPlot", "[", "]"}]}], ":", " ", 
  RowBox[{
  "useful", " ", "if", " ", "we", " ", "want", " ", "to", " ", 
   "blur"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"-", " ", 
    RowBox[{"ListContourPlot", "[", "]"}]}], ":", " ", 
   RowBox[{"gives", " ", "contours"}]}], " "}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"ListVectorPlot", "[", "]"}]}], ",", " ", 
  RowBox[{"ListVectorPlot3D", "[", "]"}], ",", " ", 
  RowBox[{"ListStreamPlot", "[", "]"}], ",", " ", 
  RowBox[{"ListStreamPlot3D", "[", "]"}], ",", " ", 
  RowBox[{
   RowBox[{"ListSliceVectorPlot3D", "[", "]"}], ":", " ", 
   RowBox[{"for", " ", 
    RowBox[{"flows", "?", " ", 
     RowBox[{"(", 
      RowBox[{
      "look", " ", "at", " ", "density", " ", "functions", " ", "also"}], 
      ")"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"ArrayPlot3D", "[", "]"}]}], ",", " ", 
  RowBox[{"Raster3D", "[", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"Graphics3D", "[", "]"}]}], ":", " ", 
  RowBox[{
  "example", " ", "on", " ", "website", " ", "tells", " ", "you", " ", "how", 
   " ", "to", " ", "space", " ", "your", " ", "cell"}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"RegionPlot3D", "[", "]"}]}], ":", " ", 
  RowBox[{
  "shows", " ", "only", " ", "region", " ", "for", " ", "which", " ", "pred", 
   " ", "is", " ", "True"}]}]}], "Code",
 CellChangeTimes->{{3.8961935040712976`*^9, 3.8961935381558247`*^9}, {
   3.896194936842407*^9, 3.896194938170011*^9}, {3.8961976953367853`*^9, 
   3.8961977638117313`*^9}, {3.896198335144771*^9, 3.896198366856309*^9}, {
   3.8961986608628683`*^9, 3.896198674854718*^9}, {3.896198716270617*^9, 
   3.896198716661545*^9}, {3.896198782094411*^9, 3.896198791070257*^9}, {
   3.8961989110295343`*^9, 3.8961989204212313`*^9}, {3.896198964157205*^9, 
   3.896198979236967*^9}, {3.89619921442766*^9, 3.896199283091106*^9}, {
   3.896199362138769*^9, 3.896199418306302*^9}, {3.896328007182756*^9, 
   3.8963280077184763`*^9}, 3.912310676550824*^9},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[1]:=",ExpressionUUID->"e646de66-4019-4a45-9f24-b862c681f906"],

Cell[BoxData[
 TemplateBox[{
  "ListPlot3D", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"ListPlot3D\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) arguments; 1 argument is expected.\"", 2, 1, 
   1, 34808859521578452723, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913938676697691*^9, 3.915376130563591*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"4e896bef-be97-4176-9320-885695276cad"],

Cell[BoxData[
 RowBox[{"Ideas", ":", 
  RowBox[{"-", 
   RowBox[{"ListPlot3D", "[", "]"}]}], ":", 
  RowBox[{"function", " ", "height", " ", "plot"}]}]], "Output",
 CellChangeTimes->{3.913938676706901*^9, 3.915376130568557*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"16f1a296-eb73-47de-b328-a8609255a50c"]
}, Open  ]],

Cell["\<\
Ideas for visualisation:
- layers with slider. all three dimensions. either together or separately. \
maybe make both for safety. also have height plot. 
- translucent cells? - DOES NOT WORK
- get max height cell from both max and min grids and scale.\
\>", "Text",
 CellChangeTimes->{{3.912187496858489*^9, 3.9121875178478317`*^9}, {
  3.912187612260333*^9, 3.912187642990597*^9}, {3.9122412710676527`*^9, 
  3.912241278745646*^9}, {3.9122413209842653`*^9, 
  3.9122413417334547`*^9}},ExpressionUUID->"7def9534-b5ec-46ec-afcf-\
1dbb61179113"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<DarkMode\>\"", "]"}], "[", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Off", "[", "\"\<Packing\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.915376906617364*^9, 3.915376937834733*^9}, {
  3.915413053933343*^9, 3.915413054268485*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"5bd8729e-1b5d-4b5f-b063-cb7f0991f434"],

Cell["Output Locations", "Text",
 CellChangeTimes->{{3.9120763950365133`*^9, 
  3.9120763988073053`*^9}},ExpressionUUID->"8a942dd6-5ed6-43b7-bf58-\
29d355d7d106"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"currDir", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"logDir", " ", "=", " ", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"currDir", ",", " ", "\"\<3D output files/\>\""}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.912076419771578*^9, 3.9120764205557737`*^9}, {
   3.912310139246233*^9, 3.912310139990097*^9}, 3.912311323635508*^9},
 CellLabel->
  "In[111]:=",ExpressionUUID->"25294259-c6c3-46b8-9874-58800bbfe360"],

Cell["\<\
Colour Templates
(uncomment displaySwatches[] to pick a colour!)\
\>", "Text",
 CellChangeTimes->{
  3.9120763846005793`*^9},ExpressionUUID->"137fda44-2f58-466e-b9cf-\
77f14954051f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rybColourRules", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "->", "Red"}], ",", 
     RowBox[{"1", "->", "Yellow"}], ",", 
     RowBox[{"2", "->", "Blue"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rybDarkColourRules", " ", "=", " ", "\"\<DarkRainbow\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"fancyColourRules", " ", "=", " ", "\"\<CandyColors\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"blueColourRules", " ", "=", " ", "\"\<DeepSeaColors\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"pinkColourRules", " ", "=", " ", "\"\<ValentineTones\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"orangeColourRules", " ", "=", " ", "\"\<SolarColors\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tigerColourRules", " ", "=", " ", "\"\<SunsetColors\>\""}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaySwatch", "[", "colourFunction_", "]"}], " ", ":=", " ", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"i", " ", "+", " ", "j"}], " ", "<", " ", "21"}], ",", 
           " ", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"i", " ", "+", " ", "j"}], ",", " ", "21"}], "]"}], ",", 
           " ", 
           RowBox[{"21", " ", "-", " ", "2", " ", "-", " ", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"i", " ", "+", " ", "j"}], ",", " ", "21"}], "]"}]}]}], 
          "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "0", ",", " ", 
           RowBox[{"21", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"j", ",", " ", "0", ",", " ", 
           RowBox[{"21", " ", "-", " ", "1"}]}], "}"}]}], "]"}], ",", "3"}], 
      "]"}], ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "colourFunction"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaySwatches", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gradients", " ", "=", " ", 
        RowBox[{"ColorData", "[", "\"\<Gradients\>\"", "]"}]}], ",", " ", 
       RowBox[{"len", " ", "=", " ", 
        RowBox[{"Length", "[", 
         RowBox[{"ColorData", "[", "\"\<Gradients\>\"", "]"}], "]"}]}], ",", 
       " ", 
       RowBox[{"swatches", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", " ", 
       RowBox[{"i", " ", "=", " ", "0"}]}], "}"}], ",", " ", "\n", "\t", 
     RowBox[{"Grid", "[", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{"Nest", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", " ", 
             RowBox[{"displaySwatch", "[", 
              RowBox[{"gradients", "[", 
               RowBox[{"[", 
                RowBox[{"i", "++"}], "]"}], "]"}], "]"}]}], "]"}], " ", "&"}],
           ",", " ", "swatches", ",", " ", 
          RowBox[{"len", " ", "+", " ", "1"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Ceiling", "[", 
           RowBox[{"len", " ", "/", " ", "6"}], "]"}], ",", "6"}], "}"}]}], 
       "]"}], "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"displaySwatches", "[", "]"}], "*)"}]}]}], "Code",
 CellChangeTimes->{{3.913939429836048*^9, 3.913939434143519*^9}, {
   3.913939710772131*^9, 3.913939713044446*^9}, {3.915376141586418*^9, 
   3.915376157521748*^9}, 3.9156761026744547`*^9},
 CellLabel->
  "In[113]:=",ExpressionUUID->"27a3c9a8-323b-4c69-ac0d-666ac9c09b77"],

Cell["\<\
The following codeblock contains functions that will be evaluated either at \
the beginning or at the end of the simulation. They generate min/max height \
grids, and go between 3-coloured grids to height grids.\
\>", "Text",
 CellChangeTimes->{
  3.9120770127480183`*^9},ExpressionUUID->"ba87411f-0479-4ab8-9fa6-\
a40adbcfb0e3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"initialFaceGrid2D", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", " ", "+", " ", "j"}], " ", "<=", " ", 
       RowBox[{"n", " ", "-", " ", "1"}]}], ",", " ", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"i", " ", "+", " ", "j"}], ",", " ", "n"}], "]"}], ",", " ", 
      RowBox[{"n", " ", "-", " ", "2", " ", "-", " ", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"i", " ", "+", " ", "j"}], ",", " ", "n"}], "]"}]}]}], "]"}],
     ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "0", ",", " ", 
      RowBox[{"n", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"j", ",", " ", "0", ",", " ", 
      RowBox[{"n", " ", "-", " ", "1"}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"initialCubeBorder", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cube", " ", "=", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"n", ",", " ", "n", ",", " ", "n"}], "}"}]}], "]"}]}], ",",
        " ", "\n", "\t", 
       RowBox[{"top", " ", "=", " ", 
        RowBox[{"initialFaceGrid2D", "[", "n", "]"}]}], ",", "\n", "\t", 
       RowBox[{"bottom", " ", "=", " ", 
        RowBox[{"Reverse", "[", 
         RowBox[{
          RowBox[{"initialFaceGrid2D", "[", "n", "]"}], ",", " ", 
          RowBox[{"{", "1", "}"}]}], "]"}]}]}], "}"}], ",", " ", "\n", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "top"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "bottom"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "1", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "top"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "n", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "bottom"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "All", ",", " ", "1"}], "]"}], "]"}], " ", 
       "=", " ", "top"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "All", ",", " ", "n"}], "]"}], "]"}], " ", 
       "=", " ", "bottom"}], ";", "\n", " ", "cube"}]}], "\n", " ", "]"}]}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Takes", " ", "a", " ", "grid", " ", "with", " ", "a", " ", "filled", " ",
      "in", " ", "height", " ", "function", " ", "as", " ", "input", " ", 
     "and", " ", "converts", " ", "it", " ", "to", " ", "its", " ", 
     "corresponding", " ", "3"}], "-", 
    RowBox[{"colouring", " ", 
     RowBox[{"form", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"to3Colouring", "[", "grid_", "]"}], " ", ":=", " ", 
   RowBox[{"Mod", "[", 
    RowBox[{"grid", ",", " ", "3"}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Helper", " ", "function", " ", "for", " ", "toHeightFunction"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"findListHeight", "[", 
    RowBox[{"first_", ",", " ", "list_", ",", " ", "len_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"initialList", " ", "=", " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", " ", 
          RowBox[{"{", "len", "}"}], ",", " ", 
          RowBox[{"-", "1"}]}], "]"}]}], ",", " ", 
       RowBox[{"k", " ", "=", " ", "0"}], ",", " ", 
       RowBox[{"prev", " ", "=", " ", "first"}]}], "}"}], ",", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "remember", " ", "that", " ", "list", " ", "is", " ", "of", " ", 
       "length", " ", 
       RowBox[{"(", 
        RowBox[{"len", " ", "+", " ", "1"}], ")"}]}], " ", "*)"}], "\n", " ", 
     
     RowBox[{"Nest", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k", "++"}], ";", " ", 
          RowBox[{"newList", " ", "=", " ", "#"}], ";", " ", 
          RowBox[{"prev", " ", "=", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"list", "[", 
                RowBox[{"[", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", " ", 
                   RowBox[{"k", " ", "+", " ", "1"}]}], "}"}], "]"}], "]"}], 
               ",", " ", "1"}], "]"}], ",", " ", 
             RowBox[{"prev", " ", "+", " ", 
              RowBox[{"list", "[", 
               RowBox[{"[", 
                RowBox[{"k", " ", "+", " ", "1"}], "]"}], "]"}], " ", "-", 
              " ", 
              RowBox[{"list", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ",", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"list", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], " ", "==", " ", "2"}], ",", 
               " ", 
               RowBox[{"prev", " ", "+", " ", "1"}], ",", " ", 
               RowBox[{"prev", " ", "-", " ", "1"}]}], "]"}]}], "]"}]}], ";", 
          " ", 
          RowBox[{
           RowBox[{"newList", "[", 
            RowBox[{"[", "k", "]"}], "]"}], " ", "=", " ", "prev"}], ";", " ",
           "newList"}], " ", ")"}], " ", "&"}], " ", ",", " ", 
       RowBox[{"Normal", "[", "initialList", "]"}], ",", " ", "len"}], 
      "]"}]}], "\n", "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Takes", " ", "a", " ", "3"}], "-", 
    RowBox[{
    "coloured", " ", "grid", " ", "as", " ", "input", " ", "and", " ", 
     "returns", " ", "the", " ", "corresponding", " ", "grid", " ", 
     "labelled", " ", "with", " ", "its", " ", "height", " ", 
     RowBox[{"values", "."}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Edit", ":", " ", 
     RowBox[{
      RowBox[{
      "we", " ", "now", " ", "convert", " ", "our", " ", "grid", " ", "to", 
       " ", "a", " ", "3"}], "-", 
      RowBox[{"coloured", " ", "grid", " ", "before", " ", "computing"}]}]}], 
    ",", " ", 
    RowBox[{
    "so", " ", "it", " ", "gives", " ", "the", " ", "correct", " ", "output", 
     " ", "on", " ", "every", " ", 
     RowBox[{"grid", "!"}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Note", ":", " ", 
    RowBox[{
    "this", " ", "starts", " ", "with", " ", "the", " ", "initial", " ", 
     "border", " ", "grid"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toHeightFunction", "[", "grid_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"Length", "[", "grid", "]"}]}], ",", " ", 
       RowBox[{"heightGrid", " ", "=", " ", 
        RowBox[{"initialGridBorder", "[", 
         RowBox[{"Length", "[", "grid", "]"}], "]"}]}], ",", " ", 
       RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
       RowBox[{"cgrid", " ", "=", " ", 
        RowBox[{"to3Colouring", "[", "grid", "]"}]}]}], "}"}], ",", "\n", 
     "  ", 
     RowBox[{"Nest", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k", "++"}], ";", " ", 
          RowBox[{"nextHeightGrid", " ", "=", " ", "#"}], ";", " ", 
          RowBox[{
           RowBox[{"nextHeightGrid", "[", 
            RowBox[{"[", 
             RowBox[{"k", ",", " ", 
              RowBox[{"2", " ", ";;", " ", 
               RowBox[{"-", "2"}]}]}], "]"}], "]"}], " ", "=", " ", 
           RowBox[{"findListHeight", "[", 
            RowBox[{
             RowBox[{"heightGrid", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
             RowBox[{"Normal", "[", 
              RowBox[{"cgrid", "[", 
               RowBox[{"[", 
                RowBox[{"k", ",", " ", 
                 RowBox[{"1", " ", ";;", " ", 
                  RowBox[{"-", "2"}]}]}], "]"}], "]"}], "]"}], ",", " ", 
             RowBox[{"dim", " ", "-", " ", "2"}]}], "]"}]}], ";", " ", 
          "nextHeightGrid"}], ")"}], " ", "&"}], ",", " ", "heightGrid", ",", 
       " ", 
       RowBox[{"dim", " ", "-", " ", "2"}]}], "]"}]}], " ", "\n", "]"}]}], 
  " ", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculates", " ", "the", " ", "sum", " ", "of", " ", "absolute", " ", 
    "differences", " ", "between", " ", "the", " ", "heights", " ", "of", " ",
     "corresponding", " ", "sites", " ", "in", " ", "the", " ", "input", " ", 
    "grids"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkHeightDifference", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"cube1", " ", "-", " ", "cube2"}], "]"}], ",", " ", "3"}], 
    "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Format", " ", "time"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayTime", "[", "time_", "]"}], " ", ":=", " ", 
   RowBox[{"DateString", "[", 
    RowBox[{"time", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Hour\>\"", ",", " ", "\"\<:\>\"", ",", " ", "\"\<Minute\>\"", ",", 
       " ", "\"\<:\>\"", ",", " ", "\"\<Second\>\""}], "}"}]}], "]"}]}], "\n",
   "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**"}], "*", " ", "Display", " ", "Functions"}], " ", 
   "******)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Displays", " ", "height", " ", "grid", " ", "matrix", " ", "in", " ", 
    "array", " ", "form"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"OPTIMISATION", ":", " ", 
    RowBox[{
    "check", " ", "if", " ", "you", " ", "need", " ", "to", " ", "perform", 
     " ", 
     RowBox[{"toHeightFunction", "!"}], " ", "maybe", " ", "check", " ", 
     "max", " ", "value", " ", "in", " ", 
     RowBox[{"grid", "?"}]}]}], " ", "*)"}], "\n", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Displays", " ", "height", " ", "grid", " ", "matrix", " ", "in", " ", 
    "array", " ", "form"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"OPTIMISATION", ":", " ", 
    RowBox[{
    "check", " ", "if", " ", "you", " ", "need", " ", "to", " ", "perform", 
     " ", 
     RowBox[{"to3Coloring", "!"}], " ", "maybe", " ", "check", " ", "max", 
     " ", "value", " ", "in", " ", 
     RowBox[{"grid", "?"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayColouringGrid", "[", 
    RowBox[{"grid_", ",", " ", "colourFunction_"}], "]"}], " ", ":=", " ", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"to3Colouring", "[", "grid", "]"}], ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "colourFunction"}]}], "]"}]}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Displays", " ", "height", " ", "grid", " ", "matrices", " ", "in", " ", 
    "array", " ", "form"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayColouringGrids", "[", 
    RowBox[{"grid1_", ",", " ", "grid2_", ",", " ", "colourFunction_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"displayColouringGrid", "[", 
        RowBox[{"grid1", ",", " ", "colourFunction"}], "]"}], ",", " ", 
       RowBox[{"displayColouringGrid", "[", 
        RowBox[{"grid2", ",", " ", "colourFunction"}], "]"}]}], "}"}], "}"}], 
    "]"}]}], "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayHeightPlots", "[", 
    RowBox[{"grid1_", ",", " ", "grid2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"displayHeightPlot", "[", "grid1", "]"}], ",", " ", 
       RowBox[{"displayHeightPlot", "[", "grid2", "]"}]}], "}"}], "}"}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayGrid", "[", 
    RowBox[{"grid_", ",", " ", "colourFunction_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"displayHeightGrid", "[", "grid", "]"}], "}"}], ",", " ", "\n",
       "\t\t\t\t\t\t\t\t\t\t\t\t\t  ", 
      RowBox[{"{", 
       RowBox[{"displayColouringGrid", "[", 
        RowBox[{"grid", ",", " ", "colourFunction"}], "]"}], "}"}], ",", "\n",
       "\t\t\t\t\t\t\t\t\t\t\t\t\t  ", 
      RowBox[{"{", 
       RowBox[{"displayHeightPlot", "[", "grid", "]"}], "}"}]}], "}"}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displayGrids", "[", 
   RowBox[{"grid1_", ",", " ", "grid2_", ",", " ", "colourFunction_"}], "]"}],
   " ", ":=", " ", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"displayHeightGrids", "[", 
       RowBox[{"grid1", ",", " ", "grid2"}], "]"}], "}"}], ",", " ", "\n", 
     "\t\t\t\t\t\t\t\t\t\t\t\t\t  ", 
     RowBox[{"{", 
      RowBox[{"displayColouringGrids", "[", 
       RowBox[{"grid1", ",", " ", "grid2", ",", " ", "colourFunction"}], 
       "]"}], "}"}], ",", "\n", "\t\t\t\t\t\t\t\t\t\t\t\t\t  ", 
     RowBox[{"{", 
      RowBox[{"displayHeightPlots", "[", 
       RowBox[{"grid1", ",", " ", "grid2"}], "]"}], "}"}]}], "}"}], 
   "]"}]}], "\n", 
 RowBox[{"\t\t\t\t\t\t"}]}], "Code",
 CellChangeTimes->{{3.9120775054307423`*^9, 3.9120775067779837`*^9}, {
   3.912236781613709*^9, 3.912236784533803*^9}, {3.912236856073638*^9, 
   3.912236858110496*^9}, {3.912236890690868*^9, 3.91223689407804*^9}, {
   3.912236933342312*^9, 3.912236950895697*^9}, {3.912238117368524*^9, 
   3.912238135414617*^9}, {3.91223818189043*^9, 3.912238216275185*^9}, {
   3.912238254847288*^9, 3.912238282381641*^9}, 3.91223831988457*^9, {
   3.912239306719515*^9, 3.912239306965551*^9}, {3.912239965731444*^9, 
   3.912239973579812*^9}, 3.912240790010014*^9, {3.912315528465104*^9, 
   3.912315530338512*^9}, {3.912315569715016*^9, 3.91231559464865*^9}, 
   3.9123184634983463`*^9, 3.912318654468335*^9, {3.912318858454385*^9, 
   3.9123188625075274`*^9}, {3.912414084111382*^9, 3.912414090690804*^9}, 
   3.9139386821532*^9},
 CellLabel->
  "In[122]:=",ExpressionUUID->"fcac06f5-8334-4b9b-ad54-5a70c0e8fdd2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"generateMaxCube", "[", "dim_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cube", " ", "=", " ", 
        RowBox[{"initialCubeBorder", "[", "dim", "]"}]}], "}"}], ",", " ", 
      "\n", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cube", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], 
        "}"}], " ", "~", " ", "Join", " ", "~", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"generateMaxHeightGrid", "[", 
          RowBox[{"dim", ",", " ", 
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}]}], 
          "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "2", ",", " ", "6"}], "}"}]}], "]"}], " ", 
       "~", " ", "Join", " ", "~", " ", 
       RowBox[{"{", 
        RowBox[{"cube", "[", 
         RowBox[{"[", 
          RowBox[{"7", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], 
        "}"}]}]}], "]"}]}], "*)"}], "\n", " ", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"generateMaxCube", "[", "dim_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cube", " ", "=", " ", 
         RowBox[{"initialCubeBorder", "[", "dim", "]"}]}], ",", " ", 
        RowBox[{"depth", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dim", " ", "+", " ", "1"}], ")"}], " ", "/", " ", "2"}]}],
         ",", " ", "nextLevelTop", ",", " ", "nextLevelBottom"}], "}"}], ",", 
      "  ", "\n", " ", 
      RowBox[{
       RowBox[{"Do", "[", "\n", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"nextLevelTop", " ", "=", " ", 
           RowBox[{
            RowBox[{"cube", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "+", " ", "1"}]}], 
          ";", "\n", " ", 
          RowBox[{"nextLevelBottom", " ", "=", " ", 
           RowBox[{"Reverse", "[", 
            RowBox[{"nextLevelTop", ",", " ", 
             RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i"}], "]"}], "]"}], " ", "=", 
           " ", "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "2", ",", " ", "depth"}], "}"}]}], "]"}], 
       ";", "\n", " ", "cube"}]}], "]"}]}], " ", "\n", " ", "\n", 
   RowBox[{
    RowBox[{"generateMinCube", "[", "dim_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cube", " ", "=", " ", 
         RowBox[{"initialCubeBorder", "[", "dim", "]"}]}], ",", " ", 
        RowBox[{"depth", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dim", " ", "+", " ", "1"}], ")"}], " ", "/", " ", "2"}]}],
         ",", " ", "nextLevelTop", ",", " ", "nextLevelBottom"}], "}"}], ",", 
      "  ", "\n", " ", 
      RowBox[{
       RowBox[{"Do", "[", "\n", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"nextLevelTop", " ", "=", " ", 
           RowBox[{
            RowBox[{"cube", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "-", " ", "1"}]}], 
          ";", "\n", " ", 
          RowBox[{"nextLevelBottom", " ", "=", " ", 
           RowBox[{"Reverse", "[", 
            RowBox[{"nextLevelTop", ",", " ", 
             RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i"}], "]"}], "]"}], " ", "=", 
           " ", "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "2", ",", " ", "depth"}], "}"}]}], "]"}], 
       ";", "\n", " ", "cube"}]}], "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.895851743137969*^9, 3.895851743139699*^9}, 
   3.895924359871799*^9, {3.89592453810701*^9, 3.895924578194954*^9}, {
   3.8959252186688757`*^9, 3.895925220809202*^9}, {3.895925524859675*^9, 
   3.8959256363294773`*^9}, {3.8959256734090548`*^9, 3.895925702131855*^9}, {
   3.8959258099186487`*^9, 3.895925816806987*^9}, {3.8959259730488577`*^9, 
   3.895926282836673*^9}, {3.8959265493100758`*^9, 3.895926662644783*^9}, {
   3.895926706278529*^9, 3.895926786482958*^9}, {3.895926821613821*^9, 
   3.895926844925844*^9}, {3.895926900435109*^9, 3.895926936672982*^9}, {
   3.895926973114499*^9, 3.8959269735383453`*^9}, {3.895927198189516*^9, 
   3.895927215223157*^9}, {3.895927252199391*^9, 3.895927286790578*^9}, {
   3.895927406293037*^9, 3.895927410636898*^9}, {3.895927797828179*^9, 
   3.895927846144252*^9}, {3.89592793271642*^9, 3.8959279929073544`*^9}, {
   3.895931126242578*^9, 3.895931154621812*^9}, {3.8959313015059223`*^9, 
   3.895931377045375*^9}, {3.8959323011157093`*^9, 3.895932313219329*^9}, {
   3.895932461177787*^9, 3.8959325714721403`*^9}, {3.895932678723037*^9, 
   3.895932757580627*^9}, {3.8959328868123503`*^9, 3.895932888159932*^9}, {
   3.895935459823525*^9, 3.895935511447383*^9}, {3.8959357274782267`*^9, 
   3.8959357371406116`*^9}, {3.895936585436318*^9, 3.895936664508355*^9}, {
   3.89593717123914*^9, 3.895937174638939*^9}, {3.895937700482608*^9, 
   3.89593781260238*^9}, {3.895937851834051*^9, 3.895937883000745*^9}, {
   3.8959385051235247`*^9, 3.895938554533948*^9}, {3.89593860441994*^9, 
   3.895938624564167*^9}, {3.895938669851734*^9, 3.895938702339554*^9}, {
   3.895938816474195*^9, 3.895938875201742*^9}, {3.89593897753822*^9, 
   3.8959390346086817`*^9}, {3.895939281351036*^9, 3.8959394332172203`*^9}, {
   3.895939477153347*^9, 3.895939545154372*^9}, {3.895939589287294*^9, 
   3.895939606036065*^9}, {3.8959396848508453`*^9, 3.8959397130195103`*^9}, {
   3.8959398017319927`*^9, 3.895939804211789*^9}, {3.8959398409789457`*^9, 
   3.8959399341642437`*^9}, {3.895940025532848*^9, 3.8959400487644033`*^9}, {
   3.895940116780529*^9, 3.895940226988255*^9}, {3.895940507003642*^9, 
   3.8959405075474253`*^9}, {3.8959405866897993`*^9, 3.895940671176176*^9}, {
   3.895940703692581*^9, 3.8959407116663027`*^9}, {3.895940754848997*^9, 
   3.89594075729636*^9}, {3.8959407924797487`*^9, 3.895940922519642*^9}, {
   3.895940955351569*^9, 3.89594096823952*^9}, {3.895941016398425*^9, 
   3.8959411012133713`*^9}, {3.8959416217422657`*^9, 
   3.8959416510212517`*^9}, {3.895941751587575*^9, 3.895941811835779*^9}, {
   3.8959418894383717`*^9, 3.895941941232431*^9}, {3.8959420049647017`*^9, 
   3.895942005128944*^9}, {3.8959420661853848`*^9, 3.8959420678330383`*^9}, {
   3.895942138071947*^9, 3.8959422674461203`*^9}, 3.8959423198197193`*^9, {
   3.895942374462367*^9, 3.895942384931842*^9}, 3.895942746413762*^9, {
   3.8959427883930693`*^9, 3.895942810457045*^9}, {3.8959428545690527`*^9, 
   3.895942859976574*^9}, {3.895942894983653*^9, 3.8959428979759197`*^9}, {
   3.895942937507091*^9, 3.895942937591359*^9}, {3.895943262735242*^9, 
   3.895943267316884*^9}, {3.895966917004333*^9, 3.8959669469986143`*^9}, {
   3.895966997823306*^9, 3.89596704386239*^9}, {3.89596809177496*^9, 
   3.895968142191331*^9}, {3.8959682178881483`*^9, 3.8959682261725473`*^9}, {
   3.896029050033618*^9, 3.896029068137042*^9}, {3.8960291353107023`*^9, 
   3.896029139532143*^9}, {3.89602917515187*^9, 3.896029247645176*^9}, {
   3.8961074083514023`*^9, 3.8961076271262617`*^9}, {3.896108202159047*^9, 
   3.896108217674529*^9}, {3.89612133484925*^9, 3.896121334879374*^9}, {
   3.896333926923399*^9, 3.896333957460273*^9}, {3.8963342115459137`*^9, 
   3.8963342124743032`*^9}, {3.896334412981388*^9, 3.896334437790207*^9}, 
   3.8963344724866858`*^9, {3.8963347829749804`*^9, 3.896334788763483*^9}, {
   3.896337232426865*^9, 3.896337241139146*^9}, {3.896337276290044*^9, 
   3.896337298000836*^9}, {3.89633757679998*^9, 3.8963376254077663`*^9}, {
   3.8963376957588987`*^9, 3.896337842910202*^9}, {3.896337873366638*^9, 
   3.896337890286662*^9}, {3.8963379309026833`*^9, 3.89633795526123*^9}, {
   3.896338010019981*^9, 3.8963380326993437`*^9}, {3.8963381139954643`*^9, 
   3.896338122499373*^9}, {3.896338203438754*^9, 3.896338210235207*^9}, {
   3.8963382822578373`*^9, 3.896338305210328*^9}, 3.8963383916974993`*^9, {
   3.8963483268507853`*^9, 3.896348424583952*^9}, {3.896348514567173*^9, 
   3.896348516114107*^9}, {3.896348558057222*^9, 3.8963486335051517`*^9}, {
   3.8963487681597023`*^9, 3.896348850607461*^9}, {3.8963489171436357`*^9, 
   3.896348921088109*^9}, {3.8963489775137453`*^9, 3.896348990512315*^9}, {
   3.896349024592252*^9, 3.896349031358507*^9}, {3.896349186133471*^9, 
   3.896349204749407*^9}, {3.8963716164542627`*^9, 3.896371655926025*^9}, {
   3.896371756413437*^9, 3.896371790636338*^9}, {3.896372567219589*^9, 
   3.896372571050908*^9}, {3.896373316915986*^9, 3.896373358291664*^9}, {
   3.896407376844158*^9, 3.896407406656273*^9}, {3.89640745709867*^9, 
   3.8964074616951942`*^9}, {3.896407601239127*^9, 3.89640761911943*^9}, {
   3.896407650855463*^9, 3.896407652271559*^9}, {3.896407682339316*^9, 
   3.896407714302945*^9}, 3.8964078818960533`*^9, {3.896408474561571*^9, 
   3.8964084797293053`*^9}, {3.8964085304903517`*^9, 3.896408576912929*^9}, {
   3.8964088431539507`*^9, 3.89640886725655*^9}, {3.8964089190345383`*^9, 
   3.8964089912410507`*^9}, 3.896411364032544*^9, {3.896411555775547*^9, 
   3.896411560210909*^9}, {3.8964116249414473`*^9, 3.8964116268667393`*^9}, {
   3.8964117236814823`*^9, 3.896411733209247*^9}, {3.89641176893865*^9, 
   3.896411788777835*^9}, {3.896411829490048*^9, 3.896411854225235*^9}, {
   3.896413117100971*^9, 3.896413457913006*^9}, {3.89641348873833*^9, 
   3.896413593256999*^9}, {3.896414227715905*^9, 3.896414261627845*^9}, {
   3.896414345804163*^9, 3.896414366524419*^9}, {3.8964144449315357`*^9, 
   3.896414482055689*^9}, {3.896414532026331*^9, 3.8964145387787027`*^9}, {
   3.896414661241715*^9, 3.896414875292243*^9}, {3.9123161381909027`*^9, 
   3.912316140315507*^9}, {3.915383365664874*^9, 3.915383385956131*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"34a5ce17-7bbe-4b28-b8dc-8f3c89a7e4af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Alternate", " ", "code"}], ";", " ", 
    RowBox[{
    "works", " ", "slower", " ", "and", " ", "more", " ", "complicated", " ", 
     "to", " ", "use", " ", "colours", " ", "with"}]}], " ", "*)"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"cubeToImage", "[", "cube_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Image3D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Max", "[", "cube", "]"}], " ", "+", " ", "1"}], ")"}]}], 
        ",", " ", 
        RowBox[{"Magnification", "\[Rule]", "Automatic"}], ",", " ", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
        RowBox[{"ColorFunction", "\[Rule]", "blueColourRules"}]}], "]"}], 
      "\n", "\n", 
      RowBox[{"cubeSlicesSingleAxis", "[", 
       RowBox[{"dim_", ",", " ", "cube_", ",", " ", "axis_"}], "]"}]}], " ", ":=",
      " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"image", " ", "=", " ", 
           RowBox[{"cubeToImage", "[", "cube", "]"}]}], "}"}], ",", "\n", 
         "\t\t\t\t\t\t\t\t\t\t\t", 
         RowBox[{"Manipulate", "[", 
          RowBox[{
           RowBox[{"Image3DSlices", "[", 
            RowBox[{"image", ",", " ", "i", ",", " ", "axis"}], "]"}], ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], 
            "}"}]}], "]"}]}], "]"}], "\n", 
       RowBox[{"cubeSlices", "[", 
        RowBox[{"dim_", ",", " ", "cube_"}], "]"}]}], " ", ":=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Manipulate", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Image3DSlices", "[", 
               RowBox[{
                RowBox[{"Image3D", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", "cube", "]"}], " ", "+", " ", "1"}], 
                    ")"}]}], ",", " ", 
                  RowBox[{"Magnification", "\[Rule]", "Automatic"}], ",", " ", 
                  RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
                " ", "i", ",", " ", "1"}], "]"}], ",", "\n", 
              "\t\t\t\t\t\t\t\t\t\t", 
              RowBox[{"Image3DSlices", "[", 
               RowBox[{
                RowBox[{"Image3D", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", "cube", "]"}], " ", "+", " ", "1"}], 
                    ")"}]}], ",", " ", 
                  RowBox[{"Magnification", "\[Rule]", "Automatic"}], ",", " ", 
                  RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
                " ", "i", ",", " ", "2"}], "]"}], ",", "\n", 
              "\t\t\t\t\t\t\t\t\t\t", 
              RowBox[{"Image3DSlices", "[", 
               RowBox[{
                RowBox[{"Image3D", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", "cube", "]"}], " ", "+", " ", "1"}], 
                    ")"}]}], ",", " ", 
                  RowBox[{"Magnification", "\[Rule]", "Automatic"}], ",", " ", 
                  RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
                " ", "i", ",", " ", "3"}], "]"}]}], "}"}], "}"}], "]"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], 
           "}"}]}], "]"}], "\n", "\t\t\t\t\t\t\t\t\t\t", "\n", 
        RowBox[{"cubesSlices", "[", 
         RowBox[{"dim_", ",", " ", "cube1_", ",", " ", "cube2_"}], "]"}]}], 
       " ", ":=", " ", 
       RowBox[{
        RowBox[{"Grid", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"cubeSlices", "[", 
             RowBox[{"dim", ",", " ", "cube1"}], "]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"cubeSlices", "[", 
             RowBox[{"dim", ",", " ", "cube2"}], "]"}], "}"}]}], "}"}], "]"}],
         "\n", "\n", 
        RowBox[{"cubeToImage", "[", "maxCube", "]"}]}]}]}]}]}], 
   "*)"}]}]], "Code",
 CellChangeTimes->{{3.912252328502087*^9, 3.912252402584948*^9}, {
  3.912252650618332*^9, 3.9122526787291117`*^9}, {3.9122531051650753`*^9, 
  3.912253150927306*^9}, {3.912253230768302*^9, 3.9122532863435707`*^9}, {
  3.912254001008072*^9, 3.9122540834580603`*^9}, {3.912261514870071*^9, 
  3.912261580410975*^9}, {3.912261701293288*^9, 3.912261725431531*^9}, {
  3.912261828728067*^9, 3.912261864242016*^9}, {3.912261904423257*^9, 
  3.912261912727086*^9}, {3.9122622152929*^9, 3.91226222689668*^9}, {
  3.912262260868675*^9, 3.912262280349835*^9}, {3.91226232504403*^9, 
  3.912262347229721*^9}, {3.9122626266737328`*^9, 3.912262639718912*^9}, {
  3.912268256667344*^9, 3.91226827857467*^9}, {3.9122707786212473`*^9, 
  3.912270794814865*^9}, {3.91231449065786*^9, 3.912314521883709*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"43c9ca43-dc34-48cc-ba70-58f0db2b1acf"],

Cell[TextData[{
 StyleBox["Display Functions\n", "Section"],
 "We have the following display functions for single cubes:\n- \
cubeLayers[cube, <colourFunction>]: displays concentric layers of a cube.\n- \
displaySlicePlot[cube, args, <colourFunction>]: displays a 2D slice of the \
cube along a specified axis. Here, args takes the form {{depth}, All, All}, \
{All, {depth}, All}, or {All, All, {depth}}, where depth is the layer number \
of the slice you want.\n- displayHeightPlot[grid]: takes a 2D grid as input \
and displays a plot of the height function.\n- sliceGridWithHeight[cube, \
args]: displays a 2D slice of the height function of the cube, its \
corresponding 3-colouring, and the plot of its height function. Here, args \
takes the form {{depth}, All, All}, {All, {depth}, All}, or {All, All, \
{depth}}, where depth is the layer number of the slice you want.\n- \
cubeSlicesSingleAxis[cube, axis]: a dynamic plot of \
sliceGridWithHeight[]--allows you to drag a slider to move between the \
layers.\n- cubeSlicesAllAxesSimultaneouslyGrid[cube, i]: displays the 2D \
slice of the layer of the cube at depth i along all three axes.\n- \
cubeSlicesAllAxesSimultaneously[cube]: a dynamic version of \
cubeSlicesAllAxesSimultaneouslyGrid[]--allows you to drag a slider to move \
between the layers. The layers at the same depth are displayed for all three \
axes.\n- cubeSlicesAllAxesSeparately[cube]: like \
cubeSlicesAllAxesSimultaneouslyCube[], but you can pick the depth of the \
layer along all three axes separately.\n\nWe have the following display \
functions for two cubes:\n- cubesLayersSeparately[cube1, cube2, \
<colourFunction>]: displays two copies of cubeLayers[] side by side, one for \
each cube, with separate sliders.\n- cubesLayersSimultaneously[cube1, cube2, \
<colourFunction>]: similar to cubesLayersSeparately, but with a single \
slider, so you see the concentric layers at the same depth for each cube.\n- \
cubesSlicesSeparately[cube1, cube2]: displays two copies of \
cubeSlicesAllAxesSimultaneously[] side by side, one for each cube, with \
separate sliders.\n- cubesSlicesSimultaneously[cube1, cube2]: similar to \
cubesSlicesSeparately, but with a single slider, so you see the layers at the \
same depth for each cube."
}], "Text",
 CellChangeTimes->{{3.912409148835154*^9, 3.912409175079817*^9}, {
   3.912443386415956*^9, 3.912443657985716*^9}, {3.912443760749338*^9, 
   3.9124439385990963`*^9}, {3.912444135217409*^9, 3.912444305168536*^9}, {
   3.912444379101831*^9, 3.912444435214204*^9}, {3.912444763363852*^9, 
   3.912444916672462*^9}, {3.912444961750602*^9, 3.91244496454106*^9}, {
   3.912445000212619*^9, 3.912445036184997*^9}, 
   3.9124466184289513`*^9},ExpressionUUID->"b80fafbb-a30b-4188-b067-\
42d643f41c2b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"displayCube", "[", 
    RowBox[{"dim_", ",", " ", "cube_", ",", " ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"ArrayPlot3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"dim", " ", "+", " ", "1"}], ")"}]}], ",", " ", 
     RowBox[{"ColorFunction", " ", "->", " ", "colourFunction"}], ",", " ", 
     RowBox[{"OpacityFunction", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"Mesh", "\[Rule]", "False"}], ",", " ", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubeLayers", "[", 
    RowBox[{"cube_", ",", " ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"displayCube", "[", 
        RowBox[{"dim", ",", " ", 
         RowBox[{"cube", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"i", ";;", " ", 
             RowBox[{"-", "i"}]}], ",", " ", 
            RowBox[{"i", " ", ";;", " ", 
             RowBox[{"-", "i"}]}], ",", " ", 
            RowBox[{"i", " ", ";;", " ", 
             RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
         "colourFunction"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"dim", " ", "/", " ", "2"}], "]"}], ",", " ", "1"}], 
        "}"}]}], "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubesLayersSeparately", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube1", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"cubeLayers", "[", 
        RowBox[{"cube1", ",", " ", "colourFunction"}], "]"}], ",", " ", 
       RowBox[{"cubeLayers", "[", 
        RowBox[{"cube2", ",", " ", "colourFunction"}], "]"}]}], "]"}]}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"threeCubesLayersSimultaneously", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", "cube3_", ",", " ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"Length", "[", "cube1", "]"}]}], ",", " ", 
       RowBox[{"cube13", " ", "=", " ", 
        RowBox[{"to3Colouring", "[", "cube1", "]"}]}], ",", " ", 
       RowBox[{"cube23", " ", "=", " ", 
        RowBox[{"to3Colouring", "[", "cube2", "]"}]}], ",", " ", 
       RowBox[{"cube33", " ", "=", " ", 
        RowBox[{"to3Colouring", "[", "cube3", "]"}]}]}], "}"}], ",", " ", 
     "\n", "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"displayCube", "[", 
             RowBox[{"dim", ",", " ", 
              RowBox[{"cube1", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
              "colourFunction"}], "]"}], ",", " ", 
            RowBox[{"displayCube", "[", 
             RowBox[{"dim", ",", " ", 
              RowBox[{"cube2", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
              "colourFunction"}], "]"}], ",", " ", 
            RowBox[{"displayCube", "[", 
             RowBox[{"dim", ",", " ", 
              RowBox[{"cube3", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
              "colourFunction"}], "]"}]}], "}"}], ",", "\n", 
          "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"displayCube", "[", 
             RowBox[{"dim", ",", " ", 
              RowBox[{"cube13", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
              "colourFunction"}], "]"}], ",", " ", 
            RowBox[{"displayCube", "[", 
             RowBox[{"dim", ",", " ", 
              RowBox[{"cube23", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
              "colourFunction"}], "]"}], ",", " ", 
            RowBox[{"displayCube", "[", 
             RowBox[{"dim", ",", " ", 
              RowBox[{"cube33", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}], ",", " ", 
                 RowBox[{"i", " ", ";;", " ", 
                  RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
              "colourFunction"}], "]"}]}], "}"}]}], "}"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"dim", " ", "/", " ", "2"}], "]"}], ",", " ", "1"}], 
        "}"}]}], "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"threeCubesLayersSeparately", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", "cube3_", ",", "  ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube1", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"cubeLayers", "[", 
        RowBox[{"cube1", ",", " ", "colourFunction"}], "]"}], ",", " ", 
       RowBox[{"cubeLayers", "[", 
        RowBox[{"cube2", ",", " ", "colourFunction"}], "]"}], ",", " ", 
       RowBox[{"cubeLayers", "[", 
        RowBox[{"cube3", ",", " ", "colourFunction"}], "]"}]}], "]"}]}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubesLayersSimultaneously", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube1", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"displayCube", "[", 
            RowBox[{"dim", ",", " ", 
             RowBox[{"cube1", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", ";;", " ", 
                 RowBox[{"-", "i"}]}], ",", " ", 
                RowBox[{"i", " ", ";;", " ", 
                 RowBox[{"-", "i"}]}], ",", " ", 
                RowBox[{"i", " ", ";;", " ", 
                 RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
             "colourFunction"}], "]"}], ",", " ", 
           RowBox[{"displayCube", "[", 
            RowBox[{"dim", ",", " ", 
             RowBox[{"cube2", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", ";;", " ", 
                 RowBox[{"-", "i"}]}], ",", " ", 
                RowBox[{"i", " ", ";;", " ", 
                 RowBox[{"-", "i"}]}], ",", " ", 
                RowBox[{"i", " ", ";;", " ", 
                 RowBox[{"-", "i"}]}]}], "]"}], "]"}], ",", " ", 
             "colourFunction"}], "]"}]}], "}"}], "}"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"dim", " ", "/", " ", "2"}], "]"}], ",", " ", "1"}], 
        "}"}]}], "]"}]}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Slices", " ", "the", " ", "cube", " ", "along", " ", "a", " ", "specifed",
     " ", "axis", " ", "and", " ", "returns", " ", "a", " ", "2", "D", " ", 
    "grid"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sliceGrid", "[", 
    RowBox[{"cube_", ",", " ", "args_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube", "]"}]}], "}"}], ",", " ", 
     RowBox[{"ArrayReshape", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{"cube", ",", " ", 
         RowBox[{"Sequence", " ", "@@", " ", "args"}]}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"dim", ",", " ", "dim"}], "}"}]}], "]"}]}], "]"}]}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Plots", " ", "a", " ", "slice", " ", "of", " ", "a", " ", "cube"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaySlicePlot", "[", 
    RowBox[{"cube_", ",", " ", "args_", ",", " ", 
     RowBox[{"colourFunction_", " ", ":", " ", "blueColourRules"}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"sliceGrid", "[", 
      RowBox[{"cube", ",", " ", "args"}], "]"}], ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "colourFunction"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayHeightPlot", "[", "grid_", "]"}], " ", ":=", " ", 
   RowBox[{"ListPlot3D", "[", "grid", "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{"add", " ", "labels", " ", "to", " ", 
     RowBox[{"grids", "/", "plots"}], " ", "in", " ", "the", " ", "following",
      " ", "functions"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Places", " ", "colour", " ", "plot", " ", "of", " ", "a", " ", "slice", 
    " ", "above", " ", "a", " ", "height", " ", "plot", " ", "of", " ", "the",
     " ", "slice"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sliceGridWithHeight", "[", 
    RowBox[{"cube_", ",", " ", "args_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"displaySlicePlot", "[", 
        RowBox[{"cube", ",", " ", "args"}], "]"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"displaySlicePlot", "[", 
        RowBox[{
         RowBox[{"to3Colouring", "[", "cube", "]"}], ",", " ", "args"}], 
        "]"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"displayHeightPlot", "[", 
        RowBox[{"sliceGrid", "[", 
         RowBox[{"cube", ",", " ", "args"}], "]"}], "]"}], "}"}]}], "}"}], 
    "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Allows", " ", "to", " ", "move", " ", "between", " ", "colour", " ", 
     "plots"}], " ", "+", " ", 
    RowBox[{
    "height", " ", "plots", " ", "of", " ", "different", " ", "slices", " ", 
     "along", " ", "a", " ", "single", " ", "axis"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubeSlicesSingleAxis", "[", 
    RowBox[{"cube_", ",", " ", "axis_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"args", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"All", ",", " ", "All", ",", " ", "All"}], "}"}]}], ",", " ", 
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"Length", "[", "cube", "]"}]}]}], "}"}], ",", "\n", 
     "\t\t\t\t\t\t\t\t\t\t\t", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"args", "[", 
           RowBox[{"[", "axis", "]"}], "]"}], " ", "=", " ", 
          RowBox[{"{", "i", "}"}]}], ";", " ", 
         RowBox[{"sliceGridWithHeight", "[", 
          RowBox[{"cube", ",", " ", "args"}], "]"}]}], ")"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], "}"}]}],
       "]"}]}], "]"}]}], "\n", "\t\t\t\t\t\t\t\t\t\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubeSlicesAllAxesSimultaneouslyGrid", "[", 
    RowBox[{"cube_", ",", " ", "i_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sliceGridWithHeight", "[", 
        RowBox[{"cube", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "i", "}"}], ",", " ", "All", ",", " ", "All"}], 
          "}"}]}], "]"}], ",", " ", 
       RowBox[{"sliceGridWithHeight", "[", 
        RowBox[{"cube", ",", " ", 
         RowBox[{"{", 
          RowBox[{"All", ",", " ", 
           RowBox[{"{", "i", "}"}], ",", " ", "All"}], "}"}]}], "]"}], ",", 
       " ", 
       RowBox[{"sliceGridWithHeight", "[", 
        RowBox[{"cube", ",", " ", 
         RowBox[{"{", 
          RowBox[{"All", ",", " ", "All", ",", " ", 
           RowBox[{"{", "i", "}"}]}], "}"}]}], "]"}]}], "}"}], "}"}], "]"}]}],
   "\t\t\t\t\t\t\t\t\t\t\t", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"View", " ", "the", " ", "colour", " ", "plots"}], " ", "+", " ", 
    
    RowBox[{
    "height", " ", "plots", " ", "of", " ", "slices", " ", "at", " ", "the", 
     " ", "same", " ", "level", " ", "along", " ", "all", " ", "axes"}]}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubeSlicesAllAxesSimultaneously", "[", "cube_", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"cubeSlicesAllAxesSimultaneouslyGrid", "[", 
        RowBox[{"cube", ",", " ", "i"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], "}"}]}],
       "]"}]}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Allows", " ", "to", " ", "move", " ", "between", " ", "colour", " ", 
     "plots"}], " ", "+", " ", 
    RowBox[{
    "height", " ", "plots", " ", "of", " ", "different", " ", "slices", " ", 
     "along", " ", "all", " ", "axes"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubeSlicesAllAxesSeparately", "[", "cube_", "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cubeSlicesSingleAxis", "[", 
        RowBox[{"cube", ",", " ", "1"}], "]"}], ",", " ", 
       RowBox[{"cubeSlicesSingleAxis", "[", 
        RowBox[{"cube", ",", " ", "2"}], "]"}], ",", " ", 
       RowBox[{"cubeSlicesSingleAxis", "[", 
        RowBox[{"cube", ",", " ", "3"}], "]"}]}], "}"}], "}"}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubesSlicesSeparately", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cubeSlicesAllAxesSimultaneously", "[", "cube1", "]"}], ",", 
       " ", 
       RowBox[{"cubeSlicesAllAxesSimultaneously", "[", "cube2", "]"}]}], 
      "}"}], "}"}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubesSlicesSimultaneously", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube1", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cubeSlicesAllAxesSimultaneouslyGrid", "[", 
            RowBox[{"cube1", ",", " ", "i"}], "]"}], ",", " ", 
           RowBox[{"cubeSlicesAllAxesSimultaneouslyGrid", "[", 
            RowBox[{"cube2", ",", " ", "i"}], "]"}]}], "}"}], "}"}], "]"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], "}"}]}],
       "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cubesSlicesSingleAxisSimultaneously", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", "axis_"}], "]"}], " ", ":=",
    " ", "TODO"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compareThreeCubesAlongAxis", "[", 
    RowBox[{
    "cube1_", ",", " ", "cube2_", ",", " ", "cube3_", ",", " ", "axis_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"args", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"All", ",", " ", "All", ",", " ", "All"}], "}"}]}], ",", " ", 
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"Length", "[", "cube1", "]"}]}]}], "}"}], ",", "\n", 
     "\t\t\t\t\t\t\t\t\t\t\t", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"args", "[", 
           RowBox[{"[", "axis", "]"}], "]"}], " ", "=", " ", 
          RowBox[{"{", "i", "}"}]}], ";", " ", 
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"sliceGridWithHeight", "[", 
              RowBox[{"cube1", ",", " ", "args"}], "]"}], ",", " ", 
             RowBox[{"sliceGridWithHeight", "[", 
              RowBox[{"cube2", ",", " ", "args"}], "]"}], ",", " ", 
             RowBox[{"sliceGridWithHeight", "[", 
              RowBox[{"cube3", ",", " ", "args"}], "]"}]}], "}"}], "}"}], 
          "]"}]}], ")"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], "}"}]}],
       "]"}]}], "]"}]}], "\n", "\t\t\t\t\t\t\t\t\t\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compareThreeCubesAlongAllAxes", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", "cube3_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"compareThreeCubesAlongAxis", "[", 
        RowBox[{
        "cube1", ",", " ", "cube2", ",", " ", "cube3", ",", " ", "1"}], "]"}],
        "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"compareThreeCubesAlongAxis", "[", 
        RowBox[{
        "cube1", ",", " ", "cube2", ",", " ", "cube3", ",", " ", "2"}], "]"}],
        "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"compareThreeCubesAlongAxis", "[", 
        RowBox[{
        "cube1", ",", " ", "cube2", ",", " ", "cube3", ",", " ", "3"}], "]"}],
        "}"}]}], "}"}], "]"}]}], "\t\t\t\t\t\t\t\t\t\t", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"compareThreeCubesAlongAllAxesSimultaneously", "[", 
    RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", "cube3_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Length", "[", "cube1", "]"}]}], "}"}], ",", " ", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube1", ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "i", "}"}], ",", " ", "All", ",", " ", "All"}], 
              "}"}]}], "]"}], ",", " ", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube2", ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "i", "}"}], ",", " ", "All", ",", " ", "All"}], 
              "}"}]}], "]"}], ",", " ", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube3", ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "i", "}"}], ",", " ", "All", ",", " ", "All"}], 
              "}"}]}], "]"}], ",", "\n", 
           "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube1", ",", " ", 
             RowBox[{"{", 
              RowBox[{"All", ",", " ", 
               RowBox[{"{", "i", "}"}], ",", " ", "All"}], "}"}]}], "]"}], 
           ",", " ", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube2", ",", " ", 
             RowBox[{"{", 
              RowBox[{"All", ",", " ", 
               RowBox[{"{", "i", "}"}], ",", " ", "All"}], "}"}]}], "]"}], 
           ",", " ", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube3", ",", " ", 
             RowBox[{"{", 
              RowBox[{"All", ",", " ", 
               RowBox[{"{", "i", "}"}], ",", " ", "All"}], "}"}]}], "]"}], 
           ",", "\n", "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube1", ",", " ", 
             RowBox[{"{", 
              RowBox[{"All", ",", " ", "All", ",", " ", 
               RowBox[{"{", "i", "}"}]}], "}"}]}], "]"}], ",", " ", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube2", ",", " ", 
             RowBox[{"{", 
              RowBox[{"All", ",", " ", "All", ",", " ", 
               RowBox[{"{", "i", "}"}]}], "}"}]}], "]"}], ",", " ", 
           RowBox[{"sliceGridWithHeight", "[", 
            RowBox[{"cube3", ",", " ", 
             RowBox[{"{", 
              RowBox[{"All", ",", " ", "All", ",", " ", 
               RowBox[{"{", "i", "}"}]}], "}"}]}], "]"}]}], "}"}], "}"}], 
        "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "dim", ",", " ", "1"}], "}"}]}],
       "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"compareThreeCubes", "[", 
   RowBox[{"cube1_", ",", " ", "cube2_", ",", " ", "cube3_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"threeCubesLayersSimultaneously", "[", 
       RowBox[{"cube1", ",", " ", "cube2", ",", " ", "cube3"}], "]"}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"compareThreeCubesAlongAllAxes", "[", 
       RowBox[{"cube1", ",", " ", "cube2", ",", " ", "cube3"}], "]"}], 
      "}"}]}], "}"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.912264406032669*^9, 3.912264407411809*^9}, {
   3.912266616300103*^9, 3.912266636080381*^9}, {3.912266783498019*^9, 
   3.9122668318250113`*^9}, {3.912267031331131*^9, 3.9122670330469217`*^9}, {
   3.9122673628898687`*^9, 3.912267395223302*^9}, 3.9122674254591417`*^9, {
   3.912267489260343*^9, 3.9122675033739357`*^9}, {3.912267533446159*^9, 
   3.912267553784122*^9}, {3.91226759392774*^9, 3.912267610948339*^9}, {
   3.912267954925317*^9, 3.9122679807820597`*^9}, {3.9122680344937572`*^9, 
   3.912268084845128*^9}, {3.912268284517149*^9, 3.91226833228021*^9}, {
   3.91226836499653*^9, 3.9122684599894753`*^9}, {3.912268505569618*^9, 
   3.9122685120518208`*^9}, {3.912268552753704*^9, 3.912268583420809*^9}, {
   3.9122686193107967`*^9, 3.9122686712850103`*^9}, {3.912269479663116*^9, 
   3.912269519288001*^9}, {3.91226960563202*^9, 3.912269647276249*^9}, {
   3.9122697907911673`*^9, 3.912269851937456*^9}, {3.912269978887829*^9, 
   3.912270022212962*^9}, {3.912270052870801*^9, 3.912270089606448*^9}, {
   3.912270131594943*^9, 3.912270159581514*^9}, {3.9122702372248087`*^9, 
   3.9122702931336193`*^9}, {3.912270332214175*^9, 3.91227045240093*^9}, {
   3.9122705625160007`*^9, 3.912270621791396*^9}, {3.9122707574806643`*^9, 
   3.912270862778894*^9}, {3.912270942473834*^9, 3.91227098524856*^9}, {
   3.9123128383139467`*^9, 3.912312878915883*^9}, {3.912313022608423*^9, 
   3.9123130611073503`*^9}, {3.9123131179412746`*^9, 3.912313169989504*^9}, {
   3.912313433965732*^9, 3.912313448461694*^9}, {3.912313498071694*^9, 
   3.912313499807131*^9}, 3.9123135697889214`*^9, {3.9123136877244463`*^9, 
   3.912313713464583*^9}, {3.9123144303868637`*^9, 3.912314458008833*^9}, {
   3.912314573514515*^9, 3.9123146467024508`*^9}, {3.912314677108584*^9, 
   3.912314686346047*^9}, {3.9123147195335407`*^9, 3.912314778497026*^9}, {
   3.91231484830643*^9, 3.912314904667511*^9}, {3.912318437387354*^9, 
   3.9123184392785053`*^9}, {3.912318471354505*^9, 3.912318472048452*^9}, 
   3.912408888251107*^9, {3.912409022900834*^9, 3.912409033762897*^9}, {
   3.912409445276288*^9, 3.9124095181272297`*^9}, {3.9124110203524427`*^9, 
   3.912411020790317*^9}, {3.912413199845172*^9, 3.912413210239479*^9}, {
   3.912415080632885*^9, 3.912415362226597*^9}, {3.912417311389412*^9, 
   3.9124173408818083`*^9}, {3.91241737900045*^9, 3.9124173939527073`*^9}, {
   3.9124174288891573`*^9, 3.912417463293626*^9}, {3.912417514903767*^9, 
   3.912417547683485*^9}, {3.912417587736187*^9, 3.912417634396227*^9}, 
   3.912421732863694*^9, 3.912429929362864*^9, 3.912444930324613*^9, {
   3.912445819379607*^9, 3.912445820139661*^9}, 3.9125865077932158`*^9, 
   3.913942662798163*^9, {3.9154131880471897`*^9, 3.915413199081361*^9}, 
   3.915413344706855*^9, {3.915413524932474*^9, 3.915413552529479*^9}, {
   3.915413602388781*^9, 3.915413620273315*^9}, {3.915413676107534*^9, 
   3.91541369111143*^9}, {3.915413739202641*^9, 3.915413777870476*^9}, {
   3.9154138370369377`*^9, 3.915413847976371*^9}, {3.915413884510582*^9, 
   3.9154138877670813`*^9}, {3.915413936677662*^9, 3.9154140355860567`*^9}, {
   3.915414074702133*^9, 3.9154141207255487`*^9}, {3.915414159138879*^9, 
   3.915414333877137*^9}, {3.9154143702110147`*^9, 3.9154143731365232`*^9}, {
   3.915414422906352*^9, 3.915414457588675*^9}, {3.915414525341547*^9, 
   3.915414669055232*^9}, {3.915677150929544*^9, 3.915677159423347*^9}, {
   3.915683104953697*^9, 3.915683183905149*^9}, {3.915683505686676*^9, 
   3.915683515682147*^9}, {3.915683699903619*^9, 3.915683709231238*^9}, {
   3.9156837703564377`*^9, 3.9156837730901213`*^9}, {3.915683841799931*^9, 
   3.915683849507044*^9}, 3.915683888705361*^9, {3.915683990592554*^9, 
   3.915683992193791*^9}},
 CellLabel->
  "In[339]:=",ExpressionUUID->"1cb6fad7-3d75-46e5-bdfd-cc2c5aa8136f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"compareThreeCubes", "[", 
  RowBox[{"minCube", ",", " ", "outCube15", ",", " ", "maxCube"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.9154146497539253`*^9, 3.915414658671762*^9}, {
  3.915683031064588*^9, 3.9156830342939873`*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"f4ba13d1-148e-4edf-aee7-cb940163b900"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 8, 1}}, Typeset`size$$ = {
        640., {83.021484375, 87.978515625}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Grid[{{
              $CellContext`displayCube[$CellContext`dim$198425, 
               Part[CompressedData["
1:eJxtUEEOwCAIQ0V8x760J/iB/f+2CbXTbDG2hBQoHP06exGRtnxJuWi1wBqo
G+bAFCib0h78vOK1rGPPRWsj46wvz3mcPnNG5Rr9+xzTWY0OCp/cjxtFnWKq
hkuPsvO8C3YH7z7BUOI+NzUuB0w=
                "], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"], 
              $CellContext`displayCube[$CellContext`dim$198425, 
               Part[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                "], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"], 
              $CellContext`displayCube[$CellContext`dim$198425, 
               Part[CompressedData["
1:eJxtUEEOwCAIQ0V8x760J/iB/f+2CbXTbDG2hBQoHP06exGRtnxJuWi1wBqo
G+bAFCib0h78vOK1rGPPRWsj46wvz3mcPnNG5Rr9+xzTWY0OCp/cjxtFnWKq
hkuPsvO8C3YH7z7BUOI+NzUuB0w=
                "], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"]}}], 
          "Specifications" :> {{$CellContext`i$$, 1, 8, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{681., {124.521484375, 129.478515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TagBox[GridBox[{
        {
         TagBox[
          StyleBox[
           
           DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
              Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
            496., {242.521484375, 247.478515625}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
            
            DynamicBox[Manipulate`ManipulateBoxes[
             1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
              "ControllerVariables" :> {}, 
              "OtherVariables" :> {
               Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$,
                 Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
                Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
                Typeset`initDone$$, Typeset`skipInitDone$$}, 
              "Body" :> (
               Part[$CellContext`args$198426, 1] = {$CellContext`i$$}; 
               Grid[{{
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJxtUEEOwCAIQ0V8x760J/iB/f+2CbXTbDG2hBQoHP06exGRtnxJuWi1wBqo
G+bAFCib0h78vOK1rGPPRWsj46wvz3mcPnNG5Rr9+xzTWY0OCp/cjxtFnWKq
hkuPsvO8C3YH7z7BUOI+NzUuB0w=
                    
                    "], $CellContext`args$198426], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                    
                    "], $CellContext`args$198426], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJxtUEEOwCAIQ0V8x760J/iB/f+2CbXTbDG2hBQoHP06exGRtnxJuWi1wBqo
G+bAFCib0h78vOK1rGPPRWsj46wvz3mcPnNG5Rr9+xzTWY0OCp/cjxtFnWKq
hkuPsvO8C3YH7z7BUOI+NzUuB0w=
                    
                    "], $CellContext`args$198426]}}]), 
              "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, 
              "Options" :> {}, "DefaultOptions" :> {}],
             ImageSizeCache->{537., {284.021484375, 288.978515625}},
             SingleEvaluation->True],
            Deinitialization:>None,
            DynamicModuleValues:>{},
            SynchronousInitialization->True,
            UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
            UnsavedVariables:>{Typeset`initDone$$},
            UntrackedVariables:>{Typeset`size$$}], "Manipulate",
           Deployed->True,
           StripOnInput->False],
          Manipulate`InterpretManipulate[1]]},
        {
         TagBox[
          StyleBox[
           
           DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
              Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
            496., {242.521484375, 247.478515625}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
            
            DynamicBox[Manipulate`ManipulateBoxes[
             1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
              "ControllerVariables" :> {}, 
              "OtherVariables" :> {
               Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$,
                 Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
                Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
                Typeset`initDone$$, Typeset`skipInitDone$$}, 
              "Body" :> (
               Part[$CellContext`args$198427, 2] = {$CellContext`i$$}; 
               Grid[{{
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJxtUEEOwCAIQ0V8x760J/iB/f+2CbXTbDG2hBQoHP06exGRtnxJuWi1wBqo
G+bAFCib0h78vOK1rGPPRWsj46wvz3mcPnNG5Rr9+xzTWY0OCp/cjxtFnWKq
hkuPsvO8C3YH7z7BUOI+NzUuB0w=
                    
                    "], $CellContext`args$198427], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                    
                    "], $CellContext`args$198427], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJxtUEEOwCAIQ0V8x760J/iB/f+2CbXTbDG2hBQoHP06exGRtnxJuWi1wBqo
G+bAFCib0h78vOK1rGPPRWsj46wvz3mcPnNG5Rr9+xzTWY0OCp/cjxtFnWKq
hkuPsvO8C3YH7z7BUOI+NzUuB0w=
                    
                    "], $CellContext`args$198427]}}]), 
              "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, 
              "Options" :> {}, "DefaultOptions" :> {}],
             ImageSizeCache->{537., {284.021484375, 288.978515625}},
             SingleEvaluation->True],
            Deinitialization:>None,
            DynamicModuleValues:>{},
            SynchronousInitialization->True,
            UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
            UnsavedVariables:>{Typeset`initDone$$},
            UntrackedVariables:>{Typeset`size$$}], "Manipulate",
           Deployed->True,
           StripOnInput->False],
          Manipulate`InterpretManipulate[1]]},
        {
         TagBox[
          StyleBox[
           
           DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
              Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
            496., {242.521484375, 247.478515625}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
            
            DynamicBox[Manipulate`ManipulateBoxes[
             1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
              "ControllerVariables" :> {}, 
              "OtherVariables" :> {
               Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$,
                 Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
                Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
                Typeset`initDone$$, Typeset`skipInitDone$$}, 
              "Body" :> (
               Part[$CellContext`args$198428, 3] = {$CellContext`i$$}; 
               Grid[{{
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJxtUEEOwCAIQ0V8x760J/iB/f+2CbXTbDG2hBQoHP06exGRtnxJuWi1wBqo
G+bAFCib0h78vOK1rGPPRWsj46wvz3mcPnNG5Rr9+xzTWY0OCp/cjxtFnWKq
hkuPsvO8C3YH7z7BUOI+NzUuB0w=
                    
                    "], $CellContext`args$198428], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                    
                    "], $CellContext`args$198428], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJxtUEEOwCAIQ0V8x760J/iB/f+2CbXTbDG2hBQoHP06exGRtnxJuWi1wBqo
G+bAFCib0h78vOK1rGPPRWsj46wvz3mcPnNG5Rr9+xzTWY0OCp/cjxtFnWKq
hkuPsvO8C3YH7z7BUOI+NzUuB0w=
                    
                    "], $CellContext`args$198428]}}]), 
              "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, 
              "Options" :> {}, "DefaultOptions" :> {}],
             ImageSizeCache->{537., {284.021484375, 288.978515625}},
             SingleEvaluation->True],
            Deinitialization:>None,
            DynamicModuleValues:>{},
            SynchronousInitialization->True,
            UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
            UnsavedVariables:>{Typeset`initDone$$},
            UntrackedVariables:>{Typeset`size$$}], "Manipulate",
           Deployed->True,
           StripOnInput->False],
          Manipulate`InterpretManipulate[1]]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.9156830346650743`*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"8b1eeb61-33cf-45f8-a3d8-3207660ff925"],

Cell[CellGroupData[{

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683518166247*^9},
 CellLabel->"",ExpressionUUID->"f13472b9-7e58-4ef6-a3d0-00f2a8da757a"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.9156835182361097`*^9},
 CellLabel->"",ExpressionUUID->"1197d463-1f24-4c25-9ee4-337b90bf6300"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.9156835182865963`*^9},
 CellLabel->"",ExpressionUUID->"56f8d518-0195-4c07-99f9-3ed313a511f7"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683710428746*^9},
 CellLabel->"",ExpressionUUID->"7d4a38eb-b1eb-463a-b726-18f7829ab4b5"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.915683710436634*^9},
 CellLabel->"",ExpressionUUID->"67a5fb9c-77be-45a1-8240-6be539991840"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683710561468*^9},
 CellLabel->"",ExpressionUUID->"16095d1f-e83e-41dc-a909-0cc89d4fc8ed"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683710773608*^9},
 CellLabel->"",ExpressionUUID->"f81d654d-0d0d-4692-9a6a-80ec79116ac2"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.9156837108650208`*^9},
 CellLabel->"",ExpressionUUID->"04fb1a1d-49f7-44b9-8b69-cca195fdeb2c"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.9156837108686*^9},
 CellLabel->"",ExpressionUUID->"890d51cd-6c1d-4854-9c13-8557e236741a"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683776402163*^9},
 CellLabel->"",ExpressionUUID->"dc5532d0-a3a5-4aa3-bcc5-669728ac70d1"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.9156837764059887`*^9},
 CellLabel->"",ExpressionUUID->"9aa3919a-36b7-49f3-bdbc-61ed332785f4"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.9156837764683933`*^9},
 CellLabel->"",ExpressionUUID->"46d97784-2630-4bff-b5a3-fda550c82416"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683776628882*^9},
 CellLabel->"",ExpressionUUID->"3f6aaea9-3e20-4f58-b938-4b6af9adedee"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683776734705*^9},
 CellLabel->"",ExpressionUUID->"9791522c-a66c-4639-952d-311673253d75"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.9156837767377367`*^9},
 CellLabel->"",ExpressionUUID->"58c79c09-0925-4df5-890d-9a8fbcb7c2af"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683922285357*^9},
 CellLabel->"",ExpressionUUID->"80c4bc26-63b0-4a85-9ad7-e1a674be48af"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.915683922291113*^9},
 CellLabel->"",ExpressionUUID->"16a456d4-6d5c-4465-95a9-1a6a2f07e0a7"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683922372561*^9},
 CellLabel->"",ExpressionUUID->"c93b6307-90a1-43e9-82da-6495b6248fc9"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683922376205*^9},
 CellLabel->"",ExpressionUUID->"73f4f0ba-5741-4433-bab8-aa9fc9e72bf2"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683922432221*^9},
 CellLabel->"",ExpressionUUID->"4c5bf92a-164c-4c94-b5d3-400d83aa9396"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.915683922436417*^9},
 CellLabel->"",ExpressionUUID->"929f6fae-1eb0-4dd0-9f35-54a7f5bebe5f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"compareThreeCubesAlongAllAxes", "[", 
  RowBox[{"minCube", ",", " ", "outCube15", ",", " ", "maxCube"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.91541380067704*^9, 3.915413814619228*^9}, {
  3.915413852090974*^9, 3.915413857322632*^9}, {3.915414343129243*^9, 
  3.915414344835981*^9}, {3.9154143969613934`*^9, 3.915414398248785*^9}, {
  3.915414459184134*^9, 3.915414459761259*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"e4a19d2d-941b-4e72-be2b-a9812fd4f8fc"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        496., {241.021484375, 245.978515625}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (Part[$CellContext`args$70834, 1] = {$CellContext`i$$}; 
           Grid[{{
               $CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

                "], $CellContext`args$70834], 
               $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                
                "], $CellContext`args$70834], 
               $CellContext`sliceGridWithHeight[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
                "], $CellContext`args$70834]}}]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{537., {282.521484375, 287.478515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        496., {241.021484375, 245.978515625}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (Part[$CellContext`args$70835, 2] = {$CellContext`i$$}; 
           Grid[{{
               $CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

                "], $CellContext`args$70835], 
               $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                
                "], $CellContext`args$70835], 
               $CellContext`sliceGridWithHeight[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
                "], $CellContext`args$70835]}}]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{537., {282.521484375, 287.478515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        496., {241.021484375, 245.978515625}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (Part[$CellContext`args$70836, 3] = {$CellContext`i$$}; 
           Grid[{{
               $CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

                "], $CellContext`args$70836], 
               $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                
                "], $CellContext`args$70836], 
               $CellContext`sliceGridWithHeight[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
                "], $CellContext`args$70836]}}]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{537., {282.521484375, 287.478515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.915677255050168*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"18cc57fc-00e9-41cf-9f65-96be000042ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"compareThreeCubes", "[", 
  RowBox[{"minCube", ",", " ", "outCube15", ",", " ", "maxCube"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.915414043537991*^9, 3.915414054519403*^9}, {
  3.9156772675623837`*^9, 3.915677268142682*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"9795074e-43fb-4107-b494-babd7733eaec"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 8, 1}}, Typeset`size$$ = {
        645., {82.521484375, 87.478515625}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Grid[{{
              $CellContext`displayCube[$CellContext`dim$73612, 
               Part[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

                "], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"], 
              $CellContext`displayCube[$CellContext`dim$73612, 
               Part[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                "], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"], 
              $CellContext`displayCube[$CellContext`dim$73612, 
               Part[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
                "], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$], 
                Span[$CellContext`i$$, -$CellContext`i$$]], 
               "DeepSeaColors"]}}], 
          "Specifications" :> {{$CellContext`i$$, 1, 8, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{686., {124.021484375, 128.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TagBox[GridBox[{
        {
         TagBox[
          StyleBox[
           
           DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
              Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
            496., {241.021484375, 245.978515625}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
            
            DynamicBox[Manipulate`ManipulateBoxes[
             1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
              "ControllerVariables" :> {}, 
              "OtherVariables" :> {
               Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$,
                 Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
                Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
                Typeset`initDone$$, Typeset`skipInitDone$$}, 
              "Body" :> (
               Part[$CellContext`args$73613, 1] = {$CellContext`i$$}; Grid[{{
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

                    "], $CellContext`args$73613], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                    
                    "], $CellContext`args$73613], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
                    "], $CellContext`args$73613]}}]), 
              "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, 
              "Options" :> {}, "DefaultOptions" :> {}],
             ImageSizeCache->{537., {282.521484375, 287.478515625}},
             SingleEvaluation->True],
            Deinitialization:>None,
            DynamicModuleValues:>{},
            SynchronousInitialization->True,
            UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
            UnsavedVariables:>{Typeset`initDone$$},
            UntrackedVariables:>{Typeset`size$$}], "Manipulate",
           Deployed->True,
           StripOnInput->False],
          Manipulate`InterpretManipulate[1]]},
        {
         TagBox[
          StyleBox[
           
           DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
              Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
            496., {241.021484375, 245.978515625}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
            
            DynamicBox[Manipulate`ManipulateBoxes[
             1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
              "ControllerVariables" :> {}, 
              "OtherVariables" :> {
               Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$,
                 Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
                Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
                Typeset`initDone$$, Typeset`skipInitDone$$}, 
              "Body" :> (
               Part[$CellContext`args$73614, 2] = {$CellContext`i$$}; Grid[{{
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

                    "], $CellContext`args$73614], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                    
                    "], $CellContext`args$73614], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
                    "], $CellContext`args$73614]}}]), 
              "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, 
              "Options" :> {}, "DefaultOptions" :> {}],
             ImageSizeCache->{537., {282.521484375, 287.478515625}},
             SingleEvaluation->True],
            Deinitialization:>None,
            DynamicModuleValues:>{},
            SynchronousInitialization->True,
            UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
            UnsavedVariables:>{Typeset`initDone$$},
            UntrackedVariables:>{Typeset`size$$}], "Manipulate",
           Deployed->True,
           StripOnInput->False],
          Manipulate`InterpretManipulate[1]]},
        {
         TagBox[
          StyleBox[
           
           DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
            Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
            Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
            "\"untitled\"", Typeset`specs$$ = {{
              Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
            496., {241.021484375, 245.978515625}}, Typeset`update$$ = 0, 
            Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
            
            DynamicBox[Manipulate`ManipulateBoxes[
             1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
              "ControllerVariables" :> {}, 
              "OtherVariables" :> {
               Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$,
                 Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
                Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
                Typeset`initDone$$, Typeset`skipInitDone$$}, 
              "Body" :> (
               Part[$CellContext`args$73615, 3] = {$CellContext`i$$}; Grid[{{
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

                    "], $CellContext`args$73615], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
                    
                    "], $CellContext`args$73615], 
                   $CellContext`sliceGridWithHeight[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
                    "], $CellContext`args$73615]}}]), 
              "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, 
              "Options" :> {}, "DefaultOptions" :> {}],
             ImageSizeCache->{537., {282.521484375, 287.478515625}},
             SingleEvaluation->True],
            Deinitialization:>None,
            DynamicModuleValues:>{},
            SynchronousInitialization->True,
            UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
            UnsavedVariables:>{Typeset`initDone$$},
            UntrackedVariables:>{Typeset`size$$}], "Manipulate",
           Deployed->True,
           StripOnInput->False],
          Manipulate`InterpretManipulate[1]]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.915414054936142*^9, 3.915414061013253*^9}, {
   3.915414107444365*^9, 3.915414126158865*^9}, 3.915414171366894*^9, 
   3.915676742783576*^9, 3.915677021637495*^9, {3.9156772591767797`*^9, 
   3.915677268724184*^9}},
 CellLabel->
  "Out[108]=",ExpressionUUID->"3b69553f-8631-44ab-b6e1-a1a81eae2108"],

Cell[CellGroupData[{

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683519002226*^9},
 CellLabel->"",ExpressionUUID->"d4d4be83-0d5b-4342-ade9-48dbfda357b7"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.9156835191070538`*^9},
 CellLabel->"",ExpressionUUID->"d14b815a-4f4a-427f-be8d-267bb591e47f"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683519167151*^9},
 CellLabel->"",ExpressionUUID->"effeaa01-e713-44a5-984a-db6fbeb2ed1a"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683711496492*^9},
 CellLabel->"",ExpressionUUID->"e41dc573-e47e-4c57-831e-456214ee2a8f"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683711553583*^9},
 CellLabel->"",ExpressionUUID->"4392d8c4-2607-49b4-8b97-a32cb0441f5a"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.9156837116345*^9},
 CellLabel->"",ExpressionUUID->"274b903a-47c8-400e-b8fb-294747c60d4f"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683711637129*^9},
 CellLabel->"",ExpressionUUID->"543515c0-6a44-4293-8f1b-32189974da28"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.9156837117246847`*^9},
 CellLabel->"",ExpressionUUID->"8c55d74e-e4cb-4d71-af28-94bb2bae74ce"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683711836697*^9},
 CellLabel->"",ExpressionUUID->"0efc19e0-7693-40e4-be0d-61ade36d8896"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683777546176*^9},
 CellLabel->"",ExpressionUUID->"48942a77-b780-4f9e-bc04-a8a20a2fb581"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683777549457*^9},
 CellLabel->"",ExpressionUUID->"d968d288-50a7-47b9-88cf-412c20cc51a4"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.9156837776256332`*^9},
 CellLabel->"",ExpressionUUID->"9a5949d8-0ac5-4800-9204-eae173991f34"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.9156837776293373`*^9},
 CellLabel->"",ExpressionUUID->"0bdf3de7-23eb-4c1c-9d4e-0247ba4ce468"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683777690423*^9},
 CellLabel->"",ExpressionUUID->"81bb8500-0276-46a8-bc8d-b8429ebfe5ab"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.9156837776939907`*^9},
 CellLabel->"",ExpressionUUID->"1833a23c-4f1b-4d04-824e-8e718f4f0b8c"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683924327179*^9},
 CellLabel->"",ExpressionUUID->"c2032a6b-04e5-401d-8a86-5f64bf4732d3"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683924331551*^9},
 CellLabel->"",ExpressionUUID->"d2ea187d-9ecb-4805-8726-86989239a75c"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683924404714*^9},
 CellLabel->"",ExpressionUUID->"df9b675b-b385-4ac6-965e-9d823cfb2f2e"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683924408381*^9},
 CellLabel->"",ExpressionUUID->"17e94f6b-a9d6-49fd-a544-c828877fcef9"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683924464932*^9},
 CellLabel->"",ExpressionUUID->"ae090b73-e621-4452-baf7-a179ee205722"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.9156839244689827`*^9},
 CellLabel->"",ExpressionUUID->"86c2077b-930c-43ff-97dc-52a8ad2a5321"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: max and min cubes of side 15", "Subsection",
 CellChangeTimes->{{3.9124451534856033`*^9, 
  3.912445186010397*^9}},ExpressionUUID->"3cf80991-5947-4fae-80f3-\
2de0a0a27c13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cube2", " ", "=", " ", 
  RowBox[{"initialCubeBorder", "[", "21", "]"}]}]], "Code",
 CellChangeTimes->{{3.915376272065592*^9, 3.915376278881859*^9}, {
  3.9154129437814817`*^9, 3.915412943967523*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"4010bd6b-b10a-4a65-9a18-a530dbaa938a"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack1", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"21\\\", \\\",\\\", \\\"21\\\", \\\",\\\", \\\"21\\\"}], \
\\\"}\\\"}]\\).\"", 2, 44, 95, 34809098522299453303, "Local", 
   "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.9154129826721*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"5cba76dd-9b79-44a9-8f94-ae878b8ba7fe"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6",
                ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12",
                ",", "13", ",", "14", ",", "15", ",", "16", ",", "17", ",", 
               "18", ",", "19", ",", "20"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7",
                ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", 
               "13", ",", "14", ",", "15", ",", "16", ",", "17", ",", "18", 
               ",", "19", ",", "20", ",", "19"}], "}"}], ",", 
             TemplateBox[{"17"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              RowBox[{
              "19", ",", "20", ",", "19", ",", "18", ",", "17", ",", "16", 
               ",", "15", ",", "14", ",", "13", ",", "12", ",", "11", ",", 
               "10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", 
               "4", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "20", ",", "19", ",", "18", ",", "17", ",", "16", ",", "15", 
               ",", "14", ",", "13", ",", "12", ",", "11", ",", "10", ",", 
               "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", 
               "3", ",", "2", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}], ",", 
           TemplateBox[{"17"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{46.18359375, {2., 6.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{41.015625, {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{49.25390625, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 44, 34809098522299453303, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{46.18359375, {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{55.44140625, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 44, 34809098522299453303, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{34.640625, {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 44, 34809098522299453303, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{62.40234375, {0., 6.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[34809098522299453303 === $SessionID, 
   Out[44], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.915376279556222*^9, {3.915412936910104*^9, 3.915412944256081*^9}, 
   3.915412982691272*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"f4a347de-8587-41f9-97f0-6fdeeedea021"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Developer`PackedArrayQ", "[", "maxCube", "]"}]], "Code",
 CellChangeTimes->{{3.915376559145597*^9, 3.9153765638280582`*^9}, {
  3.915377034200305*^9, 3.91537704846084*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"52c139c6-ba1f-4750-b7c4-512e8ca86c1c"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.915377044234379*^9, 3.915377048875984*^9}, 
   3.915412995281107*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"a61ac58d-31b8-4dfd-89a5-771a2f2dc211"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dim", " ", "=", " ", "15"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cube", " ", "=", " ", 
   RowBox[{"initialCubeBorder", "[", "15", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"maxCube", " ", "=", " ", 
   RowBox[{"generateMaxCube", "[", "dim", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"minCube", " ", "=", " ", 
   RowBox[{"generateMinCube", "[", "dim", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"MatrixForm", "[", 
       RowBox[{"maxCube", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "All", ",", "All"}], "\[RightDoubleBracket]"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}], "\n", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"MatrixForm", "[", 
       RowBox[{"minCube", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "All", ",", "All"}], "\[RightDoubleBracket]"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], 
   "*)"}]}]}], "Code",
 CellChangeTimes->{{3.8963315301595716`*^9, 3.8963315999490423`*^9}, 
   3.8963316511910553`*^9, {3.89633391267474*^9, 3.896333913798381*^9}, {
   3.896333984558095*^9, 3.8963339860371017`*^9}, {3.896334238850512*^9, 
   3.8963342404267263`*^9}, {3.9124104286872063`*^9, 
   3.9124104560692463`*^9}, {3.91242985221181*^9, 3.912429857993331*^9}, {
   3.912445480937314*^9, 3.9124454888452053`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"2148de09-ed05-4808-bed8-2a80b8dfc5bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cubesLayersSimultaneously", "[", 
  RowBox[{"minCube", ",", " ", 
   RowBox[{"to3Colouring", "[", "minCube", "]"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.912251791004142*^9, 3.9122518038093777`*^9}, {
   3.912317759236363*^9, 3.912317794709379*^9}, {3.912409523098621*^9, 
   3.912409523384006*^9}, {3.912410487525897*^9, 3.912410487935278*^9}, {
   3.9124161580195208`*^9, 3.9124161791368017`*^9}, {3.9124171557617702`*^9, 
   3.912417159303616*^9}, 3.912421721995995*^9, {3.91242988374607*^9, 
   3.912429936431622*^9}, {3.9124449376275883`*^9, 3.9124449391817493`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"57af5111-0f01-4f8c-80d8-9d8ac3a7ab54"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 8, 1}}, Typeset`size$$ = {
    423., {83.021484375, 87.978515625}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          $CellContext`displayCube[$CellContext`dim$8744, 
           Part[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

            "], 
            Span[$CellContext`i$$, -$CellContext`i$$], 
            Span[$CellContext`i$$, -$CellContext`i$$], 
            Span[$CellContext`i$$, -$CellContext`i$$]], "DeepSeaColors"], 
          $CellContext`displayCube[$CellContext`dim$8744, 
           Part[CompressedData["
1:eJzFltFxwzAMQ2l2gM7QlTpCFsj+f805pgQ8yupXr3dJHMSIRAigrK/H8/vx
ERGf8o4j9bVF4Si3KBzlFoWj3KJwlFvU9DkORXEo/XUrFSn5HPhQNMlVsqIi
V1lvsuhTdJJFQ1AfMDyiIruvC1KqLnRpLqTks4pBrlljokGuki9Vh5LFElPQ
9MJfpo4eUdFNSgvXjddlkN8/a9T810keJWnUkM+uF/4u+FovU0ePqMjyXArP
Dy3HnIOvQh4jLPrP/DR/kedF/+rOwD5i6ugRFVmexwJr76EzlTz+D73wF3lG
/8JD1zct9fmx3sgX+gn7h4/f9s8/nu9ufqw38oUrWBiDM/zrfIHVwFphJVd9
tEjdcn6sL9yAV3ASPiMF8AyJbc8jSzt6AZ2y6iOkDh5B0ewXdLcWOmUfaUNo
pEUV9LUnrBR+hUOsV2bTu+gjpA4eQREqra8S0VGfKlz9T/xrZ4bbJ2zXC3+R
595HSB08giJ1RlG28xU8dH3DgpkvDR70wl/kGf1r2Wz7ZUsdPIKiVBU4faUr
/O3cagp5ZvA883mUirlfcmdAHyF18AiKoAkI/m0x/Ga+HafjY4tXO8Mtbh7t
8A99/w8M
            "], 
            Span[$CellContext`i$$, -$CellContext`i$$], 
            Span[$CellContext`i$$, -$CellContext`i$$], 
            Span[$CellContext`i$$, -$CellContext`i$$]], "DeepSeaColors"]}}], 
      "Specifications" :> {{$CellContext`i$$, 1, 8, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{464., {124.521484375, 129.478515625}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.912421723350317*^9, 3.912421736275527*^9}, 
   3.912429861544059*^9, {3.912429912039249*^9, 3.912429936855916*^9}, 
   3.9124301569180937`*^9, {3.912444939780517*^9, 3.912444945292884*^9}, {
   3.912446600279335*^9, 3.912446625004259*^9}, 3.912446729272571*^9, 
   3.912446859074316*^9, 3.912585196864328*^9, 3.913938691789893*^9, {
   3.913938973890571*^9, 3.9139389814690657`*^9}, 3.91394262286057*^9, 
   3.915376229528883*^9, 3.915376595277919*^9, 3.915413000619128*^9, 
   3.91541306233659*^9, 3.915676826485053*^9, 3.915676902091442*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"202afc88-dc97-42e2-8b7a-ead9932d7327"],

Cell[CellGroupData[{

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683519652549*^9},
 CellLabel->"",ExpressionUUID->"4290e210-f8a5-4d54-b15e-ad7048f1c03e"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683519708528*^9},
 CellLabel->"",ExpressionUUID->"bc677f51-c2ea-4419-a573-8880e08eecac"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683712311339*^9},
 CellLabel->"",ExpressionUUID->"edd97c31-3e9e-42ba-b499-73d27460bae6"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.915683712314172*^9},
 CellLabel->"",ExpressionUUID->"8101f495-d7b2-4b83-89dc-6d2052223c89"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.9156837123949223`*^9},
 CellLabel->"",ExpressionUUID->"2108c56a-dacd-446b-aed5-a4d74a1b6357"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.9156837123981028`*^9},
 CellLabel->"",ExpressionUUID->"b97505ab-0a09-48d8-bb4c-9534cf31cfe8"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.9156837806888733`*^9},
 CellLabel->"",ExpressionUUID->"8b97c183-e079-4bba-9d40-9d1879b455d5"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.915683780733882*^9},
 CellLabel->"",ExpressionUUID->"14d892af-a08b-473e-b1a3-cc5c97807498"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.9156837808167953`*^9},
 CellLabel->"",ExpressionUUID->"2e2af363-c778-44fa-873c-e19db6b87195"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.9156837808206587`*^9},
 CellLabel->"",ExpressionUUID->"3d2fcf66-e9dc-4d46-8d41-6c555a388414"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683925020461*^9},
 CellLabel->"",ExpressionUUID->"8a85fb12-9784-4a20-8acd-32421ae37b8c"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.915683925024098*^9},
 CellLabel->"",ExpressionUUID->"803a90a9-292b-45d9-81ba-cca1b96a3275"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683925134704*^9},
 CellLabel->"",ExpressionUUID->"fa9700ac-db2c-444a-b522-0581bde1bb8f"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.9156839251390963`*^9},
 CellLabel->"",ExpressionUUID->"7ee684bd-0830-46a4-89bc-54102597f03d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cubeSlicesAllAxesSimultaneously", "[", "minCube", "]"}], "\n", 
 RowBox[{"cubeSlicesAllAxesSeparately", "[", "minCube", "]"}]}], "Code",
 CellChangeTimes->{{3.912254090814623*^9, 3.91225409850528*^9}, {
   3.9122626197887173`*^9, 3.912262635065693*^9}, 3.912266838845381*^9, {
   3.91226743894987*^9, 3.912267451869739*^9}, {3.912267618897295*^9, 
   3.91226761911683*^9}, {3.912268468866748*^9, 3.9122684720184383`*^9}, {
   3.912268678959939*^9, 3.912268689916807*^9}, {3.91227002852654*^9, 
   3.912270033277396*^9}, 3.91227109937913*^9, {3.912410406453114*^9, 
   3.9124104096680193`*^9}, {3.912410491664907*^9, 3.9124104952239122`*^9}, {
   3.912417164300827*^9, 3.9124171672657537`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"1c71fc96-a296-4b0b-ab7f-73c9848f5424"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 8, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
    496., {240.521484375, 245.478515625}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> \
$CellContext`cubeSlicesAllAxesSimultaneouslyGrid[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

        "], $CellContext`i$$], 
      "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{537., {282.021484375, 286.978515625}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.912254098961012*^9, 3.912261732964941*^9, {3.912261845109248*^9, 
   3.9122618673733587`*^9}, 3.912261906632366*^9, 3.9122623704304457`*^9, 
   3.9122624080775127`*^9, {3.912262607107293*^9, 3.912262642199815*^9}, 
   3.912266839283944*^9, 3.91226703766444*^9, {3.912267431943881*^9, 
   3.912267452347896*^9}, 3.9122675229003057`*^9, 3.912267556992798*^9, {
   3.91226759769552*^9, 3.9122676195664177`*^9}, 3.912268091243443*^9, 
   3.912268472371093*^9, 3.912268515066235*^9, 3.912268690382292*^9, 
   3.9122697360651503`*^9, 3.912270033905272*^9, 3.9122701114791193`*^9, 
   3.912270164057863*^9, 3.9122743433164177`*^9, 3.91231016958733*^9, 
   3.912312895668007*^9, 3.912314851576214*^9, 3.9123148823273363`*^9, 
   3.912399690371847*^9, 3.912399822882844*^9, 3.91241041079039*^9, 
   3.912410495555201*^9, {3.912413223498426*^9, 3.912413236181161*^9}, 
   3.912421755662983*^9, {3.912430119366959*^9, 3.912430148765983*^9}, 
   3.912442987188569*^9, 3.912446632176406*^9, 3.91244673886714*^9, 
   3.9124468624530687`*^9, 3.912585209190012*^9, 3.913938869188645*^9, 
   3.9139389579561853`*^9, 3.913938988845853*^9, 3.913942624795439*^9, 
   3.915413017328333*^9, 3.915413065159481*^9, 3.9156768308751907`*^9, 
   3.915676911152454*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"3c2d61e7-0e99-4ec9-b0cd-087f9791aabf"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 10, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        162., {240.20148437500004`, 245.15851562500004`}}, Typeset`update$$ = 
        0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$11491, 
              1] = {$CellContext`i$$}; \
$CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

             "], $CellContext`args$11491]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{218., {282.021484375, 286.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        162., {240.70148437500004`, 245.65851562500004`}}, Typeset`update$$ = 
        0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$11492, 
              2] = {$CellContext`i$$}; \
$CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

             "], $CellContext`args$11492]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{218., {282.021484375, 286.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        162., {240.70148437500004`, 245.65851562500004`}}, Typeset`update$$ = 
        0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$11493, 
              3] = {$CellContext`i$$}; \
$CellContext`sliceGridWithHeight[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

             "], $CellContext`args$11493]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{218., {282.021484375, 286.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.912254098961012*^9, 3.912261732964941*^9, {3.912261845109248*^9, 
   3.9122618673733587`*^9}, 3.912261906632366*^9, 3.9122623704304457`*^9, 
   3.9122624080775127`*^9, {3.912262607107293*^9, 3.912262642199815*^9}, 
   3.912266839283944*^9, 3.91226703766444*^9, {3.912267431943881*^9, 
   3.912267452347896*^9}, 3.9122675229003057`*^9, 3.912267556992798*^9, {
   3.91226759769552*^9, 3.9122676195664177`*^9}, 3.912268091243443*^9, 
   3.912268472371093*^9, 3.912268515066235*^9, 3.912268690382292*^9, 
   3.9122697360651503`*^9, 3.912270033905272*^9, 3.9122701114791193`*^9, 
   3.912270164057863*^9, 3.9122743433164177`*^9, 3.91231016958733*^9, 
   3.912312895668007*^9, 3.912314851576214*^9, 3.9123148823273363`*^9, 
   3.912399690371847*^9, 3.912399822882844*^9, 3.91241041079039*^9, 
   3.912410495555201*^9, {3.912413223498426*^9, 3.912413236181161*^9}, 
   3.912421755662983*^9, {3.912430119366959*^9, 3.912430148765983*^9}, 
   3.912442987188569*^9, 3.912446632176406*^9, 3.91244673886714*^9, 
   3.9124468624530687`*^9, 3.912585209190012*^9, 3.913938869188645*^9, 
   3.9139389579561853`*^9, 3.913938988845853*^9, 3.913942624795439*^9, 
   3.915413017328333*^9, 3.915413065159481*^9, 3.9156768308751907`*^9, 
   3.9156769112783403`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"e86a41b5-6b1a-4728-9735-8a0d50451544"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cubesSlicesSeparately", "[", 
  RowBox[{"maxCube", ",", " ", "minCube"}], "]"}], "\n", 
 RowBox[{"cubesSlicesSimultaneously", "[", 
  RowBox[{"maxCube", ",", " ", "minCube"}], "]"}]}], "Code",
 CellChangeTimes->{{3.912314463602271*^9, 3.912314466831243*^9}, {
  3.912314540429406*^9, 3.912314547984791*^9}, {3.912314786181971*^9, 
  3.91231479931944*^9}, {3.912410539943325*^9, 3.912410542472999*^9}, {
  3.912417171258238*^9, 3.9124171737988577`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"af9d4561-7cad-4ed1-ba9c-ad923ed74cc4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 11, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        496., {241.021484375, 245.978515625}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> \
$CellContext`cubeSlicesAllAxesSimultaneouslyGrid[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
            "], $CellContext`i$$], 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{537., {282.521484375, 287.478515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 11, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        496., {241.521484375, 246.478515625}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> \
$CellContext`cubeSlicesAllAxesSimultaneouslyGrid[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

            "], $CellContext`i$$], 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{537., {283.021484375, 287.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.9123145483787947`*^9, {3.912314787836027*^9, 3.912314800148036*^9}, 
   3.91239982854112*^9, 3.9124105428419743`*^9, 3.9124132416768713`*^9, 
   3.912414582626873*^9, 3.912421773283187*^9, 3.9124301387267838`*^9, 
   3.912443010767949*^9, 3.912446748427058*^9, 3.9124468661192427`*^9, 
   3.9125852132989492`*^9, {3.913942645368856*^9, 3.9139426695599957`*^9}, 
   3.91541306822081*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"7d2a1274-27fd-457f-8d63-4928f3d44c6c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 8, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
    997., {240.521484375, 245.478515625}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          $CellContext`cubeSlicesAllAxesSimultaneouslyGrid[CompressedData["
1:eJy91zt2wkAQRFGBEEI/BNhegLfkJbAB7z/z5zhwXTQTEih4YU11Vbfe758f
97ZpmvXf1+z27aE79qdhnOblnLQkzUlT0pg0JJ2qdEzqkg5JbdI+aZfU1BSt
56QlaU6aksakoUp90jGpSzoktUnqrXiEost6TlqS5qQpaazSKalPOiZ1SerF
3/LU4RGKrt+ctCTNSVOVhqRTUp+kXvxlnos5YurwCEW3H05akuYqjUlDknrx
l3kmv6VmIEdMHR6h6OWXk5YqTUnqxV/mmfzSV4WuowtIDnOGK2h4/eMaqRd/
mWfyS1/Rz8/W9/ZshZv7CPeZDSaHuWLqVFBgXoe342V5d1zBs60NS35JN9mn
GcyRnhSY/JJusk8z0BukbuNmoIHpZ9rbrrMZnLICFxXdNvYR3U7z05uPVxA7
lA3rPrK97TpzU+CiRyq6Pt4b7G423+xdxxXkzeCGdR/Z3jZBgYtTp0cqujzc
k9wuXqprTe/GzeCGdR/ZbQUu5sip0yMVrf4vpL4GRj9+M9/kub6PYJqBHDF1
eIQi/h++ABMgm4o=
           "], $CellContext`i$$], 
          $CellContext`cubeSlicesAllAxesSimultaneouslyGrid[CompressedData["
1:eJy9l0l2wyAQRGUhJg3xGXKlHMEX8P131hCg+4NYepHo1TOW+Kruavz7ev+9
zDAMT/E3PEYzWedDnJd1+9Fq02rVatFq1ipqFbrKaWW1mrQyWo1aPbQaSKS1
kWrdJqmW1Uo1L06qOHupQmZKfFI5P0tl3SLVZFepzLRJNRpNRF56RCL1uRWE
u3aF8NiRd0Xt/4Mvar8mwuRfLGpfd34j8/nzfpnPHW+z8FlFUPHCX1YdPSKR
XO8L4aFDJjx3GxPhxZIIxfVfHauud5L4wlkRmc/LHde88Bf1zD5i1dEjEonv
x0x46rR36RWcjHnNVdX5DmKHDV74i3pG/zIZ2EesOnpEonK/7A56D515rS87
avHCX9Qz+hd5xaxjMrCPWHX0iERVln75eXfPx/tGfeGKVbhHf1p8+XmuSm9m
HZOBfdSouubz8X7hBryCk/AZVQDPOGE5j5jezLpmMrR4Wx6B6Dav0PtIBuQG
uo5nBk5YzqOb9G7wNvoIVQePQHQ/j5DtSH7kJk9BPDPcTtiat846kIATVQeP
QNQ5b2B2Y/LxXNc5BVW81TxCeqMWUanoI1QdPAJR7zyJs0v3pEpenhkwYTGP
kCbIGiQD+ghVB49A1P29gLM3NPjhN+ob/dyfR9BIBvQRqg4egQi/Hz4slXZo

           "], $CellContext`i$$]}}], 
      "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1038., {282.021484375, 286.978515625}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.9123145483787947`*^9, {3.912314787836027*^9, 3.912314800148036*^9}, 
   3.91239982854112*^9, 3.9124105428419743`*^9, 3.9124132416768713`*^9, 
   3.912414582626873*^9, 3.912421773283187*^9, 3.9124301387267838`*^9, 
   3.912443010767949*^9, 3.912446748427058*^9, 3.9124468661192427`*^9, 
   3.9125852132989492`*^9, {3.913942645368856*^9, 3.9139426695599957`*^9}, 
   3.915413068483865*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"8db44f02-6a9f-477f-86b8-10a012be52d3"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Don\[CloseCurlyQuote]t run", "Section"],
 " the following codeblock! The cubesSlices function has since been commented \
out and so does not work anymore. I\[CloseCurlyQuote]ve kept the following \
visuals because they\[CloseCurlyQuote]re pretty and I like playing with them \
when my code breaks and everything else stops working. They remind me there \
is still some good left in this world."
}], "Text",
 CellChangeTimes->{{3.9124452555080767`*^9, 3.9124453582446117`*^9}, {
  3.912445393927196*^9, 3.912445401968899*^9}, {3.912446562355707*^9, 
  3.912446578275989*^9}},ExpressionUUID->"00cba1b4-7863-4035-b775-\
b728565720c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cubesSlices", "[", 
  RowBox[{"7", ",", " ", "maxCube", ",", " ", "maxCube"}], "]"}]], "Code",
 CellChangeTimes->{{3.912252444092494*^9, 3.9122524530987253`*^9}, {
  3.9122534318234177`*^9, 3.912253432661413*^9}, {3.912253532371214*^9, 
  3.912253535336838*^9}, {3.9122536324392633`*^9, 3.9122536384850597`*^9}},
 CellLabel->
  "In[565]:=",ExpressionUUID->"8a6f1077-1d8d-412d-b17e-7e387e7a6104"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 2, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 7, 1}}, Typeset`size$$ = {
        982., {159.521484375, 164.478515625}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Grid[{{
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 1], 
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 2], 
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 3]}}], 
          "Specifications" :> {{$CellContext`i$$, 1, 7, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1023., {201.021484375, 205.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 3, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 7, 1}}, Typeset`size$$ = {
        982., {159.521484375, 164.478515625}}, Typeset`update$$ = 0, 
        Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Grid[{{
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 1], 
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 2], 
              Image3DSlices[
               Image3D[(CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "] + 1)/(Max[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                  "]] + 1), Magnification -> Automatic, 
                ImageSize -> Medium], $CellContext`i$$, 3]}}], 
          "Specifications" :> {{$CellContext`i$$, 1, 7, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1023., {201.021484375, 205.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.912252454018835*^9, {3.912252653140688*^9, 3.912252680770763*^9}, 
   3.912253117257453*^9, 3.9122531526212883`*^9, {3.912253237361538*^9, 
   3.912253264268676*^9}, {3.9122534174316597`*^9, 3.912253447631917*^9}, 
   3.912253545564445*^9, 3.91225363904545*^9},
 CellLabel->
  "Out[565]=",ExpressionUUID->"20f7c4cb-b0db-4a16-82ed-b1c3b2f82431"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"7\\\"}], \
\\\"}\\\"}]\\) in call to \
\\!\\(\\*RowBox[{\\\"System`Private`PackedList\\\"}]\\).\"", 2, 53, 1796, 
   34809098522299453303, "Local", "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.915413044456685*^9},
 CellLabel->"",ExpressionUUID->"eb7999d1-0e6f-4802-8d3d-1e74b4723a73"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"7\\\"}], \
\\\"}\\\"}]\\) in call to \
\\!\\(\\*RowBox[{\\\"System`Private`PackedList\\\"}]\\).\"", 2, 53, 1797, 
   34809098522299453303, "Local", "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.915413044461091*^9},
 CellLabel->"",ExpressionUUID->"3c20dc61-67a9-4faf-a1cc-174ff023f5ce"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"7\\\"}], \
\\\"}\\\"}]\\) in call to \
\\!\\(\\*RowBox[{\\\"System`Private`PackedList\\\"}]\\).\"", 2, 53, 1798, 
   34809098522299453303, "Local", "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.915413044520075*^9},
 CellLabel->"",ExpressionUUID->"24cb0583-3aa6-4852-a107-8a0feebcafbb"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \
\\!\\(\\*StyleBox[RowBox[{\\\"Developer`FromPackedArray\\\", \\\"::\\\", \
\\\"punpack\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 53, 1799, 34809098522299453303, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.915413044572693*^9},
 CellLabel->"",ExpressionUUID->"72f7c2e6-06bc-4260-9684-24b69d4742b5"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"7\\\"}], \
\\\"}\\\"}]\\) in call to \
\\!\\(\\*RowBox[{\\\"System`Private`PackedList\\\"}]\\).\"", 2, 53, 1800, 
   34809098522299453303, "Local", "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.9154130445944223`*^9},
 CellLabel->"",ExpressionUUID->"ea0c4d14-b57c-4889-b608-dddce031db83"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"7\\\"}], \
\\\"}\\\"}]\\) in call to \
\\!\\(\\*RowBox[{\\\"System`Private`PackedList\\\"}]\\).\"", 2, 53, 1801, 
   34809098522299453303, "Local", "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.915413044650177*^9},
 CellLabel->"",ExpressionUUID->"1e477417-0ef8-4681-8e43-6d9bfe1a5981"],

Cell[BoxData[
 TemplateBox[{
  "Developer`FromPackedArray", "punpack", 
   "\"Unpacking array with dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"7\\\"}], \
\\\"}\\\"}]\\) in call to \
\\!\\(\\*RowBox[{\\\"System`Private`PackedList\\\"}]\\).\"", 2, 53, 1802, 
   34809098522299453303, "Local", "Developer`FromPackedArray"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.915413044703813*^9},
 CellLabel->"",ExpressionUUID->"6deb6a29-72c6-4415-b107-f1cd625960e0"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \
\\!\\(\\*StyleBox[RowBox[{\\\"Developer`FromPackedArray\\\", \\\"::\\\", \
\\\"punpack\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 53, 1803, 34809098522299453303, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.915413044755574*^9},
 CellLabel->"",ExpressionUUID->"df309c55-5be4-4a3e-95d6-8760f17f36c2"],

Cell[BoxData[
 Graphics3DBox[{GeometricTransformation3DBox[{
     {RGBColor[0.405188, 0.204349, 0.343389], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{0, -7, -7}}, {{
       6, -1, -7}}, {{6, -7, -1}}, {{0, -1, -1}}}]}, 
     {RGBColor[
      0.6333770000000001, 0.23392566666666667`, 0.37273666666666666`], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{1, -7, -7}}, {{
       0, -6, -7}}, {{6, -2, -7}}, {{5, -1, -7}}, {{0, -7, -6}}, {{
       1, -6, -6}}, {{5, -2, -6}}, {{6, -1, -6}}, {{6, -7, -2}}, {{
       5, -6, -2}}, {{1, -2, -2}}, {{0, -1, -2}}, {{5, -7, -1}}, {{
       6, -6, -1}}, {{0, -2, -1}}, {{1, -1, -1}}}]}, 
     {RGBColor[0.7996756666666667, 0.3505163333333333, 0.48605733333333334`], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNzsENwjAMRuGkpN2jN+ZhBAaA+bHlGFt6h/9g9VOVvPh+f1+fxxjjWTNr
2kfNLzN7+p/h4nB8lQOf5Y1XOeVuf427hg/xpGl0Ai+axltbzqQ0u++yp9N3
vGi67Ok0U9yd4IzhRSdoBp50gh1S7nZnc9fwJT5pbjqBB83NW1vOpDS7n7Jn
0nc8aKbsmTRh/gEOKUA5
       "]]}, 
     {RGBColor[0.831283, 0.533131, 0.662656], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNk2sOwjAMg7t12z04Dn85AgeA89NHTCPZmpEqPnWu40Tt4/19fWop5bnW
tlbl+gHItS9u5PzeyQvLIF/G5+JJPhYHOT1hnvnfuN/Ihf6NGvFG/0Z/8cFa
jRmmeYZpYD5Zt7NWI+/G6rHTp5tmkA/jyrrdepcmyJfxyTzKkHkGNeKNeQb1
Ys1k0F9cmUeaaZppnmGe4sI8ygDTZJ5Jn0a+jDWfSb1Ys9JZ8cY8OisuzKOz
YXqYT+YJuzNhcwhmE+vOhN2ZYK1J3o11Z7QP28+6sDnA+gXutwDcbwHWL6wv
4H4L+fsDFoxG/g==
       "]]}, 
     {RGBColor[0.742797, 0.6702466666666667, 0.8056613333333333], Opacity[1], 
      EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNktFtwzAQQ+XE8R5dqQPkowO089eSjrEAEn4fgp+FI48+39fP3/fvs7X2
vs52ncX7df4lrbPeT/Pj4m4+wEs3zC/whW2ad/DyLHgK9+t5uv40P93rtH+4
uddpnwFt+ABvzhDPCW3hXrhfebp9wplJd55wc7buDOHMJ9oBbfjhPOk1oS1o
C72EXkL9yjnsH27OOdwrvIMP8Ob8A/OPZ4fPgM+AdkI7oZ3IU/Ap+BTyFDwF
H8FnfeO0Nrz5Wyb+18QOT+xw6gfqwy9w9jm9JuoL9YVeQi+hfuUs/IvCzAsz
L917nvrwDj7AmXlh5qkv1AieK48wK+neZ+neZ2FWwnyke4ele4fjWfAx6gNC
ie4s
       "]]}, 
     {RGBColor[0.680889, 0.7972306666666666, 0.8930633333333333], Opacity[1], 
      EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNk9ttxDAMBHW+k/u4lq6EFJDUHz3IiMAuMgYEz8eIXCzs99fP5/vZWvuc
8zinuJ/zm5l1XoeH+AaXN8UdfB1euGuu2Rt3zQdb4G7AT8yp91AGc1eeIWfC
MT+VYWjXFl/gh/baSTiJObV3aq/Z/Uz0Y2eKmzLYMbsTOyG+wO5hKkPCqQwL
/Sw5Q9yUYaGTpZlL3MHux/7GzBC7E+9NzKwMG11tzRziC/xQHjtLfIO7Mmzt
CjiBXQk/MbMyBLoK7R1i92PH7G8mtHeLb3BXBjsJJ7Gr9iZ6SPSQ6CHz/5+y
s8QvsP+dRD92QnyD3Uk9f6gQjqQ=
       "]]}, 
     {RGBColor[0.659388, 0.872053, 0.882048], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNkMERwyAMBIWJ6cMpySW4gKT+IOAizeyDh4Z9LHeC6/nen2pm75gSk9xi
fpJyzuAOv4IdTm/AR/CEM2PBgaYtJ8/MamR2nAUX/E5X+o7vsNHl9Aqu+ANn
wG3jij+4m/7Ed7iRP9lBcMFf+B1u7L94ozYnfXG3wwdd2v5QdE34JFPkg/oD
/50QdQ==
       "]]}, 
     {RGBColor[0, 0, 0], Opacity[0], EdgeForm[None]}}, {{{1, 0, 0}, {0, -1, 
     0}, {0, 0, -1}}, {0, 0, 0}}], 
   GeometricTransformation3DBox[GeometricTransformation3DBox[
     {EdgeForm[GrayLevel[0.2]], FaceForm[None, None], 
      CuboidBox[{0, 0, 0}]}, CompressedData["
1:eJxdl0uO3DAQQ223W/eYK2WTfQ6QnD/WhxkBetDrNGYQwqBoVRVZPfn69efH
79dxHD/P4/j+OSaen79J5m/5xhGe/87PsZ7Pzyn+fP6IPxZ+Swf9Z519Fn4v
/qP3PnrvWJxn4XPxh+4Dh3uWxefOQ3fm/pfuf+r+k19VS1ct1HWrrlN1Harr
Ej6XJvX2he//ah/iRJpTv+qedenXhe+lWXXPqn6Cp05XP/s6Wxe+lk5Xn7v6
zFnmcmsuRfi9NJlX17yY3SXMXNBkjtyTmVbNtGumzPfSfF+aL7NgXsx36jTN
GsyMmDVzf2nu+OdZz5k1/sED4HPpM18ws8MDXZpDnEgHP+A3/ACmxrp0qjhN
nmni2D9dHHtpiBPdYd6nyWMt26tNc2zqScv2Xlt3aOJ0cbo0hzTB+JM7RBw8
j1d7tle7+oO3nYWms2D8zFkw3ubsED/SITt4Bs+Tl3J8ZqdlZwqM/8lRl6bz
FT0nU/QhqjfZWUh2FqJ6o7qSnQU0yRp1kRHvUjB1kTUwdZG7Ls0hzeg5GaQu
suN9C6ZGsukMgoswtaPZdXboefScbBZhekJ2wOwKsgamP5xtOgtm7ryr6+zQ
2aF3Re+K+GT2LcxuIY/gW7gIs3PIcpVmlU6TTtPZrrNdZ7vuM6QzpDN0nyHN
SCfS8U4As6/INRgPszeq+E188FsYP/Mu740hvvdG9K6Iz95gFuwHdsVLGJ/D
B9/CRZies2e6+EOcSJN9Qq+S7edk+znqVdSfZHs42R5Gc0gnOsuewYfsFjB9
YLeA6QNnwXiPs2D8xtkhfqTD/inCZJzdUsUB4xn2kncLmCzDiTiRDnvmLUx/
2A/eP+wZfAIHTE/gsEMuYfrAnok47JBbGJ+QQXZCEcYnZLaJ38X3rvBOiN4b
aZLxlzD7jdyByRQcslyOz4w710OcoXdF/EjTWQazf8hvFccZd5bJaTk+8zvE
iTjRu/x/OvJ7CdOHZGcKDvm9hclO1B84ZLkI0xOek2uyQ77IL7WTR3JKRshs
pONs+u9zMoWHyam/u50RsoDH8Ly/K/FqEcYD+NPe83eKvZRsH+INZsQcmS89
hMNM8RLz8hw9O8/LM2Iu/wB0HKvr
     "]], {{{1, 0, 0}, {0, -1, 0}, {0, 0, -1}}, {
     0, 0, 0}}]},
  AxesLabel->{None, None, None},
  DisplayFunction->Identity,
  ImageSize->{284.01868362701134`, 330.7019899375626},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
    "M10DefaultGradient", 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "RelieveDPZFighting" -> False},
  PlotRange->{{0, 7}, {0, 7}, {0, 7}},
  PlotRangePadding->Scaled[0.02],
  Ticks->{{{-0.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}, {{7.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}, {{7.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}},
  ViewPoint->{2.156208890178604, -2.5645049459612124`, 0.4733683597952597},
  ViewVertical->{-0.21986842944689844`, -0.9741864309765242, \
-0.05117295607814849}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.896330176088093*^9, 3.896330192665531*^9}, {
   3.8963303631655607`*^9, 3.89633038976855*^9}, {3.896330423233328*^9, 
   3.89633043410995*^9}, {3.896330509216579*^9, 3.896330517282062*^9}, {
   3.896330627519936*^9, 3.896330636247086*^9}, 3.89633073077172*^9, 
   3.896330781069508*^9, 3.8963314621825953`*^9, 3.896332227841249*^9, 
   3.8963381893310957`*^9, {3.8963729778830233`*^9, 3.896372986594284*^9}, 
   3.896373047968767*^9, 3.896373149514886*^9, 3.8963732109932213`*^9, {
   3.896406898297853*^9, 3.89640691466749*^9}, 3.896408665498767*^9, 
   3.896415387910993*^9, 
   3.8964154184164343`*^9},ExpressionUUID->"0cf7af11-1c17-42bb-9958-\
8cd8ecfaa108"]
}, Open  ]],

Cell[TextData[{
 "The images that the following codeblock produces can be ",
 StyleBox["manipulated", "Section"],
 "--click on a cube and play around with the tabs that appear. You can even \
clip along a custom normal vector!"
}], "Text",
 CellChangeTimes->{{3.9124455171566877`*^9, 3.912445547501302*^9}, {
  3.912445609614478*^9, 3.912445620988151*^9}, {3.912447048377124*^9, 
  3.912447097979877*^9}},ExpressionUUID->"d7acfd83-2905-4c91-8de5-\
560bb0ab3d78"],

Cell[BoxData[{
 RowBox[{"Image3D", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"maxCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
   RowBox[{"Max", "[", "maxCube", "]"}]}], "]"}], "\n", 
 RowBox[{"Image3D", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"minCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
   RowBox[{"Max", "[", "minCube", "]"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"minCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{"Max", "[", "minCube", "]"}], ")"}]}], "*)"}]}]}], "Code",
 CellChangeTimes->{{3.8963316730691643`*^9, 3.896331746094306*^9}, {
   3.896334624808174*^9, 3.8963346560064697`*^9}, {3.8963348102956*^9, 
   3.896334818678288*^9}, {3.896334880560091*^9, 3.896334900623008*^9}, 
   3.896415066154051*^9, {3.89641525094273*^9, 3.896415289726448*^9}, {
   3.912445463231304*^9, 3.912445464626943*^9}, 3.91244723400909*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"4a151634-84be-4917-bc9d-83c658b41256"],

Cell[BoxData[
 StyleBox[
  Graphics3DBox[
   TagBox[Raster3DBox[CompressedData["
1:eJztmzFOAkEUhjeaEAsSEyoqEwsau9XESnZjrKhMsLSCRG1AEygMVlYegAN4
ADgAB+AAHoAL2OsBnJfNKggx8n/MEBIKZXeZLxln5t/33j/jYfOhfrsTRVF3
z/2qNx7PO51G76pgNzeN1slxa9dd7k/9xMWLalwcVyu1UuKuk+pbN6nU+slw
MHD342TUnrhnH0mzXEhdm/S9d5AOB0fp/eQ0VTn7VDm7Vzl7rnLZ9xpn7VTO
2q+Ds/6qnI2TymXzo3G2LlTO1qPKmQ5UjuhP1ZFrn39KnN2rXDY+KldKVc7a
qVw+j6E566/KZetN5fqJytm6UDlbjypH9RsyHhEdfZ5dfvMqZ89VLvt7Nc7a
qVw+j6E566/K2TipnM2Pytm6UDmqXxJ/Q+V1JB4RHY3a1zO8ytn3KmftVO4n
Dw7LWX9VzsZJ5Wx+VI7ql8Rfkj+HqI9IXkfiEdHR0+vdHK9y1k7l8vEKzVl/
Vc7GSeWofkn8Jfkzq3/9+gykPiJ5HYlHREduTBfyKpf3OzRn/VU5ql8Sf0n+
TOpf4l/59OuIX0DqHJKfkbhC9BBFz3/yoTmqXxJ/Sf5M6l/iXxH/eau/zdZf
s/yy1eGG69DH/hGJ+yTfIHkOya9IXkd14JMn7x3yviPvWfJ+J3GFxLNV78OS
+pfU3aTeJz4DrY9oPPHJk/qX1N2k3ic+A/E3SF3H/JzV7cMS/5n43tSvoz4D
zct88iF0tIgnvjfx24nPz/YXVnMuaBn9/d4PXc4/7q90/4j63tSvo/WNTz5E
PKI6ms+f9X1nst8dg30+VX+VqfM5y+ovnjoXtKz+qH5J/CX5sy+fwCcfIq+j
8YjqaDb+6ue+KuC8i6q//Jyqoj+qXxJ/Sf7sY//oP7xPv476DLQ+onkdjUdU
R1P5s3zuU9Wfu64SnuifxG+Sf5P6eV37R4QnPgOpj0heR+IR0VEM/v/hC5iJ
2c8=
     "], {{0, 15, 15}, {15, 0, 0}}, {0., 1.},
     ColorFunction->(Blend[{{0., 
         RGBColor[0.16791, 0., 0.301671, 0.0441387557208916]}, {0.1, 
         RGBColor[
         0.22307159999999998`, 0.02430488, 0.42178180000000004`, 
          0.13972488014880244`]}, {0.3, 
         RGBColor[
         0.2917374, 0.11413975999999999`, 0.6482166, 0.3308971290046241]}, {
        0.66, 
         RGBColor[0.26544316, 0.54154952, 0.92275724, 0.6750071769451031]}, {
        1., 
         RGBColor[0.772061, 0.92462, 0.998703, 1.]}}, #]& ),
     Method->{"FastRendering" -> True}],
    BoxForm`ImageTag["Real32", ColorFunction -> (Blend[{{0., 
         RGBColor[0.16791, 0., 0.301671, 0.0441387557208916]}, {0.1, 
         RGBColor[
         0.22307159999999998`, 0.02430488, 0.42178180000000004`, 
          0.13972488014880244`]}, {0.3, 
         RGBColor[
         0.2917374, 0.11413975999999999`, 0.6482166, 0.3308971290046241]}, {
        0.66, 
         RGBColor[0.26544316, 0.54154952, 0.92275724, 0.6750071769451031]}, {
        1., 
         RGBColor[0.772061, 0.92462, 0.998703, 1.]}}, #]& ), ColorSpace -> 
     Automatic, Interleaving -> None],
    Selectable->False],
   AxesStyle->{},
   Background->None,
   BoxRatios->Automatic,
   Boxed->False,
   ClipPlanes->{{0, 1, 1, 0}, {0, -1, -1, 30}, {1, 0, 1, 0}, {-1, 0, -1, 
    30}, {1, 1, 0, 0}, {-1, -1, 0, 30}},
   ClipPlanesStyle->{None, None, None, None, None, None},
   DefaultBaseStyle->"Image3DGraphics3D",
   ImageSize->{345.0679272319402, 350.48585202455183`},
   ImageSizeRaw->15,
   Method->{"ShrinkWrap" -> True},
   PlotRange->{{0, 15}, {0, 15}, {0, 15}},
   ViewPoint->{-2.9353056314934878`, -1.0789785073393152`, 
    1.2922020857522396`},
   ViewVertical->{-0.6242164435920198, -0.6586486316638882, \
-0.4201616493168059}],
  Raster3DBoxOptions->{PlotRange->{{0, 15}, {0, 15}, {0, 15}},
  PlotRangeClipPlanesStyle->{None, None, None, None, None, None}}]], "Input", \
"Input",
 CellChangeTimes->{{3.9124469007662783`*^9, 
  3.912446900770895*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
gk5L46WrV3eEHYzXOYOqa/d0IcNRabseVckQsmdveBArUWkqc8p9uDiZr2sb
DGa6vLPMC2o02dJZJtpBvmdq3MT1RNnmHp1qCtVJvmft3VT8rsPcwC0GzbaO
RJP6vUT72EDnNoOcW1uNWPDrSDO1ZsErItJU1NVAcYeZyQqzzZ7uM6zVL6x1
pjDtUmbs15b/mVJXVF6mT4wKH+WKYFEqWLDweMfxYFVbstKqQoMyVxbQSh5V
gSOsdNRVtlJGleNnVwpTR18uSB11qSB19AW85jzWWazTsNYT+NlRPEfdXX+E
lZp219zE4eTsyt11IaySdteJuD8SR9pdB+bVHfpQr8Qh9+UmvtYnN3FId+zG
tLum5sQPp3qtO7mRPsl93bqFhZuKQgXvPgkDHY+1Aka6AxfD5zjfGyzedjAQ
3HEi0GfHWcD+RcA/Z8u3E1vexdnyvYItS5/3fkEXpb9LVJKu4Ye/NxvpU1Ly
9yv3M69B5kAm1neMuaeabqWZ+lQpQ+rgJPtz6rFRk+ZIjTf/aOsBZVf+iR5Q
DfXaE9NkdJPSVjFXGckyNa3Z5jy9MLz8z2SutNeGbbOmTvm0TNHBXutorj7D
XBuw/oYNSokXG+bqYabqpbvEgQ075Tu0zNeyWDU1uVKmI9piYCJ35JNa+oxJ
dJ89RhGxyXF65Zne9E3MKAkbuuZGLULQaiirqsiwam8lSyxV4BaGPfoqpXm9
5fRYYxj1mMt4+sWi1LEw6pJzuH+mMKXkpLLt/u687TL/dwco8yYc1+K4DFvu
XBjyVNBjbLtDyf/Ftjv0cSzadu+EcdO2q1aDCYN+nN22pV23Rahg831awbb/
wv2dhctmIy6bD3DZfAv6jF333aMBbcepoGnXFZT5TlDmez6k8LNBmf8iCjTo
Epa7rokyOyRvHfWDNh0v+a3W+SQW6RLP37bl+VuldbzNnmsjmqhN/qg200r+
5hSaVvNHe7iOMKaGoSXblJGLMaZKagcdIVMR8t6JsUbbD6twwqQjXOqlLC4g
yjS9V/JoLqWnQQzCriOUJBIz64azmUnP4nYdpdj1DJMpBxkS6OHsWPdwthzz
kCmVUCyiTWGugDWirTccmchXGj8WSdrMk8Nkux6/Yb2G5Xq8ZLtkt2NAl3Fb
Abu8ih+WF9UvuVJUfyzWuEsw94s4x0Y8FhtxyWk8j+z2GEz+MOwWG/FIw81N
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
2heBwJeC9U/E+70J1HgJVIC27L/g9/UuTBnbuThtzHXFaeOicxuXCuPuz6l4
ChznYq3z2sdCHdePgmEvxHa9Cdv2hzDwb7XO6/fhCjkMZ/okrhwY9+aLwfzN
V3A1XQ2Qccttu+/OalyJ1QFm4Lur2ZUptm3an0itaNKImGJnDpovNdXspPmS
nrWMnVk6M5Ghq63SZNDM2i7tdiH8kpNSHdWbcoyd3irtV76Fqx0LnxKdCqX6
2szG7Z0Ka83C1RIJpV1hjPOUYUfxdWxt2xaajJtzcTJrd+OOdEhGM+P2Mxsl
a54nLJrpPnGbwC24iVzCsokA4OVmF90QpPgdtnnmrStxdMXQs1h+zJYaY+kx
c2osVmky5SAP1619UhSZfKSuSZlSbayp1cUZUwkGrtX4ia8L4ycvfOxJeORk
/EfAt3/HVg0vfNTPMPAfsL7G+WfYwj/E4+8BGDbD4MsKUseshMHPh8FPg/GP
wVY+BO8zEO/7YGFayZ14PLcwZVybQPr45IKs8ZTDuo0b/4PsNot29ta9u6z7
Ewz/ZezsU2H8q7F24P5ntLMHu2w4ABZ4DFfWaezu57GFXNLytjAAAGOswAUJ
AHjPDgC0u9+Ni/mPYnf/86dCEdWKE1cp+pRpbDXjpXvnv1i1JgYIqB66w/gi
10ZRQiR2jxJBl/0SBY/n0blo7vAzSi82+1cUr5zJXp7f78k2HHTZpE0KTB6x
TLLsL5i86ozLCZa00etwoGg/b9tl1nxqO/j+HqO0THT1wc3m7+SDO5l/hGH+
fPkNBh9jMHjHNm4LpaE3nhdBpz62gSfYzJxewXJnavS9mVnGYs2f0YY/m8fg
eRyemT4TtqhiFkW0wkPyrsWUzPPXez46lYZEmvNorIrLWx3ImA5yH8iYJsx/
MiP3zOqbW60eFj+hHCS7nFv8hEvC6s9jnYXlnxZWfwwIcBiWfwDWDS991F4c
v8f6Co99ivVBUUrJdlCDTbD2tYWp45bC2mfhPWi7fwPHF/E+YrsvCRWlju+U
nz62YWFmCZUUe4TJ/4ubfGLvHuvywfIewRoJk18Q7LTubY2Cbp3Wf4OrZF+w
28ZDuJJOBInM9wKZz9t8Gas8WLD5Kifz26twQZKrrpo8Z6S0l9GFzAm9MPn6
dl2ozeRriKSLfJlllgU31Si2dTtKQ2VTRtKYTbWMtHBSrqjt4YaY2sMp8tBo
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
iGDKWDmUNrTX28x4XEmRUgoVI2f/MIkxiwFRJkpmsCLNHKc1y4ZXh1qvcEMY
CrcyhNFaKj5Vc/hUhDBNFp4PNllwBghyCjZ8HDZ8BOsA1j4gCtUWfhVqsvAT
2PT7oWZLtoIQrQWaLMJ7UuPpN/D+1LL+gWCrZUWh1kta9W2xLPKuNkt4KtvT
iftT5GGl56YO7tirzmu35tUb8mBe0msv5SW9OTY/eeScwpRRawpSS7YVpY3/
MJA+6atA+pSfAukUTBZpqKyZnMc0Ih4zj3jMZYPHLAKPWVpJ2W2NEKYdocxq
gTIiqEzfKvOpNpqvGwfZnlk3vMusG77XpBs2lzTZ0lThSpr2GQUKL/4m2jpm
med9S93eyOO2kiZCFQr3yMbXMvxDKHSrgjpMMewYV66Fa/WUdK3iFddKDtz4
IVzLfBvMyFoFcxsGE8wID8vHbuOMqLOtwZwlHS7T4JGEM5F03ydUxxq72UHY
o3ejE9jjqW/2zNxUOSoxqTFFvlUv7HaIJllmjLKsVpcNMXp+yzEOHWFlHr5w
lVO8/sG54tI5HM17c8eJGQFC7LdCVlAxTNFar1Boi7eKQtANBKIQX1mmIwrc
o8sCUS4AUc5pTeaf4bLaBcdgr4e41n8hdTr4Ds/5EvzmIyASNZem8ZkrYMM0
aZf4yit4fEDvFktvB7p06tNiJfEVoYzxdGS3N8T2zRzcoiBheF6vesPuzU0c
9khu4tCX8+oNL8lLGj43P3nEmoKUkdsKU8Z8BBfpa8DKT8VpE/cXp08+BDfp
eDBzOpVmnoPHxtwiISHkcELeXutllRrcIu0GB7eoA2OdICwubpG11KmPLp7x
8Jhmuk0F7CigMdchuNQ77bWK9Ci6zLVwzV3avBzXCyXl2B5CCtmf4e7JpnIn
fWSPFNAQAjFB3hvHzO2iZCRZooltZA/jKx6bX/SoUzsG1S+KrW1RghOc+OnW
x5yjKHM3W3NY2ROpExYKxARENaVc9F2SBxXaQWDT+z1iP312WoGIvvd4g9rU
DYMpLnVRSpTae63hIJ97GozDlo8FppXSzc4yj+5UwhDpFovmYZlI546bDLlk
Hj7a/Bb2dryu6TBrzZVPJMN4Zafo20vYRMhEy6PCEyc7lNwibW3LpeUgLFdg
1wRPFwE75wFDZwFHp7FOaE0XHMV9KnX8FeTmJ635km/x/M/w+t2AI5qosQ5w
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
/iQH6nGOJxocfpvj+QmU5QgC+YRH11jhoOSfJCIZKI5lqG0SRCXdaw2/r4yq
mGfYELFPY3m5XqkOBs0sJ/qvo2tJokw8A8KFHIkMDAEjabNn5NESu4XCAr3y
0/RQXJZzasQvZC9/isg5hax5HL7USFbaPHGdV+G9E+syvC+wUCF/X0nkj2Dh
OTjOwHEKjp8B947AcSARX7wLPt8G+Lchmfx8JTx+UaLjF++Dwn4Z8HQqnO/R
ROflqXi3ZfXjt33xG3keuBsK4JosHgGjEbAT/EiTYB8cisOBOBTA6IxGAby8
ZcbgdYXRIVvbEIMLGYA7Rtsckyn8VUPCN+0CmQupPqMMyF45IXsc/ojQRWML
uqFfxtgXW+hS+DPEvlybZuGbYniRB+E+SxODIHnnpbYHEb5I+FzaG+YoBHvV
hyR0Q9LQ714x9DtFGvpVR0Xsgbi59kCcSwBMhtP5IvyAPPzFHrSzIRDgj8Qh
lO5B/Th2t1Sfy1Thz1vYSj1iwmddehrDtrOdvlss3TCTI2BVJpPiJQxnI2Aq
msW8BaLAmNC2zg6x0yiTxh4ja+UfjB0SU3I/Se/KlLNZWUgXWT2M3oGqegQd
jmlHt4QmvbptMlbm+uQuCbqinLZstmHKLyJy4JFSoyTbg/m573miz61vYHxL
K5J43PI16398QfsfhPExpEt8fhKOY8nEF4fg2AfX70/J1OebAVi/S3T8cmni
5iUfA1L+Fc73PPwzR8U7L+uZ7Lz8ppKuX4W6d//eup5CXYhCXaTI6oMJp5hu
ijoXE68G3xTshx1fSec+hjoXO7ybWmfiGNzIfW2zRuEIHNb1TmNND1geZXg2
xD1P9CxL9hO1PFc9a0p5kSzPWM8zzfqaIg3aGyIN5J3j8r5xeclR79VqnOnD
8jpeObFZp3fuepbP/HqU88gO8pnU+axNxFlS5Eu28D5L3d1b9GWXStAVx7uA
InZBZFezoY7/Y0dpIKVp2UgaLfsjL81xQpepETqNMI6wOyLkH2E8qWYNHLyV
N5YGSb0QRrUQiMxdYEe4DIe3qNP/7OwCI0N0CmSJ1rGN60HVYe2X8wkf2ICo
98B6FfV8cl/YCXc+Aj8hz1Wefue4scMEqC93Mkzi0Rk8qsB5to2y0VPOIrzd
swdiS2VK4rwErdTKSHxxHiDtLFynp+H2BNweheNAIvXFbrhutwOMfg/PWZW4
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
IlC5MBDcdgOfVoDPyUMZgr7nQdFTQOfRAJtseud+7L+FbITQIpzzcX0i9rQC
xjtw619Rn9/TJfDMN029vb9RUjl/32TbVp0Dbx+hKa55Kl341p/Ct+5zNmJE
vUS6/lYLzHxrqX+KWBFL9E15blKe0T4Wcxo5eVFeMeUtd6xdYk31dxw6kL52
wDq8S3TR1wcA8u6jiZy7NF2UkxUm/BJtLHlxGDI35+mjLH6GmadtIuev4O4T
EqKdw+NK9JhL+OV2Z1xQjHdei5HAi4/2xJkHIGuBStbUfVSrnJxec3pHYrRG
EObbyQ33ZsfFVAVcHfD0oEfuPc/72ziG7dwhrxTtkAtS8jpLvFO67o4zdkVZ
7wiRFQTjhH0KhKWWPaKpizhKbV7MwH5rM7DbuYENbC1BQcWQIhzfDAS2Xcf5
fNjuXLD5Kgq7FKD1sZ/bfQoYFCz9Doz8RuUspRWp5uK6YOnbkJcgT/ie25Xk
e/obr0zSegna28f+4H/vWJa+aF6+7324yh+TqwwjS0QdpC9fRwSVBmf7jflY
HFfLddEB7ISlD5m94dps3zKnejS8ZEX0IYvqiMK8ZYcx2EYPb/g21c3Uhmxi
zRYujj3BgcfWCQ5UZbQEVTuDlp3XkJCdxDaRn3tUF0Fbopzo620NbquaVK1l
NdHiGZHMulNjOT2Dr/KY4bKgveIS3dmsyXDuC1f7X9vWJIc7PpbD7YkZijv5
2lFd4g1/wmUYXtawVsnsCC+1wAfMKTm9enq8qi1Ntt3sbe7Qesa757Yjkkbw
m0tgG6NpQKbpM986uMBRNrQU5ZSgxCKUU4jjG/iOAkgeruXgW67g3ov4lrOw
zSfBwiNgJLVJ0ar2O7DfoPbaSQydg2vj1ed3fw7WvgWXuBfc486Aa4Ng772K
j1P0LT6Uui4oSrOxfeN79xj3g/97otz7CfeDeY+xS5QI4stCwhaKfiVGA5RO
z2elEVWUlwqY0yU5z5/Wx974JHqK6SuLi9Xt7fOmOWWfeTftZ3YSM5/RvaGo
bHS2aUC7WQwoAb+yAzPj2BbnOq0xzrnYNkFnKWec3XmuzspKiHaeTWYqTm3d
kvccZ7BbMpvxpsmU+f0b82KWv3edcgfn2fU/OM9Vov4CWwc6kQkzm7lsiTCL
66w3kju1k8XrX+WzDBzls+PzKfKk8Jf73hHVt9VFxFRaRciCwuiBmtvCuD+s
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
R5tt//+Ojb/8L+PF6w8=\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"cabde1b3-64e9-4f2a-bb8d-089c9750c524"],

Cell[BoxData[
 StyleBox[
  Graphics3DBox[
   TagBox[Raster3DBox[CompressedData["
1:eJztm7FOwzAQhiOQEBsSb4DUvgBIbDRi7FpGpiLB1BapDIiNlTUP0z5MX4ZY
xarl2vH5PjcI0QFaJ/mb1Pbn/+6SXj29Tl5Oqqp6O2//Tabv98vl9OPhzDSe
p7Ob69lp+/bC+RuOm7vh+HK0nj+O2vejxWbVvt+M2l11u70eN4N6sbmtm8G4
bo+pN6t5XVWfbfur1urMq1Zn2lqd2a7VbffrdOY4rc4c/xs6c71aneknrW47
PjqdmRdanZmPWp3hQKsj/O040vLbZOvsq/0eOTrb3o2zXGe3237M0dn9dhxy
dPa4FE8p/nJ19jrd65fqbP+4/SbV2XFxxytnXptXd57k8dCoOaL8Uj+iHGnO
7/d7Sufq/fFO6dy2P89SOne7P79TOnd/isOU/8U47OLPtEPfQ8KfaYf6T8Kf
ae+vmzL+tv6r4YDzS/yXxnXUjyhHivhZzKGvj823kM4/f2yeh3Rd21M68rn+
dcXWkxR/ZnsojpDwt/XfvHlcil/ivyR+pvkRjeuoH1GOcr5/at65vrOv757v
uX5FfDKkC11PLK6W9UNO/leOX+K/JH5m+S+rM9D8iMZ11I8oR/L4Oe07JN8j
eWa8/2TzqDS/xH9J/Ezy3xxuNPNHkr+XHn+yfpP4i+RPGo5K1EuP4/d3x+/Q
40/WbxJ/kf3kukh/0HE4jt//Gz/rv9p1g6xXZJ0snR+VjOsOMf5k/SW+QfyK
+CTxZxIXED/T8mfz0Nxx9/NfKX+xvDvFXyrfj/FH6gyl+S3tR4SjPupX0vOF
9NLrDOlJfYPkdVr+bD02lz+/DizlL1Z/TvFH6t4l+S2ZH5G4jvgR4aiv+0ek
3k7q/Oz+AnsuKJc//36olD9yH7YUv6XqdYQTwieJ64gfEY76fH6D3O8m9/m0
/K1/ns/J5W+Nngvi/BL/JfFzl99I40USp5L8iMR1xI8IR+uen5/UnM/V9/2c
KuWX+C+Jn0n+25V3STgk9RpSZyD5EYnriB8xjvr//QJ53pvoCf/Ev0n8TfJn
Uv/S1tuontQZSH5E4jriR4Qj8vuHbxZmmyQ=
     "], {{0, 15, 15}, {15, 0, 0}}, {0., 
     1.},
     ColorFunction->(Blend[{{0., 
         RGBColor[0.16791, 0., 0.301671, 0.0441387557208916]}, {0.1, 
         RGBColor[
         0.22307159999999998`, 0.02430488, 0.42178180000000004`, 
          0.13972488014880244`]}, {0.3140914351851852, 
         RGBColor[
         0.2877702100694444, 0.12918308854166666`, 0.6612564195601852, 
          0.34900868055555556`]}, {0.66, 
         RGBColor[0.26544316, 0.54154952, 0.92275724, 0.6750071769451031]}, {
        1., 
         RGBColor[0.772061, 0.92462, 0.998703, 1.]}}, #]& ),
     Method->{"FastRendering" -> True}],
    BoxForm`ImageTag["Real32", ColorFunction -> (Blend[{{0., 
         RGBColor[0.16791, 0., 0.301671, 0.0441387557208916]}, {0.1, 
         RGBColor[
         0.22307159999999998`, 0.02430488, 0.42178180000000004`, 
          0.13972488014880244`]}, {0.3140914351851852, 
         RGBColor[
         0.2877702100694444, 0.12918308854166666`, 0.6612564195601852, 
          0.34900868055555556`]}, {0.66, 
         RGBColor[0.26544316, 0.54154952, 0.92275724, 0.6750071769451031]}, {
        1., 
         RGBColor[0.772061, 0.92462, 0.998703, 1.]}}, #]& ), ColorSpace -> 
     Automatic, Interleaving -> None],
    Selectable->False],
   AxesStyle->{},
   Background->None,
   BoxRatios->Automatic,
   Boxed->False,
   ClipPlanes->{{0, 1, 1, -6.}, {0, -1, -1, 20.}, {1, 0, 1, 0}, {-1, 0, -1, 
     30}, {1, 1, 0, 0}, {-1, -1, 0, 30}},
   ClipPlanesStyle->{None, None, None, None, None, None},
   DefaultBaseStyle->"Image3DGraphics3D",
   ImageSize->{345.0679272319402, 350.48585202455183`},
   ImageSizeRaw->15,
   PlotRange->{{0, 15}, {0, 15}, {0, 15}},
   ViewPoint->{0.7476874819186882, 0.10952416869897241`, 1.8517472521521101`},
   
   ViewVertical->{-0.4722714408614868, 0.8703907912525777, 
    0.13921047607607284`}],
  Raster3DBoxOptions->{PlotRange->{{0, 15}, {0, 15}, {0, 15}},
  PlotRangeClipPlanesStyle->{None, None, None, None, None, None}}]], "Input", \
"Input",
 CellChangeTimes->{{3.912446965137061*^9, 
  3.912446965141261*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyEfQV4FFf3/vx3k2AJTpAkWIHitFgCxFdmFuoK7fdVqHwFSnEr7kWDO8GL
W4K7W5FCcXcJcU9W5v+ee+fuzoZ83y/Pc2Y2u9ndmXve8573nHtn8v73/X/5
qef3/bv98H1tue/3vX/p9kO/2tZeffGU8f9J0v+7ALtaW/LBY1WS9JsC2khG
gySNksTPZb7L5y+VbiX9XKGZ1K1EPamndIW/lMe2vuXwUmVYjXelrmRlQ/En
2rtz2LYUfbB/E6l7tTbSd8Gh0o+1w6Rf6odK/6F9pbZSD1+8XbrE35LNtn7i
LfTJ9Bb687dbS10NzVr5fScZ8et39GnseC7yd2axbUlxqIHNpV/oeOq2kbo2
aeP3bYt3fbu2bOX7vaFta98fJB96qib+lA6fvuw8/5BMti2vPyn6q7dg9PX0
AfT+9m18vo9s4/NDbFuf7+kxfTj9DX0pfdpf/NPS2bYSPUOHVfT8G7WUfqTz
ad3Wt2t4qE9X+jRzG5+uCj65Y2vjjzF4jr6tSRvpJzqSMs2l/tI5/tFpbBtI
Hy0OVoyT+Nh32viyj6YDpI+VW/p8Tx/7fkvjDx+3NP70IR5bWvv8SK/jb39q
0LZEj6qmMr18oqVRZ/i3pLJttaJjSkMixpS+gQ6STiC6tc93dPDiGz7DN3Ru
bfzhq1bGH+jxe22NP+FIfuoQVuqXNu1L92oU6d/bP7pK99P821LYtkY5bSCL
Dj6dT9HBp+OnbxPf9HVLY9dv8W0/4PefWvr+9F0b31++bOPX/YOwEr9aQ0v0
jOng37dFeJm+dJ6n+Le+ZtuawklV3pW+p5Gkb6XR1J+n/lvpPN/TRpHOj771
+5bGH39s5fvDrzjKvm19fuodWuLnbm1K/NI1tGSPr8NK9vy0fakBSniZAe3a
B/SvG16uD430CX4USWxbW+9Pgktx/gwL9f1OwEQcwafvGrt+gXP/d2s6d9+u
3Vr5/vhbG98f+2O0f2/r9/PwUL+fse/WB+PQvX2JXj9h9L9rX2bARxEBA6Mi
/Ps0jfbvT544zo/mFdu+VVo7EvKGAC6Nh/5IhN8JXcLvdCQ0JnQ0XWE9Wvv+
2Bs2CGMytK3Pz2NC/X6ZEOrXbWKoX/fRGJuhYSV/GxhW6rd+4aX6dQ/379c5
wr8/jVObqNL9qkdU7g2CWCgd5Yf2km3rEzkUBxIaKD0c9cAXIKHD+g6HCIB0
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
9gJbvIee/Txgfks0n//UJuaAZl2maMzyhuik+GmBo02NEBB50HgvhmHTGFJx
aPb1kHFJ77m1Oqu1RYrr+Jc33MiOQnrbUy22LqY55760Tlsiq1+BoF+VTZfW
aX0Pz7XDXHJ8C8nRc30GWyfTb0umOgS8TNxM1eLEg5yf553Jc627bnduvGXP
3fXIeeRkssoadAM4nvktEmq3Ub689Jmt81/dlS7nh1o/PTvL+v6JZTjEDbBt
SCc7ge0zwOV52BXFw9GEZVSL/11/WImfCc9Whmc7zIHfHQCjA5zttHXY40RV
SXjeQ0tjqfchMB3mrhuLYPmAWHEUe5BacKaDnv9DJO6bRHxNKkXP18XJ7hYJ
2oydaDz7Mtxqc8es0qfCSLvhJPHSOwnuWWcWCk3Z3AnX0IKyt9Kew54iYGsp
9mp5j7QpSt56qAdrfQut58FIWzf5zFW0j76NTWYUvZctJEPc1fAadzPH/R01
PSu+VooVGbXdqzn1AoRXlL6eYrrBehFfvGCWGvKopuVJ4vYebYpMleiLSFoL
9tUF7/UN7nk779U2QmaL9WDE24Tz/kx/cHyP35/DZPZUXkSqSy/muzbedNi3
3nZkHEtyLYTU1mDOL6kPKmP99+WOyld//aB0/muwtcv58ZavLsRZv7ywzvrR
me0oBPbJnU4cxtGeAuT/AWRvQmbchd0HbB/DqDGS7JEiRN1Hstg/R7Yc5lLE
ckSj7qMoHgF0yc+B9zsQMg5bzCEnZLjT1n4vQd4IsO+hIvINiO8niHMFYtQU
CDO2xu4QuUxDOf1mEGxObxU6nLimtcbk3hpczLQUaaVQ7idAt9TA3paattTe
2s1Dh4WNu70oAoDhfVtJQnhphvAK/MbPAnlvEDmvDRWvTp576lAv+otM1GzW
4ObvueDF3RNf75mqrOUthcS0nzedr/bQOW+IvO0pm+ngG2nyhwcxj29Kd2Jl
mbguX/C5vvsn5qo/L3JhoX7NOa15HP7Ua35aTLB8G5+u9tA0yeDtmeroPdkY
jGlHc5FyZp/KU+eezlPnnM5VV/9TQDgv3HHP8RgYH3gy2dmf45xfUV2dcB7a
sfN5wvkIucv5GZYuFxZbvjy/ztr5wl7rZ2ePyx+dPgOKvyi/d+KK1XbsJo7+
gSwfeQKsPsfZQJ4cec0wbjmcIVuPZoHGQeeH9PKElpxjW96OOGEYZzi3HnGS
2UzAetQB3r8mgLfTcbkAOefyN4F+6A2gw4jx8FwZjda1rgq1xd+QLIluCc5X
pvl4yJobKzcJrC00yBPcid8F5KkzGS6yhtaRfFcHf+3jbFzVN93m5yF5X3e/
UPbMoGs1H16rvaro9KTkzepe8+Wc1RnZb/HoJ9GxKcU7NqQ73hKaZuX/zfN1
9DyPGsezck2wu4gA3f25m7nXWfFWFfsPMbvp2MP3SiHcGcT4Ubq24XvaIqLO
3tc28urz7hsrh9id5mZ4rwDus0k33Xg4RzRU1JWXC/Hdy/8uwJhCqbs237IX
HHjmunYqRaXWodSPhwO/4LtmU+uXfwna7wuFQ6GwGvS/We781x6ExzHYRfmT
01etH5y8hQC+izTwAMH8QlaOvEIqeI3QSFGsR9MB9Syr9QjvrIjq03qkAK9B
2Rx2qxstFAwUC1IpbI+6AGGXEnMIEbDfM6sTiQjBiCEKeMVp9Ohzb/AbaOvL
XijFA4cGO6wo1btFO1/2YdDm1JttlypyNwpB02YHB7cAewcN8JSDaK9vyQve
55yPz6QAsnHQE/kzjQPZUdq9wknM9rAJT4b2P7UJJDbxadRmPhsVI2MMbrZ3
8zybW/JAnlULRbvxOnnzv6QNL0RLa3cX1wSNuze6RSP9bZ7LB4g+/PgqhXeL
XEweTdUUHPeW7u54nhLV+9ryy94l6gDvJUp8jj3VPemj7yKO0JWli8/nq+uv
29X1N+zqzocOV+J9p3P7XUf2sSQ14USyi8n6vhz4/Br0GiTrv7Z9dYFkvcgD
lAMI9IdhZxCbF+TO569bP//rLgLgofzRqcc4/GeI3STZdjxVsR1LB/gzEQRZ
2Odgn4d8wECPPZf0ADoh3kCQl4xOngOAeMoRbOvjUgj90YdcMl2PqtWh5CAd
5/sQ4H0J5yUE01OBGqEJ+KKtxSLNFu6qQA/Tt9BJd0Hv7XfrkC6aPvu0eNIV
CXq6FwtTgHpaRSVmTpuK2lYn+YFPP084aDNK2nV8voQ1A2vK+3ovjuKEzydQ
hYjncN/i1TLaKhnEVzTS9ek9VYR7xr7YbgzX8qW0UlXTO402ip6TDvpiMEty
tm+R4Lkhtqhj2+/RugmcqAT23z9JX/PeCammZ75I/H8oIn6xsL6fZyWUmM4n
4tdfeidajUMSstyl7OxTueqqKwVE+Oq2uw71yEuX68Bzl+PAc2cyZBC1HjX4
j/aWQV2ULkwGTUHxIbh/B34/iSMk+F+xfnn+Jn6/j8fPrJ+deSF/fDoJeeC1
8v6JFOSCTER1tmw7moO0lmdVEALKsQJZPlaIcKCL2QF7X00CHXFLIISA5Oui
13ywZeGg0fkhI+N0PcMfoqaC+XBJNqKlPYhkYl60Gdl0v3u2SKwzpSubiJpF
jRq2y5vaI+ie1JH7KJ404SVTAU0CTN+yd5cKunhiXE/819SNelHvaqqnyVY+
S6rrYxI4mY7mffuNTNRoq1v4nrVlWP/T6BEzAR4UCmusrU7QlxN6ie9m+gpF
+uikudZ4CP4NTeMmeM9lDC0SKLqROJvwdRRFl1OZDxe5WeUp+jeonlX74r/i
iQkk/U1QqSNZpLLVX0fy4yq+QlqsXoHeZ3S/4Fwegzq0jbrviVMFxbsAc/uJ
FPXpyWQXm/fvw/E+itO9KG8F5c+1drmg1zlE+YT166D9uxreH8tdLryydj6X
bP3kTCpOK13+8GQmUkCO3Ol4rrXT8TyUB/nAfQGM8G5HGjA6sJGMDkU+6mQG
qBsY1EtxqFuP0N6jAqnPRY9p9PBOA3XADMQbtCFpzzpiFCAWNs5M7pRiwVCe
FwYR2izT/04D3J/vatTP1mfspn/9sIdYM3wPZ33G+PtFNBgoHEgSiMnadtqK
hNai3+MOCk9I+OoTgQgJ3qLnK19K8qWjrFbYxvsj4j8h8Tjx8Ygdn6JzAEZ3
AighGF9kEi/G1y5ZLKtf/a+71HQNnxJ283xRiaPJG6Oe5inusfX3XOan/5dv
+qsERCDQ7Onn5/hVArU8VwkQ5VMcFFf96rqZ/CqWNPfqbLG8kDqY7glU0P6K
y5z2t9yxq0dfuVTg34lYyDuRrJ47mcw1f28eC/yiwBq1lc5u6UOtHuL+ZXLn
C+D9C/vlry4I7qdYEHHwjMVClwup2GcgvLOsn5zOtn50OgdnmYdyOR9ALoAV
IibsyAcOGKSPclQfC/QbRQBtjlK/msBPzS+ijI+0y846HTdSRFAOoMSpxYVR
xAVLDqKNiSBgyp9dYclzbkVtMmqfd4Yosp6A+bC1aMlpPqQg8ugfnhrK8VnD
aI9pPVa+Z+t0inzNG0U2U0giU3BtxNFbxtMifJemdhCcbei4Ej2dJLH8XGj9
ksVXvbzALsHTC+mf4heVIS2UcYcDKz2Kyh1vlS/9tzhIZGvqKB2Le6qLjKC/
PsHd2zxtIPhTEHytrbGlm83+cp3vaUWBaHX2875ZP91XSrQ66ZIZ/XJG/VTr
vDN56rprheqmm9D/D5wIAlUEQhaSw1b8LoKAX3gYTNNUlBBEr1MkhG0APAXA
XzCREO7h+aeoDV5in4QASMFz6XichffkWD89m2v9+HSe9cNT+SiSC5EY7HLH
4w5QgIMFAu2VYwaCP22OMc1D+kc+6l4Ux9D/8Wny0SdnKDLoOZEeiEtoKPF+
igeWIigxWA6LIpjMzx0I1Atk0aEtQ4j4H41+/u9sDfQiaRJPh0fi+Pfz6kmx
GIhheyPrTZXm3xClLVkTtbGmmHTpx62XiiYH3kv0Zfj1124IlcjjIFR0Wnfx
qtyr2t6mza814ZMJ7vkzkUF4hSAChJXHWhFS3IoH73xBnSihkOhPGxfpe76p
kLhA0lZGv5soWssGtv607BupwutCiU78mls200U6SYTIT1cNtA5dCtJWomuL
EsTdS4d6X8hDa20oVegvv9VdL8Fk0/K/tVRx264eekGpQiXZ5ECqeAEbdhxR
0otHyTBPmaCvlKlKXg70U6Us0oVIFbetetkkoqTz+QyZR0oe9vnWL87lI2IK
APZC60en7OAHmg3odNzw/zn77vg4yzPb+U2RZMkNQkKSbdm7997de7fnbktI
NgSrYKoBgyvGHQxu2AZM76bEYHoxEHrHMQGHagNu2OCOey+427Is2eqa0X3O
U973/b4Zmez+8Y36aDSa85zznKe8AApS5LPm5+iVDqCALOjlznBJy/MFSGBX
U69FgpRikZoXfy1794Ea4RAcYwU0EZGkPZGIjEo5x6iI4VImsTxe67UO7X8L
nM/TPlZfryRalIjj49dz0q6ojLB82ifRlOKnETtKtVOqQNactPIYPsf1f/Vk
/+MPAgw8stM0p2E/9n2tNEcIJOmSb6+gLIX+298ZedDtyd7Zt1S6QEGOyxRQ
UJxDWGXAK6iepqDSzhbVi8nDOrIZKNal/XfRsctIPTgQVOiLH6AoGbTS98WP
3eSVFPrhb/5WIIK1q7f5Dea9HvZ1syHacGkuqiXTjxOZvLampf1tIpPfUzKt
ZJKjt80El410/XxudftYQYoMHf3p93tevBxl4rB+FhdV4BTjk530NYgqcMph
usAndVX9lx6n720gpDXS2xZclRd/3UoJSBtRRBslIG1V5yzIUuLNSCFsnDkP
KJmX+D5kkhzeBoCcp4rqIh2hpiSsCq1OlyzhkwRQbsTmWjk8J8IxghROOtRc
xT9ISmrqRp0JNwrISXmCEWT8+4f4Mu8b+sgQkwRU8On/VMBIsVoswlSIGYRn
uu2kpBJYT/+mhbZ/nqUZh+Im8WPRVn8fy8AtUv+tVl//OTB3Gctid1XhouSn
6pf2e8xMiCOIWzlmRiCjDBODUZFmOvTN3bQZNZan/8Tc39elGfVv8jOQnn/v
bYZ/5GEw1ax6oe8bEuyfZwnDnCLPTNjKiYjz6xjL9Ar6KZz5utZjR82n8tv2
JNGCnziVW4XgwdrG4ouCBnzzYmOjJe3Tlzb55Hy312Jf+qSE/dgxgh+ZPPnz
U3v0W/zrqkuWoggB7IRMM0/92BWqxzYV1GN9lx4jvNTTxUxDn2+mq5WuNsrA
2ip7E4YuWAQcZSmSZIGjM89eQBDqOT/xY7qdBzDZ5Y+XstzkwkWCpt6CpCog
CReWEvRdIl/rtcivz7DE/sx5IaKSzt+KAUqUWyYsasv70s7xi09CyvllUBNH
m5LsRJI+1JTPUOhH03Z7xhz7nKumAGj/GSi3KDGJcpMdFspNrtDwT7/3cDKV
ZpASOCFy/CcecxUeZyFoSRuU64L6u8DdCnziwshKKUMh9dc27xRyGXwPC7YZ
hemoOEZH73seElaSaaF/dlMWuG9iqO9FR11/rtwU1rbtVA1TcJGK3mbfLn3z
t3Sf5Xftw2uAQIUx1wsfPUyfO/+hQ8S+MHot48eONcv47/pUZNxjixrbX1lN
3EQAm7m5TTN+lnFZeluzoLr9UQKZYktmX/7ynyrGbz+vYsTaEVUDlt1P7PlM
Vb/lb1ax0esU3JoqwZVxExQceKmGLig4cBOwZbgCNzG26G2WrjaimDZ6BrKE
sSyBJkfgyRFP0UWCDmKMgVaqmaGCSxndbfro/bWIuUuWpNg2KZMSaZ8QXwvl
R8/649gqo068w9MZtpApLd+DSsqvZ6taO30OwyfNna6psJtbPirhd0vkC6d9
3EHyr6+2LmHe79NqvPj/NdZIAvAocFIADv0lv/oUv8cZe0Gp3bdYuf7CKHqC
rtho25WQWMZnXn/ztutaSls/ubcBBPom4v4xKuKK8GB4LDTxf03K+etf/uDb
nX6hVHRmQEXueJCAisKVLmh5wglZGALjLZj7XZaDFux+Tx/hFr/BL+T7AjfO
8kbxk195X+DDndkksJJIs1e8ULziy7880j5a0CK92T/qctrQDRWV4zaNLh+3
5abKMZumVgxf+0zVkNWzqgat/KRq4PIFlf2XLyYUfUNY31bZf+kOQsHuSlFy
h6q8kgvZqPnM/hHE4IhHui3L0tey9IrP0qs/V3n+ohyJN0UOo8YLMzmf7vwv
YQ4AMVG0+HUk3aW2BNToaVGs/eLZUb7Wk7YpLTEKQko9G5UH/z/8jCEM6Dlj
TjLsoP31nK6OXWZHK5QRdvm9Zxf6TT2tqdD6rP79g4hUgzNX9YuPkw4dcKc/
RdXOlWsKFuVtNdPfvVsWB8TfGiCKBRD/oGdou6+ze6CD8BnHKHyOsqT/Uhgp
lNPwqHQKfzHzSeLvfXYTzkaGwzYojbvTS1boKNlqf0T3hK2+PB4O3Dx6mCcS
uOv1eUr+36jlzleYAGAQMwLu+sR7xs4I2Nza/rkYAZrh5JDhbDHf+CoBhjR4
nwpg/LJqzLZrCBT3l4/Z9GzF2M2vVl61/t2qEWsXVQ5etZQSstWE5o1Vl67Y
Ujlw+W5C9/6q/ssP0Uu9urLfcgLGsuMEgEISDSZA/2WMCroZsDzRLVd5yde5
yosW5yovoAuEcm7oic13s3eeQEydyel7SzBeqOpM8ZBiG7JUCAU/AnEHWJwd
T4G8WAvwUCx4AF7O0jh2jj6mnvMSzpfz7jSuk0PK+IW2pvy75TOuA1EKlhkt
JgeV+Z9xK9FpH+Elpe40QcCTRBfgIOpQW63m3/IL9uxbRRHROTTixI3mxmx9
DAanf4iaCcoiPUMf7J+kUhjFgmqopNIFvyerBGZR9ubmGWy48ldzYs5Y7DAC
qyDGDeNwTufBQ+0XB+s9R7x8NIkGWfrHX6uOGPIV8AT7x8oTQcqvPBFYyO0f
0WcUDtI4+8P/WXXllgsJBuAJwOF1yqPerRy/eU7luM1zK69Yt7xq2Jr19Hi3
VA1asbNy0IpvCRYHCNlH6G+poauOuON4JThiAKuqJoKKcER/5ogUU0RXQsMy
ICJH35qjl2+Ono5c5YWLc1W9Fvv83TIVRw1fJbX4ZMSQEiD0Y1IANOi2iwDD
CAJ3YNLK1ySjBNHj84Q0oZQwKZzptvWr6WDp0jkLnPsWvYtkAUHW1XyyX832
VvW/fRBMyvltPfLC5LINXlkEj2JxwIK2lSpsk8NbwkcRVzHLpIoZpjoOGdq/
532ERJmVZwwY5rz96x88Mf1HiGHbHFTkdZ4uAlfdlHZ+ML/+C8LhrwOS+FAC
xS9ireK2GqLvUp9mRAqJQQ+V1lB4YT3WN5vt9fxRJgjL3YGHqV808M6SqXPR
RNjY/sjChvbnlvk8fvaeXCIQT210VWtfyZUCCumy/eFpFaM3DCdeCDni48qx
m+aTsltGouob+vqGysvX7qocunoPgWM/XYcrL11+hIBRR9dx+qvqSWQ1Vg5Q
QAxgQNC1XBliAJAxYHkSgEiU0i1Bo89S2VVpMgevQqMEtr++TjkkAAhLi/j1
H6YXi4L0olDq/oWkF0VWenfUPT/qExgb4e25MTB5FHAnI4OgM7/2u2lK8Um0
S934Aa/VDkTRmb+0Wk1KXve/4gtt3KdjKlW9Nbl/pPuuim8pi2vlinlpPIFE
OPh+4Dyru+QaIz/yzvNPA+fZuoCVGfyymFi2zS/+TD4M/l+QPsTPQAqPqAn7
SobH+mdj00Hxpc/oLbHNkOz+zq5vf9BNuTW3v7Sypf1ZggBn2xukrWo+aaIA
Bi107VtwiPtNRgkMpMvqx5BKyLqHVo7ZDBg8WTF2i/HDInq7guCwnt5urhi3
eUfFqHX7qoavOVQ1dFV15eBvjpLyqyWuOE5/WSPJqCZ6v5le8C0EjTYhg2X2
lrVSmpFQDCTIM9JPYzosKymP4LV7ydfYKGImcJ8loTgqwQ8l8R5uluDENyaF
wCU+uwNASIJd7NsezjYLeqEg6sLF+MaLvkLuj0fTK26QRVOQKjGXPytjXJTK
69bxwke+hGll+59xtUDKMkXR7kUHB8roq043b6xK0n31xooDl/mDIKK7Cr50
N3pnWTPrbvLxTwOp9LNYE+V/qk1nCbxHW6JweSRIqtP/DW6YL2NE1ls4SEcs
Rsby6lh93foLYTtd9vxRt1gl7LHVceb210kjoc8WnPDRrmz7zM2cVysoMs7n
XRg0n1whyLjaZ9dV5eM2gyRuLB+75UVSS0CFkQSQIagYu3kPIWR/xeiNh0lN
1VIuVFc15JvjlYNXNtCfRtfKZkJGC6Gkhd62Emm0VQ0kVAxcnvAEkQIqcNwm
nhCuGy0TJQQFxEmBw0BGMdCfv8NOxyWW4OaFlOYPfWFKCVt86dnirDyj19Jp
Hdj4vphSlbESDZNG6H9pMROZfe/FAr64IrN+MLrvQuZWiUvI8QUrav7sI3zE
xRiCSToCEbWOpd8L1tfsYv7xEsVdTDN5vtCGd+t3xNgIH8/5fpi9CCQMDtZn
+atPo97WT2e1R/oruefEwSIRw4VPrMWA+l/RHhSbOzK2QGZt3qzNRQ+PZdbX
+h3CxhZW7DCDyWqFaLzFxiGbuHhes+l3CBSf7sm2zz2Ya//iQI7+hLwsAo0o
igdpRzkFWUQomMAUswgDX1SO3fx1BQTTuM1gil30di8JqIP0+eqKsRuPEtcd
p7+ivmrY6kaCeRNxYHPVZSuTAEKimKCwPBu9VgAEOQAgjfdShoVLl4v9dukK
vNKBHkFKf0FLCd5jQGQi/HBJkDSwzomJJufHajdKxOpQiXaB1lWiL3/hqlL2
tVjBnduh5esIqNSZTwDFr2b7MSqpNrJE+jSNdzN4hZdZ7P9lqLhOFPvf9QVA
WFuI/VA7/xqqso+CF7vsBYGJW2WTuWFjsf9d+VTAAikTr0b8VFylkBT+l3wl
VEuFcuj4novBOnRhXbixHNrWb1r3IYp9V7wWLfYFOy7YYLVa+byDQgP6ukdr
yYGF0lpyubzupcHkB/+7x1VbkT3fWTluy0MVngc+p9d5VB2N3byf3sdrvobe
1hFPHKPsv6HiinVNlSPWNFcN/aaZeKGF/qo2yrRJEV26IoWXewav8rS9hq0e
g724w9fIczBYdzYP5G/ziDANZbE/7V/434sV/AL/KL/Y5/29s+f7esf57kWv
uijl4/4lyNNxWyofM7hOcP89PuMqBlfM8cK3ekWPz+z78DukDILPnx5eDIrT
VQf57TWnz+li4f/02dHOMbzQTKyE4Z/T3pk+VTZR9B/cYvwhiCHWYlz1qwLd
lICqFVRcS/97lkVoA27KN+D+c4GaXT5KhCL+Kk87uePKe87zm44gCYwi4usG
YuYr6uK2zhtbatFOYrMZYZMucunfLm9yFAG9lPF6iROJBYHpOlJwIiW8H0Iv
hUk1cPIO8QD0knEEcLKd3u6mi7CyGRxRyzgZu6mePm6kt02Voze0EOpbK4d/
00aZRlvVkFXZqsGrCC+DVkIwXboyV8kcsULkkiCn1J+kzSUatGuuk9ZNIAmI
ApIId0wgRWJds9iyi6kkHcPRKT776PO14MERybz81/qZ86L4CRPt3lwJSQEw
GcZOJ2b7gsQUaKd0Ae2U8dqpk3zzWQF4ezpmw1gKw4rr6N8zuPzy0464xPfH
d/MGEejjX9RUsgr6LzrQSqfP9lBFUhRWVQiVbrL3H8JCXUEO8dm2VCb+d3Aq
onYz23lhvwqX5WrRLu7F2n7xMOsOeOScB7Q1scBEB7JuFOpgwIZ1be1kDzEy
/1Cu8dPd2a/mHpDekRGCESnc/cmpPcZtG0gYgBNrfPK24iPMtrfRFWoo8Mlx
eltfyRjZ3Exfa6G/prXyirVtlSNWZ6uGfZMlfskyVi5blau8dCXAMXAFS6jI
Cz3JcOnm5ZSRzeVrOYpAbPJbW8yOJw+wAiEzCbH8GhCRX0RAKbv1yYokMOLq
Fskney+O5iM95yXxggeZ+B57UMEFi/A5b40l2CZOAzdprpmUslRw9cKwNyxK
bIXww30mNp5Y8YU3xyzXMa70NRblp3S0ZfmMOSdFkvOAFHz9UAWanq4SrZmY
RSbWmCixVGRHSibMcULP7aezYo3LTDpn/tGkgwdkX7BNTad9bHDWbXE/kdFY
Q5fvlPcz4bbx5nK1dt0Gp526wSna0RjOiRRq/n1G27K0Rd7QteBwrn3eoVzb
rO3ZavrS1DfXthq6pNxx8o+qxu9Axh5XamAgWLprVamBgYCuqFIjBqoUZCVb
6INESSt9WxslL9mqkWuzVSPWEMhWA2Q5QkSOkvokUJYEyFiU4RXOfZ56psFI
ZaBR65Jo/MQh76M36ixBgKzBDln/DVAVe2KyRN8MK5njJCyVSOJ+wSJvMnPS
bkJOMJVIhW5bQppaOnntWKhRrCJY6lBki3zKbcBOAdVLsycjwVCEGk59HZLv
RlRdUbTny5vMUl8p09MjO/Sapb4io5LipxUbJ7lOrw9VKb4fyLcTclIAnv/r
m+V/psdX/vJTLxNN3FYoN4eBBeCxA6vCNP8qna0NjlULV0b1frzjNB+LFR7S
tquXdNBK6yEGIKKm3Of7cy0zNrXtfGtd26AXlrckhguApDRyCoxgo6dpBB4Y
wZbig55ATQBPmOIbgIieNjXQ55uYmsZuAnqSbfSJRFGWbrNVo9blSJVlq4av
yVUOYRAlgSK81AJmSRkITNeOXAO2uWIdPqfshFmDFN928gIP3zskYKqBTtUl
ks4YSKp9ZvgpE/yEZcVeQUEmLMz0/jqRdDl/0tFQkQHlwrDjq6BhLEAR5iny
LjR+wFy2C3RaoMwfJ4XH5IgoklAZEYkY7GIv7nDk2AaCbULAnOiffyj2WsYD
JQCLNTwHyZZ8xIQZtGee3kHXjB8qy2OkWDlRlF1X/wgdlD6xJUoeSgYne+b4
2br468SfSujqq0voTa8MKWAeXO8pycwD7yj7eRSuNn7oKSlmHgiiioiS2kFJ
uY92ZZveXNe65pVvWnBG1zABldhnp3bteVv1OT2m7J9YccvueysmbX2UHswb
leO3zKscv2kxgWWlAmsrAWZfpeRExkzGSl7zCbDa6GOgKpHMEkwTP8hWjt6Y
I7YBwnIk6HKVoKnLVklvjoeXQGKg8vVwZakr1vIhJwwt1KVwGKkcK5HEsweU
0af5W6EVhwSs5XKoE6Asqazl2l56f4WanyVBUeLpxLelLN/zTYtgOkY4w+1B
7BHzE85eEPWuL/gyNO/kdWOojdnWfsbf7TGaw6jtbHIs7ja4An8mfxPLf34i
jp62gtHPFvm+5s6eK35ploIfIHDdZyfmJOn8/Qdfa5KNAUKfAR25TQUVwel1
+MPNdbOuC5vrujzIoe2okdBiuMkf/A2L4cJHoxZD3IW29Q+/XeHp6eNdob7L
zT3Ynp2xqbX2jXWt70xf0pxQJIkhdzKQVF5+z4Fre0zZ93iPu/a9Un79zhkV
1+74mNTmssoJW9ZUXr1lMz3CHeXjt3xL6DhMVw3pwVrCyPHKuL7LCJDGMZAA
oyyBMpHMAVYn5eiPztErPlcJuuJX/TcSVUJADVLetuwJT9QoB6KETMWVyVTc
2OCiNJS5DAAcEsmw8jOr/suCsg6DStvC+N9lj6K/dFBak4Aiiptq0iboApSV
qnqM2hkR1hJPPOVak+dInmSNBCIve33JSZozxhNsboC+LtGOz15fxhzxL+KS
TwDGHFZmVGML160ChEfA9Z/I5rEE14E8ptLeWi+ObhowkfddxASC88iKZkY/
10KmnJXr2rM/S/y1bjz4wg/VR/bcLs4/Wgp9YRxhNyo9bZZZMHjbaCbGPNjt
fqOWOydSvYkRrxTeNuHmwbw3kQjV35y9OZylgjP7bnhkQWNiqMBLfLxT/vrX
9x3qX373foPX+z3u3PdZj9v3Laq44dtl5dft2EiadBex6J6KCVsOEIkdJqgd
pesY4aie8NNAqRapv81R9ZdSeG1heKUYXt1zFcJX6nKv1nQogBdgAdiFsHL8
tDEFTKWYnMqkZEzPoiOpuGnxHSTFWdRSv+gPv/YyNdwJi1JoTXt8SRrWnSFU
UtiE8EQllaViX1kKcyMeEBUILWaCdJWlhCRlJWIQFuRA36PmGarM2gV6fM5b
HtQ+50JTShf16c4rRkyxitHIXDRnWrO0X9h2qkg1VQ5VotsSneMKEqBfmGc+
W71J2QdlhMPCDU9H1dzEX0kcMbeOvYQlHiGXBdOS48KJrx181gofUYF9c1Ok
LQDcE5+YtKmUSbGpFFjcob/gLW5Rc3MP5nLvbWtrJgLa9OzSpp7TFjQNEZCI
1fCDX/e4e9/YHnftv7f87n3P0ts36PqcrmU97j6wtvzWPRvLb9ixs3zy9gPE
SdXElDV01ZVPIJBcvaWxktMj4qDxBJJxm1srxm8iZNA1fnMK8EgzOjL8V7MN
B6NgxGo8G3gZDlkFjwEvT3yeUbHOyCZlWZHnGvpmuWWuGbY6CozCfkPSQSPN
0Ois20DMQ10jzjpQa8mWRxfuJRnrz0kF9nnAO6HtHX1lay22xNty5y6ItiBI
52jS67iUm3PzHdWdeHq00vW2zc93BoMdlaE1yMqsxDw305N2B+6H53iySfmS
lMuUop9zXQ6WPZ2hPdpI2KzVOu5GhIu7ZIjyfRgsP32/40zp16qAQ9AxJ6na
O3OerCzpIn/Q+UFzmpVczcgLgXft9vbyW3frONj3GHS9HjrEK097P1bdftFj
AN4RBp55EwCeHvte0JsAPX22L+fAN/9wrv3z/dnsm+tbj7+6pvXTRxc0IpUa
LOATHfh9CMB/O+OufcMonQJDAXxgKQBwJV2bib12lt+5b0/5zd/uL79hZzWJ
w7rySVuPEWPVEwAbCIzNlVcT+K4m8F29uY2AhxRq/Oakg18KfzowaCJtpDKU
YJCNiArLlq5UkZfyyVLK8RHuJ82fK+acKpJAMTet7NBMj8Ooix8+GqoUZYtJ
RgWGotHWwIC6kh1ZiJJqnRRjsALdC64uvDDfzpOcTnVfKhw4TYhNXyKp3Hlx
Heisv5SjMMaHM+nwOubfvMC3YUQdeUA4GY53K9qK3ZBP0pOc9QhF7Ypg0ayI
wi6ulZXJ7d+N3ILV5aG7x0Dzy7AofKV8qVZ2A9HtXwZTzcEo2eDCk5dsUtyx
j3MrVn/BaR79gw3Do14/2n75q352BtuGQx8dpgWgpqZFIu5aEPe1Ec9VP7+y
5eEH5zYo1EQT/ghQgxg0rptxxp37ZhP0FtHnVtHn1pXftX8PvX+A3h4mRq4p
v+nbWtKw9RQsGon7mionEtQmbm2hv6qNoJetxDV+M7+tGr8lB9+C1OD4zaIJ
NeBsAp7GM2LAgVetdwrQq78NiUJkx2qQwRehveFr/mu0lyjxjGdIMzcfj4Ld
/CvX49tGFARdhAg7hl3al8KEA2UIoTTqB4ZmZLTrjr2TTEB1DsGhSx+Yj6kC
VMcYSQfHpLhmtPg8Oe48r7JsKZw6kGnva0QHUqU28INo2TmyeSfCdF5WRowM
Y04zAh29Me4YdmnQWhJPQeIUab22Zjo78SzeZRpusbRuial22EiNLPSGL/ha
rQzmlHHONWV2PfZ6c+OEkVs4rQZnIyQ3lK6+OJDLvbOxtfX1NS27n1jcOOzB
ufWXCeJEYJ78p6ffVw203UpoM3L7pMfdrCyBNiG3u/cBcUfobS0R3bHym3fX
U7bYRKhrrrxmWwshL9lKf1UKOEtkslVXE9LGb3YX8CYISxniAtSBrYKsdMxG
hhJjsbggkX0TOoEdExleojjqZdBKNz/rymNOxq5nKt1gnv7wgCjz0RV4IkkP
qmLhsgsXeb45N7qyyheVvyrIW76vKTBM7CPjsl6BYRL2foRclvYNGidLOhay
6Hkhg34V7TYvXBhz95lyKAvI7dRgzrtAr4Ut/P5X63M12XgCc7DKWRkwa3tC
OBq2/oc/lOri/CaLSLNqUAauCMwMa7Rgtfji0fbx72gp+PfSjQRD48F51pHU
3D59SVP7U183uck3HXFIM76KmdHmH8q1f7Azm3tzbWvjy9+0Ln9oXsP/mTa3
OTFIQCbsdirUI2htSo+7977c405Wj6C1r+lzBrC9SmsA2XFSvPX0toESzsaK
m75trpy8o7Xi2m1tRNTZiklbs0Rx2coJTG9otaBErr1y/KaMkRiMHZg6eB7w
fIDi8TmCYRrfUwRsdXKEtT7WdeHrwoGUo1f5pTpMNXS1POUOSAwioqcyc0rk
gjMCHsX3mstyqSuSBTqxAKKsOBYfXpWCmGHIoSesJpsSTNmtWZOSprF/EvFO
YtXlM82ALEBbaFQ/w+qr86NjfdGGK3l4+DNMQsad/qCW5nGb7pDJTtbK9MeR
8aeeYaEt1IzOgi/MXDHFmLbbs3SAWK4kD9b/ZbT/z5ovwkqXa28Kl3RKD6Br
wHhG5idGaausDRbZcn7rA3xjbSvPUABtH+7Kts/a3oY9OUprxWaYoFcw+/ra
1jpC6e+nzWv43pTZdYlLBXaCvh9DTZpzAn57UWE3n943fttOX99PXz9MnFdD
EKwD7OhzTfS2mWDYUnHz7laCYLbiuh3Zimu2ZytxTdoGCOYqwHNXb0kSArck
gUC82igI0Xv6EQBZQgAk8F2nQemWb4X8obkB0Ilbk1AF/M1bJIYpXUpW2Mlx
4MYYB66KcmAy3strvonitELcTO4LSbOWLRKMOvBHm0KSBZwVJyND299Z/q5L
Kh3d/9NHPp2xWluhMaeAfM50wrFriMCoLWKtjnk98l9HeuTN8nGlti8KAdAz
W5dw3PAX2rHxr1ods3V3/x62LHmcaW4W5GVJ3UrJ/WZKZEWGKTsbN2wZvExb
ea4Im5r8TJJrGwyG9S4NemuNzW7/OJqQgcHCzYYLiLYWsEj0PghhLPfmura2
V75pOfzIlw23PDSvUeF0qYcTPJBQKoLJ4lIRcBKpeJdjMsCphT7fSt/XRqzW
RrDKEhyyldftyBGscgSFXMVEuq7emgSmgKSrNyuaQFu47SzKEUEGdQugCadh
37Ybe4Mkg0V/paAK1FcIWQyqUgZVF09+wzoQflba56YQxpL6Memw6Oa8UM4O
wV/cILK6UHNIohCuSgwaA1XS4OesmcT67SWnS2R0StfP616ypNh4zYx753pE
SEeaEk8V7WX9u9Y43CuOpHCFSrDRy9I+y8yitQF1NzNR5Oqmrq7Gbra8Tkpt
p32MkRFow47sRNWESWcmsjDk9s004+kngicbrDRz37iKy1+r5V9lvU5BMdma
BcNZv7DkFR4kY2mXzX/D0H9va1tJQE/ziJ6IvnJEZc3PLWveSqLyYvqxxEDB
k7z5c6Re5xMeUPmCqW9mB+hpNWFpB2HMzI5qwtExxVIjfd7oSfB09/5sBa5b
92TpL8pVAFPXAlOCK6KqdlKLBChcmzOMpe78ITOR4oiZ6dbd2G8nFY8bCVvA
FGqDnq1UTm6JM9TJYoxctVFFX6AorRw2WPt+h8eMRDE1xWwZvSHjgVTiRWRY
qnMicll+mWypw5SjGyuzWS1hZHB3clcnLrd18mZlfNgkYKyknbGD1+1ZMQvR
GvI1AfQ9XVy1dvpUrt6L80WjW+EVrPPOE4od2yCd9YzDz6NtVG6Zvfb9nuFg
xxwGkcjIC0SiB14Kf14KeJOWzz/LnyKM9+faJBXWVunxHeEkIXo4whoaXI9b
PzzuKs3WBR+uXRAK68S4w3QhpqwgGUka5oj26p9Y3LSY5CFs/cQAwZ+8+bNQ
GoLP4tJwK+HKpKHxWX25x14Lfb6Vvsfj7+4DWWLpHJFRjsjIcNhOcpEuxiBe
aMRIJ4fkJpeB0ZazMhB3S9kRYLxjnwMlE911THRJPKdI6gSTSnIoCigsk4qj
KNEpLocZqa01TqswThNeY5kodwF62yQQH8PODd2WRk0Trx8NnsZdPsGTvpCu
8oXBBQoLEKvxuOFJ0DNmN76j73mFd07MG1GVxwrP+shtmT6nanmDlQnfZSke
J7GqNVhG7jnwNgvBsEytf3fshw3aWoLZw28Fk8OLvAGiwjFtPr7lY0RxLBw9
6BJ/4QRw1N/vwBAB1YVNiLHujmEvB71T7/sJXqRlMEECTz/o8BDcYcviDJKW
SN2I73KPfdmYJazWTpl9HKmZ4a4/3570swumHZhcee/Bhyru3f8cYWkWXfMJ
T2u0lraL3t9HeATnhRoSvKcacl8iCdQluhrucvSRXLfvzVXcsCvHYQZC8Zpt
gr8oByaZA4vkW25A7wtB6uZdDLsK3u96+14Kmow60t30G1GLFPRN3plPh6Iv
04BdiZYExqCex9RlsJOXOELAqPXA05UbDGsJ5rxOxnmjlUOdKP2jOS/RXSvf
sc6SoJggTS3GqvobuCi4PGb5BGWEPlwMlIEacGH+KhghjLJgpiUyy5lfTbhE
8AbpKianeSXnzM8vJQjpyRxMRFLyYDMWkJ6hILL2Dtt+BgYO6we6lc+19YbN
U57nNFfLMPDS2g2w0K4UN9D8hS9SXKinijtr5Jt8ayQ4tsp6F+3oBlstETYC
3/yBTn8VcPl9/0ipcyFn7822v7GulfnxkYWNualzG1pu+sOxXZNm1o4Z/3at
YC/RV5quuveaVnNJv+lHr+s//chzFzx2+L1zHjz0ec/fHFpUee+BlfTodlKU
2F0x5cABerTVBL268in7CYL7CYL7mf4q7o5IzyQwmAQAEyU5+jhHkSZXccse
oSqFotJgknmwVJBoxUeDHyQosV6FZ70kACg9AGl6d6+kejcwAyYBQma/rQH7
BaI0qRXyK8FkV20oArS6GCNeGbM+DGUDApSlQpQl3HB/36X+/zw8XlZwFXrC
dbGivyChJQpV67oaQfb+Kr9J0pYD+CMxdPGyS9cK9aZ0MjKzZQFn55UQ8gt1
v9b6WuKHIbfx1xlHriVzgazhCB/OeUHRvNLTcAd483BL6l60c6Eoz1uYxhMg
/Z4/CYyeRdECgFkmxnfhMYkB34WTlpcW6BW2Xq2HY+vuItOWpc59nLmFJWb7
M0ubAdPsPbPr669999iqiTPqfjHytbp+Arc+Arc/GfRiw1gC+v39nq6e3vep
6o/6TK/++rxph1bTg9p89gMHt511/8EDBLtqgt9Rglxd5T0HjtPbRroIavtb
CH6t9LaNPnZwSzHcugJulMPuY8xwGsftnKQ648xn4pux9m0SQAN28GN37DWq
yzDSSiQJNK1pbOdgFiR/xV5lFknAg1+FoIfyujSknPJfIbaucWLzssbGB8IK
nm/RlMbnEtWk8TK506OuD3NJV2U0N0VzbsQJkaGYTCEzRAzOUmMuY8TQdNFR
6jPDbslYL1YqvpbgDDfymEga85wfODMXLZbaRzral2L9nqkQXYlkREIusPsL
JaTkbWkPXrnkl/wZr9jh/0Xo+I8IBpon6BbiYDGMuShGa/HG4RtnxVyU5c2R
tsgixRkcSVAaKgGvrmnFAdY5wlnbbR8er53wu7r3rnqjFiQmfJa4RDq1/rHP
UzVXDXjmCDD2er/pR4CzL/s+Xb3x4icObz//ocO7ieb2n/3AoSP0KI/Ro62v
uudAAwWIxsop+1sqgLEpjDG6DmQrRVkm0kBYErGEXpoMtLsoewW33SBgq7QU
z+a788ksCYhB8t3p9GTCIU05rfyGwGqZ6NAWt1kIZNds9f7nJP1m/caka0Up
C2lu+HfQXCdd6BHkZOGEwShuhFFKS/lRHYKbA10I60GRX9FRX0oXGxHgXWxu
3Lr3V+kCHOYB52ZQQzbr+R1sZssLMH1j59CFQjWyJ1cfBo47urjAPJyVyB3W
5nlyFqxlHI/hcbMQXmhI5skF6b3+SRBavmLbJ0JqecPNW+UlZ4de3yukFpon
OP907Nu+ATlszLI2fRORn++LkNo80pCzdrRxDvfiyhaQWu7+z+tbCLQHrn6n
7o6hLxrYLpY07rQBzx6Bfnyo3/QaA9qyvtOPrKNrF2WW+3s9cvjweQ8dPkqA
qyOCayAWbiLQNVfds7+FCK61csoBtEGCzioJZ0U5Qp6IR1xTlNXuIvFH7zD2
9otzdKN6/dcJ9iombxfLxPCG/QrKahXQjnQfJQY2CEsjyUgStzWKIek8KdXq
i5qkMERviRcagNTgBzP4wVIGXzclvHUnmmCzRVLtPDhnaaIrM6SCMsNGSRMR
AmDDWKu20dygoGyXKIqxqFtnWGoVvL563qJo0aQbnEsXKJt39sAL6C7ejRKn
u7T2GnOuZRZMQcQx6jIMOq1hnG+ey9x4EUB4LRNaI9Z0k4jLxnRENjpO/4kA
Dq3auGwKzZYC2t6O0Ru8g4J/t9GcFgtkB1T+fIwVtkMHxbr/oSjf39ZWFAAP
9Th8+jViORgtD3zRkL3j4+ONE2fUriOWG9r32RqRkYmL+PZ7UJNDiVtv6/90
jTEdwLeGgLeFwPgtvT3Qd3pNbZ8nj9T1evjw8XOnHWqgSNHU8zcHWgmErcR6
baQ0s8R6AOCUA2nALQOYAWv7odTQOoNC/g16RhRbklE+SwJdaXxrcSw9Y+F4
4vQsrQU4bgezgh7wdbNgjL1PaNDJirVrFKhaz9sctjyPZUNyLLeSRafeihmI
XaWMMDyvzu1rfBxwtTQxwhkl0taSCttaEmlfnsj4Ot9QR3uJDlC4JERhSXh8
x6UrfFkkOkQeqftJjS8T3U+qnWIl4YhDvK8lQopdYiX1OcHpxDHnxsMTQCJs
dhNCvPhrR1oMK9tKZK5reL6lA+n8hNedKdadqVB38q4v/T36W/iSlRB/5o//
C1d/FNrceVvUYsF4aGixjHnLV8mxvdMslsgGg02tQcdJWdjoxfT4yjctxKiN
uamE1Bver6sjepw/7KUjwKUq0cSFwpHms8QF6WqKGzsIqnsVqjX0/nF6v/Gi
xw83nv/I4eZzHzzUctbUg20UZwiiRPVYQQXI3nMAWEX38pT9KSC2iBGbkt5t
oJSEpodnSZT81D2JkJ8qzfEBh6WsoAfAGjgp+jEwrTBhVUJ83goSHqRByX2T
J1SBYxffFhb2cg4K2lY6MlSKwyK7Syetwcwzqxb0MoVYUGycIjsOJKzwj1jj
KxrWChctQMTptPsfR4pBraBM1KOdbmr+yQWFbFJTommBQ2/3edcDZ8tN3AEL
QV/XWfy5swV5Wow0ksTn3K/VLlUhx3REleq401eJvxSetJjTf6k/ZzCYnotM
FVxb2IUxzoQLM1wPpunIhQl3J853uxMFkl+g6kBCNrBhcvfOqW+ZMONY9Zg3
a9/p/2wN8Kd6NXGBjBhAthp7vkoPZR7BzmTrNoIi4HiEPl/X7+kjx+htI8G2
ue/TNS0XPHK49bwHD7We88Ch7Fn3H8j2vO9A9sz7DgKcOWLTXMU9pFrv4bfQ
jQTKIp5Zwp+OiFTJipbfTxlm75J5iwo+78p/rlwuugM5Cav8lt3GqQkh1VRI
qgmP3ESJejDbBOWBatVqopQ2SniW0RcUd3hBK5XEVDSbLDYHJ2KaagnRWzIo
bfCokh+aFb7kW1c+xGcyxqBWmORR9zwGTUUoMOVLiF3kC5YoDV/tgwYCxqgY
iiNjtdE7Pcn1znwVVBLzCvxJW+TtlhgoXTqHRqZpFxc70KQYpaXaLhOkj2FR
0CTsuUgbz+9Qs/pNFpVcqSQ0skgnTPZbYlPGdPtnsmLNTlB35VWlyvFBFT5W
jQg3ZWH8wDZlxXeahtsU3pFDDL1tQzT5yR61bVa3tj+8sBE/l7v5g2PNV79T
u3PkyzU3EKgUkr1E0Fb1n14ditk5faezmN1IrGgsWdNnOsOxHixJ39NEn2+h
q7X340faej1SnSU1nj1n6qFEMncmcWYqR9EmV3UfQxMvvin7hSg7MQ7P/s2B
9vOnHeQhJ/zpCE3Ip/FUEF4BKBHEcUQW261Safn1eVSq8rTEDzMCWddrr9rN
3xoYUwzEUl9jxAVSBWZN9RZKTRmQJeq4uk1EI9fqC983ecasGq5+2M9FrNj4
NrB0jO1ksXfKjJcBy6O9NNE+cKl6XLHOb78M53ULVT36aNmSboVCFxZumK7Q
haRnx4wbG8+9cDGLyFRImV6rCo2l/KcuWqyis1gQF/o7tkrh7PnqxKa8LJZN
gXSbCc6Q9UOJSSdbU7Y3w8jSNm5FBss2yvjLtUiXbtiZ+L5EY4r4II7Q6MHg
qxk9vIjrHb9MtSOj591Itb7MlS/e2yZOzwsrWtofJAlMvJmd9Lu6+rFv166k
+z+97zM1id4C0vP49k9ApWcTAAHUUMqCO0MpK9zpQdqsQG2jj7N9nzqSveDR
w9nzHz6co6w013PqQYLrQYCV+8WRWiMrTXn8deZPAqgY/r3wkcPtFz1azc8H
OodkCl8ArODln00qdsvv2u+wW2LY9Wwa9YCu3iJMCvqeEG3HiaSkvjiJlHcf
MIxf4YTwjritFBHCAZ9qChv01GxMhWxpgxSjN3W1vlLw78g1HfeVxiqWKesY
DcsosuEiMlesL0dv546MbK+N9/Mk/Z277S5dDciRwqXR6FxPeh0tqhXlm4pg
1ZJBWd7E1jABttT35FR+Lj3dlmsKk1psSLqNnpFlMfYL/jqqafvoJiLAdeAy
eY4NroCqTahZynntdnk9QEnhwAgmloM8mH4RpZ0XP17dfsmT1e2DKe0c+uJR
3u0a7gm/8f1j7fd+JpwaHiikGyiVU8uYU+cEJtETi5twEFHu9o+Ot109o652
1GtHvyCAcfopFlHiXL7907hTBGL9ijC6RrUuMBtqXZCr4bXVMEtfy9L7uYue
qM71euRw7ryHDuXOfuAQW2CeNzlUpb24pf/WPTJEfMHDAtnej1XTy6v349X0
J6H56JwHCsHX62URxvvpu2O1f3FfRQd3tuQ1yFN3CWLzGugYsakQsdbZw2ns
LvGartmeV33xsC0yGczhYVsomAXjMlLMZtTJYQtQCKWIwA2m7YsEZfHluFfI
7C8za8qIHKI5tLNE3kY7yzU3LfVJop0OaC0E5+eTJ26+KnYTVi4JFGeGRSgy
WNyjVU1NJoeL3F3f66JEHgZlsTvfpbNfGYZfy4b5Yu/IDdMSiDQGgygTkub8
SfTUYIRezaVYzeraSmSa9BJuv5QU7chXjraPf7uOLjk1GCMSmKi985P69ilz
6tkAeoTUanxdxOf7ouyJOskftE7y8jctjN77PqvPXfNuXcu4t2v3DX7h6NP0
ew2J58jsBLLOUOKCPZcSqkKJC/YsKHHpEhQ+XcNIpK/TVZO78PHq3PmCSFOx
ScAxGaPB7k7vgkJRL8KTAzmB8HTJU9XciHQefT3EpOGR8lmWw5KhGqMKhCgL
c5I1ZFPbJ3BjRPEaFhNyfHoqlL6a63Zy/nG5o9FtcRpNeECKFdRJgIcIMFnr
r4gCkVmQLUGWzOZzF3ORrjJK/aYDF6mzp9R+uu1xaH7jT4UfBylSmHqbK2TR
5R00m3czf9cGLCwFlILkRW5Zk66mLipkDZ1A5zK007bp03bUWDp6Vgy9vVyL
rP/lSD77OA/NdiyWeYGLzFObip3ADVlTvIqrNyd+7PrBWTLdJoPwoAy89PCC
tr0T8WFd7gn/4Fj71C+0urJAmPP1NeIEgT3n7Mu2f7CzrX32nqwjURmGF8No
jTeMCP7ZCTPqGke/WbeZMHV5v2ePqnmbOJtvu58+aeaxkUNfOPrMwGdrZvV7
9sh8guaK/tOPbCIo7uv7zJGDLHqns+gFdEPRC+gmgdtEZ0YufUuu3zM1fF1C
fyDOHTzvIZGyxoOahzKIcQ7AFLWPoIIfRJbOJ6I7GBuE+zx1pJ3kNX9M8rr9
3ADOgTrOh/J+hXJKGBZFn8k78G+6bjvqjQZhNxiyJyEWUjqaud65z+lrqwJd
n0enwVhjxvcNlUkgt94kHUVx/bauJ4L1dGEYZ3zG6fuKQh8p7dNWMXoj5VVV
v4LbYrWoRID7/r2V/j7x+/wpKM5J6mYtsv1UQboKDq/LZtMmraMfTKYXf8Ug
zoToVoqUFgFdo90zRrHugKBFQcbbReg0VLO2W7N/LPnEymfGpfHpn2mbQXjF
xqRCF1dnNtxY72+Dsd6Z0eonO7mx1oPP9mZ5/LCYwdmZS6Bz6HN/2CHOERdY
4Bx9Xp+b/P6xLHH2cVLPkK7/0vepo+LkJnqKe/Tn4946cuXEGcfun/i7oy+N
eav2g2EvH1122fM16wf99ugWYv49RL1H6JHW0XWMQFjf/xmh1v5O5NYYtSaS
INck8JmEcqBHeCGpecbTg45k2dZFTUYwKpaSZemg0gjFPsHYpO8ldCYR1ugF
ctHj1e5Ogf0z7w8wn/byV0BaZmaw9uQxuHwy6uG4N4RkZyNU6+T7LkLNWH8R
IrUB8qZdVvVJ4p4QK6CWr98VHQuLFnwcODuH5deRJyq/rorWfsQhKeRiBdNh
trsgKL8OXHECgu1i01yAg/WzRRW09ED1tUUBKanrXMJMCtbUDFQs2c7Cor2C
y9YK2ExkdL5SiFQ7Ci8OOhBkZckAbsSyp2RohzzqC+CGU4msdHuqXzgduLvx
bgXrfx37Vm3BYmg43hhWX4RMu/L4MGat8HXo4Ke/bmp/7MtGykqhp/n46Bzd
d+vYt2trKP38qN/0aqSiYvcmzhRePWnyrKOXT5hx7LkJvzv6+4kzaudOnFG3
7KrXj24b9tLR3YNfqDlw2fNHDw/6bU3dwOdqGgYQZgm/zXQBt23Cq7ihj1LA
a4rx2k3kLPEjmhDNIYrZuxy/8HU43gGP0nPY56lqel7Bo3iuAFaBbEl7H0fX
mrpOzedVltuM1qTWdFyaSQo36WjW+8ldrRUw5Ew2frfhPypuchyorjwbzowR
cxY2qei6dU+0uzCKWH+fXRSu7DJFdsYpXJk610Z2NAey11V6xkS8q7QydLRc
u+o72bQsrPPEj43hHZWxgOLZ1sP3YreIQwykVAGqZU2MLthFkqt2EtzGD1bq
5Y6LdcUXiSYqfgfqAmuUWmxF5pgwac0UIlkZ3gNwwzO0jGx1QDLsYoi3GmFY
Kyybwv4NhyR9eaarK5vO3CwJ7EurWnjjzW++aODO3KvfqcsNf7kWoGoiIttB
gWNc1f37FbhVXhAb4c6e+LvahfRI1k78Xd1moul9JAOqCcBHhzx/9BgRcP2g
52qaCcAtFHZaAVz6KxiziXS2vwphvYoYwJn23k9IPgqxq0tW6fkjyqWvnaN+
Ep4PJtjHFbTMrimFKlE4p/1465h22iFV2cSyVVwTihhNd+8vVZO4SgPEOQZw
teG1I5HrQd1CbrV2whNxa9K41dpUlMZZ6Nq8WWmcwuW+w27DYPTaw7azDmPK
hpAAFAZXm/y60teGivzAWWwFkKfmDmjU7egZoDQanh04co16ywQB3LPDetjP
5A5ncjtyLH2VzgPWw0Umg+2MDGkZotvS6FSXbQOxg2J1X0ElRjl1/Ws/67KK
+UnR3JQJleNtxjBppdKgw122SflhknjfLcgU5VLrco8PUL4baWXo5rqLPtVu
d9cHSGQMg4qyU5xHnyMZ20bYqCWtuLzHXfv+qeLug4nzBZiVfNu138SZxwHK
VybMqAGjLqdr88SZdTsInPuIXdEVAR3dMPTFmkZ6yE2k21spq022UVxJZumP
SQOIxQzEzsyAABpY0jLJs34j7f0OgGoi9XkygGARkEcvENAw0+WDeWlowvOl
pI1l7WdBpDzoyzx4jiFcRGy72hA7WtISHC3Nlume2Eg//TXbO8KlL89eU6jB
yWW6d+zFPUczXTW9TAMXSHHj4CwWjLkNyppzXhlMf/ox643WK5EoNYDmdTkt
76hFojg8osmKjtbbJOduCDqlt7E02ipxaUijst5HMZqOJKrAmTbupdjljeKU
W3ATJ0myaj3ytt2RftaVXfov9ZsS8bdhumRUpNzi4ic/qVfzDQLghC1FPPv+
A0+ad+yN9DO4MRTtzx35Sq3rNYrXTEPXFz0NH+zMhpyJkumswPR9eEEjcyZw
Pv6duvbhL9Vk+zxV00y8tZ8StgfPuHu/QrPci90LJs2oAzzfogcB3gQ8Nyg0
D9PbGvp83YQZtY2Xv1LbTBzaPOTF2pbBz9e20YNPZQmniTQFgZpcf704SaVk
VvDaqf3iJz1xstH7aDWrW6tDuSyUQZoESDnJTTNc5efNOTr7AQFfqJphHDFi
i9T6RX8+UItfJlWew7KZ+VHNbH+juLcKkTlPBZHb3dVhTsCm9LktvrMJyemt
sTw46ipLuadYfhXqvqEMzgNs2na6WhOxFHsEllfrSNu4zdJsnC6wFqGbSd1w
rVZoRoVS13clJtJhOzC3oYdtTVYIWivYuJK7PKTLCta34ZdH3ZRmja0vWWKL
DdgYvkjFbugvJ0OelTwW30+3mRDTdtiutg+eLNjmtt8vAmwvkoTWvPJBK9yB
CkERJ4907fmdwJdIYgfv63zrfdhGGLZDoLN39Ju1kSkzlFYL7cCC9v18X87g
HVZXA2O4/Z459e2TKFpQHpsjALYR3R8n9lvb4679vXpMOSBdEYke+R7UzIkz
jkISr5r0u2Ng3z0GbYJ8/aTf1TbQvTaPeaOuleJRG8G8jZg4O/j5muyg547m
6I9JpIDytEd2sTCxy1OPKJqrgWV6riB6U07w4ifSuGWAiyQu9pnrCak4rUA0
CXz+NKHi3hZFnmCmZ8AjyjDAtQysJWB3Xy6ztW4LT8Wa2Zb47UM3x6mXE9dk
bP67NEydheetanttB1VbpmC3VwGvumt0nue67fEOjWSsdKu0OyKvubgDXZy0
hNDUpvXgRUDM25wRIkSIr7eBVZviGaitxp59ky5vlfQ0E5ZS6TOLGaxpE8i2
/eucBdq61E0KPe6o0rl+F4q2L4X+cIX5w5F6aypMXQWtRQzVlDyLk/jCR5Mc
JVthJ2ZC2YbjePvv5EImVDAd+oftSsndXB0W6yFl54F0Gk6dK5SMzqhRrx3N
om2XXrvVlffuf/WMO/djgZ22RiTOkIlR5LK3TZpxzCQzTKhQMoOXj00U0DbR
+830toXuPnvFq0ez9Oizw16szRKAKUQweAFdesoGKDWnIEDEmSrlP7yfpqYD
njnCTwASehxi0H86Lnxdvh3EXJNxMBaQRyn6nAe0ZhSjaGbYpKIPhd9QVEsT
BuGYHk8fjSJA9XkBoo339Q75/rqYW2UjBOGg6iTfeVF+a8d9UsUxGzsmnk9M
w+lIpcgvLeN5vMmRCpHbdevvrGvcgvKj4crLnQvxsm8JspP9hjkoew3NMC5i
Ni5ur+Buj2/8aJ34yewYuV5+K+JeuNhMpy+THanodIhha1G00wjO1jNx8TAv
U/kMmVDQL06HfnFURWcYt6dKdEQZ/cYTe1BEV5FWpkIelNs5uTnqQYWVWBs2
RQvifcTXiAPj3q7NDXnxaLbPk0caz33g4BYi3OGkpxW3v+bbH5oHZVraPKhd
E3937HCMcBmz9LlWutro89nRb9RlSWNnR7zEvykH9QAw4iQR/HWE3gz+VOCv
hh43Jw+vHuULpejB8v1J/AA9t/oj+IkEA57512PdQJzR4g+YnPE2LcLFUvzp
HCn+4Ioq7GpHxgpfdquJRJBsc1iwrsj7DoZhoTAnX+v4F6nurbvxtWi/lHVq
3Blxs91sgq/2Rm2quLLO+GaN7vKyBFZv2BGt9iIwQApMzrurvMpS13gFaPCq
fOuq2AM6LPnIaDuAf/la3nmmolqEdcrN/FmSvh7fJKcvRPLk5Z6lxbvKl9Lc
KtxL0O0Y2tqvhKHPkpV6OB3Huo91Op1hjQcd0vIY7RfWdgqWz0UOyElAGN1R
CIfXBhfkTqzn344itaqQ9RVjkew1gZFlff8wsp5ekl8VysRYmcDu1jagVxGE
jvXqYOXRMLKeOYKu/dqqew58TMnyj6ruPqRtUolfSa8xsmWT02BmsLLJaTDz
wZicbiL0O3TT9+Ym/K42dzW9vfzV2tyIV2pzQxnptYzkGNITaYZs13ZKpxW2
cuF7LyfEX/mG5BZXvn6U9QrQj4K33lfKyL6GRbiDfSLtift73J0BDe5z6zzi
lpNX7pWmyYjHFihvV5/SrEC6PZS7fROJVqZTYTBJdAkbKQ1ut+1JFWjGSvkC
crFEhHy+Dvqlo6O4Kd/Z0V1rVLJkLeau+TBz466Aw908YlTEC+BPyqfwcGLW
RukjM315KXSgvl2F+UodnZAZhlGcWNuh6UPUv8a9myHmG6ukgBRJlGXANbI8
7CxbEKFoL/UTgOd/6QmcGzTWBgJ8U7KjJDnVof5OhfDHR3R7qoaA7WKV2S7p
AqM/8rr3zRwYy7s9ZpXBAwsOU03EvTIbL0B9CaHj/s/r2yfT/aAB07wy+p3Y
9HfPGXftVfT/p0f/JELyoxNm1JomB/pDTX6U0T+z1mnyOPrp4xxFi9yYtzgK
MHKHKndbFHBaPQwBiIRDXlDovy67SFEnR1S88o1ajpBDEAL4jlQIDIDK769N
I2lP9pmg/hSCEwWoYilFK9hh3F34qC9Fp1xVK61VLZYN0w4V6NH0BG8Qr1Ld
pn553C5HbfokY3GrOgPdhVLotJ7GzBA3qX/jTt9k7ZHMfjnfKT6O7LMplJd3
tWlgXlETWwllbRA26+12Bq8FMBWkGW2PsGsDZ9T8WW6ShqXGfWFBcg1FcIlR
9mLvhvXigR6djNXFgTL4Q7cn+VNSnP6e65da6MppbpCEtT1wua81OdLe5PRQ
FMsTt+IRT9zK1UHbSXldeDFw3XjQzSf2wtDYYVPu4cYlv8zTH9ClXlheLaqQ
IXY36XuuRb3FFA5D7FjP+w581eOufadVTDmg7ZKJX4rh3eP2D4+Dwh+b+G5t
KNC3ESjjAr2JPhcR6ATiJBCc6MwYnjjzGK72K6DBXz4qEHzR43igMbohuRt/
Cgi+4jUh8DFvCoJh1kOHANFXqJxH8c4IfWCYvgucM57HyxyPQ7+HPG5FwV6R
YQf6twiQrTtT/PeMZvP4pDPcp+YZc95wL1Wb3Ax3y+jPUZfejU65EpmivWs4
rsjO+s74fqlApCdDpONFV2gfhyT0ibQZ64UW7/ux5AjSS6PkzcuoLK/+Jjbw
EIwRr7flU1euZ1We0fcI3t2VuNeJC65HhrtFGuqE50N9ke0GTeoatHMX2pC8
uNoizHGeV3gEp/VK87F6snbRtVz21S4QrmJpB4i53VZp5OqyKnWQ9Fbm5qII
uvkYvmghC1E/LGSNeDnfNQO6zTULC1l+kKibW00f2WOxUCpZN6ltBl8Lthlx
0V4S5y/R64dts7ME3b/g226Dp81rvPeBzxtev/mDY7NumFW35trf1229ZmYt
to0evIbomR4ahHkjvO6JSs8TBdmJFKCdAqLptQaLfZyC0XH0C0dDpR4Akv4U
TCaj/cVQDSSTrEji0ctpaUXto99Qwn/By3WT6pKim1JPZDxZd+bWk5CsgS/u
t9aeTlftFkSzEC9RegbROxdtamF6ZlD6gURJoTszrGMmHesBZvrAXtcKeLJA
Ca1LyOY3nIDNE6WafquNdmMc3g7iGRvLuHNvVP5Pim28ChAeTFMM98doV6jp
LZl1JuDqDY6z07rB8cr1vIQ8o9sEKEHvEhXh8NOMvj11yxS+zTedrbSdCUFs
44d8lNFi6b+M90hb7jA0zt0bA/9bfLMOlffWmPJOC4lP3m5XEhIq8UO/VwlX
2GGtncRmuIHawFHhPH5eh3WwKwOG2+w9uY78tueWCZ/fO8f7bQQq+G31RGlr
iM/htyngf863J+N0pb4Pzmt49qH5je/RL51/z+z61bd+cGzrDbOOHZj8Xt2R
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
P4M3Ir7PfsR5kZ7Kol/ACS/JiJ1/YmJnvobHyOp84HYhPeZsznuh4MrZZGf0
RSQFUmsAMsoh4iW8CYobrWMLgaFwvmwuqk09QC9ukGETaLwfaG2+VjjfJfAy
GU3zCkFcJh81HymsEAGEF45m9nfR4/yqBBSpjcipffQLh0R0azv/CElhiEGp
/ms6C7euInTq0fuTNObRsjjZEhk453e7ki4RiyZlgwx5x5PJa/+1wXZueBWW
Hr2Wdzac8Wpn4djnOwtHLMTA/P9j7L3jpCzP9fH5vDOzlaomMSbnm5PzTU5y
Tr5JTmKNmtjYmVl6kSogXWlKFwGVqogKNiwgiL1rjFiwCyLYEVRsgPQi2+ht
d373dZfneWZ28fz+eGZ3dmdnZud93uu97nJdd1367FeIHj53JPP7J6RYcso9
my86+bYPzj/xhifPaz5l9NmlI889NdGv+G+xkbGmAn6/E3p41i3vMvDdS+vt
oFqySfODRg8P0u+MHlq1ROlhidHDuoWfHLFyCVNEp1oyxKMntdb72cu8UyfW
3Sul1KJ9MiErDMBPaGGRM0N8TVWcmFuDc18rC1bJfDyoZJYeL6Ck3fqYjrF5
QSfsLdmksgXFQExM2uxLJ9J48q91Osum0PnTGxDe/l6er6C4+hRxNQhFhxBs
rAz7iKbekgEQKj+MhY533teBY0+4msl0NzYqWi0f4SPql6pjuIAwsTzPqtAM
3bJtQfzZzFmB36n6V1ybrNAfyLsD7aSgKCxICCXjqkearaJ8cdEygWqgOkCi
Cgg61ffPxuIOJ+VbJoaBFxKi34Icky3DRVZUSjbsOk0T4pyGK+sA9V2/nIGK
UKZYReeBB5IDH2FBxcwugadARNSHgYqYD9V7obDM/oyB9Ah6LCBNuSCvodps
A8wFViF8ToRFCKThAI2DH3Vxp7RoR8erRCRcJWJPIDlBPaLQWoBsRB49Tw2n
5MaxHRsMARJ8HyQNHoa0ihvApICOJSigrcxexiSRV/y4PLDYvTRzQeWBsDu7
mCANFY7UjO30hISQ9I+XTSOMnLUj24mQDXZoXXgm5/9CAxNMA3/Kw6Xh54LF
3s2ImidszKb6rjYtfzZd9lZd+u+v1mZOX3ws84enD4MSpv7tvp1lJ9+15oKf
3Lz4/OZTrz+ndEyn0+L9fvPXWP8oFpvcJERGpoUDb116EOj4T9rDyzWFCFqI
OjJooVVPDlHwfISRMZ8WFjM4WhEYcdqdKw748ewAP+54mM0ZefCJeXSmgQFy
aGb91D/aSVPA+GO6KrMre2jN4cin8xNhKVOqra6/Lcy7JcK5gAARPC0Ca2gw
Xvze13Vf2WQ4SBE1PQ9Sia/o9DmCUqGIBfznYFc22l7ooVwFIsn5I0NayMjY
UJ7QVR0i/dZ86SRYbcjuBiFrEaNVELY6zqa+EwntK7tJ+2gdLSxwEJh0fbUq
BLe5BxpN0+OJZ9Lv5n/szNA5yoaAXNSYBeI6TX8LqHLzdA37SkNGJpp5DaRR
4UDi38tL1U8yxwuuXlOcaLFK6zkvgYlyLk/BDKcum78a34oCJAzez/8fD6YS
BgNk+lBbAWHkbOD9Dh650HAZyjH1uSHWIFHGBQm5IgZG/KkBI6jYlRKfioLl
R0LUet3eJR6WHhC8xVMCrgbTAsLJPF8KSbthpF8DcWlhDiAhqzfowSpOjQ7h
l0FlpMDNEcMa5NFQyCKKLkIWO4tctjDAwrYUJ198u2EhTH273FVh8z/urGA2
SD9E1wzQD7RQyOFP2cEK0zNl7cymZxAFHf99NjXgc3NWEqJ4/htCFP/nn0fQ
VZP5v49UlP1i3voWP7v97fObz5h7dsnoK84qHHTe6Ym+zf8YG6xo+Hu+bfTb
2945hCA5nydumSOdhlZQOUAnOHhixIXkQoChdBlyp6F0G0pjhNhKoQPKoh8l
IaUaDt+toOnAsMFwOKm9Nyav4lN95UHmnkZWHrA03BpHjCTaTOaiorak8BC7
PPbozYfzhpQAG+EaafZKPkvHxWh6Mgq46b95Tl3JEdouNJqoFmtJX5Ao4SCa
web9gy5lF8alin8yKqHAOQQ8EFgREirFOVptHjpVOgS8XodpImK6TjPoeQk7
V6AF5SrVSHWW97blJR1nwB7higi48W+ZMF3HcqgQVETrSAWwiHepTHJDwnAM
TJTM1ZYuO4Z/ltVnTviGiU4PKHDndr85lSjdsv2YOGFKYTShFpFoGwQmAQHA
B63kcOWT2l4d5OPUoiDueuG4DEDxtxk7WTwq4CfcEDE3d0hr+QMYQAimMJRg
uBK1Vw0el3ThqKTlCrguw3zwEXlyjUIjJobJMCg16FORSyLsARewlQK06wNf
KMUJBKw97t7NwSmIWRd2c7HwtCIYi2xzCxMMgEXiWnWHRKidFQQHPCDlDn5B
QkN6kkEPOQKKDMEiAB8CbJPhEgssAvBFoG30u7KpWz363bmbgY+epjMPQ8UE
I8TCF9+5O8nk7xc55I8XTLNm7siW37A9W04ReEvA35j1ueZOHVZk05l3UEqx
XppDmf98vCb1q0VbWvx87kcXnDTr0XNLR087q2Ro99PiA/77zFhfLqU0Fgz8
L779WbfZ0kuzZPbSnFLKztnL9uezwbCUUsvARwBI4FZH4Ukdbck61s68DgXj
PpwIMYt1DAhnv6P1EtoV6J+5V2lhEB8fV0Yigv6mDF7ABVZhr/B29zrXSV2V
ZYpCXqki1lAHnHamaF/w5y6Ozu8RflB9tyMd4GI88hkeIUZISbvp2W/8SFFE
83ifoGa323QOK2No6s6ahc2A7I7lBxlY5jMPg1ytKOCNApWBM6I06YEfJi0+
9WaIXNTAR92Ycew6N9xjr0vjAY8mh3wsv7gRGoCrRabcE6LZ3FDKxapsQP+2
DCnDAQEyWi1JkqbyM/zjml+UTpGEz9kVsRwO7xfaU8bw131/3cw3VO9f4PtG
dKlhsJhTJlwJB2uAqlDVpldIWI2vXTzp6hcFPx6j5lYtuDnxYQmjgXL4ioIN
YnJ7/qGPh5BaHddIWVlh5FN2jYmnVXB8iaccShxx+OMBMlqmUIihZQvDTvEC
3ymO0a7zMQdod7b1TTsjZO9ojyCsRFEWP+4ylyWBApPaw+Ka+OLO0U+mNxJZ
Y5qG0SwElD2J7vUh2jdgUVUEpFQzmxCNgaPw6yVGSAcYlLCII1ok+7DS07dl
288mgLxtFzHHHzB5IAI8MiqGxBBZQk8MfyGWpwExbE3xdjmhY3rylmwaFnjQ
Ew//OpSi+BEGF75ZmzlnybHMqf86kvmvp/alf/vIzrJT7vnywpNueunc0nH3
/K3kypFnFF5+0emJ/j87MzYgFylPNraIHmwgpZVUwBZ3zfEllQNzJKsYllTq
Zry2r+6aF/fWTVi8t46oACHm/rrprDbk3lmgZQiWs3PAsjA7972DSvo8bayf
SNSRqtatCNqiCBl52YQE5Hd/cCgn7UWoAuHXYYtFdTyFdrL4zr4Gihhx5xjt
554mmeHhmQCR4KASxRIY0xvg2FnV52bZ5JuEgyzeLd7PyZU3TEHvE3jCqPW/
MIy00RkPqP/ZfTwngZv4EMMmGZbwSZgJmhj7y/T10eyTSSAJRf6SfariFzom
R0tAsigws57lCrz742HUanNJxYJb0qjm9CLKsf0MyiM5dHbCsRKHQCOfsTK0
MNupiooqVI0HTjHTJVVI9yYbQRS3THA2GfUupQrwOiQNUWG2csUVAoKSqlME
RG+JOixYD1/SlMhuCVWTmBQvhCcHyoZIeIUaU/EbmVfpSWLCxaT0zD10XD3C
UDh+D2Wa6UUaQ4NSCV4v3kBXuMSlcaZn7edwiYF+1mIauNlUQcEd9ItdhGQS
mXY1FGSWFnl2GHfhMTFEqV3QR8f28BKt8gLnBPe89D70YvdjiXTf+4mP3luR
7XZ3Bb9U+vrtMeaHCYBgAghIp0H5jO3ZDjfvyF58q7wZQKvjhPGQE9IT47aQ
+KByQvrT8mlbsy2vI8QbzYhHf1E27Cu6JjNH7L8mm5bhC9l0y6XCEc966Wjm
T88dII5Ylfr1ovUX/eSW5X9vPOmJc0pHzjqzeHjvM5ID/npqsi/XUxoJ8v03
3/60FcXC1nRoHPGrOcIRrZ6yP+SItL+P0T6snfDC3rrx/9pTN/afe+rG0Lr6
hX11dFGvk07PfRGTxISLy5Qihgxx3vEYYqOQIfLCFIKGiKFm5+K+ZNGYfwdi
Zl3CMo1TCrhBk5yb0PaIYSEdXPud+Z9IEQMTgJroPKbcIY53q60ZfveIvkeQ
PLy3W5Zqt4h5Uccb6BYuDjyybQosjzHWGSI+a1cgUz/U+hEL6MhTJIlq4zqy
0g0JYCADA1Q9bswb/6o6nyeiqSfJdAtZ32SdVgHgLimKLeeRHZc2tSVBkKqm
CICsYLi1YN6ze4OqQGGugZLEpeKihHrntZY5dKpVtV6A7ZP2x6kLCRxYMInF
bK9A/0CaoJVIOvJFzw2CBMrC9Y1HxeVTyWBMW4ePW5oQN6zBDWTG0IbdXRsR
OSRXGmgDbMwNK3JvJXG8aoU0FRczLex3v3TbXP4wknNSucCbRrJu8COaE4wH
NNAoYHcKfSVC3QEU3B5AYQEn6VreuCPbAXAooSoSdUlmhgUhCVQoBEBVJBSg
2IleXOgdQLW5SYLe7ncRTSQE7Hnvbr6fuWG78ECOkONAwARkw8A0ehMdbxEq
iIeCNnakRcxPUJD+MJ/14WVC1peC8frwr5MGgeYmyk5Y6oPc4m2eDpE+Y/Gh
zO+f2pP6zYPbLvrZbavPazb5tXMbjV94dsmVE88qGpIh8vcfp8f65UIgkz8U
Tqzj0Aonmwn28sjfwcM3vHHgyLUv7ztKW/DYuOf31hKVqKVIpw5rNC36HRNA
C5dnvfkj5K+Ayd/9IfmTJkXBwWKHg2bWO3elm75i2CfJuLh2BwP85soYdF+d
cOzpiOvjZinL5x4M6WvDtQnpFL5Pu4PVaJjx9dZ3nZUmkMvcbzX5b26N4E9q
C3kzDzrKbxLWZGrCe3JzFM1c6q73/URMtmDH4MyEy9dhwtXclToYQCoXN70l
qcKrnneOK8UKeyB9gDy0nlnvrWXq2EyUEW/WW/+bZ7eAX2PnexyCEWDVNBke
czzXKj1eBCqNwoWinf2n9MvhBaaqMpm+j4k6tsiZKfPUhhekhxEEEkhI0GQ9
IwSEpZwd636vEEJAFhpuLDKW9rmG2uhcwpB+Jim7ejUKwaNS14bYQ4kh928/
nNuPk4OLSNvpeEA3LrihHpO8QJWrCnTskWbrNV8SeZehrYW4JJ0Cgx4SDGW4
FsYYs+nmeHso63ZkrBKoDEsZABxMehCURDhK1JFfaje/nK54WNcImKKErxEM
xyKAGB1FisuzGYKwjmCAN2/Ppi06noLXxCvHRUeMn0/ZGmPgTDJ1bMSGC+gX
dOuazTx8q8NN27MdCcw7KjHFyxNExxuij1O3ZjPXePqYAHYmAJ0Bh+TB4TzE
4l0b4HUk/edn91PkvPuiX8z97rzmUz/4R5Nrnju7ZPRtZxVfOfD05MCztdQS
KxUA/YP05IBDmnrZai3f0c/AIbnWcss7+/fTKXeQduqh8f/ae4TisaN0Oh7j
8Y21uC2to9OHueTUVyh6xqn52j62F5n15v58EhlriEUagj5i6FnA6Ckil0Nu
Ep51HBdpcg6syUbDK2OMmY+U66yTdFykFQwbsmRDlbT3ONI41Iay+dbjRvzm
EdeBk1nfF9vIqVuH2Ydrhi68YtzkcnPSjOza72TFf2zmkpSqbmMrhYM6cZy4
YrFiuFwqeOiT2pSCa7FLyHN7GpRZyMjfJk4HMWGxOI5I5WOf+z9mvuG/8sVA
HObimt2bkWdhp9VfiWpLOSoGUHEb80Jf/hj8aFBk0Ii2wPFKKbE2cbUOW+b2
wn4GGmebSTK3JIsrJ0b9WTEFBAtQlWwAsLgTRlDLa3IvV1iVcFYgkyev57DK
An4vxiqNWRKrFLVziQgy7q9yA9vxa/a7yQXTSOP94G3h/SR+PLwt4IgYxI3z
ew9IKN7/gSqRPxews4L6UHA7NCaGEl4mgJeMWnEGqwKugLQGtZxtVRCOtpMg
kSGB1ChXCWQpw2I5Vz52cOWjfPo2z/DGf59tMXEjId4WxsFIo+kpAasEdhIp
ZIC0de1mYOk1m2lTt8BT0Wo9jcBy1vZseyKT7bXgouSSnpbQnp4nM90TzPRV
6xklC4CSSUhZCCVTourzozbS79Rm/r7kaPqMFw6mfvdYdYtf3L3tghNnfn5e
sylv/73x1Q+dXTwS1Zj2p8b7u2pMSYiSpaCZqMjA+wYVGaOZyDHumPnW/gra
jNVXv7DnAPZhdAinYJPDhI3HRsmqpROxbtSzNYyUiL5BM81fg1FSs06caXOx
dimTNUswWqyNHu8HdDDNnSvyBoQWucEp1vNrxYt5SillquAitPNxPs7Nq0ta
Qs4tjCUQRVkzVpRZZ92EF/wcLUCJuQ0I68ktXKjqLJHfhmz/sQ4xjXHpwhx4
TbkvbYJQu4icB/8qOPQdmqwDB5ykKg0gXmm9PmO8TZAsoMXUV+WtaYYuZuGx
VUroVSVYprc4xdd1eYnH8VU854bHdy+sCniRL18gc3f5o3lEjeWuTwVOnr5y
IV4npdokI4KLq1VQEcyy4I8Y8EYneow7R/iFrcu3HsjR59XlHsfKeHXXJN5A
LvlWq75W2lgMtIZw8o7eS0JDVmTvgCk9WclcbWI4aTwv4rsDtdHRzAtNwxy8
vQYJ4tw8gijo04grC53ucMm7bP/76aUXVnJDS2+9quBrR9HzMiUsdiFsxGBT
xDjX6vpt2Q4awXa+/YcwmRdywZxSRsAFkxzSpohlggOmJ23MpkZ9R49CLJvg
ee1lV21g5CLg4+RhwAULGuSC9GB64MRN9G+mJnyfbTt9S7btDduybWftyLbF
+OyZUlZGCF1OtDHggZ4GJhjlTiAu+KUg3UBtvRFr6br0+a8dS5/90pHUH5/c
V/aLebsv+tmt689rPv2TfzS99oVzS8feRQH10DMLB11waqIfqikKdP/Pt2jP
oHja6OD7N7+9/1s6L7bRntxJe3I3nWk1tEf3j3m25iABHKDuyGgBOaKD2BUl
DHT0uLopFE9LT0WDdJCBrsg8o3iCJgLeIw7szOpJPfViyQaaiDkoJeYQ/MwZ
gTJiLDugFc+DTikXJOPiShdBH2Hhh0VRa5zD0iIOYg34ANc2QFkGCO7lier0
sPFsROdqEhpLH9Cs3P5EYEQQzGu2om3gqES3Up9o4sasgprNUnvgwIGYn9uk
IE7U9cweb3AiCNhYhjnrXJ9JQa3CcnZWrjXX8ynO9ZzLFRqiIinoR3Kgzxhw
QJiSUAC0aBU8CJBgtGq4yG+lqyTBEbWWdLHM0liaTPaEtQuAUVy7fS2Lx/qL
5wQZbZYr2w5waNuVixVdpdnYr3t9g4kSLam3SJbxQY1FhzxarSaqVtHQJhdX
zTBdsjfiSrByD9CtBe3I29wU8v80KJiTLc6u8oYiH0AzOgrxq9/8Zz0wilOa
eCtmh+x2xI+Qz+s9v4L7CrvfUyFDMu5mB8CYJ3+JMEYtI+qEvhUpcQg6Wlza
kXN8ux0DpBjVZRCJhTEBnOkJYGoi8GldTPJ7dHvF1+w3SAgnkDd5Syz5v7I/
eneTNsvfTNiIFUGWTP9kGZG7FK22UzZn2xCWtyF4zBCup6/bwnCcHreO3pjg
4pC1EaLjOGAR4AhghOc+HL6kKQfmNsfS5758NPWXZw+U/XJ+TYuT79x+wUk3
rT2v+RQruMw8q3h4t9PiA1FwKfxNbHhxCI5N0KXd97Zl7ID4PJ2+r018ce+q
cc/v/Y6AcDMd/Z20KmjtG/NczQH6GQASLDBidCz5X0mgmlaaM8nsd5xihf5N
AUC01QG+7nnfeR7HQuNxY1QaaQpYJmSiHpcxxNsESTrr/bDxLtxM/KEb8eKG
lBNvlPmJxQygCDnxyrfpsCpwPueTbOWKWNOcZmM5ZfcwlIQlg+uDBhLLOd5o
zccJseXMHckwjcFpGtv+Aox13KBYxL2yz4nUcD5qgg5SehPARq7P2FRqZuec
V01txL/g8q6WOSYrEfSvJPisilhJ8BXIlLR/7nGTPVBn6DG/ssALMRq5CgcA
BQkvNOA5vhj0HqspQCT4eQVHpvWnfyRFl/yIj04HcDccAKrIjW+EQgTRLsqf
naXHRBqO63fjufqvasVKGFE4mNfA87KHq7jiAYxns9NHGOmszoHXEcDTvKI4
Iib8yNcC/j8kRPaOiOyG2BAugiMWMR6C9LnVEFCVMDSW37iTFxQf3YhH4t9D
rcLGhLeYvj3u0DFM6En0akWQpIh/abW5YXu24y07sp1mIw7tMGcXuOOtu7iS
TYvuYYRdgSuEZGZI5jBNDC49dh2jFILUoV+J+eC4DQJ44ITXbonwasJc4yFv
xHuh26SQzInBmrAxxigZgYPSP80uryO/y6ZGfpttOWFDtuU1BI9XbxCTm2Ff
4+Xx4lEei4xzRhFgSYvuEZ+MYAZG52+q5yfijdj2vdrMea8eS5/+/OH0rx/c
X/bzuysv/NltG8874frP/tH0ulfPbXTVgrNLRqBBBzUaSJ5jCpt/FNhk2d+k
F/cuGP3cnldGP1Pz+uhna76m/fA9ra20fqC1l37mOCXdB6cU2Cxl2OQMIyjl
K1yi4dazG98IKOXbpilzwXOcOae0Xqgzudr4WlbrxrecxwmHp0UeIpv4Gohb
MnHmTks6auLxnuAroXMETCW4BroaD52urSwaMkt2rkhZwhijZlreMGo2I+xt
8XWZmFhxJsLBD8jJyTCLuJsw5Eu9jcTKPhhOBIwy56rLRFXgKh5XKFwGjSZi
XVw/dI1x7Jod5fJze3Vw2XXc52cJAXXqjHgYR8J5g+IN9Fwgbclizl7CQTWC
6IEuLedSc7kaWWTpEq7vLmeAWzxUpcUiLXWAt5kjF9cTbpMmDmAHCpvceieQ
CLJoAlqNWitj0fGa8CK+TfC4EjwJJBd9F1ZK/13SNSjj6wDJ0cXi6osDPgh4
Fv97tyVK+H/Cg80umyPqeys9KNKbErHGXKfkvZNdToFNt/3AgWyCEakk25oQ
KUOcLU0L6AQoxCio8lmY/buTIdHgEOgDxwNGw22cx9sm/O2nxwtns2WEcG1m
bOUSRwdCyPa3+MydlYdb3rgzlzdOYt4IvpjQxN1QjqmHrBV4RFw9kXig0kN+
yS26Nv8oa2zCrLFsrC5kJ0evk85Dipczg7/IZoatZb9D3OcXHLo2hMYhaxMA
RYbGL4VHCjRe9gXxSg62B6wRXtntw2yKeeVbxzKnPn80/dtHD6b+7b69LU6e
u+PCk27+9rxmU1f+vcmkZ84pGX0z8co+pycHnvXXZB/wyqIQIJs1H7+4ujcR
wwWjnq1+eNQzVQDJjwkMvyXAzOeV+2kBJI8QKh7VwFvi7iSD5NW5vBJU6k3r
5bnFl2EKtQV51ltiaGQGyNdqkYPbfF/d55o4gjZkYWeNvV7tRAHTN/0oL5uo
Y+k6o5l3q1OpNRkitEY9wV79R0sXopgoJlYltYtrgzhWh0oLobTh0pze0+9k
0o8aq5tftMw8aiqOz8+IYA0Q1FNnzCL5JaFsjQsMg5xejoHAUz9SGm5Wz0/A
yKW52IPCCp21kax7+P/EB0DvJG5NghLO2kq4Rj36hMxli4urD1frG2afAadW
G6690UPZUXRojrhWdMqIdJs6V2uNdhk18Zo4n2EdCvconNM4t63XDom1zqyf
IByNK4QyfN4VJP64xCGELimgpROAEeR240f1vg/Zyz4Lxd/FDL3EEEz4JGrU
MmKSjlzS92YWZ6+gDx+/hT92zwUSbhuMK2pD2Cupvxx5mwa5BFrwfTH+iIlI
+NqOHyN51Q50uWh9iwGo45PiqTptm2eU0XEj3y0a+TbPwTCuf0zdkm0/cyvx
TQp3b9zB9W1urAGKE3qmpiqnJIRMjfgG3E6j77iQSwAaEbvIRcSWqiTGWYYX
mrRJXjsusCqEElBPt/SzCZvEE4ygVLhlIwFStG8DmRHhE2Cy3g8MsSth4CUf
Z1N9PyNQ/RyYaS89dK3nmF/mcswEc8wTBEn7r5bVe5XwzZbLajOn/utY5ndP
HE7/x0P7U6fcU3XRz27ffP6JN3x+XrPJb53b+OqFZ5eMJL455IzTkqylVjT9
k9DN00Y+XT15zDN7gabP59HNzUo399DP9imSgm4ePQ7d1I4gppthqebmdwK6
KS4TTRj1nB/mv8JB2VIhwQluIx4MsG4AQjkPAjcmNWlmBDkZQxEHBzpcIYCv
G7tNSCCtjdBzvNkPZrZJkvEAY6102LA2mK4Bo/g2CISzo571I9Tw+CmB5Z2l
Cme8bhPU4r797xUdWiG5Qj8Sc+jj4pilKTApmpQwZoUaOdNmDHs8NImqKVS/
ZPGgzlWkJcQvRSRvwLJhYusnumckJAr574DAeAfdtFIi2UHgDX3H2UtiiUGd
ghe4EvqVXZcfyLLrfwaKJrWzxnf9UVysc+2SDkONeSKDl2SiVYTqLHMkRJAB
fpooN+manukvOs/NbfgjsikwRkzvNrUq4CfoQW/4knvp7+hdq/Eqkg24mDFv
tpYqX4ni3OsettSR+nGVAmalaJELHEIzXmrvCqGl8MskwyNgEFCJtyHxO45v
AX+GgMtWQK8bHVxG9bgmx70S/U726cFI2d6kTXR2CUoCnTbyShFitkFikLhn
K0JL5pZanE4RN2Xqd8U3Ebhf3IW9cY+LJYJJAEywQzwcwAcyyTipFHfipsiz
y9IfZZdlA9cIjHX7KJvq8gG9/3TnD+gjwvB0hrjLvpDXHPylAHRS8JIQUfhl
3PPLAWvoIbhtRlzzM8FXjKfq8kE23fbduvQ5r9SW//fTxzK/fexQ+lf37y07
+a5dF/7klvXnNZ/2PkXlT5xbOu7qc0pHnHNW8eXFIToy1xwy+pm9d4x6pibk
ml8rOm6n86ZqlHFNCciRw8zlmkWMkFc9LwG5GxThazySwywNc5i88vmmVZEJ
J2NSTSnkn09cvDcHKyVTeCAW6ThFkw4raCashPxmjqOf02CofZUPioudszGe
Ae/MhMqAq1FuZjj3PPO54hhoPHRwiXkDKe0/wd9PWmzzu5MuVzitXot0qY4C
ltqRdQXakEbgMFQaPTkAtH4WjpT5nEbizOosQ6TOErMkoXUHisOLVl9EItKQ
pheGLlxpsTqLhs3SOggwHmGEloCr3yKZj27D6xgoFSwJUZ3EmNFLVL10ruGR
6HnuqxR1IFKJD0kakeFToFOEvcWMtqB+oICGoqB+3dTqr3ym1jfiQcs0fLBQ
FGEtHQuHofCdqwYH1gsYq+f64lC1Qmghqiy37c62hdfBbBA/3BZmO90u6Nxd
LAVdalPMLIyK1nf4kQl3xXoZEqzF/0NH1X2Q9voC6CVOZGKE1IgoSCeiefR3
80fsbLaLGKAR7eNxGtULKRWYZToa10zjtZsluC4II2gGPwbBqzZEYIz0T6fG
byCY3cRtiSl6wjQI6ITvkWiMRa63m+meg7S1TPKsHgSgBPkcD1bJacsATenZ
Eezzg0YrxRzeAMVkNE0RmpZIV0/n93kx9UQoDup5ucb0yGgyDWVYNbb5k1y2
aZh66So2OEv1+oRfLN1uuYhy/vxPYqBPHkn/34cPlP3i3qoWP7tj44Un3vgJ
4euz/2h67eRzG435xz8ajbZM55+Fep5PMGbU80kCS6Oe6wlkAa676Gc1FNRb
gSiXepY46ok16aW99agn0NNstSC5U3AFE8T0bcDH+OdzQBUMKKGtMflVmDDb
qPhqjYwS4ztCecCWlGOSOb6AmnGMib63yJVfjPvlTg+pER+XRFgExvlRkIet
efWYQnOQ0eEe5jRjKUcRmLyo78ImQtI9STriXwdQsiB4fmVhg9UYSzw+rBnR
vIqM4qVgrFSsQWtt5VSsGzOShuM++YRHiH6/5BZwwneUXhQFJg2dkyL8NRBV
7LLumYRzaYmdyHgKYW/fhaColVrLlhKNxM5V7I4vuUS1ZVD9CQCM3fAFIARM
xTCrkE90gGlbzeWhjAI1cJc7d0uHNWuCOfW4W40TLK5OKk+U1e5WhlH6I6KA
BIEhlGEmPd5RaMmozpEKpVyoy6vRBTaNSJTucQaSDkk1qdCOEZTH3kcBVc3M
lFcHkxXTMYegIqxBRQnhPR7IoT1rc/gaw23g120Nc5EYJxWBoUbCFIFwCcE6
wBpwb8z6CEwRHyuCdvzNJKWnI761oFqwNDIsDQD1ODUaYotJrnCXIQuA6BwQ
SvF6hFcHtI5T3A3JakhUgXpKVJNMVEsFViHKJojl3wNawUg9cc3LiIKxrslj
rCfloitW709Z8A32msLzI2sKp/HTF9eW/+GZY5n/fPxQ+t8X1RCL3XbRT29d
c8EJN7x0XvPpN/698TUXnNdonILs/wjIXkWQNmv0s9UAWbDXz8Y8uzcsJ1Xn
lZMsUyoge5KrwBt7dTqSN+o3rNsISdQ28ugq+n8culpVE9gHMqeaN6OvEUfL
CafUcwO7QWaTfFdDahu2QQ+e4qXCZuMiA4+kyCp2L75bReUqURAra/EmwNMc
v8G4t5lvziiH/0iUfZKN5GSwZiQnqFhlvM64BE4j1O7no3o5lwoVVtELZMZa
A8S1hYkeq+TUaMvSosMRwoOLJp3PtlneS2BP/7L0WTcTFqg1DEAJGA/H0bdK
+4qPoyvMactMUSUz2UUVxZqetLSgVFOa5FSZAW8omKPDBiALk30Q177aktjX
e91wHgFl4JvVNXoq10+0NRHB5lQhqMjoAVNFtSKNieq0gPfORgt0eC+Wgg43
JyKEBqoSmiaYizaqxwnxblFC76+VM5m86kA1Ls1JhqnHnbks/j6N+WlAT5EQ
sSsVPmAAI4J5vCReHkE9DoAUosz3G3RfaveMpvgDRP7MRy3kZyhlJrrFUpGT
rK6N27gRUeahwkZL5T6AzLrOUZ63Kc7jNE0JVL3iG0HUWNxK3wDUmIfVyIo8
l2sXJYEZw2oExKOLK+MaaCUwE1X0ses8l2W6qgBudHWgp6tpROnAUKaqH9AG
JmRNAFrpW36QAeugzx2WD/pcxnDZEjztvzr20wBPP81hq0x/CU9T7d7Lplst
y6ZTb2XT5xGunrME8wyPlf/+KXhR7sOM17Kf37n2wpNueeX8E66feX7zaX8/
r/HVObja+Jyxz+wBthp5fYdw8wvaNlaF+oG+GnlFFQrkNRYd5W6fej3uE1/c
i9bPOktSSuJUou28+J/+S6JnVvYZo84w/OR+aFLoE8gkkX58teYJtBAUF6RF
xJ/0c4ter9/azRWgl71f4YQX9rqqk+vZu1+HL6EUsUgo1ICH1GTrsZrcqjRH
2UxLgL0J79AQ9DhKxfyEnCnKV4gVGFctbKjB+OclBRD2fqMXiD2tZeav9DJ2
u0dpy4mStrzHLw+9MndpsKYtAb3DHvMi5SGGs1z+qdYSkHRc5o+stxIQaBao
FQWYgm/0WKQyfTloF6czESx3vnO381uN2M8hILP8MwbkgEpK16MKBptI2vE2
lhzL7+/wCubeoO3oTJ8vFX38wyDYdC0otZ5HLcEUsmSk7U1SnIZ79sUKvvSE
9GIdUTJH9bzAesEl0UkLBLY1GsJbcUO4QS7Ca5BL6bfvPg9WOzg68GG7TO3U
Qk4bOQ2/XoNtyoskX0r5EOCP8fF2mlvhvBcBuC1vkisdYn4h2sdRNgWeHcX8
7lvepJkAkHxDXRBXrt1zghXlIJBWur3qeyOsMWGsCSOVUjniDvtp26DWMcjl
ytC3vjI03HUaCdTG4pJgHSxJTwvHCfCaazhuazVjIj/wCiW0YxRw8cR4Ejwe
RLL7R5IG7SLA+kGSgbVEvCc7ymJUBEoCNfECArZA9QRDayPB4HySqs+tJDWb
bk2getGb2fT5r0dA1liJt3X7IybkwAL9od1lp9yzrsXJd75+wUmzZl9w0sy/
XXTCVMXWv9TnrKhJfUIrrElV59WkcjlrMoezoiZ1PRdfZrrB5DytUzsOx4jp
a7HjpRJGlbhmaatHMVm1zsYlzppRijqFruAzTRsd/dgPUFJf32HF38M53Soy
ybPAzf1F0MnNjgxGNVw6McLnGx6d31dM/Se87aqRlOM7Qpe6lm08FlcMoK8V
hDiRaqUNLwTsek+Fn58eV7ev7vamF1Rm+y+SDnHOCSiCcqFHmx/xvWRKB7Au
xxkgBrOa0RmElB3RH4my0dnMBXQNsOdIxrKTKlQYNS3QBmJatyYjpoqZUfTp
pD2QuhJcyU4yTOA5oezrfjenK2OR/gleJzXVxMviN8FdPgWmEdyWUAENKs2t
btiebTdrh4hoAJm3SS6gwxxCRHouFtD8wElKRNiWKAXha6kMEUwR14sud1Uy
TiZ1oBfA7vJcpHQX4dATU2fUWLgigqUmoabd2X1g8/G0Z43+QUzx1kBg3bBt
c/dIqhQ0Z1BgAaMmAL5shnFV46mTuDyOhnckSSnEjmuGNIeTonEJXBZgS0c6
cPUokoGryAyASY78VoDOIebaeFAtz2GkRg4Hfi6klNfn+F2/1XFAGOROAE6Q
XHteuGz01gi/64cRh/lxJaacO+Xq1Ptxxk667fS+4ucK3Ouwgj4LxtCeAYYK
YAspLc3Fz94BKUWgDxhut1xIaYs3kWAQ8MT8iHNeweyco5n/fvpg+j8fr0z/
6oF1ZT+/e+lFJ99x64Unzjr7wp/OzAHPnxsxtZLVcqKLIKZWsgIxrQ7ao6x/
1EpW9YgpbDGBbDLHbo9l7Z92CSed12n0U3FUmkyKGFi46VHbKfE0CPrDTvAI
NfNYnAeI6s9jPLo8Yg1hkQvpBzXstyAV1GKmXaFtzaCg4qORs1R92O81oQWd
+n79jXPMcEyyh9q7nYRDdRQpXs3HxMLNgjKP9IqLoEZi6rsrXLEn4T2sG/Mv
YbQF3R6CZWDpAK36IEM5SP8db/sgs+wx0o+HBmijE95MK6JAhJkNJykp4oZR
DoDpYg6mGTtR+yEoZaXhbpP9KRAmXe+4sUtAp1S0ixm2EMZ3IrQDfW2Hfu4p
W6xZmzvDrZiiGBpLBJ4Q21zbJPq6QT9R0E7R71pfvz3b9sbtYgdBmNpxDkCz
Pbetcyf5rT+4ig/+5ZYa5SMPia+d76KNQShaoCCKNic0rQ3TFKqjmuFEhxGs
ItgTC3t2LbuiQwW1YaGYM9WI+2WSzG6+DvZ0O7MqzyFJxVZh6IFeNCn5NXUD
p7VjgS9MLg/AzfZbBFA9qEpBaGweAbXWJf6wp20vCHwr+e/GBJG4BfsS4Svl
FNMhh6eFgqV53JPL631W4TF9PqPPgoNu+hlnX+lp+XHANoFUj6jCPwty+Ccv
EMj2K+LQoMea8V3+e+AlQ+pqj6F9jsNBO64QDL3ozSibOe81JqFJcNBYUW3m
by8fzfzP83BNqkn/5tGNqV/et6zs5/fMavHTW/9wwckGon8VBoqav5WmXiKm
+cEYAVCUpixratF9WPMXBlro8BM2H1i0s+qGP7mnbhinjoa7koi2P0r+UfKE
kUgSnYtZ0qYvuSWcT+pCVuPRLoBIXWN5ytJL+2xFvqW8SIbPPSneNX2Cnunu
gqcJlSKzTBG1D+zovipTNARSf4q4GUB4EwrpnuR2SXFTLHAd5gM0SAaW9ryv
0rTg2PicMbtNQCavzsN4mlBnQ22TdC2KqgIsylEBduUBehUMo32YltJr9YfL
az+mmIBWng69wPssdlPJCzGZMBHZJAc32xEIdUCBh4CnsxqNdZbKuail6Wsn
7s7UCLkB9xw6nmBaglmy6CzX5AAFW5zGWy/pPG6mkebt67Y401lTTqPE4p11
PJryrydvETRtYj2UbkHQ2Gr61mzb67dm298o3o0I9tvM2uF6J+kdRiB2qALN
EnDFB8vOb/OR5OnBt2i2AKiy1vRxB6p8tfZNIRKXXPmk82WPmRIriEuMlkpU
IMFAKbuB2AgzjDbjduMFOZd+SbPcG7qV+NbZJGdGpFGVsRQc9TrFUXzC461v
M6lVn/WqUmdSGovnGYKUelaKfOaVASMdYkUngk6sQZ/jaBLxjAts9WfoAlzS
bWMPX30U2ogt8t+CNeJ3aIICtHX70IXv3CDFFDQCegJODTeJgUZ8e4JM2Gmn
qy2tNsuZYHL2E9lQB576DnrqK+F5QEJbLgUJjTsAjcWFiKIC9fdXcY9ui8SC
+IwXD2X+8GwNRfYb079+aFn6F/PuKDvl3t+kfzI3B09/+edRz1YZKQWmAk/D
StTuvErU4TH5pJTAdOQzNbXDHt9TR+FpHe2Kun4P0teHq+tod9Rdrsk5re3I
rktYRsnnQvNCpmc0ZNJ5ygHCZoc7qG6eveIpYX34O0PbsMyD8o8qOl1HErdQ
PuC0zLE4R/lxt2clK2V96bRJeUKBq6z7XOTQx3BWEOHUYXdDeaAUc5HAudEA
ls5Hlcw04pcBmiIllp4prTAW5oFemHeEoO3uAg6ak74N3bcsCc5K0ac50xMr
+nTQzGWPe+A/IYUf5AKQbISFNr7HVaSbSiYRMsJOu7GjJdu42AMzBzjttLvJ
MJbzjvSSSDcSUyW4A7Z2VAqK2LyDyJJETRgPW9FjAl90vuJcxTmKKA/RHs5b
MCT08ExSSSF3mouUcUthfmel0Fe2rOAOIGTyWk7erPi5jRkqRf4RrhK045Cn
QL4CiUT6bCI96gqdDJyFuGVBk1q2QVWmpDQKpnsbMVClv2s9G6KDw33rWTOX
SsEFHamloSqbGK0NIoM1Y2qCDYeggp6RGykRS+YwUb2uxsxuBNcyfM48ERsX
I/SOWv2e2acwUO6RUgZalAug+kc4CCO/k3wlABRebVxd+kL4p8TsA9YAQD33
U75ZIDywn8bTAFHiqEJjh32FCF+ndLtaejeXBkUgHwFFE4aizDzfY+IZ8W0c
RuuMnLTws7bL6X9Pt35XsqV4LiApXrq70FtOExj9vPANAs/XGUHpg8v841UB
T1kR42dpXfrcV+HkKeucV45lzn7lSPqvL+zN/Ncz2zK/e3J5+v/cf2v6lwt/
W/bL+61v6lQpPYGcWunpBYIagKmVnqwhNZ+caump+ChtrGO0jY4ReNbS3qsl
eKqlDVFHl9o6usTWDUJVA3AaK6gb+gSzVlM6WoVcK6NBjTTH6dGVR2MnyhU/
WEMe94Ugs+Ew1iAzHcSpwsLrXv5iHzMvMACou/grX02Ek1pQ2ZX5Vjlus2Kg
WMRZSU6IqQZcazmMpgMe0uksJ/IZ5c8WYZwoYrhOF+0XRDkHZwQsv1BZ76AK
n07aZN7ZkpMJV79J8Cl1glP0uJ5xlVl21AYiFG+Qk4QmG4V1TIVGjNlBMNRS
bpySLHRVHOkNL+EqTuuZhqgUPsPDDJH/HEHXjlJ7ipD+jFSWjVdvjbnQswCh
dOuaz9GEIxk4JN3otlj4D9oQcSpfvTEXU8PIHwSW4VSjWCGnQNRrtxB2mTbS
FtdKCFPSE7VnffoWtgmHFpL71rWjk4UJyFJ2l5uqQsmmE7DGeZ5jCUMijuvw
J71UA3tOuuscI42r7zu2gbmwh4iKPYDL8chngkHCjaRX78manDmUgW2JKzlp
qJ9vWOdqd5wXJmxUab5q8vX4grJD7oRuqKulhq+aqfp2JcUCrcDhEcpNgYMG
qZIWlTo5p0Ij4CMSpnksVPWlgqRIsAJse33q0c4So0ZFkwJ+HYIlYNruPUHP
JoSk7wqCtrKvy4RrdlopCA0eiiC+vVTnMxcQip7/epJRNG70k8FTILSRFO79
OkbrKMHo4cxZL+/N/PG5bZn/evr99G8em5P+t/sBozkoeiJa+8NCE/KkYaHJ
KKkVmoCih+mIHyYKemTAgzVHL11UfZQ2xtFL7qPL8DFc2BvX9phXVUvfAVXr
aOMwVb3s0Zq6IY/vyfFzHJHfwRfLnzUvir38IQXae456EDFf9PRp2EVvypVv
UCD3Y6Yrffem+CgGksgoN8svTLSJa0cxkyIUjcHl+gX1ncsUWAeLdTeANq5p
sb6BFtKEiHhhqxZoMVwTlDB0BS9V+ERij+s7LPJB0NyZazFdrDouFfKwDu7n
MqOlsqmT3diyznB5epnUYvY9+D10MNphE3O2Ei43qXE2lEg+X2mRtnBG/O46
iayBUzDeaX8T/seOt+yEJIiAFzUhpF0xLQZlrDaYZ0PhdgL/PKJP/L0NfeGY
0nC2UOgRfmZYe5XyK1EienWiYq7vWscbk+J1qNBxTeXQjBNhQysjIUvr6zbJ
7Bl6FI4IYKqLem7yfpHrrlTwk47DMtTKDHKxJACbxV61eZVXeJy1Seih9Umf
+yWJcOn9klbiJmY3hrPAmUwbexWArbIdHVifOLFsJGIvy8D8kCtcjdjuqZAT
AqjulV+3mRes6/TCnh/4y65oUl+byh/oRp8NgGP75V/4AlR/1r7nctbV+ZxV
7E5Kvd87fgU0hG2xR1pfderADFV4KiL2tiFPjQu6tlwGFMXP6Jb+2fKljKpc
pSIUlzm8bwNl6TGEsyCq571GZBXrVayIE6dJQV0jqkxWlxDeEWUlNsmIew4R
178R6v7t5X3pUxdvzfz3sx9mfv/09PSvHzyl7N8WGHk9TWC3zZinXXnKMqtG
Xk25b+WpfXTs99N2OUBk9UDv+6sO0U47TPvuCK2jKI9Gx7AhG9fSLUNvrwUg
tZYZ4KxA3dDH93jY1VZMl/kPYHeEV6Hr7D51eYTEBvNReUSL5kxp0c9wm+DE
FCDvEpmkZ7VR9cJwtrUKvZwAUEe1oCVFm1Hwp004gdmd+B4adfpqLQgd61YT
Agbj1EGmAECvpxFORzw1TtzW2kUo+kGD2kYmuWYBEHAPGT8WAc0R2qklIe2x
/CGSkVbWaSnnVNIRVkbXOTbchTA2zmF3cbadGtHCGty58RgC5VDDhmE17ibM
MJgRHefeRZypU7dkW9OzwggS6cv2sxhss+1vln4lpDExTQs521boYL9eS9ME
8Hyaivh7+NeF5kwJpjRaitHEYkXanfBElt/x5hwVuPBVKXBz+zpddDjw1bp2
ZvyGbPnkzRwWcDZ7boW7nrorMKOp5FPjjrdiIOMCiTl0MbJGQL5Yc8dHBz0s
+9nEIqhgqiEp81RpR5NMgKX4+6l3SkOOEUm1UgEtAXz3DbDW2tjyrVSk6ywe
dp3FcqxUkDVmV4CbdjkDPpa2ztwZOktJhJEMrVTclTdp0YPJB2RJfwFdlpHC
RQ5h+FdCUwexHJT5bQSURQo2l9omvYFKoZBjNI8Cj0FBQW0ZaFcCODuuRNDf
fkWQUjWwPQ6Vbbkswg+At/gVHmql/cw72XSLt7KZCxVvI0At7JkJXTPCa2UB
XRljG0ta4JxXjnJq4OwlhrIHgbSZM1/eQzx3e/lfXviw/A/P3UKo+8vy3zyc
i7b/YfpV1LKsGcBqWURya6Dur6SgaPfQx6qrCE5q6Cq8l4BsH639tEUPELIe
6nZv1SHaqoe7C+oeo6+gu47s0tWbUwee7NbUQWsiBa4aSRlIc4AlXjlX8OQe
q2INfSynhT2BTUwXRA69FkjKH1sReUdpM5R2ww7aziNSwM6uSV1hNydj4PD2
Xu+a5ne0/Hk8yG9aMzvyl2hgRz6zjyqHIHC3RkoeqL1QiDbO8za3cIoAHGvG
DkCE87rQfibpCmzsUDg9QwpMAK72t1hxfpez4XXd7rfj/Op0O8J087hsf6t6
XIpmp4krLSHTy+cYXh0RpGmvERqO3xDothnljDF66jvZubuJI7mySqsixYRe
NoWgh58EYxtaTtmSbTtja7bdDKkusSsHceGW15veXDTnDMlXcYO66ndwLgrp
ldK0lmG4XE1onAz6iTRJAOCesDF2kiQfx633S8vbKXw/RRgdPhHOd8tekT1i
WKzZJE3OJhiFkw6FcXj1ECNZe38Vfcj9tMMZbPVKtVXVWW6akq9xyMsJCEJU
Og+86NX8V0Jqa5murgGfvfiuH/NfSbijLSi7UzZBKedusd2xHXGqtLxppwPd
fOuVyGeMGjYdjZzlvNMciPgVnzsS6kPWmgxfG/ALBHPN4sQcA4aJeVXk7PRE
U1AkylVNLjiqa4Wtdu8ljstqmwurxc8AyABoJCGQT4CSQGarZ9Ppd7gplTAX
WVljuQS6ryEHi2TCuUtizWozZzPYCuCes+QIFgHuIQLbAwS0+2ntoe8rM2e8
uCtzxktbCYBXlv/p+Znlf/xX81Z/XKy4ezrf/hTSVmO5UF3l1LtGPl2zngBu
U59FVVtpn+2gw76bVhVhaw1h7b7uwN17Kw8Ce2lbAnePAHtBEjjPUFp7CcEu
bdRagmsmuwy7jwnZtb4CbWCNRXpxD+QrvJyVkfazS+KrGk1F1bTLL9EmFmxG
Uw8BVrDZcGlvM9uAeLc7sTqLCYe1unQLuI7zFUaBQYVEtoRIdLpTDTqaMPh2
F3MOnsFqhaSeWkiyplOcEJaPlYYnZbpx16CJRCgQFikGwiJ0J3EyVBOh1qdJ
6Mqd7bG4Te0K5jnEQ6cjLS2dIF2qaKpBSG4t3UiRurToejlLDGut1HStnl2c
Ct0auFk2bH7EZ6BQnkaqORc/j1ZEMdtMlfxoq2lS1ecR29YowLr0oexphCaf
YV9Zww/LfNgCKUfxI23oXwkw6/+h14yrvg/+l42apuVGJK9Awlu7aoPJKvnF
x6zDL8boRYeIfIIvi6W8i7CDgp2Tm2gQODZOzJhsl1pb4guI3dqIIXTAgx6X
wWQRwA0OGHEfNcgyb5eivPEHBe60MEDGBcJ5uyQDb5cfLMkUM2MXsxJoOWsX
nxZOLatC2fAUUqFsXCczhROFLQ8V947P7pInoUmph18cFHy2tOm0ZCb9A0gr
iAY1FvBdExfwijH6spkKIBh5ClNjWSOVEd82yxl8oR5gnrtMvrZSrqu1MrRr
cZtsqssH4uRyikAwHl/2lqRzAb8KvZlzNasgeduQ54LjHsqcHfLcl6oJfnfR
2lJ+5ksbCH7X0s+XZ0578brMn54vCaH3ZKO8gF8TZi0f9fSe94lkvk+X5DV0
YL/tMb9yAx2bjXSAtxHM7iSgq6BtBwiu7jaPIXh/t/lVB7vPr2T47SHwe4wh
GHuyGeC37pIFVXV0ha+j3VU3mOFX0rQjgkYYo7uA5WGhV/tlj9TEfsEbs+8i
SX8ZBwCnNV9elJdQ68HFO4XGRoJeyFzaagOknEA+xrSUQ4C7lmeIWYGssxdy
unbDTpwxI6rRWMSTmIg4x1exuCR1J5vOcXrCqDhv5+nIdZZN22ajGadvT7rW
U65O0BbDkAYAsOmK0HbUiYC40xwG4zj3dRZwftbytVitpTk+4qRxQmgLEm7c
uA1G4StRI7/Ldc/IqUZtFv6qHsUOgiWHp2y2mfzcKlHs9SZoGyrUyynobDmR
1rXEepHxnbrVugyshzLwyYzFc4yE1xZw23qBvGOmuuu8bGj89+ZSLA3zV6u/
yNj1uCe3+BtcXOj9FiqW4goIeMHxyMdSXMEVRxlF49hkQmSTnLUC1NkSVQb2
ZZHThvAcJ3V0xDZWPXc8Vy8T5Tu34E9BLMTG7HjOLQW8x+x4m1yMjzcdeC2V
WbOM2Q6AvWN7tlRHQaW0kZXFzHZAUkyWCU94BisWLuI+0FgDiA126QosqtbK
ZdG6R67wmXnvPMDX1rVmJOj9UEvVU/8Lv5D4NYoLemv4atCKntiQz+L36DZA
twIRWgHVX+K+p8n4+3Lmt3WZ89+oI4AVcEVBjPnskoa47D7msme9XEFAujNz
JnPZDXT/K7r/Qeb0F5cQsD5BX68p/8tiBdcz+PYnxmtRNLt1xNM1D/d7sOrR
SxZUvkBQ80a3eRXvdbu34jMCz2/o6zo6aFvp5zsIUHcTY6uk+wSulXsIUPf3
kNzCwR7zq2PRkUtAahlgQWp72kIRjdCVCe4jILh7OK8gBTLtjX2GbVL8SB72
6hyIMj5zWen8RrUVtXu7AKPjMsmQUsCg2spSVA5QK8ypOOSx3efpjJ5EWHKQ
ZFgnbpTvcJt382gPN4/ZbHY+G91LZvFrFqCosZRBUFTGYTeE2TlSeJ+3lR7+
xg0RBZlPMV0C7XazrFl+hxSd2H697c0wf+Ki081qLIw5QCCxCVHuILUqdkIR
tnmSUbWxhOMjA2nh+KDOPzEHXR3KikQ9qcneTS4/QI8XiohpE06qLuE6QvX0
WE1QjPoum0Iqb4DoyfnMGaxeGkMCC2I1zYwFRp6mWM+TUUbONs5qaSPyJJPj
HGkljC3yXiCWNLHHgfTi2kawm+DdIzwWl2NORSFvfleFbRWPu5JDoOdHx3GS
cwJ9tU8Lq98ik8Q1Fo+yR2UAwVA17LbKBdQzV7+wz1nhqmGRZHQD7WIDFjDi
rFssjbQ627nL3RWuA8Xbv4iBF7ILOFGYzc5hNptj/WJOB20Vh1MulxtgcJAp
SlgGh2MEpq6xSC94FCMU+WDJemvHrFN7AkbePL8XPuoOcYXLJvgIl2inQ1CD
Q3K3i+YDLJHLnJYZbJsfYbBxcc26mME2xj1jsZ/T7Uoxvkq9U5e+4E00x9Zm
/s7NXAK4f3uZGOwrzGDTnsFW0jIGu678jBfXlJ/+4orMGQS2Z7z0aObUxbeW
n/rSKLp/Tvn/vBTLQd2fgdK2H/ZE1fl97t97Zdd5VeOJ0N1BSPoYHcanu86r
eIXWO4Sw79PV/nP62doG0Be0di9oLZCX1iHanYfBZKMj4AWnHO25oPpYr4W8
uH2BIizJ6BLygtte4VMK/HX4Ezlzf1g02l+JxKVaO0AYrQzOcLeAT5wTecfg
6o2FqoARGOzGhgLCBsoQZuUeC9G3nfbQaB8NHUN6cVxgb9C+TFR5EU/T2Qw8
wMywa4PmekNh6XrS8kTk0gmSKvuJi7FRLE/RTs/Q37Uiigt/zfYztTSFrnr6
yp316BCbJbnP1AxpD+W/B86oBUfcUdq49d6Ym8YYV59i9NTqf9zOKqusmUg9
Ej94Ob8I2Zooln3nF/gnoj70meMMsR51yCVxBol/kagsk9793dZgRdmcCULG
eHD2wWvJkgijAp6L1x6l7yE0dYI9ydTtTGnlylzMO8ZNHbjTbwfDVcVU1m9c
KvkAlcXhNs67EZWyy8Srm24bMa6a/gvyb0i14RMH3zgev/CCdHePFXz1XY5s
o5HQtpz8VNrwJ0xs3YhTacgcY6MavGJjm8y3lQZw4Buc8rLuG7ECaurkLUiC
AV+DjEFoBuOtCfQSW6Y+MBtxuENCOy5ozQX3RY5pmlZEcSkeowLbK7/5cROY
mPfWyjH5H6Sph4FB0wPMAc0VwKpmyBogIdtGwbbT+5yoZfWW8ltGXCK5/LfA
WSzYXHd6vy7V8X2Z4NzirdrMBYy5xzLnvnokg4zBWURs/8bEtjogtltorc+c
9coXki1Y/CKtBwljbyw/7aVLCXP/0fKPzzdv9cdHdMjzWXz761/1uK/qD93n
7T2P4LR/t/nVBreLus2veJZI7lL6HlD7MX1dQ0fva/oZMgmb6f52uo9kbjX9
fg993X/J/MqDPe+r5NYFgtgjtGmP9lpQfRRQSzH/sT6LqmuJBNT1WVRVN+jh
ai6ejXAEtwlf/G0ikSWyeuq0IDTno1+qFQdOOyRXIPmCYj6HmrmMbVuFV59v
q3QlEG/77soO5usUscFngfCDOcIRsDTbFTGTbsygiowkxtum6MxOjTUF00Zm
TT7lqaV+47go4voCWei/GZe5QmXXbYkDZOmTKJ+yhft0YPpuJaZWM7QtdIaU
l7i0hH093mAVrOGKbzy05pjGEcg2UoDNTRxwbnOip7ruZxydX+3SneND5pjM
9X0Hg+32IfhE1w8RbfT8xDf+9FttBZNBn8uJZIgby0kiOCcQvTV10eUszmRG
G55+9nv+W7HJG/Et3pdlG/D+gLRS2kN4QcjCl2Q+lBGXLkv58GKngOKFqMsS
Fe3XUqWBMtdip9MKmSs4AtgqRsneLAbw7LCO+UPXG+IGZnFjbNyPdCSEtrD5
doZN3fRrVzx+1Kd7uRqrukK2KORKmeOykpll1I3Xs4JhXjtb+hREfGtWMHlX
2TjnaQq99gFAqjxWY6NYw5YGduFrwNIgqf7WtC+KFE5XewFEfxXA8kD791ny
xU22MZaFGZwKh004oQNuWOgAJCUUTXVYGYvodkXsxNpMy2XHMhe+cTTzj9eP
EJoeIga7n1H0TELRMwlFibHS16+JrX5GqLqc0POl9JkvPURIOrP89Jd6tfzL
i2emTn3x5+lTX4k1Fhg9W1jrn7vewzDatds9FcPok55CLDWE0fx8gSVktxNb
3dV9flUV7bgaYqp76Vp/oOeCyoMEm4doHbl0IV3jj/am258QhFbV0tWeF13v
6/o/JBB65dN76kY/J+Z7JpVy8EnQCfuQdrNl+pjN21H4xAd1/Y64OynQHnm9
J6vm3i75gt35FYyYufU7NNUkq0lcrTuVzeFu2hWhPIv+IZSwpsGMfRPDZ2qU
jCdLWcLPTCtFGOo7qeRU5kSrJcEaKClwAR9JwyYSxgLTbBGQtcRYoim+lJRW
CT5sTbjLZsS3ceMGVuYS0ziNzbhd/GtfY7JArUgCNRWFOwwabQ6c3yfZ2zjp
U6zGWMatx3OOZlk7GAfkixBDdvswzoiaEB1OT8dfRS2U8GkDoaORWIC6HEBc
EJJ74j/3CDzoizxfzmLn4sG6TjlFJRdB/4W14Uc+UpBDOGOHtH5wgoDDDlQg
Z/ohKYAh7APD1u5qGkDsVUqvCQ6hbJLO5TAAAndNCm99cg8bT8LC6EYeVUSI
GmFCJX3UNs0Mw9Gcv5EOHbdSV4xna+f6GCYCnyCdjBiLVI3LZbB7ZIgC2v+Q
z+o8V7XApsqJ++7xBsZXe422uBuKx5Zzi1FXg42RMVhzuR7HxgbjNuBngNUJ
m2y3axdN3HAVeTBO3X6XK8p1iaKGrQ3YvFCOdonHVpsdYOKy7s7AAJsvss1n
YjJZcQe2yBAYzvJaCbwF2tamO66sJcQ+Rmz4aDr19mFisQcy5762lxhsJeHs
jnJhrOvKz3x5FeHs0szpL4Kx3pc57cXJtHqkT33xT5n/93zR+f/+VqypYO25
YvoCygq6atkBYO3dhLWPdJvfYG4WWLuNsPUHwthK0FWik3sJY/f1Wlh1gCKq
Q30WVh+mK/wR2pBH+z5QfYzjqlpc6ZvV0taspW1SN/xJpqrAWa58sS0JtP3z
Khy+tg6cNzUDEAfQFnu60didFm21IBz2S0qmKqd4oK2GmDJUwld0n2LQFyGm
CK1Mesx32TQFn4SjEYBU6FCxhx9jex5LHT2NNwin2GhY13Il+5rNCZu9C+I7
dp0Mk7x2Ew8nanGV9gUMdVkqaTjlgoIDUY+hbu6GtsYQKA7R+sOVLmOpXLOR
nBIGmNYEZSyEFUBKMCCs7P0p4PLDBG/eItnL2NcwIepj0f8ac9VM8ilSrIF8
sHJ8lT43vO23Gk+JU8WmdoB+sreTdjlwB73DyRbTA5zkyl4cuwEZx53SQNxI
GOhtPp8K9okYn/OlD4i7JCBysDj7RNqzPfpZcROWeUAEjQUMjcXsqnmdmb5r
fB/YFJiB+lOuJdHYpfq/sEIsruMRVWctzWHcF6hClwU53i82uto6X0Lrl8h5
aUlzQSOvuFUXCxSBxc1me4CUbuqAsy3IJ52SclXVLdx0kN2/KhDbqgOrNQFw
/f9ybZ61ZZ0EwjutobbPKsR6oRkLz/ZTnMQFOtexwIYPxBLmm3UxgHFlDgFN
AxjbEyi2f+8ofT1C9w9RmL8/3eLNmsw/XqtIn7NkM4HiV0Q2PyUSupSAcTGt
RZnTF19bfuriLi3/+uJfKJw/6fzz34o1F1D8hxDQZu3nVOXH8A2lTAGKa2mt
7zG/cjsB4S4C00oCwj0EhPt6CyAe7PdAzWHaeEewBj5UE4uO4aLclICwupa2
Ri3tlzq6QDMYUpBSR2BYBxMS+IJwN9Etqqy8SQkndxIRWjEcohFYGSgv+T4W
KV5avSYpStNb5Nxggc7dxjiTPiWqQY80MKGQWihJerQQYDAF7SLUW9IEg+mR
iA8JIOOIg0HXxq6zkWYaum8OcdGnQ81+xGARXabYahwXTdwEULz6e5/Tt7CH
4BivjSyBgCL4V1KiWjdikglkzBHLK3IqsAkbn55bd/UXeby0FW4R21v60Uo+
knoEqxj1HZ5ntLgg80WfN/BHeFvdPixgtCzWS/yHqvv+RDTlbEu02vptxHSO
DT/YMDPOip/GAq69xIaYg/lxwuBb1P9kJfkxfXsAi0IfEzn0kVaCU9pNOAJB
VAGyhW44wBHim4HqvIto3PkAPCsuFTPf3M8D2JLARRs7xL7tr8ooNhl2ttel
+UfkmRAIVzwhZ4L2ZTq9oY/KE4y/ApzRAI430d+mEur0ai9MFHdWJ5PVJm4R
y5bKNf8OJ/JzVq9OH4tPcNImG5ZCmKgDBegS2OLqjTqdOpTKAhPxB+N03jPj
4VdmJFiPGSY9M7S21n7m49JIr5pf+H2Ldtj+oe/Ah6FiNmCIKO4rSwwYYgdl
iO1XHKWw/nC67XuHiC0eSLV7b1+6zbvV6cw7uzIXvLE+fe6ST8v/9spbxA6f
onUnscNx5ae9cnH5aS/8PvXHF5ghnihgeB7fFucnNcEU85OasQhwGDvlKwLC
9ZfMr9xMYLiDou0fLl1UXUlrb99FVfvoQB6gq+9h+nqELoRHCPyOwlAAiw50
7chn9tRShFI76pm9rL/qdV9VHR3dOtqpdRT71rVTRSaBoSjxvE+w1qZZEsnY
CFg0ONTfZXiUEececRacyIiI4hETxzulAcqM8AwNraHKiGJLkMTrNrNQJwOS
OPpbEEV0AxAIxhU2OOjGpqJbzfJMEFAsc8QGp+52HwU6v3ZchMuu1aBb/maC
TvPBzzhjBJ7GfI7AqJQ43teCgs4ZSAmVefHa+DWHjGEsXm8kRo4/Zo6fWzHz
N00RSoEV/+7I7/z3I7714Iu3AODrzitieEy6fe2W2btJ5bRQftjjY2+UYdrH
/qtjztfD/jW5x7BJZ1VTbzDXW32K6Am4o5HzmEHnFEJFyy8LlFp4aBgaWUrn
hp3igUOXUSGZYhjTWuyu9EJZyjEIKi88OMw8qh/WYYsy24vt2Ge9BXN0QtJC
IGmc05ulPIEShu2TFu91hkAjg4k+OhXHzxDD8K7AZnKACrd4tPeDYlzp5Fr0
qXKhVUWzZuMCpulA1AfcCXEWgGCv1IlgnREWNqlat6SsWe6azT6+LnTa14Q6
CzjvQByDYYaXQWCgAgAOCZxJIOe7BSzjai3Ne0/tBX7VoL1AqnMoemWbVaON
ipIhZXzvCC2g5P50G0bJqlTb5buIQm6i9VU6/fYKopEvpM96ZU75aYtHp/+y
uDVRxt+n/rYk9lNByAv49rfIVwIlLV+ZX/bhGLr7/Mo1hIzf0Ye/vteC6i19
FlXt7PNAdSUdtGo6MPvoYO6ny+FBuvYepsvfEbpYHqUDfoyo4TFYrwx/cg+i
6NreC6vZdoWer46OWF2nuRV1hGB1bef8UIe+aDpQda3ZJBgQWSCodaNfApdK
CwsFNXUCLy8Nuymqps8dO7sZK5M63WEgWaEFSr2i6hgfflpIQyd+ny0ft07B
EVH0dxEQkg7tKMTSI+k7wGITbdbQWHpiUEyfsi0UmojPEyozgEOtv/PUCkAr
ncapUd8Z5GZT8I+kPZHu+Qm21CWf4ELbMyhUD5CLrkDil8IEhwWhsiUlk2Fz
e0gS6TYR7N4vdLQEbeFS2aWXf+n/BE9xhTwza1UM+rp9iKfq/hFuu31kP481
mCHq/IEbaNFds5a9+B+KmE7E8/GRYmr1PcK76cOPED0j4BB/jsQk92pJSsM6
BHAi5x8CyU3GpImWY21JlUgIcuPOuBJKvpTeYs23UukTn7DdrhMTHA4oBDQb
R1zx+jf2FwAGE4DBBAilYGERs0oMQgMeTlQ8BKtULJSQvTTHxAxQGHoC9HtA
fgYYVMvrZ3R6ULFjlc4PeF4gVlVz1YR27neuzyJj4gBenJNB4tYMCrbLJ23M
ZrBTsXNz/ACEQjayrLpfZgcAmBz1nfPhV3gEodTLW6H3MbWSDgik5Ct1PHWB
7L7Lc80ApErOuwgpRiGODIfRMZj/NT1KKAjOeJAWOONeul9NiLiT1uZ062Vf
pdss/zBV/s6LqczSBekLXh9TfuZLbTOnvfzr1J+ejJ0saHiRoKFlFMEVh+Vl
FIGGb9LvV/ZcUPk5ffzrifxvprWTjldFf0JD2iB7Bj9avY+O24Ghj+85SHzw
MK0jdPE8SscT1ino9FQVqWj3KRivBU+8+K6KOtpsji+2VUOc1tzGCGOiuECb
QF0sIf3CApOtbt7pHO4Ao22lEyjCFoYy7i4ZvGn1GHBRVIBaT9nMPd2Zq6QT
MTUGvI9iVHzSoySJyIlEQcDv+HdMDCMuUfzM93Dj8GPjYEtwUNcA/HnxjOuD
RA+kK/vQ1sHpnSYW6CAwjl2AVA2uk9g7hoG5QTNzQmyf0N13qKbCpQTyhRWc
BzmXtYFiVrnGEy/ke8oGfWHaEICxaUOsZUMgMHKsMCHW6coB34cI2plWyEpd
/IHsY0J0wbO4D6rES5h+VmS0Qf7X3jrEB+Xt4dxQxJgXWb4iNPQLI+pp2x0H
hD2Rxzy7UMZ4TInwvqZiEDPb946he5fLenPlagmUQUsl0AxjeYBumHmG9GLC
AWCMEZAHoumS2eTNeVQkxkZMWCwuZyOe9rL9odpCN/Bhp8JzyIaEJ+JoGeIz
+hkdm1rMiUkOqvN1+vd4d1wv1FdLlA63qWDYmu5jLBqNmCgUirBEvWBtcItZ
ouQ1wtUXCnsp27WbYyVeuSTlQzGFvtxxxSC3SJiY8Nd14YdJN4M6dkoDOn32
e65LdXLRs0bN70nU3G6FRM1tl+8hxKuktZPub0y3evfrTKt3PyJe+GKq1bvz
05mlE4gfdkm3eAddQKcIAJaJjqih7CGo4KNE2V4l6raCKNwndKTW0lHbQKC2
ZdBD1bvoSFUOe2JPDdG9fXR52z/i6b0H6P5BOoqHey2oOtRjfvURArujyHyE
3iWEg/RStd0U/4iWMRtksbspYm6WagrhFYKVm1w2UF2EW9/E9WQ5oBAHa7zb
VpQ8Ui8R6XinO8MhbsWseGwLz4zJFBJjWi34GPzGGJTWARKRiuScWdoY4WiF
yAiYhYgQfT/c/yMLuBjn2PZEJYeGjFu9Cwnkk5O3BKi40aMinguLAtI00bE0
gUK6F0NgTyaE5mVrw8F8fGxAEU7ZUckx7UCXchwQuJkL7mEfMgKxQAM9a2gY
xvcO+JjjCe1LenNzjoA5y8NNw9Y6bGYS7NSLmTvQdHTW2sslOgDCAmTz4u31
aQRyCGxU/3OtHl35jdmVjPjWFucqgIXfEcMvGxWQwGsCLNTidIrbGPxUT4sU
UJTlsU0iVzDKh2umXDlLGFG66aAsGOfBWHzqq/tlAi7B4c0Ch4aEygIjBr+E
zR23FfFc3EKu1KAYY3a57LbzqDVs+lo4KCAnMtXBt8BXs0v4FwDNSxeqgP7e
HAzkzc59lg3p6Nk6AdRBep60J4PzSaaih9jTxJ3SRGxu3UG+Z4oq6a33XUih
6I9igWvMNSqoF81sI68d9u4lfniIXuVd+8EwmR4dSh5kY9DtyTbIWc6FXuzp
XEeEESBZSxdfEEQFx4AetlteQWC4nYPlNu9+mWq9fFmmfNm/aM1PtyRwbLX0
4lS75b8sP/+tXwo4pvj2V2CHDQHkAz0WVP2z18Kq9y5dWL2CDuOayx+tXnf5
I9Wbhz62ZysxQPYbIfJfTaDJ5RW6cokW6F72GTlMz3eEVkM+I3X0/HWd0VQA
fIwl6joyQu7mOnM7SAjbcr83EzrhgQBDnkTWRrU3doUX4wz0NjaXmFhKKRIT
0320a6OvEElC1HK5uRG5EkXFtEpWCBPpK5CQImVDR2mCFHSMA8MEB82iIiam
a8Uue8UVZVxLtftReOIWDo6joMeMueGwtdl0v8+YGzJyCD/s9UmEb3O/+xSZ
NAuZQe64M1DDZR8qBxlw6W8JxulIb4xzMjP73aaCvKj4YaHJN/V2li6n3vem
XS5wpqV7woorTBm7cvzsI+RYzngdGQsREx+eJvKEHby9Q8qe0KwjL9EBj90/
5hiZzxqurl/5DVATCQvLWpTWD5XZ+03a8h06ugsqptmVWCzhll5FRXV7l7h1
DYEzI7oYCzncRUFlik4lBwbqoFzpg4wkYr4ZqAmYTPJDeOCtLplbhvm2JdzX
g9qM9QPDpikUtoM/coe6mYzw3AiKBBBuW6jca6FJf5ymnfspVNPeQZwPcjTt
Jo2zCdAyaod71TmE4uHPN+aYi8SO24V2fGF7YG4QFAtpY/q+AxEmlFl/gRYC
E/W07dZC+xMz5K9LDfi8jvZHHV2ia2mHHUt3XHEkhTJzu/f2E/TVpFuDI74L
jvh9pvXyL2gTv5tquey5dMtld6dbvjsklXr7jPSFb5S0OfWF2P8RHMxIlAwM
tJyhVVXuouj2YTokiy97tAai81UUAX9FR+B7Oigb6ZBtvfT+qp2XzK9CjyNE
56zMoQ91fzfx/BC/j3nO88NhoJp+uJzhxXN312k7DA+S5NFocwCBhIj08eN+
u9kGfKxulEte7CS+vufKxqWliwdWzhGfTpadgzoQJkHjgmHcBoYwjEzTSaRA
GM9miCMmgYWCi7oE/FIsXQaT1KYVrtSttxLxBCV9OBenyssxMQQsilvlVegB
YyJIRz8tkWLvT+M5XMmoFMGe/aL3p0SK8hEw5VJ6eVMYh+QbkK8xM7E1CQtW
kYyGn0zqbcBU+h1QRRh/sV43jypyfPxRFGYIpRAYi2wao+W3ZSV4gkNR7gSH
9uJqk/I4GmnmEQ3mmvXkRkwWEF3p2KE0f0tZPyHlHZ9ilbRFsaQtNGXBZ+t0
j4E4q1vdbAFFsRq+BHNabtf2nHsquaUWNY0CBr8kz8QGu0OTN3KAwDcPejEm
hxxCyy/oNgL60Rtlikh/cYMN/aaniLLTluyTGd/Z64h4oqoyFE0/KKDEvYH4
s2qmm3T80I/vps/VoeCCqnw9Ov4pSNJ/oIfB0JD9XjSXBHbMAZiQwsjrIMUR
pLV62qlGJ+ZEkL5pLJYrRDfoC4XoJbkdsIaAlsIZ7jZsvhSyoUaItQEEflFH
MFhHsClr0Be1dDYcS3f/6Chtv8O0Yw+mOry3h5lgK2aCG+jr6kyr5UvTgMDy
pXfS19HpVsvOalH+LnfZ/LtAYEu+/U9LFAICr6ALzPT+D9YsGvzYnifpcLxM
630KFz7uc3/V6kvmV67TFu/NXpgI2yOFwHlsOdeQ5wbLwg3+YLoBaXjXeyrq
ukiykNsN4RgMT/MOt+6ykYuIgzvqsAg2ijNb2GJlfBXOnhNHEtc6c05LWYMa
zhIAIFF6XgBANNBM/F5AkEhc+iqQugw76WZQNQH6jdM1VgTOwhw3+O9l9Mz4
DRBaO8XJJk8I0Uxs4TF+huQg7Ya0RAaSPwPGrYoz0CV8tkyoYaRdf5dy05YF
yZcpABr9U/BztM/AT4p5/VYjyO272genQLDW78KqgMCvkdgalv8oAFpPjcsO
4o+BZCH4id2XG77Ao2uW8yuJyUypkkpVkkHq0GeVWJUPCWo/Ug6XWJm9Mhqq
5UtXeWMpwNuoJWnnZg6IIK9csI/Peb58intczFwBAB0wqEKLDWFNEcNeMc+E
gaYFjdgAMY6Klx4A8PFXFEbiAdm78c39vGYK2NETg+w1Aty5edtY6NwZodpb
BMx5CnAvAI/FbRSotxEPRDNFzt3IBOBhJpyCI5lJmnRmCcC2HOYXCsB5cNft
SgFvCATgyVyNoph3xnI04OPd8KXx3D87dp3XX01UhzmT4ItENL/BoQENeMj5
GPSwAHiDvjjGa+CaI2V9PjuU7vLhPtp2Van2K3dQKLwh3Wb5KgK5d+hS/jTt
tlvSrZcNSF/41p8yFy1lzvcfAnitxQPD4t5BAx6qnnTZI3tvHPHUnnl9HqiG
DwbaCsNeawM8KLHNAwOAxx4Y3ep5YDSp54EBJTaD3n2VdfT3dQSydfDf6TpX
PHovFuCLszFkY5vk40b44NqMpAjus6PQzJ05bkK+LNiU7/PPpyna0TmRvoaQ
bhKtCUA7mN/QgrstnTcolmTG81ecpePWx5E4BDAB3oTUScdLxAq+xpLmu1ax
DRHXZOnbT5uHIGfjghZ8YnoFRr0Y2bgdRNhfpAAYtBdYjCtGZr4Okj8Dgaey
yp/gVSiChMVgAdAMSAOClwlWS9WtWgR68UorgMTCdph02PQqRbqOK4MRCGZh
CIuXpfjE6LZQ4llQVOD6ZZ/raNqgzSdSYa6WPKQdKa5C7nXOYm1drLlX+Y7X
ViVW+gqjkx77nZIBUZsTnPi49qF5EPEkAKRI3H3GMp4BZxyN0/g1wDK0u9CL
g7gVcMCKOPd6XdMJA6cu2YehrvvoU0UoDBgDnOHX4HczXpem7DzRdSxntswz
6iuUyFddm+AakIaqtFE6E1y30WRe65td+OP4Wyx3HnwyGHyg0hVGNlDAehPh
udCbI71OiHE0wpSmXnqtXa/8uKma88bmH7/BtZzmCgAV0rjvf20ukF1GQS2g
LNaslnYxAO0o7eQjdNIcouD2QNmA1XvSPT/ele78/vd0Cf2MNtrbqdbLnkoJ
e+uVTi/7U6bt0tJUr89+I1jWVnQjcJaAq8TxWqTfpfsfaYs0dCM5WMY4Nq9y
Xw+4SsyvOkgED44SR2QoRpU5SsQioFjsJHaUoEChDpjW/d6Kuh7o679nd7bH
3bsZz9hbDLHoXLHfZRv0eTKCAlVbVs0pRTOFHs5hwy12CMNtSTYNY13a/WlC
nAwdJFQ1yrHQ18I4tp7ubyDSdjXdEIeLQzCCE5kuPimlYqlrNlsPH5szcmCK
OHi0tqgM1m5RmfRnbv86WIVxqc8qYWBJP3bPVh/t+kApw+QXAzTHkc/OQu0F
h6QytQVpMpAvW5mlABkCsbjd558lcA8ptNaBSyooVB5BS3f5MASwkJWtiJ3k
hgnKUvdr43/E/aSoodm4Pqv8fzP4y/osTSGNI9NvfXQ6WiPTeGDOowlTOb8a
y/mDOhHI8QwPbGyrdIdkNXD+QokEziQOOWOe3Vvgka2UoWacrkmLlbGFCCfo
hp/RX898E4wNsIXH2Zr+KmZWy8BVtARCWwI442h2NivyQqEzS0+e32sOased
n3WlH0QAztYklKE4kTPar9kCQL34rMO1rXbCdr5bDHvygC5yamduFNSWCOT9
rNzrxribu4RzTdvo2Zop9EyradqTyWaesk2KI6H8ZNS3+do8ydpF7FN5guFc
SNgY48oY49YwxhHW7U71/3wLnTZf0o5dStvu4VSrpZMJ61DE/c+WFy37neBb
O9xEiE1jP29IAwJRnPk4AOBgmbOe7juAY2FcPQ+H6sMUeR5R/wZIkOHhAAN0
guc+i6pizRnkesGqdl5FHWxre94rNraY3QX7WlxrearugioGOpv1FPg8ghtc
v6OIvz2B/cHT07fxOC/M1c5M3pwth/cgUTP2IZywIdtqokAbYC6DoBTBKR2Q
NKMZrUl0eUqxiwIn8sC7AGaW3IOh7CjVGkMJAcwZ8qVEhWIsKs1xBXljmB1V
A5NaxXDGlfy4aSoHKqGx9AWjZgBmeCb0kMD+Li5My/MjAq2kgFgeyEXqtE8P
K1FbkWUSHIKedQ6RTU39rXEq7q332vn5VGwE1XKZMjTmdj0+Bjpf8nHYedg/
KDQPrYdnckEf+Z3FmGPWsWzVBK0hH8YpdI00l6Eci0AL6AX2gXaPK2WyQ8xM
86H3HfOcWwkgSAIIFgG+6AGgaeiwI0ACGRNZRwHn15iVSXTJQDRlyX5hZEmG
rEm6QNakVOtydIJ3SLnhqa8SOXHM3BlG5rkzyJBf4FXc4ZUf9duonlykr45O
78KzJne7lmuVzuXPpGpAVSytfYVuqpSbk+4UxZt8v/34DWHqmUAsIQLFazab
9IYFxQkDLTeg8ttczZwLNOM+q0asLAIro+iNA8wBawSvBq6ppi2zO9V3NeHV
6q/L+n32Ed1/mrbTdam2K7qmyt/5Xabtu+BkvxfM6sC3vwhrCui8M6VGCFuw
nvlcORlgaytMbAmuKrxnQqV5JjBkXSpwxZ13gCz1SyDY6g9Jo8zTpWOCedm9
Mcb1/kruwuy9QAbbIMHWVjw6RZqR8FYJ2legraV0ic63S8io6X+GaDBcXDAo
AL0mrQjGWl/zPaCMnrR80kbatBlEm8TY3ELRYfKWONoywcEQnCIFN9rZI8Qk
01MoDbooGQ1eG/b1Ii70kgPf8KH0S1uP+qniu7+CV2MJJ0NRpNXhbUNw1LqG
I1NGFRnBpOM/1CnZ3JIN2cot8kt4s09ZkbdULhUww3NaHs1RtCBxxkimKIbo
FbzMaB9wrDPjGMNYnHvuSnO7qAdqbwFzs3o45pJlY9cjjnZRzQZftMF8ckT2
jVxjD64oiLdwWuM0Nx96mwWGBNYYTLY3KhYBVRKMY0UMMuN1AZ0AQDe9JeEm
kyqXI8tOexXYtB/sK47HChHjZBqYV+S1vwXE4fZzFGvytrFGvkZyWGmDn6+0
sBJ9yfWHkw962KbtxmW+ziLuU6af0XnDsyGqw9nkDYWZkVP+isbNHERjkRNs
0NsFI3BMbPIWU7eJ24weCUgIJ4aEa3uBH7J7suCfacCtus8xpasG1GpCzHOs
gZ/vp41fQ4HID2X912yir1/RlX1ZWe9VT5RduuqWdJ9Vl6Qu/fRXF3Zc/gfB
q058+19hAcA6hed1m1eBZrl8vEI+bAvFc5h5sCvwHdhLMWG+78AxIlSEU1Xs
NzAISyd6QWaLYQd2LRnwYBVTLCT+2+hIDLMDUN+BGKtsC53MnD5HljpgIsmM
bWyg2nraFvQBR/BBgTaI8KnldZtAtQB419EvKKAEA4KCFigE4EOIOXad6CFS
0ojPZ0+wmPN+xVl3lVlLx20iH5H66z2LJgeuMQiKwMTEvaSUyZnrb0M5FKkn
Py7DTy6W5Hkrdhd2Q4pyoKblMjEe1uGcbTS7zhn2lb5lg0gUh4Yh7rCJ5rvO
AR6T5TryHE/8cz0+jpg7xX2Tm7Sp0G1TL6HVmkRZyKeu+Np/gs4mcH0YCdIl
vMDZ0PraMYfqEc8YKBJTyZt2cf8WC1EfFdkV4GiEDjCWUqGRK3rmsQxJyqri
QIoEEvoEBUCWGcKQODCc+Qb6MgiC6J2gH3jyK/sZXLDQFEdRX77IVuQQYFMo
jVrufpSNQtIEvaS0TuKG4JAxueHugbhWDLpreI4XnGHgiIArdjAyOWe6t5uV
aOof9WVJOOcBFUdEOaO+d3kDApAidIdah4aZUV63xSnDPQpFapQJDW4gG6sr
G7zWQ9BlGuIJZdpHpwDgZxddljfT7lhLayl9/zjFFlPTvVd1S/X5BHQp9kfB
n858G7d8PHhSLAL6xE4A9iCHlY8/kPhvpWUS/+pLF1btpbW/j0j8D9GnfLj/
gzWQ+EPgH0HfH2vCCn+6RrCtFH3o7NSHVBa0VO1u/cGJS900HlG0MlOKWM9a
4AX+M53A38n7YW8XyrdUo9r6BnEUbTt9S7bttM3ZNsAoTPqYtpUnLlFMSC8x
DRWXNGAJHWtXb3DC/gIVatG3JdI4ygfhawEjK/mZf5zEZJFmmAimmngcMgp0
mZUQv5TngCMSu3zKaase51LmK/IOkDxcPYSnd91YCUCI0J7II0oznegTABKe
otNK71zS7cN8IuQnBLVb7hp0e3zs29R4aa+ItI008UXT/nlgZAjrMlPqSczp
jg2WCWlhFdtJmyWkY0furXw0MNTrYh5LC1E1D0wVNekj0s0q9kuS+5H2hQCJ
hBIlcygRUuQTXthLDyegoY8XeSsklq6n2M7yVVOXyM+ue3lfBNJDD54pnMjz
okLtwQiUCvQL3BbXE2sFQ93rCVf9tOxq5zsABIKMgZEpEK7ivv3eCVcFnWI5
89jqM6LGnNzSEYO8bEY2epe5voHL8ESpUrGXz5R687FFxSpjJFtc/X1d2ah1
dWXDvwEc1dJZgGzTkbJBxIIGfb6PdjEit120vqeo7VMizG/THnmE2NBkihE6
l/Vf/e+ZbitifxYY6upbwfIzTRBKWSqdnUYIer6kcGrDJQuqthLdCYX1+yGs
H/hQ1SH6mA4PfLjmCH3UJh2tpa+19HHWwlkEFnfc/3BvZR19SCqU2l3XTsVS
rT0FEqUzAxBuVDlvOnrvK1KULZ9lgtGdrmjC+USUjGZSdNzuekzxaHM9ESVa
sDrmsW46oQQJqczYdaIFiHMyKT2SjZdikWrqU2LExPcSpqkf+Z3nqCBJw74y
bIo5qZJFcZepcAmwBtyyBNVg/R514dQVX1shUM920Y8WyegFjp5yWg6sycq5
KAbsKQEUkvFjzXKbsjoIGLkkOiqIPHLs/ZAdybDdXJmU5ZW0X1XRKPZzYUW9
Ps2RvLsZaoODpl1jRrmDQ9SzZaNzFuE6K84Loqo4sBfzFG0gUYmz8gSdoAsd
J2twgodja9j8eCw3cwELgEO2CIvoYwU1SnBSG4wGSSQKwyJwpQhZJvrIZ74p
+ILkEuIvplB0/9ZlB7Nzlh1M5MpGiRkGTWG80CIBQMKLIGGviSbWTVlCXPtg
NTRL5lCky2UQlIBQQidGsFPZw2pGcp+Z2DU4TDrSeZBqhivrdjd6UYfkSHdI
q5u9vUSr6ykKpkt0usGJ0rFEfmNsgnvEmuO41bWYROuqDbUUTRyj432UQjaA
EkKzalq7CJw2pvquXkWc6PWyPp8tLOu7elzZJR+fnun6AXOjvwgodePb/zhe
nz6AyXoVPqTHfEGA8h0B0sa+D1Rtp49vN60q1bMfoI8YevZDw57YwwpO6NgJ
z48NfqymlrgTN2ZBxUSvwb2ppmBSBafM3BYvdnZAEik7fegtbzREahlyJgCX
aJtaBqu1a0VsLK2Is1WlgooHhv9ikvEsmfLWClMnCaIyRIZS2oaqYqX0KBF1
fiuAhJZ6VbTnizpL5DxjPwypW6QwoFspj4Ofy79MMF4Vc28+/8qQDIwIf4LT
WtrTBY4kEipkHEh3byCr02FFTKpuCY870lTvWgnaLLdfaQKomcBZR30KnoSo
CqQuH/j2UxM24SlzGrVCiEqEgRtWwvpqDZmkB7fPZ+wSZwj1VWhUF84aRdw2
ke32wZUmb+W56y3puoHmPB1TRL/FsJZG2UsXVgdBm1AQQyWkbqx0p1DESJRg
SpTk8tvkYBH0xCRtxMmg7K3vHszeRuvOFfR1+UHcj4BFcZf3jjvxkjRqNbIy
oKbPpY435jmhRMHYGX7PdA2P2A9ZTTw9E2LpeqG2WIBJhTYesPAIsEdwJ27z
DVi5xNrNyM96bST6ZvXitj4tpNFl5OcuLi0o+uRJN09uyB/WJn4izqtrcc0W
WptridfS2nSUYu/DdGwPEF2qoeO9o6zf6nWERKsIiV5PX/rZA3SlGpvq8+mp
qQGrgUKnCgj14NufmvWQNcmHdbglPeZVvHvJfSwj/5Y+svX9H6zaOuChml0D
HqypoE/XlJQHaCccGv3s3sP0FckhtEtFR9lp95hgT6UoyecLBnXOV1F6DDIh
JSSUEdBIEKdQuM8sz39MQdmGVXEE8gQJ3Pisl4GO+oFz/xx8hCdv5pbQFIrV
6HlPKPioYnIM4Ge0icdNRh728jjJZJF3JZMBKMRsvhFgERyKA2HAhAyOkPvG
Aiz1WVXCCFMspzEQRopggbJmRQ7SvBdLBJEarzj/skAepmRHEON9PF1k5mh4
Rh5ZdRy1pFigUzSW8NGYgAprlKR79SRBlj6rvPabbQZ1mOGQL719sOm9r5Ka
M0deGnWBieIAsSMtICXu5kj2CMasY9gUa6txCiLVggFS4D75CIOACzQn4rDr
RA64wrZMIAzkPcj5gOQAIRBUzV15MPvg6sPZx744kl34yaHsPR8cyt7hEQeA
E4s7pWRD3fDcB0+frjVUIXGEEHCEinmsBQCcJwLq0JOA7djMVz+eLZw1jBEu
XiqZZ/o/12YNlzh9uEqHnQ4IJ4Qon3b7TqqkzBkOBrJJU2G+I5ZqxI835BTE
J9aktuwaBZwJm45QnHawxYSN+8rGrN9Nh38DbYWPaVssSfVZfRd9HZzq+sH/
S3VdDsCR2Y+xnnx7Sug8PrbrfOc8/kTPBZWv0YF/r98DNaFse9vwJ/dU0Edb
PeKpmj1XPlWzFy4+Pe+T7kwocrqpKpH+X6ANlIlQ5ESAm1gTFiayiY8AjnJD
P8gQs7dQPIMysc3NbrAhVNy73ITZnC5j3MadMtFrtYtYmZjW7kwu7V/9fahM
jLNYO+Fl2iJIjNfTIrL7mGkRS+RCPVb8Gc2lm6M1wA7gh2tt30QAGZzJhEqc
MuGo5ZNkQ+JDHXnQ46MAgXSKkoj6kp6x+K8s/1tphfougZ89tDx4sq4fSKaH
FYfvSF67AcWhEwgiWyTAE4Woc+kqoE6fVd702TmyrPFjVBF1hXNwzeUIOZ7p
21hexX22MkWcUz0RQCfhh4mXsOzOMZonpRoGDYuxmKslsRMxieFylhGYGMdS
wmDi3FKOTM4Dnx2mY/DE2iMEz/d/ejh7L+HLXMKX2z2+SANS3HVquhxPILZJ
hkIb6xBQwWERC23wBkFxRJQthuRoeefmJEKYQus5D+aNySzdkyRQo38WeWl8
AN3u9ZrshvzwTXbT+pYfnBkHgIdHNszVbibRHdqEhvJZx9Edht48NuITnCbW
1FjNMQKYoy0mbjpMR/Mgfd3bYvz3u2ltofUFcf43iMnMpo3SN33pKrCaxuf0
+yp2pqBMb+kDB61pRW8KlAYoM7PHfdUPEbo83W9R1VuDH6uG9g+6vw1EX7bS
57STPr3dvRbwNK4q7Z0U3d88p/uLRVA+y5TvxmwLcYkSmh5O9FfBfg2GMdiB
TujHfh5MdWRAfDgMi/6AZ2xTnMnqhXniU4xDYBOGuCfbxH6memaNS47Y7/9r
70ujpCrTNO9ERGayCbhUVfeZvafPzJw+c870OXN6zvT0j67pYpFVS0uLTWTf
REpFxQUQEBFFEHCFZE123EoR2S2VpUQERXBBgWQnk1wiIhdyjYh5n3f57ncj
k+qe31M/bmQCmUnGvd+7P+/z8K5fjF65krItaKFr4MQHL9gGFMiFd8lCMwPC
Hy9FkoNvsr6QacfA86AHJOstN97yC9MH8TdFqhHgmLiMdBM5iu4Wd4oURQZ2
1Dwl5J4beDAG/yIrfp3+uRU/czFS1sXDnvL9UiR9DZGkkQ5fENJ6mcahUZmh
gHpEhcOfkqUUWAArBSxTulTQdMadvKDIW0pasyIZxwCabisTwa51XWaunpDX
TJMmckwH5jM0jZmzC1aPUinhxlyvSwrDXiaW2/IdXA3SmfUnmnLFXzZyirPU
Cqioq3FJTIgMv+7wR4ahnLtbcUhF/Cs8/LbUUyzL9V4oBpOXx8TcOl9cRWDY
u3j7fEhNfBk4K5Jc+rLYpS8B5y+F3PrpyN9si6+9TG0rTF5si2/mRfYhVB09
fUH8yNMXW+iyZCVNZ7yyx5PnL/R8rPSbHo+d2U1RY1mPx0vH95z0PTeNRRwl
GMGvt5gPwezqpftWpV4aVZLaNHFzeteUt2oPU+V4mLzvSaoSfyRTLR0UYq8h
VG0+hPxHMoatueCWJm9luFW9h+zM0QUPQj+CyVjZCb9S4fbmMDqHB+HdOZSY
5FKw3ri0wvGn3iVC09KZV0JzFKd6w0TYvTtX9rY9Ah8imyOyPYJdOd4aefxs
uCf3mLcnx66DBR9sTQ4LcrImd3N0Tc6GvgyOkPSHebRQAzl8omtWKMOKLpL8
yWW5Im3BfiXuZIhmD0JNifSFyf1C1xFVhdBkgxOa2z/lNbkYQ7I7/fMeZOix
cG85HmpFjWTWhVGMVNK0RC9hu75J3CUSN+wizrnMscEtdqvIl+koMqDeiqFE
6DVuZTNCU/R+ltFLck8D9ohMxbIU8JqilYt6BJUPqh6mgCEThztY/VUj3IRk
J3H4jVhuMzmPjrl1VA+tONqYe/1wI38l5SjhKokrfcRh4KdhJc4u/A/sMLAG
3Fk24qgUm6ElmM288PdozhjG59F3Fa8Y91bjImkK75TQL2fTLUMuwqvgZplH
kQaMkCJYoj5AlQlldmWeRNA9v+DvNPE+Tk8MVi1NlizVPKh4oqnIU+evkwup
6TGtFKnIBXqcJyjh3Nnj0bNLezxyelKvx8/9xS9nlarmRzAq7K6gvTt13Pqa
xZM315aQ23iLnt8H5BHAcO+vb+S7kPSgZRAFTdoaWhOdCXRWWpzO/V8wS6mt
3A7VRERXb3lr495XZRMNbgTu5C77uLTCITv5a8FSXiyeGslbb1lBi5vf0I00
t83BechF1kPiDTTM98iHgLKZN9CeOCtbaLKB9v+4gDZbmfgAfEZDxdc7iCCb
eXUjXEC731tAC34e2ugI73vgfYyk0z6aB3EaCV+G5CXsMr6Ulgxqmds/K2CP
cUvbTTSg+7jcCb1Ir3sjOUiUoJ6rm29kkfdmpZrUfEOlPWwxQ3pIp9jvIgVk
OZaXZaMi5IgwrYG4uBJNQGKSgAwzV1LArgQNluGrTC8OXwVCp86clCAhsQYL
qh1Y8LO763ghDMaPYoYKG8+NFLAb6cQ5CFxJMbmSN5wrETfi7WzE8GPaWdmA
A4kp/hm94hkytuK+ruMooBCAr23HnXBvJVxMU/CgLm3gKuC05KZwXUNBhLgR
EjBDBnveSVMeGaG9HyRKISFiME+b7jZ+DANMm46X0i5nKTuRqdH0C9w6oc/F
lTxxDtlIBbmUs5RuH+sx9ex2KvElG5l+/q97TzotQhnBaGG8gyf5q4ffafyn
MSVMZPIieQkA+Ywe3rwJdiVOm1gbfa7ywtUqL5y8TsehcZh6Er5WJLEIJntg
hbz/NXy1epPl1VmsRgx+o5Le/+voengrYBjMQSFlMJ85jP51PT+IK6+jt/zl
1vbjugqGUIhWCS+AQV+qz9Pn4lj/amft6ylZ++KqR3AcGFLPugyuINT9UwRE
mUd47a988TQkFrqM6MaXY7csCB1F2HMIhDi7IOTf5O8L6xyl/1S6JHQ/+tiK
REL3vD61VQmsgH3GG2CAYvcVMLApXEe3I5SJ2HcXo4yevWOI/FFtDkH8yFyL
GyGzWbeeKRKENa0iooaH1qKlHjJllS4sa6LLFbDAGMCz5DugMdWJYy/GPsC1
ccqxvY7RvrBsNDdQfWw42VTA/Q/2DXAN7B7YScQ4AelMlQqar01cyaDxush2
VpVgRKqS69ztEIKRIk5rkEn42YWkN/VB3Fdag195Js8/ODmhG610wTV097cj
xE14G13jPYFXBunBDJSyWBO4f8FmhOD6bha9tQXl2V7Pl2d7PHsFjgL5BpUr
nGvU08eaHnAQ086e6fH42cPkJD7qOa10fs+Hf/oVHXhuefxSPMRYfv0beIh/
uHdFtZUs+R4CGJev6d9sm4pyjSpfEbcWVG9k9lDDbeaL1XCTrIY7fHUqc/+q
UA135NpUlgPJiqrcfcV0LacE4k3ZpsImFdwGtqn4ZtFxw/hG1W+N+d+2qG7i
LSoG32GLinyC26Cafo63qPo9XSrLoU/JFlXvp9GqoKQDNicbVLxAFUNzhF3D
JVmfQtvkqfNxo+G2DbcHHNo3X0wpCBlPj4dlCi+KjsQelTJ/n3ByhCIG2ink
BLSepe2u33HIB/jyekERzN9bk+oaqi/zZoHnCAYrFsXHnBhdEkOPx39rHDMP
6PgJPQpyjYVq+whGsH108ri29qTbtVERcH+C3sow0e3GXknA2t0JTQtw7Meo
cA0utBxhOrAuRGKYrZh+c8A1RaIdBxDHaxwOIJHbSF6giNuj6FXAcyxU6/c6
nXuZhlJrBx4e71TL31kXWn1B3iIBrP7x970tTmlNWFeiMAJQsRSAhRzHrkvF
GK5SxJteIG4buTpfPMyyrGgqQIVcPE807BY2cSTYd8vF484+L5Znes4ta+kx
+0pzjxkXqKS4kCIzL+vxROkZygmO9Hz0zAc9Hz37DOUBPXs9fv4vez907p/E
ysfLUrhZ+YhBIiaYb+X+8hHvS9LnIDPjfUmybh6d0NthsVZYt794RG87M8ot
HnXJjtuQzqJXNXJVdW7Eimq3eMQzKnr7yJQ8bb+EQGZ7q2Zc8LO2y0b4Qiwb
QRZ6ruBk/WWjfrB6uvrQ5ZaNqNDgRSNZNgpk2yghKcFDP9nFPIJoW2KVUUm1
HYQ2sp89mo3Y0bzrlhFrCTnDdtpRcZNlsVzcWDzx/QDeh7DZwJCy/Qx2r5tF
vD35mS1+y9YRw//3xw1Ri59wtwfrR7FgOjPO6IGz+05QsIB0wJ1RRUBVa1HI
pn0b3+f+SgpoFm+6Oxgsugi/MulqAa0DQgW/EqfiF4NxqBTAZA39T28Tm19F
BoxZKtk9J/8w9S1s6jcwf7b8BPuJwtzKo2hVNnKJYLvYlEzEuOcpwP4Zavmo
PdwKZMJBQcjxoh8Ks39yW4iL9ZD7vDhEUV3A+7e2Ae9jcDLSV8XaKOLY0vMU
1u8bAPfDfW0vqHNLInvXq1V0McgqQxVF6x2LK1rosTT2mHMl3fOZy+Vk6T/2
lKC+mSx9eq+HT/8DHS4O6j3E3CcKRgzNAwR0mLux/Ldn7mdUMxS7OxWyu5PE
3k49+fKG4Xl6odjdGVsS7u2M25DivZ3JW2uyEzfo3s5aKoperwzVoJjIvw+D
wiJqeM+XFbrNHfmCm3l1BxCv/mTiUC0eQGY+YNYFf28n1wd81rMvsR4oz0zn
6toOlI15QuHWB21fJxBe+UJZJgSgy0hRZaEwbhbrBXRTfKMofZN8nUHrJ34n
8PgpmhGAwvpej1wh3EMeeFDgphKjOZofKGQjTsh2s4VvhsgLInWADj0Bi/+t
RyodCswrNut7N1rghVcQkcwtK3AqxaZyjQTKClIXw5eH1myWTM9Zq/mf8RYc
dF/HeZpziH7WzIcpA8KJ2AvgFdp/KykrLzlOJn0iYtIwaDZtaRkmcpu+k3/X
KwbDjrFhd+Psft034YWfh/YiYBb4vxDjwaKFwt6BwnZ6msmyHNg1n66ffY6L
8b8PV3Qi6k0bRQ+UQoGJNxn+fYx+PmmT0VUz/B0r3ePW/yn4e4G/EOgQGTKx
68ryQORsM79eUtlKMb7510urGgYsulY78OWKSnqCpVSvHu755Pk1Paeefpyu
/9Xj6Utd+8yqErbm4AEZWOYv6cHQgU73Dd3Xwayk37SKYnaaivU6ct/XR65N
NowuSav0W7qVDDuQDZnOkQ0ZoNSxqGeyb7whs8htyASepRea4FtkLYa3Zm7n
jWJP+zDgbxGxmu65/tBgn381NxD7Mc9eyg2cJ87A243Bagx/ZONHU/Dhnwyb
HopeCqNSoS57/ygl7iS1/AnfSXQuarsLY3+eYMJq3ZzB28XdNXzdsGOu99fb
BpO/UdyDOoG4cwIHQycw4ACHb0Oi05d1Vg6qEHnuSPBtR5neB4RiVZ5csMdz
y6Ly5AWh4Xdw9/gObfjd87qknDilZPScpwdd3J4Hp+olIouGQIezjq4e7B0g
JTTPmAseOKcOuVf/2MjturVkojDVjTBnNvcWmS5K6Z5n7bmNJxHQYe1dnYXj
Wvt1U24NJQUrjzblio80cm0Pw0WPAJ4Glr/os/YQ5iH+gYI6yn9MMJ7cJnm8
2TggC4ywEmy5ZesmzGYB3BabpzKmXJDlU8zI1+Qjy8Mi3aly0AlG8g4Oc5gI
h/FXKlvvXFLZfOfiyoaBiytq7lhceW3Ay9fO9V1QfqTvgmtbqH6f1vOJ0r/t
+VApwrhQEAcPhlEcxm0Juxn3XkrSwUb3FUXuU/RAz9NvVjZidaqSEvIUfawZ
tSZZT++K107IoJsnboiunZBRs7gtnQFgnhzYCShvlBt3LDE9RzZutu04Q7vj
btlEjXd+OevchjtuunUSiERZFwVLXWMxijtfvJq784Wr2D5hO++PgD9f+H6Y
14QBTapLZvslAueWnZMCtmtViHk4ZJ9xy2/yMaZ6nxMikmDS8ooBX4k0wYI4
grpMBmW5FYslzq490TrDNNliSWG4zGZRWz6PrJeYN7jrjyHiEmU6snXMK0H4
Cyjko2ckkIfCsWLnCd/OoyqysmXYie86npaYufBr4axyXF+dtDMeYw2GQofB
NhQBGvWURxexaRex7QHcuIZsEhF5o5egO7sWW3YXLDoBi6bnDVtefSy8lh+R
rj4ATa8camA7xrbI0kPcwwuh2nG3WXtDqPYshUzi1/ah2igy1IPZOj/etAbs
wMNp/wVbuYVt09jxtSWMPfhuWDDKb7JihGgK1c1kyQ1kGzUDF1VUDnz52mk6
24cGvFS+off8skfp3P/XX8670k8s+HcyyLvR8tjeQcW8o/H9fSurfySLNaWt
JJXNtZR31QOtOGlzupHeQhP5pBbZ0ahtGbMuDRBADODooJNbz7gXw7s3qq16
YOpwQyr2X3At7mls6VqG/MlJEargjFOKW6TUoVAKKQL1rtvHuBM/lr4USXgv
Xt/uxWwSDusj0oKsv9pWWwvA6DPYxThtiEMAESW0OsucqFuodk1mTWlWR+1l
1GmCwxl6rJCb6IV5qGgn0xJj/GEil8e/zXy0Dh/tLsEpdhdhq3s9mg7yD+wr
jBTrGVPjc1wNMhEWU03YsEL1SXvLXh6vxVBGIeSFFarzXM3SyWKrEo8mbBR5
KBxfGCo65jBSqVxDK4VloRdmARjBdzNbKbrlBWaZbMW4So4j+pJ9UvSFZSLa
4lr+pcCZ3+Q8nof96MaHmKBDCnNWQxWEc0Hb1S5mjgTI+SYOxYYNQq5uMgcO
6LzRLVe4la5EHsC5MAJwHrHGAZylU9Y1rJkl0LYg0FK+Q4H2Wpqy6HKygFN0
sj+nk72l30vXxg9YWAETHeCb6F9ilQqftGeqEMT7mLKlo/evSp4eXZI8T78I
a0LRI0qR86mlq37y1nTDlK21DRRooQWVDyxmSxVUcYJtFTuegiyuEub+hDNV
BhKjau6/oDyupqkaUIqjdFuccdV+Mh1HH08M1A9PvBTrF+GpxkYnZJ8SvuxT
KPoU90WfgpiaKxNfUXVdKEDjh5VTzMh5HtA1zQL544M6T8LHUccDMdGEjLHD
/SNB+CXCAXoeqdfdLuYKqjjGxnlbiLXRy62PI5yiNoahPnw6T5fdk8+cc9WX
0HRTx+fLfEFh7VnAU3Zzm7MGlGfVJBVykxOc4iISsBqPsia3iJNlzloXH2ig
/wSBMM9knbn6pop/h6HGYKhk7pwYf9nE3w9ThWmig7buRJN2zQTKx2iczyXQ
LvlnUMNBwi1k6pUQdn7BChtfNTpjkzXGWt+baS0cVjjhY4VxMX1/cDN3wXhK
LjDhLNUgqHo1nFZaOE0NXFhxpd/Ca6f6Szh9lXzl6F89W/ZvfvlClZD+BcHD
/PqfjEcr31ihT/TJ8FWpQ2PWp78er/pEkzamyuk3q6SnkiS/kx62UgnpRZPD
tIla6HPWJvJ1iQbTRf9PVn7tKk+Tw0F06S4OhMAW1IgSugvgmGlZcUvUiDpG
lIiAFOj74jXHBa+YOgQz1s1lnTZTIlI8HSv2snylGC62j5yVKjQ3YcR0zORR
aosAotKBr5V2t65uJ6QqRjdJQHNxJ7IRIXeJAnSHf6UomU66/3hUitVBRzzJ
Hwu9Fn7v+hyc8ncfbmuzvz0SNq2p1uVtIBEDj1lTnvXABZ4fNeErThEc9+P5
yLjApMCN7DyUAu8Ukb9FtoduNsfcDQKrRax64Q/1cTWaRbLWzEG3QKyJDDkO
26L/F0AVjKLRzyarjWnDGoa9geMtjBPA/iI2XsRrxFoYL4wUf6Y4KwbMXW86
K0i14SHe1HRZsf9t6eaduMbHISMg62rAfDtLo0wRfbN3CgGEMXYZGlcQMEpK
aLvU+SyAD/HUWwzaGma4UD2DLoVy58w9r1W3koU00129Toc/RXe5DMGXDPoA
xa5X+rxQ9hu6/39zz9IqZcQLpkqCDIP29wjn0ANZOWJtatuYkvQBMloI7XxP
9fsZirLnyJdcGexUJjyRneURkZ0Qbv+zCFh2qGfP9yjkHuDYuxbLR2S2Ar2v
cBo7sHezew21QVyp89FOETKdMsVMJHh+3MuZ9fkYcLKoFEVRQhCyIVI2xps9
hWbIEqBVoJGCNpMcYsPWkbOdD1mSQiAt2zgz1/maqwWw1AI265tDOEjIVBzC
YQ1lNkgXcWDGv82jDZaFnd8eQaCE7cIljD5hNou8QGblGCNPEzJfUW691I5k
NdlojGvXhOOo0AJElUtd6dHJcZoDFYA08JF3ah2xr6fXGpPE1EKtWGhntlBY
kV2Ij4iv1phCzEUDatUxxNqV9FrAJrpM02H0tzaebA/7ulG/cxkZMTaPYaft
Y18L2mJf9xo8pYuQ3pGNGo86kyoolzqQuPh7QOoUPZ9Ho+5p4UStkyJ29oEt
NXSls5ShIAltpvDbQLcyRWH3ElnmyX4vle+i+/4aha2+/+fZq2guK/9b8Bi/
3uZb5zSyynnjN9asI4/xETmGg6NK0sCG+FNjWGcFWaVJYNWRRV7nULs8CeuM
AYQadHPSLxEcKlSwlimM/dWK3D10MZx9yTUfh2pL01Se06kTbYQq19mEmfZ6
rkxQDEWsdBWRPjDZAzac2+k1oeD1MxHQaQLWF+PdlngIUWeoCF47OXk/hqoj
so5rB2w64mvTM7j/K1EhDeHpw90iTBQ/ZlgxwYhpZas26tuprvYHKkIF4ZSJ
TL6syniiEdU13D2BC4nQOV91wlA2YTe2qn7YYIRKVPeIejKvWWiLCdicwcuq
eFSEIDGdAZ9yaud/7CxT+zqyG2t7+rDMGF7jME+6mTBMmNBresFIresEY10r
c6AYAib9HMx/YaPSTCa7TMAuE2qXZtX4JgRYi6EOTMrk30CSxvk3VRSprsgV
caE9U4dLiJ8zvSGTIUlh3/g+oEyfDG0zRJIGoWSLkzkAVixNlfGDmJiSZU4k
C524KYUhSwtV+w3DV6dqKJaW3/Vq5TcUebb1ebFswe3zr/5jnxcrgnvFKqfx
63/GKux/G11SO4y+9bkx61LtDXe/V2S4WaWpMqUFz1l9nRJdHxnO0u3DVqYy
w9QcDdAJ7ms0FDHUZUL/1wEPrxCIOGDgIRw8ppBXHA4cFKG97qWDCSSNPrAT
Zgkw52xl9CfTVEb/GPCcZBSAhAMa3tsuXjXrxUbJ67HC6y9EFIbshHwD16c8
qnFc12SdJ9tHdproklrrnwJzCsqrc6hfbomx6VSati/rVJ4K9dviTuojzjSs
XW5gly5IhiMyjo/X4kxY0IHtEdt9d79iUn+VTOWLSuvht4WDlb4MpIUWSFSq
TXQqhTIs5jJZOpowSYRJveKwGHIcrx6S3BaXVZ1oCW/+roWTW9gXElnYGD7H
31M12x6CS3DeN0nXWK+1Gjphnoz1Vpy32yvbZ2YJYHchh8hZwg3L7wxfwzv1
DsBZ5HpNeSapLWB0lG7lZXtPbyQ/VmYo5WylSreF6oHG8RvTNePWp8tGr0t/
R5nuPoqdL/ZfVNF/wMIKjpVCEhY8ya//BVYJyAVipU1i8+mdv/f2Nco0TsIi
gaGsVwwlUzsPC6U2WqmszQxfmWJrNAwlkFT3CyM9y23AKoGhhH4VJDcgr4HS
BgsaUv70nlfWxcNNwuzQwWXM5ExgJkPmeWOd5/Uuxk1i5YKsDZMRBVP3MmI8
BEHQzuPPU8/ErXAzvKShLMa0LxA/4gZwSeFrThhJmCkJxW1vgwyvp6SfAQvq
cEGrVMdyRUzukdPBz0NGjsfU7CD0MltFXMjszOT6LQh1whDzeJl5iUCgRX+p
iosfHJ9H360tUJsDYxYCAgID6jGzOSSFdMLj2gFaEpqaBT56QxT2yObeOCxN
XbtQB8JQ0NjdqHENmevbp1pyW3+gi6etLe3BphROic7SLe57LS7CltHUhTuA
0dkiJ7jmkY8+o+DJmTsEbKHxzyMaFGkg39jY0HSbkxKHhzx+wQcNI7QZXL8u
4sG+kpSbXhlTkvyebujukWuS0wctr/ybO5ZWCctM8DS/3grTag/kALYrmJav
ZANoMoCLSQpqBlxsGLay2oCLQQzQxSBuIg8KXBxVkgoKsmPXp7NAe4xaLcBF
MjG6k/etAJQD6c5AXdNQ4GIQl1LGE65RsLJHnd5B0A/PCVV6Pk16vxnnhSW9
IMqSLsBFBS3GZcEJhSFZVwHbWKGxr8qIZKIj/YyFcMWED1dUuxt13FCMCkWW
zYCikAdUL6efOvakwpsLQ+kXQI9CqQSOce1hrhKufQwle1BRmC6fSmMjE+hr
9DwLHVuGW1FC1Qdb+93WtOnx8dLz72tty5kLKt/WFlt6qcaGQGbXa5/D2Oj4
k7Eh+iDTXPWVGBqCGwxrx/nW3N7Lmdz20tbc70+35N75scU3uBgbW8I3Nreh
wDBFwTfcxJkrfiZKScMz+EaG332mt48gHdkofV4Bx0E2s23SrhENCdR73Zx9
PbApnZ20OZ2ZtKmmla5milkNdJLT49anyuj6fsSa6neoeJsxYnXy76mA44HH
UDGwGYIiMgMzoAGodt8nwwLQIGJgiFsqSWA039fvWxWBCjJMkEw5iGVAmtWR
oYKUn2QnyK+ZM6gghrDwpRKfDD0Uc0ChfHxgZ4YU9Z13Ndfvucu5/nMUHzj7
YgQfeDuu2djrBrV3gvGBPXHSkDAapfeN4YEOqzvRwYDbwANH2zoN/s6h6gMh
2O0uOANFCjJODzz8+JEjj0doaVnWjnF8Ed2RUBsOlu5L/Er8CkJ7Omvy83I9
rXrLrPlb5tqfAxY5wg2GBmDwPWlTKqbaup4SCXRJ3gMpkhEm2fW0qin5mudo
Srrc0avgOGmkQAb7ogSRfl2yMnorsAVs+cFgPiTb+sPVLP3bwcocechPyrJs
d++fbs29q/b21g8tEThRDKHPjTa9iKZzE3orACB0cgAEZK1ILWFcMDZUdjC+
efIm8jDBLNpOsfJ5NTj0XMAIJ4EsbWVbZtLGNAJY8/gN6esTNtakKFxcGLUm
eWzk2uS7o9bByNLomAifSPAMv/6H/HGF2Re27w7rLq9PY50km3IIPbKnxlFr
00xhDYQeqPMnbMCVztJvQaE1nX1IEXrIDX8j/LE8pnCsRI44VoSJ5pcFQmFd
EKWwft7+jawuHiLzuuX6v1h2Y2Tes4LMAzUmyjomFA9ReUEIy5NUrECBuArJ
ExL9wKmuGXe1W1Yh67stXFobHy6uqeaUQHgQ0mwoYXUZLM5XLAstLZYfsjwl
WbKubiYtE15aqHEkpoQXKcBAXZBB/UtJAsNRQpGfOI8DjQE6lMcIbo4oldnO
LI6nVjW5RfsFWftKGLekCAOORuIWRoO8TQubQiII+9l/LRuHScVzBypyFNN3
X8rkPjirNvWDZ1OWIcY9e7LZo84f6UdjAtnRjS5s5cZ+STgApX2VwNUugKe7
rudc52wSMAAqx7JT3uJyq3XS5ppmOsf1FB9SFA/OU8T4cvS61EaKJyMphiBU
CatGMFv2Wc2STJACFZaJGqLCMibmq8NDOFwdeTwHhwML87h17cPhyOpiwMIF
RQymufs1kVELyeDLQ6grZsNMclpmiLiYjp2MiVlkdfowsNUbRYU0zBgoA1DD
oLgrDIoDIK4fBCzmixAFDwJsNF8QcjDn4+ISIcVpkQQLG80bo7syMCfY1jqF
puT9OwcjfA+KtfuOhRozncKV0hHHw5XziXkaD17YesSRHxptaCDKWYlwmCGX
dFSLZBZKSTJuNqpXbFgoINO2s6dG4tVjIa26CTzEcL4onBhgxlLDxQdcrQWw
eozjUiFnfyuOCqUfLIijUlm2ABaUYAvqmNt3JcN//95pzQLFejiKRRGtBYpo
DVGta77iocJRGBHw8bDcZVbaUZAC1gZWrTSCQSx/XM+zDR7Xm03R/+LP7DEE
gY6hkIl1zs74qC5D9yEzZUu65YHNCFCp6vHr0+cphBymOgcB6v5x62sQoJRq
IpgjduUTCpttGaHwIYpK3wxbmfxRyYQBVKsavTZVQ/ZUT5lcw4SNDFRrpoQU
RMItD9JH7IYZiSfmcYC+BF0wLcze8wavuTja94Ge0AIbygJHKFzg0XgaRq2/
YtSYyXCRDAQwZWeQ2sJyHufdAQU+bIYAAcMDtbMRwmCm6OxtVjQVvj8CUwtx
L+CoccquClWzj55agrMxq4weUCEpaQ+ivhrGyNL7dBA3Kp8G/Ic2BvTomXzF
zGmlFAl5IG4ziekXpPUCX0EWdDuF4wHkkjAPQX49cZNsNzATeFvNJscIzpJN
cdYnuKU9fQLOADFGhiNHlfXKobA1CDtaq9kdAsn7ZCuflmcTsKMitaPPyrOU
8WVyH50jW/qplW1J8WrOjmKcxhXm1glWjX+mJXOrjjVJ/78zdx0xA0DRtulb
WTHBxzU6NTceYMSlG4JfXHBSPT27yI6ylCBmn9tbn6GMt2X69rrr5IKq6EaW
UpD6go78m1T43Dl4GQenMWJEz+IlxoXVrSZbYnXUtkHF1X+gbwGG7IdRa6sp
xiUZQzZug8OQMRMuxcQGsiwHS8G6aAw2FBRGaHABTVGdAJF1SYgVLXL4sTjz
4HbQgHXNcX36EDKyHIGQdXTFtl1wwb3R10OfTyBksI9pmJY5aArTw4kpJdiC
EgYaM68viLG4sMQ9wbrvgcpdg3Cyg8Sn38llSpLcceABmBBQ3gg21tmTb1SF
8EnfhyK7D/mE+vzfPl6Ksd2TJnGj5oNkTsUzb8fiGd0Yvq3CXX2fgkN4uy/K
px+YaCLC0WPv1focs6LeGCSMA9II9ZlIn+73LMaYXFf4iOBBcJhhC7suZHKf
XcsGbDx08w5W5GBBbEUFeI3l9ldkgy5I9digkPb9/oy0JzxjYmMEQmytrFdI
HCrgOCT4E2k1AkAmtAsdOa7B3hCjjHryxtCTmEN6suh3dt6++sy8vddb5+6p
b6Zyq3H2zrr07F11V8iLHKLg8AIFhLvo6EOdOhgnZvMcv/4CgC7rnpvlgNZ1
+32rUodGl6QA6DpFzwCArjK6/wB0VZN3M/zH9cEG6GLkpYC5lM5VkZfdGcwF
ywFbmgkjCbDjmuNcNAyXZWemADQQUC6yMSChtTnFw5dXBdaFH9d3wTVZwgG5
CFKZGUJzxPbjUy0yAMTButpCuh476yBdMYN0TTtrJUggQ+lOKtN7lmMTYy2n
Kq094o6xFf2LiBaxpBzZNvpW2nvWTn/4tFmukMoqukMUcsLogwYn1rd+s7RC
2CyYNRX3vgMvI4ABftz6tOMv9BjgY1IawXIKOeg8+UF4oa1OwSeGETPd22d2
SBySgp67ZhyDcMzRrYNJHKjIsr20Z0NcGcXZhm5lG/oMFwUntCB2XcxQcJIk
z0eHoHUBAwXOq1jRIWa064QT2ptEy7xLGI0UQS0j70VOoUdzOAWIdHWEaIg+
lM8h+rTO3V3f8uzuuoZnd9dXz9hed2bG9vpDM3fUr5y1s74/JcYINhPEjJ4X
sEY+kcfrZHHGW3r0gU2p4/Rdp+n2nyUzAYlHWQSosZzNyIAazQBryKIBSNkB
zgi6ZjkCyaoQ2Y/QgQGacRcYBl8OwVPMXfqyA09JlCpwW+X36HxYuNfUZuaK
5A/bzIwLhtIQ0FSUXjAQPuSCKGJKlWAZMhVnZYIOcjZnCg6ajQVFkfUKRND9
a2PlE3sJHFPffY5HMAiJBKUP3j2UDJ6sGsgPeyTmvprmzFA6Ch0UeA66gUxk
zhSfZHxA/Y9R7Tekar40wqMC1AuksClw2ZgaBThtAokqXdgyYBFGi4UIgx4C
LGM7ZV37riBgyGGngx+TYGLNggRMIo5/oIcBm4A94PqYvmXPJbELHOsNJwWd
zMWTa+9xU51tBaEklkfx1TFC8YXQssTQUmoMLygqA8jF5/dyCkbp1/XWeRRM
yACu0xurojd4lg7//pkf1b8w7f26//7Iu3W6BRu8IEUMLKD3vcvTY+meTh+/
obZ4ypaa7ZRe/eH+1UlfFNxAEdfo9FeTtaQVqgTCzcbBxanmIR7lJrBKilOK
ARlBxkDPrTD32zcE/JDHlRdjkFIHji1GlcdCyG9I99VHKAn1QmfHr+mmP+Rf
IXPS50nlxQs58QLGJ8V8UjwpBwLRRe6meY1y4s10bOx8Rrnqj1LXePNXo7oq
ikKVjLZK2W/j/JXdQ7iSST76+RejG9QOECwQDSFaNL9MeI+EVltYb5OOdE5M
4iZeiEHuNUaXQ7AE87CahXFsW3GCGPE0mwECREc3FnLX7npOXmxhBiVGjHH3
RVzY42zDLD4Vs+BAgbCR0BBCZsF/r1cCX0i/ophGxl0fnZeaxmCBlmchZGwU
movghtgI6Wrfyp03VDaGJ3TWoYXJ85Zi7Sar2FVXT++vmpJJhIZP6H0/SW7h
b2dtr+MUa7JYxgIZ8DAnLdUwY4at4Ca0lffQCjIuiFP0OSwDceGaxAVH/9ZI
jwlQoWayhhaBCiG1wjz1ZgcVun91igIFSJyE0GnwG4AMVTA4wSOAY7PA4GeQ
UsGIiJmsTEUgQrZJ1ZFby472ja4+088zrRPDFegiawmY/A2rIth4eUovfM4Q
IRA9ddVs5bJAF2AkiAoPS7uMM55JHsdTyAUnqtJxg/WxHSTYVhJRO+AR62hW
mjamBhT3U1Tji6c0UnbgHaF3jFiqNGCBbxMRgQvmV4sxEaOwKk3YIMFCtSG4
+mBr0Gpj+vZaBAT6iSCcL3SgBAQFnCqk+Jswq9yCiSblO+SxMHzZ3cYasrAG
SZroDzAITZhw0ZfFYQr0fvFdaJbBnnDtvCCtZ8YuqFEgCqAFraPUG/O9xOWX
A91TN24HoE2HuIF5DlkEJ0lsDXvqmyg+1D6zo76c3u9PlCDtnLmjbubUd9Mc
H2THK3gpXPXyVdj9RpcP0QER4kX6yEBzpTmrG1JcfZ1iQJTmTOE5lNzS6Wd4
ThDDEIZuOeA5IEAaXlyVG0bWAKsYVkx+j2r5gIXunbgGgwiM3awo3OK/WQYy
z17O3a4Tzr6A69DZB7UZPsIObn+aqc1kgZppzS4I/FwKWwSGWYwhQKAQcT4Z
fOggxu1PC85GZ5sJDRDucCcMA2B/5TOeM2+xyItO0oYYwg1qBYptqKPuRqg0
Bsx87uLloq0QHvMY/D8FmZFrktwJRgQw768e3+TpGKU5V5MejMsxjNTeUFwg
aThrhXzq3v5RBiVIhuDCLRGiW+E7ej3bdCtwuBPi5elw75MrhkohhiNOBREO
ObpaKB58zMBbihlwM8wtONfm7eP5UAHlUs6++sfGLFloK53w5rl7rsPHV1AM
+/bp7bXv0TufMGN77b+fu69BF6KCRVJC+0BtnOqw+STgMwwYHYGfo/YShMx1
KrUb7luZaqLT3OzTeo1YncyM9mi9xq4XLoTR9FDGrk0ySgYPCL6cadZfNG1u
RsfEDQQTknkJ9r+9v5PhSVGuz7yrub6YKypOpv+sC7n+cvAxTJmJtP52MHsZ
uxd9ZIkDOPUnSmXS6Gi9ikKF3Ad/8Ch/TuYddC8bGq3YmYKQMc+u8YwCmPAd
kh+U2agmUHpQXELX4M7FIW4FXt0/6XrK2asP1YNO/7PxaSmnVhyEWmRDmNBP
UHlrnHo0ZEFfaWR2c/cIyhoZNHIa+Fc6Zh1w0OM4dBQxcST3Xc7YKdcCOOtq
3vB4d+Ljbb4bEQBHGQkN8iP7OfT1Nq3Hj/Cn9W1OertUP0zfFePJYmfpTh1v
ypKdZpZ/2dhM2VkdlcJlZMvHKZN5n/z5ExS5wFyrm0LBYoFZ2kk3ZiucdBsC
ghPD0WIPFlarKvLbGKc7NXry1Y7RatTaVGZMSTJDpzqDUfr4jYJUY8KQTanc
2BIBP9sovd+CcEqhKvT+7FyPd8h05RbSDMQio8ObWNBwwLzLLP48YM5FEYCe
fZHlxvrMucwkNygamZJSiDF85efu6sh/jE7SjbZu/LdRkkpjuLE/jzspBDg3
S7voQR1pIGlHR0chyPjlByyU8SfaXkYZ7c61nOkgJq572Arx2sIs083xwtmF
GheuHM0fpCtC0SxwDHRxkC1rOz8I/XYBTlYMWQMdPLhazlDKwuxEzzJOcgxu
nb7MjjKOLo4xUpEdF8Q7U5riTcgLIxNyS03sDCfEUaNi6MIiGWu/bsquPd6c
pY+ZNcebmijJryv+sqnyzS8avqd8fctTH9beSyU78m9ZoAmW8utf+eyLJlyF
Q4v023ZoztDXXKT0+Rq54GosA9ANrKOEomE0y5enDPvROmkToF4M98pOeSud
xTyd/p27mzxaQ2czb2zdXw5tzEkHG/BjviNz4YWsuFIUhLLB5W5ywCQuL1yF
ajDDPwbOV81gqKI+d1Ua6dxszxtW2xUlcVFwk0px6qwaXzDxO3GzRs+Gv5vA
XIohiQtr4nHFidQavU8k80yXIvylOLwQTLzj5Sh/scdhKgcXXlgZDfWKsRfu
FiE29JlMbREajRpUm/DEqNjWh9Rn0gGJuVPMTjmOAxZDlUhnFPPk3RfVPesx
/qRcOjR7L2fikmHQyaR7gbO835WlbjhdwAd929lW7s3oQE0pWm52cwAPISVU
S+R1S75pztLnrSuPNjXTGb6+6mhTJZ3j469/3vjma5839n3z88Zb5+2t0X2T
4NVodwWZ83w6wEaSgENsTERnKY+4Qoe2grxrmnIDjIihNdtI3rV5/Pp0y+TN
adaZ/d1bNex9PY1ZjIiTQQHwSxRHI6rgur4bd3KOoCIq4LNa4NYH+9r42InK
dmL/hbjsRGUXlufuWFCW6/9CmYy40J7ndrt04aeGjAi9WULWSV/boDjuWEyA
GDRYnp1gmQQn+CgXhcAKQ/c99BOry/eYczXwGkA33ZBtV4U92rD13b8KhSHY
+m7m42kEu2Dqw8jXmPqQLgNruszj88kj3eRDExdkKx3SBA5pnA9pV05jcbZw
7dLDioMK/4uzB+eJHAHtRThZ7aV4g99CPtxoysP5vvuTOFnX8ujqjqZw/rF7
zaz+uql19bGmJvpYQ7/5pTcON5x484vGjcVfNgxb+FkDjqbsXASvCbzOr+ug
2rWE4j/qOoxeTYj0LJ3Ki6NLkuVjS1JVY9enaiduSkGEtGHylprGh96ubZq4
qYbXLkDbMQh6gMtFAdkfuyLkYeXGhkd3CG+HcADEHXChH8ODABUqyKftYMnR
GA9eu4oEj2aMcFA47b3sVLIGoPJ2PNZ26Bqzoesjp33GDsEAdfH0AM/I/Ehn
RT2N+XaKntgpBjqd/AO75J9k2X7OFSO0EZda4E5qmQjTLgZ/jfpUTXCHqgS5
nlDjswlEPfdWdqAYpWIEhAsSnSjmlFvOIUqNT3Kt8knCjW02LsnvrXWANLeA
jxNcn110ZOnfKJpTkolK7IMzrXwhF+Cjq+1sHOdtmk7sv8G8NRHOim7hfONT
hanCeW9V8IIh55DNltDhpQPcSlltM/nWGsrNr1Bac5QO75KlBxv/x0v766fL
wX2DX3+eX7bh4K4dsjKJyecXo0pSELS8QIaNyWcFGTXELNMUe9KU0BqNBfhm
cGhbQhHLahl6xh2LBfjqYiy+UKBuVYY1ocCcHuBQyDIwEUtb/QxFLH8mqeAb
VRxZkTowmQXSxllRkTkc4HamnqZg6RNZBCIwp2sCPqzZ5in4iBbGtFKBxBj9
2yOaCQunccxRpyUcu4tUokJq3t+r1Kz3NkRdbChp0pHdKtwpOm0W8dFtQy2G
joNsdrdlQ1zvH9jvGFjGPjXBR7Mg93vygTiYuFBAke+k/5PSVPo3HEa0HpAY
wL+iRivEwSx0k/8Yn9buLu3F9dH5DOevfBxPNmfJp2bXqA9debSxho4ifOjn
y440LCTb+rv1J5tnyjFcFg7g/ZpqhTc5BAHDjxS1z9PnF8iqlXwhie6wKpU5
8gUM3m1uYkKHdApR63YG8ssNRIR5QVgX/MEhn8mXcerAi1ToyI1kJ7yK/0zp
qAwNO4V6QrbW/eS59vTIhGUhLmBKmRnitDEaUfXI7Erw5LCj1EHcL5PROlPz
RQm/Aj5kcRfGtY3Re365cBvc7JbJmIJzqXB9DVbuXfjH0cqY7Quj/04lixG1
gbdg9iD6hYDFQBTHPGHdiSbPJ4orQoEkuWVhJGy/p8eNfF0MsZr+eccFcXtY
csGF/i4dqg7RWaB1eq/ldXo74fuz9F9kNn3X0kphu3H1V801xUcaz9ERO7js
i4aF6ulmyRErDo8YKqCRdEwgiIfR3Ef0Rj8ZuTbZXtsVYznBd4iSVSOG0vlj
uaEylqMjJp1xbD/e+7qM5bCbbEp4JmFlRB50DNUdJly3Bn4hOpfrwrGYG02q
VXU7nS/WqpoWmcmJi5sWncrxEMKbyil0nCdxM1iQXbwaT8nOK0mVR5gR7ugr
t0iBzER8qpv5ABjf/gIAxuHuvlyApsNihBihWuQjSyRLtLMGuQO0kphBddH+
ho7eWQMuaZVHVGVnzWJsjGNsp0iMRTxFvY0DtutiK7swbT91DmdqCs/IuoFz
THpLXMB/fDUTdMx+fCWbpW/O0HltpjCfXnei+cyKo007Xj3U8OCbh6U2Edxq
sFK6Qjbf+t3Yden5eevw1hEy8ZJyX2dxiIik2Ro8z7Z44uuvwa+S2RbqRGwB
YunWZltYifdnW6yK9qZ4LERSaXequlE425KniTpVd3F7z4wOtnj0GxlsFeqZ
8gZbsosrCOpEONOCS+NM8KGfANh59Ey4ZY4T9sylNryFER/Ge4vCg+Z4IskY
LDcwHjQYjvGgYf0cFPlTlf+MhUJ5WZTJPVlQVAhZgIaBgo9hRe1MvftjxFfl
PjyrYTEGH0W/BHqUOEw4R13wqgAGhMO4uSiOmOanPr6SoVOUzey5nG0lf9dI
KV+KqpDLFHUPbDrZMrz4SAP81Fw5SKvCRnp+KWGNdGsvnvF4FRhAoxvcvgoO
DlJL3va2joa6cNP8/lW8Xpo/HmJ9DGAFEDCQbNuCqZwiUdijPxWGj6uLNNyx
YEoHqa9Nimacz/WDEM4Mf0p0Hr4sxoRjhTwkMgQklqHZR009U5DP5UPJHMe/
Z6KuSbh85JdxIh0vyOXTiDCdDz16xyECNASZCA4OilU0AgEr9kgKBCxVqKsl
HnFISBvSkXsuyLoAFd6kR0mOkLgiRDtMatBC2Xs5PD3dPF+0P+yIx5DeW0ec
vA97Ifo+PjuUYqXpOkfnZyf97FFbvm2+beOp3Dw5O2uky9feEMZa09blM421
8iHLeUU5jc1/rChjAIPN/3YGMBi/YC2ZBzAmsmADGCQSSKtgnm4RhQ5Ol3Cq
UsjrJIDD95tziRcndaoSw0mhFIP3JnWowgOVZwS2xJ1ndDvcQKWLLk2e9rbo
cTK8zEi7x0osI7/BrZElXzRlfB42bi7ToRis3gSHAsNs6w7P9xksPtXDEQtp
FdtwWMSYw0JOCBwOpsc2fwb4XE9HbteFVvEWt4hDgS/pYt1kg3bgHGR2X8q2
kv+AD6nadSFz4oMzLe+QHxmz/WyrYI+Ckht3en2gBec5dBYugSkJo2V65jX0
piOjiVFuNJHi0cQEHU2ApIIX6elz+ves6BuH/QVvNBEP+fbbH0d4OYNdaIph
KGE7fjyUoNPCzPtzLocDCWmahfMIYdv/hUDgkEhPlzPEGfOz4TTBkQwppali
a1XKXA6CBVD4QtRc4PsS0VcA4YpE1gXzr32yAvOScoAJuNLxmsT9MxHwgYjz
+ndHXk5dfkRWf0q+ETYFpC17NCfGKbiNfcRN/rQMXSz4gyx9XQtdDTvPZ6o+
LM2cpmvXR6WtA98/2wqfELwoB2I9v/613zU1vIE/lT05uLj63NAV1WXDVqYg
zGALa1gFsLZ/y7j1adf2n7y5JjtlK69SY2GNa3zUVrAgtP0Hvmzc7eWRWVVf
zzmYVXpCDI6JzVr+rmEFKugXy3J3zL/Kq2oDnic/gm3PuTJ15SaVbdCAVfYR
1+7HJXyTcZkuyRWEKzYIMwwoviAHhleXhRbAOOX7L7R2bhHTcHDDTAF1ssos
S5eFyg8AbCSqJ+wq+yRx2KnUlUWcjoPgB1hq3ADqKOho0P8FfoBChsigCwUo
AYcYyoDJFfyCT0Ynjh50KrLkKTL7rmZbdl7MXKdavmLH+czxHecyr1Lt/z+3
nmpeKIdhg7TQ8wEoNqbn4SUdhG8ogzhFkeCSttCrsWVFXoBb6BM2Sgv9wS3p
FrTPJ2xMAYbVtoVehPUQDrN3qmL6wIhQxw25wPtyx9LfsVIecNmxiqFWp6eA
5Srs++KpCbXwWWP/Dtxu1VQ9AVOlgW7Ewt4RsAWrbiGmHEcAZDLPhY+fJ5Av
hwSMKKARJMYz41E6iDkOFl5koieDliKm5Bw6dAOQiY/2yybgEllYlyCRcPvq
uOjJx+EX6K/RLkdhjV4feX157B1zByuyWfosQ4+/5Q9Xsw3kECp2XMgco8Tj
NaqB7th5IRe8LM98U9seH2DZNvsDt/SX961InqRs8OzokuRVes6VZOjpyVvS
3Jh+YHMNnnkjRQTbB3IbdUBmezMTNga30SArddLUYyrpmFArklXTG4ssAb1c
Ib3oDk4kCEUjTAxmj2fAecD0CzETVZ1Wmr8DJM88nr8EJNtrMd6/6RquUz9R
GhIVzJWwwPoFLyu5nJJ+8ONtu/TpNqnDrTWK2MCDznJxod6nAsktPeCZOF1U
P8Z5kaxAd9ZkIgIMAxgJ8p/zocpcC31soOdd8fHV7Ndk5m9S2gDTDpbIc94S
7XAYj8bywSuYlvgQRfWvxm1wGyzX6PlWTnkrnaTnDq3ukI54uWMvte0VoyKm
yoF+etAhy2IFCp83+lKg7XVzxRiJ2VmaFjE7ACWu5u9j4XNoEHUOm7fWwEVH
TRiJuYnbO2zgotVgvbSEdm/PRPZVeFMFWH5/wxeeHW0Ues6IKigAMCeAzowo
qLrV3oT/lN22fMxt99JTQfMVRLbs3/fZ1EBw7q/9kYXo6Se+cRj+e7XH64LE
T6f/+Q+Yrma66ugBX6aPhw9V5RZ8Wp7hSP6KPOC3+PUWe8BGU7uenPQuylU/
n7w1/fWUrTWnKBqxdOIgQZZDjN1fT7IOaf5eRRemwEQPGr0rbpFq38pIae9a
Ej5p8oO2T+ET5cA1Iqsr1H0KptdjHlpAyq09mtcanXZGH2xv1wt1+xS8RfHk
OWkudJR9JioNkEbyMyQbnagQJfQsH7I1bfq9vOVSt6kdDxdMu8uCqWG3t0k/
nZGparNwybYoDViIURwAqLHnchtf7NkoHuEBeoTT6OP/po86IQzeDn2x0YdP
Hbe+ZvHkzbVvUxzdplwc0Lk1GDRUsNvwmCoMusV1IIvDxYCgO+djLPm3TOgx
QcWG/QB+oEsruCn5G12cwYO2vjbmvjxH7IVGTE/Tu5aOkSuzu/CCfC+FQhtp
Yh/ypn3I4tCQRNfodt2a6Q0G0154gr2eOAcdK1iiXTBxwIwoioNyQAh2ZXKH
DiFyqsnhopY+2YTbSdGnmsDzjAOKT6mybQnbBeA9KjfkXHC+yKVgi/C2GAR/
3I63VWOsoevCwarcPvo4/lB17ucHy3I6MgveDfs0wNn0H76qxldsMC6IE/Qk
rdbmfvJgAbPX0ZNrGFJc3cRA9lDHHFB2a/aRt4UcHvY/KdegC0rFQ5Vlb9Dr
zLJHt+ReJoGG8XGjTzY5hGDPSMBwi0Gyp/0YJth7uh2CvelGsFckTRhbSX32
Ms+U4bkdMpyOwX0eafkDm8K9VEODPxrdR423v44a58WhDlxRKQEVR0g8JFTI
Pj72trYPqulQ+KB20eUelAyVgvf51VFLWe2zYVAx00o52JPSIQKRKnLSjLOu
brxvRcpJSQ9fJQ0R4KxHrE0qX1vn3CggUUuSjEgdqQ8LngnpEMIf1z4+Vxta
VfOi6vL6sOIhK/XNrDXb5znplwhb23lmbAP82mnMPqPassqEyLYULkDKw2L0
Pv2i/gakP+qxRS9/ezgG30jfbo8Ley2y3dKVsxzbbEEQRG6LVXy0VNH7Qg37
cR5+nx5fdy1aDlZm7RG2eo/wB7o2HqzI3HWgshWPUGY2wTZ+/Y9GC+ErkMFZ
2t4ICC1BCsZ44mErquvuc3jipE8IBqY9bWNxK4vJwEQPJsWKyfzUKFFBZspg
nhdCYFrICBZ33ER0P9DYwmJd/3lXBEs5+wI3uIClhFJob+VFgLPrp47ut7Kd
KiuqeEzFedsWdKNUEjMS4hh/Hj4nPJ8YHhDV0cy3uiO8sKEK3/eiBrXlRxpd
ixLtBkxLgEiketI9qv26tdpVUbb+c6IrRc/qLEW0bRrZpF8dfBgiYGzvE5bm
E0zhOf3kk0vRm6sBsRRdXFyMLkm3UPHRCp5wEEtB9hHgwgeUF3WUgAs5WgGY
hfiP8sBrOUW5b8rskc2/gdoj6tAuTgeJuwvPXxFOqecFUIiHhh+GvEZB1DHe
kYn7WGrZGBMd8o6M4xuhCwOTvVkqHpamHPQLzNgOpzdDmfd4W1Lp1mFIq79u
yluMKeTZhMCgdYNSnlZn84meUR2gNIQ+VtP1LT2kYvKLnIZIhzj4SNIQawGg
SYhpFXyicVmeUAKjMnIXhqKrpSfTMHZdmlsA5PRb6Qm1gqkW/SBY1tBiH0HH
YxnAlJAg3skP608g6KTsD9UyBrh+SxduyqHnwonnS1SM05OCbxzwUnmoEa1L
He4JJfz9JbfWEeftpe4cuyAbjTRjsq67Pvae4Crg8Yzgd7a34I02jYhlCKay
wMHV6C28f4aTQgalsS1VsPX4j6a9DHGhPRpp3AY7+fXfIlyhXYfZjzH47hqy
vAqV+vf3i1AbKnVAyGrocVyftCnFlTqIF8euS1FmyFV6u/Axeuw8axYIRGW0
UvfxY9KmWWDoRr9kl3YYavbuEXArPsKY7DGa7qfBJwA+MPCr7t3E1IQMtzUs
RBnSL4NE6CYHguUNZfLV0P6FPaHLhsTB+vNorqh2mKC3CwT5Is/IAIR7ZJFA
4as3zOIr6eNJenbPHayWZyS91GBX+3MWpBUmAHRizLpkqSGmyHMnH9yaTpMD
o7QiaQvuWmVX51fZvN8+ZIXIjFGKwim6QVXuzOOIIJtyINO8QvvX2qXEI/n1
Evlz3xevxQy1opyneFr29EwhyNuMimlA8rCfgaxFJZzuuj6dOB4POSqG1v++
Vtn467j9TQ/FFjK2eBi6CDI5FiKTE7kPzwn/6aeyNBLLM6W8ejmSom+Ux7SH
X2/FY7JRyJwhxVWQddlFjwZcBN+Rfz41em2KlUvzeAiiUi4C9wi4Xk5wvXwL
Lxzh2aCkQrp1l9bGzACln2MuwgXy0sqQtAPKiEukr0VPoUCx4gwLo8eKfwoX
eEJz4f+fY0wBxxgkB4ZxBFiMxSbpwY5XqNgExTgyvoKSNDyG1V85aJjJBHmP
QwC4ec8ixkCLLpyLw3gQdvKMpf5gtOTFU9gsD2GfpN82fhhHJ+TliRtr35m8
uWbXsJU8y/5aayQjgwDmpoZuev0gXoVPNd1gDT6QcreIaqUUz2mMdRxgCF6F
X4qOMRW6VM8wR4SqRtzNrJQVhrVRYItX6s6zUreDawzKkLDCPRQF78dgE3Tk
LZyM0C0T1S4Xid/uXMha7gbSYMBd0CwCYg/zH9NiawcU7WJMPPpEYvBminz5
sLQ1u+9yJkNptl8OwSgsl94qj+PjsAEB6YZfjlhda81gK1tREaFsBU7lovaQ
gLKrY5xKcbJxSHT/2pWsTFuIirWDwG6NG15XsAcpZzkrNKDtJzhPQxJ0UhIC
u+EMkFxSGXFJtpCvirL0kCgjUQVlO+3GXYGoIMpUmN535qwKDC2rvlKFeP9W
fy/Me1uFmzIQ4PlNjGBD1vWuItgAlPzgTEuWTCGzrbS1edeFTC2VOZYP3/lZ
ZWvwjtzoT/n1NkuxbNndyk6jgEDRAqrwqsE8g0/WDRWa8KZhTBOeipaca5Ku
4lxLqcs6qTp5u3dFNZuA4X3aVpwFkYpTq83AKzfDQazB/w0oaIcbB3vsuhCP
irwJQRg7gXSiO3iaoGiXORhqiNsKZIUqYfgtubs4zHSMY7ivQWHrR+czjTvO
Z6p2Xsx8v+dydsPHVzK/2n2p5T25sfulGkSCZCSBSJBQZRj5JlBWlyjIYrCd
pFNq9NCNw1cyPTR27jhfpTfkaKFRCfLeHWXsqARxdJEkocrovzB/367c+Gmf
J/cdWa3ztpbwrb9RVSDcQwDRfZlGHFO0kUOZRgVayuy4kJPNNTodMKRl6ARg
/x1x43DfsuQDcOeatp9rTVH5fWbPxcxyunN/v/dSi/ZAggPSQLYizdL+/AVd
MABf1Q2wFFlyPVlygxRosv2lBVoMJMRB5yxZXnbipjSwaXxc2MW+Khm71WdQ
D1UiUtazDAu0MmPbdsV0/vSXMRp6K5ES2aYJ0gzUT9qBb08rT4z/tnzoDnd2
7YhuVNpNENPiSOoNhYG30tVAMa+Sbug3uy9ml++7kkEiKB2J4JDENkswMEk1
nBYc6RdkzyyLTkevjO5fNf3itWS4EFWWRaQN6RaIfDy4taZ13IZ0ZvhKV0IF
OkLlGwocgqgpV/hsyjceoVJu0jdva87ALncq0AUxUPhNZbcXdc4L2ipQgEtU
z4zhc6w1SI4RjdRlqriyiQ9lc/a9n1ozVAS10CG8Tvfs6s4Lmf17L2cf/KRM
srLtctM+59e/9h2jAZQwivyaDAX0hBfHlCQrKVlI0cmqm7xZChyqPZvoJiIj
u+FuDBJn3DQbT9l+jCNV0zVE/4QxRAwVzS0OVmjbpvgRuP9DbRjINit1IaL4
8/va3DMHC6KHAWLixb7YlMo1emJwMZxGMmQy9izdz9atp1qa6V7Wf3C29eq+
K9kDVFA+TokwG/IOuYeHw4OHAgTGbKM+rGx8SvftBDmZUrqu0lVOPq2KHHgU
J99+8RHEecT3M5kbvKn3cLGMc3/tFR+mTGg3jA+nregqLgIRCXFZKBPQ9cDg
tIiHLrBcm5952kDKT5Zwd05H5TE9ebhpr3kiXW8cbsjSncvQaWyiTCq14UTz
Wbp7QMKM3XORUx+t14Ijofuz6PES3a0N5M52TXmr9gs6adjQQvSwvAezs/Rg
lnZMupJNU1FvdNYB6Si7eIgggZHJJix3S1kgbEwdZdlgidVbgjIiq+eAo7wS
CiDpINCznfW6ZV8fAkgg5GJI1q4hdkSHy8hxcFPe/KKxlW5MI+U7qVXHmkqp
ANu+7psmQAZxU6Q4Co6GNVL/4auqwVa1gEJ8fndc05QqiOoldYTBLFWKWQ6V
9Fxa3j1rtQkuzNJ9Lp579M1bC8JuBOXMuYfeSisd37s1HqLiNu7NmBaML7dh
o1czLKX/z9KtyC6j27Diy6bG4qNNFSuONh4v+aZ5Fd2G/suPNkouHHwVVii+
FzdhF9wCX1cQJWLNEJng+CjbVnr87MEpavIAbiSvnEGBoiA3WlGSw1cIJdHQ
5Zjc/JZlyuBVomyeUcb2WBRnENPhJVryptlhR2NJSDCNNw+jaKUb0FD8ZVOS
8ojTa75q2rjmePM/lhxr+UTe/HHp25o39qGClg5gEHlRJyNJesa1wtUhAlGU
UQEmyhBRSm+4RzuGYaLp7Jj10lPHM0WOijMAyLFPvah0WpH37ZNqQwQij6Te
aIFxA6z1Izzw17P0xjOvH25ooTdfv/JYU/mqY41H6E0vpafOUInP5F1/E3ar
ff9pgdtGsABIXqGMo5IeMa+60eNtoES8iR6tA0eKDEI6O25DKotcEpp6lEdC
kzYHFqrRJUlH3Got/Mi7bp+7VYZlN0WGZcgV6R1n5+6ua33p04bmV/7YWPvm
kaYyymSOrznetGjTyRbGC0ieF5wMaz3zdzY7QbaMg/3DEOnyllPulqTMuJae
Tz1VU030rpop2rZQeoAOL/fiAQNFGTJUKEyFJarQcePgUU8O36B7pPrGZKTE
Y0B6T1TCCHdObXb69jpcreTrmuhKPben/uLi/dd307N7qOR489+t/qpZM63g
Oymq8hNY8VbF3Bz9kU7h5VFrkpXk1VP0Luqo9G6AihrFoSZKsqigSvqE4GG/
urNbUME74vqmLUcov51pjgqxi3sudOFdZJ7ZUd9KZtk4a0d9+tnddRee21v/
h7l76p58dlcdno1kP8EPYXXod3nBNuu6h3Trr9AvXUlvIIUuL/1mCN7gZW4e
HNmzdME7prEbb+R+b4ZuFF02OjITUuAD87XP/Kiula4GCjeVdJ2as7vuHYrL
tukcfCG/+Y8SMGxN70lKOayh9jkdlJNkAmfoN0UvxwefNNju1ODiUOB8qKRr
gQTRmzmIImjwTFnk3d0smQ5O9sltddmnPqzLUL3ZMntnXQPlYNVzdtX9+Nze
6+9TDTXkuT0NGtCCn8K4hpvMbafx69MlI9YmrVJE+X1mUBuABcc1t+LlgSs0
rnULt99Bj8NMIkx+kaFTnqG72TxjR33drJ311yi7+Zac0+vzP264fdbOOr6L
x+TXO8uv/w4jTaMxsJCLjpiRQ1pLskaUMquj8UY3OhBrRJMPrSfR5UNlQXev
8ZF3a2uf2lZfTnfqW7KrNXQKsWsiXj8o5dd/7dcvNmswnLhLhjAWpxtSpzJm
RtLUej87fnH+o9cxVhz1YROdgySVh6VTtqQPkE9bsODT6/ifgxPyX5/nVwar
uexVEcl7rSVINwfMOeZ9AU1voP+mWTwv5rhJIJJRSqXJAZ2l4/cJvemHyQkx
6dq38l9dlKNgIc53gQdEqaMK7d9yCmPsAunHMtfJWPrR49alKyk+//TAlvRe
KkDG0sU/+nv50Zf5tZthC9wMjU6Q80UU+q9R0QxfVE1eFMy3O8gm7/ndWykm
SDwlP+oKv3bxn4XxT8MjgHsa6fw3dL1NIcb4XeScB2X82sHUE8wq0WV988Et
Nb+i94B/OyNffY1fE7gjA0aX1PR4cAtzNcpxCHJ4Ofbnz//8+Z8////h8+Bf
/V8Ul+B+\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"b2fc9085-dff3-4763-9494-f96de94b9815"],

Cell["\<\
All slices along the z-axis (I think) displayed side by side. Very satisfying.\
\>", "Text",
 CellChangeTimes->{{3.912445631267643*^9, 3.912445647997089*^9}, {
  3.912447257273122*^9, 
  3.912447259910925*^9}},ExpressionUUID->"0523a527-9135-41ff-91cc-\
a27f8aea4859"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Image3DSlices", "[", 
  RowBox[{"Image3D", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"maxCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
    RowBox[{"Max", "[", "maxCube", "]"}]}], "]"}], "]"}], "\n", 
 RowBox[{"Image3DSlices", "[", 
  RowBox[{"Image3D", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"minCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
    RowBox[{"Max", "[", "minCube", "]"}]}], "]"}], "]"}]}], "Code",
 CellChangeTimes->{{3.8963317489102383`*^9, 3.8963317547401857`*^9}, {
  3.896333381775753*^9, 3.8963334130694427`*^9}, {3.89633467388951*^9, 
  3.896334689438015*^9}, {3.896334841120194*^9, 3.896334848670566*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"d51e056e-190d-42a3-a07a-ca0d26fe9e42"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfig15nG0NeQ7b
qnoK2QHZdrbni+1UPSfZrV61Csg/bLc99zZQ7LNdkgSbPVCN/YtKOfvVq7Ts
826b2ZOrD0STqw/EJ1cfSJxcfRB58vSB1JGrD6R+IPSB3EuuPlA4kasPEj/k
6QOlC3L1gdIjufpA+YBcfaD8BwAE1lwW
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfig15DtuqegrZ
GfI429meL7ZT9Zxkt3rVKiD/sN323NtAsc92SRJs9kA19i8q5exXr9Kyz7tt
BqbJ0QdUD6PJ0gfik6sPJE6+PiF7cvWB1JGrD6R+IPSB3EuuPlA4ka9vkh25
+kDpglx9oPRIrj5QPkDOF6ToA+U/AOUpWSs=
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9hewMeZzt
bM8X26l6TrJbvWoVkH/YbnvubaDYZ7skCTZ7oBr7F5Vy9qtXadnn3TYD0yA+
qfqA6uH6SdX3xcYfrp9cfSBxcvVB/EuePpA6cvWB1A+EPpB7ydUHCidy9YHi
h1x9oHRBrj5QesSWTonRB8oH2PIHMfpA+Q8AxFpWPA==
      "], {{0, 15.}, {15., 0}}, {
      0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfig15nO1szxfb
qXpOslu9apWdIc9hu+25t4Fin+2SJNjsVT2F7F9UytmvXqVln3fbDEyD+CBx
UvQB7UHTT7y+Lzb+KPpJ0bc9NxpFP7n6QPLk6gOpI1cfSP1A6AO5l1x9oHAi
Vx8ofsjVB0oX+NINPn2g9Ig/veLWB8kHuPMJPn2g/AcAqr5bQg==
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfim3PF9upek6y
W71qlZ0hz2G77bm37WzPf7ZLkmCzV/UUsn9RKWe/epWWfd5tMzAN4oPEIfLE
6TPkccbQT6y+Lzb+GPqJ1bc9NxpDP7H6qualY+gnVx9IHbn6YOFFb30g95Kr
DxRO5OoDxQ8x8YhNHyhdEJN+sOkDpUdi0i12fZOIyi/Y9IHyHwCDIVxK
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9J9mtXrXK
zpDnsN323Nt2tuc/2yVJsNmregrZv6iUs1+9Sss+77YZmAbxQeIgeZA6YvQZ
8jhj1U+Mvi82/lj1E6Nve240Vv3E6Kual45VPzH6bM8XY9VPrj6Yu+mtD+Re
cvWBwomUcEVPV6TEJ7I+ULogJR0h6wOlR1LSL7I+UD4gJd8g6wPlPwCPoFxQ

      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilevWmVnyHPY
bnvubTvb85/tkiTY7FU9hexfVMrZr16lZZ932wxMg/ggcZA8SB1IPSF9hjzO
ePXj0/fFxh+vfnz6tudG49WPT1/VvHS8+vHpsz1fjFc/Pn0MDA149dNbHyX+
pCR8KYlXStITJemYkvwDyn8AEhBaVQ==
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfig15Dtttz71t
Z3v+s12SBJu9qqeQ/YtKOfvVq7Ts826bgWkQHyQOkgepA6knpM+Qxxmvfnz6
vtj449WPT9/23Gi8+vHpq5qXjlc/Pn2254vx6senj4GhAa9+fPqSJNoo0k+J
uykJL0riiZL0QUm6pCQ/4NMHALCnV9k=
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfirfn3razPf/Z
LkmCzV7VU8j+RaWc/epVWvZ5t83ANIgPEgfJg9SB1BvyHLZbvWoVTn2GPM4E
9ePS98XGn6B+XPq250YT1I9LX9W8dIL6cemzPV9MUD8ufQwMDQT147OXlvrx
hTMhf+OLX0LhjS9dEYpnfOmZUPoCpUtC+nGlK1B+IKQfV3oGABIQWlU=
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfim3Pf7ZLkmCz
V/UUsn9RKWe/epWWfd5tMzAN4oPEQfIgddtzb9sZ8hy2W71qlZ2q5ySs+gx5
nInUj6nvi40/Ufqx6dueG02Ufmz6qualE6Ufmz7b88VE6cdlLzH6cfmX1vpx
xS8x+nGlK2LCHRRPxOjH5l9Q+iBGP7ZwAqVLYvRji19QfiBGP7Z0BQCPoFxQ

      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfipMk2OxVPYXs
X1TK2a9epWWfd9sMTIP4IHGQvO35z3bbc2/bGfIctlu9apWdquckO9vzxXbo
+gx5nInWj67vi40/0frR9W3PjSZaP7q+qnnpROvHZi+x+rH5l1j92MKZHvpB
7iZXPyi8yNUPiidi9aPbC0ofxOrHDK9JdsTqRw9nSH4gTj96/AAAgyFcSg==

      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9hexfVMrZ
r16lZZ932wxMg/gg8SQJNnvb85/ttufetjPkOWy3etUqO1XPSXa254uBfGc7
ZH1APkn6kfV9sfEnST+yvu250STpR7eXFP3o/iVFP3o4k6IfRA+EfpC7ydUP
Ci9y9YPiiVz9oPRBin5ke0HpkhT9qP51tiNFP3I4AwCqvltC
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfil9UytmvXqVl
n3fbDEyD+KqeQvZJEmz2tuc/223PvW1nyHPYbvWqVXaqnpPsbM8XA/nOQLaQ
HUwfkE+yfpi+Lzb+JOtHtpdU/cj+JV2/kD25+kF8cvWD6IHQD3I3ufpB4UW+
/kl25OoHpQ9y9YPSJan6YfaC8gOp+mH+BQDEWlY8
      "], {{0, 15.}, {15., 0}}, {0., 
      1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilev0rLPu21m
D6JfVMrZq3oK2SdJsNnbnv9stz33tp0hz2G71atW2al6TrKzPV8M5DsD2UIg
cVuQPiCfLP0we8nRD1JHrn6QPLn6QeLk6gfxydUPogdCP8jd5OoHhRe5+iHx
RJ5+UPogVz8kXZOnH5QfyNEPogHlKVkr
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfivNum9mvXqVl
/6JSzl7VU8g+SYLN3vb8Z7vtubftDHkO261etcpO1XOSne35YiDfGcgWAonb
Atm2IH3k6gepJ1c/SB25+kHy5OoHiZOrH8QnVz+IHgj9IHeTqx8UXuTqB8UT
ufoh6Ys8/aB0Sa5+UH4gVz8ABNZcFg==
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.896331755379592*^9, 3.896331765428173*^9}, {
   3.896333386471965*^9, 3.8963334133407717`*^9}, {3.8963346614386787`*^9, 
   3.896334690766985*^9}, 3.896334753576983*^9, 3.896334849032866*^9, {
   3.896415056361308*^9, 3.8964150704640007`*^9}, 3.912445573446383*^9, 
   3.9124467675607347`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"6089ec0f-ec43-4e5b-bd74-f70880f89d89"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9J9mqegrZ
bc+NtgOy7fJubwOyb9sBpeyB4vaek1Ts826b2U9S8bQHqrG/vS3XnoGhAcjv
tCdXH4gmVx+IT64+kDi5+iDy5OkDqSNXH0j9QOgDuZdcfaBwIlcfJH7I0wdK
F+TqA6VHcvWB8gG5+kD5DwDddkZu
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9hey250bb
qXpOssu7vQ3Ivm0HFLYHitt7TlKxz7ttZj9JxdMeqMb+9rZcewaGBiC/E0xD
9JGnH6SeVH0wGqSeVH0wPkg9qfpg4iD1pOqDyYPUk6oPpg5Ek6oPWT2p+mDu
RHY/sfpg4YMcbsTqg8ULcnwRqw+WHpDTCbH6YOkQlq5J0wdJ/8j5glT9AHky
TiM=
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfirfnRtupek6y
y7u9zW577m07oJC9qqeQveckFfu822b2k1Q87YFq7G9vy7VnYGgA8jvBNIgP
0keqfhgNUk+OfpD9IHUw/cToQ9YPUgfTT4w+ZD5IHUw/MfqQxUHqYPqJ0Ycs
D+MTqw9dHbp5+PQhuw+bP/DpQw4XbOGHTx9yfMDSCbH6kNMBcvokRh9y+kNO
n6Tqx5Y/iNUPAOG8UKM=
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9J9nl3d5m
tz33th2Qa6/qKWTvOUnFPu+2mf0kFU/77bnR9re35dozMDQA+Z1gGsQHiYP0
kaIfpg9C37YjRT+yOSB1pOqHuR8kj6wfnz50/SB5ZP349KHbD+Ij68enD584
IX2UmIvuLli4o/sHmz708ECOb0L60OMBPZ3h04ce/5jpjHj96OmMNP248wkh
/QACIkws
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfivNub7Pbnnvb
Dsi0V/UUsvecpGKfd9vMfpKKp/323Gj729ty7RkYGoD8TjAN4oPEIfK37YjV
j6ov2h6knlj9yPpAfJA6YvWjuwMkT4p+ZP+DxNH1Y9OHXb8nhn5s+vD5H1k/
Nn2Ewg/dfELuQY83XPqwhwNmesGmD1v4Y0svxOrHll6I1Y8tvRCrn5j8gks/
AGXzRrQ=
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfirfn3rYDUvaq
nkL2npNU7PNum9lPUvG0354bbX97W649A0MDkN8JpkF8kDhIHqQOpI8Y/ej6
QDRIPTH60fWB+CB1xOhH1wcyD8QnRj/2cPAkWj96+CG7B1k/sj5iww+mH1kf
KeGPrg93+GGPd2L8jyveidGPK96J0Y8r3onRjyveidFPSr5B1w8AvZU1Sg==

      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfioHAXtVTyN5z
kop93m0z+0kqnvbbc6Ptb2/LtWdgaADyO8E0iA8SB8mD1IHUg/QR0o9NH7H6
sekj1n5s+oh1PzZ9xPqflHAgJvwIhT8yPRp/Qy/+QPoBbps2zg==
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfilU9hew9J6nY
5902s5+k4mm/PTfa/va2XHsGhgYgvxNMg/ggcZA8SB1IPUwfPv349GHjI+vH
pw+fOCF9lJhLiX8oCUdi4mE0/oZu/AEAI5BEQQ==
      "], {{0, 15.}, {15., 0}}, {0., 
      1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfij0nqdjn3Taz
n6Tiab89N9r+9rZcewaGBiC/E0yD+CBxkDxIHUi9qqcQUI4BzsemH58+EI0s
jq4fnz4QH10eWT8+fSBxbObD9OPTB5LH5S9C+iDqCYcnNn2EwhOZJice8MU/
Mfpw6ydsHy79xIUndv3E+A+XfnLjAUQTE5649AMAbps2zg==
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfivNum9lPUvG0
354bbX97W649A0MDkN8JpkF8kDhIHqTOc5KKvaqnEFCOASh+2w4mjq6fkD4I
jZBH1k9IH4iPrg6mn5A+kDg29xGjD6KOuHDB1OeJUx+6fnR9+MIFXT+x+tDt
waYPkg6I9x96+iFWHzb9xNqHTT+x7sSmn1j/YddPXLhg0w8AvZU1Sg==
      
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfiiepeNpvz422
v70t156BocF+kkonmAbxQeIg+bzbZvaek1TsVT2FgHIMQPHbdnm3t9nB5JH1
E6fvth2yOph+YvSB+Oj2EKsPJE6a/xD6QPLY9OHSj6wPJI/NPlz6kfXh8h8u
/YT0YTMf3T2w+CDGX8jhgJwOiAlPbPpA8UOKPnT9pNiHmf6Idye6flL8h64f
AGXzRrQ=
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfirfnRtvf3pZr
z8DQYD9JpRNMg/gg8UkqnvZ5t83sPSep2Kt6CgHlGIDit+3ybm+zU/WcZAdT
B9NPrD4QjayeFH0gPqnuhOkDiaPrI6Qfpg8kjm4fIf0wfSBxdHWE9MP0wdQh
yxPSj0sfNnPxuQuff7Dph/FB4YQvHLHpR05H+OIPm37k9EuqPmT9pNqHrJ9U
dyLrBwACIkws
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfim9vy7VnYGiw
n6TSCaZB/O250UC+p33ebTN7z0kq9qqeQkA5BqD4bbu829vsVD0n2QHV2MHU
k6oPRJNjH4gG8ZH1EasfRIP4yOqJ1Q+iIXyEOmL1g2gQH1meWP0gGqYeJk6s
fnR96Obh0w+Tx+YPQvph4tjCj5B+BB8z3gjph6VDbOmFkH5Y+idHH4wmxz6Y
fgDhvFCj
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfihkYGuwnqXTa
g+jb23Ltt+dGA/me9nm3zew9J6nYq3oKAeUYgOK37fJub7NT9ZxkB1QDpIXs
yNUHomH6SNc/yQ6mnlT9IBqmjlT9IBomT6p+EA0TJ1U/iIbxSdWPzRxi9YNo
ZPeToh8ijwg3UvSDaNT4Il4/iEZOJ6ToB9HI6ZMU/aB8QK4+EA0AeTJOIw==

      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJIfiiepdNozMDTY
396Wa789N9p+koqnfd5tM3vPSSr2qp5CQDkGoPhtu7zb2+xUPSfZAdUAaSEQ
2xakj1z9IPXk6gepI1c/SJ5c/SBxcvWD+OTqB9EDoR/kbnL1g8KLXP2geCJX
PyR9kacflC7J1Q/KD+TqBwDddkZu
      "], {{0, 15.}, {15., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{15., 15.},
    PlotRange->{{0, 15.}, {0, 15.}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.896331755379592*^9, 3.896331765428173*^9}, {
   3.896333386471965*^9, 3.8963334133407717`*^9}, {3.8963346614386787`*^9, 
   3.896334690766985*^9}, 3.896334753576983*^9, 3.896334849032866*^9, {
   3.896415056361308*^9, 3.8964150704640007`*^9}, 3.912445573446383*^9, 
   3.912446767579706*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"caee3b95-5e6c-4420-846b-cafa9b8d5c83"]
}, Open  ]],

Cell[TextData[{
 "This is where the actual ",
 StyleBox["Markov chain", "Section"],
 " stuff begins."
}], "Text",
 CellChangeTimes->{{3.912445654502932*^9, 
  3.912445664631343*^9}},ExpressionUUID->"49bd5e14-9583-45dc-952d-\
0822b9efa7c7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"selectRandomSite", "[", "]"}], " ", ":=", " ", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"2", ",", " ", 
        RowBox[{"dim", " ", "-", " ", "1"}]}], "]"}], ",", " ", "3"}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"coinFlip", "[", "]"}], " ", ":=", " ", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"{", 
    RowBox[{"checkPopUp", ",", " ", "checkPopDown"}], "}"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeVal", "[", 
    RowBox[{"grid_", ",", " ", "pos_", ",", " ", "newVal_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{"grid", ",", " ", 
     RowBox[{"pos", " ", "->", " ", "newVal"}]}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Check", " ", "if", " ", "you", " ", "can", " ", "pop", " ", "up", " ", 
     "a", " ", "cell", " ", "at", " ", "pos", " ", "in", " ", 
     RowBox[{"grid", ".", " ", "Works"}], " ", "on", " ", "both", " ", 
     "height", " ", "values", " ", "and", " ", "3"}], "-", "colourings"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkPopUp", "[", 
    RowBox[{"grid_", ",", " ", "pos_"}], "]"}], " ", ":=", " ", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], " ", "~", " ", 
      "Join", " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "~", " ", "Join", 
      " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}]}], "]"}], "]"}]}], 
     ",", " ", "\n", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"grid", "[", 
           RowBox[{"[", 
            RowBox[{"Sequence", " ", "@@", " ", "pos"}], "]"}], "]"}], " ", 
          "-", " ", "#"}], ",", " ", "3"}], "]"}], " ", "==", " ", "2"}], " ",
       "&"}]}], "]"}]}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Check", " ", "if", " ", "you", " ", "can", " ", "pop", " ", "down", " ", 
     "a", " ", "cell", " ", "at", " ", "pos", " ", "in", " ", 
     RowBox[{"grid", ".", " ", "Works"}], " ", "on", " ", "both", " ", 
     "height", " ", "values", " ", "and", " ", "3"}], "-", "colourings"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkPopDown", "[", 
    RowBox[{"grid_", ",", " ", "pos_"}], "]"}], " ", ":=", " ", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], " ", "~", " ", 
      "Join", " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "~", " ", "Join", 
      " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}]}], "]"}], "]"}]}], 
     ",", " ", "\n", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"grid", "[", 
           RowBox[{"[", 
            RowBox[{"Sequence", " ", "@@", " ", "pos"}], "]"}], "]"}], " ", 
          "-", " ", "#"}], ",", " ", "3"}], "]"}], " ", "==", " ", "1"}], " ",
       "&"}]}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"If", " ", "heads"}], ",", " ", 
    RowBox[{
     RowBox[{
     "check", " ", "if", " ", "site", " ", "can", " ", "be", " ", "popped", 
      " ", "up"}], ";", " ", "otherwise"}], ",", " ", 
    RowBox[{
    "check", " ", "if", " ", "site", " ", "can", " ", "be", " ", "popped", 
     " ", 
     RowBox[{"down", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"coinFunctionAssociation", " ", "=", " ", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"checkPopUp", " ", "->", " ", "True"}], ",", " ", 
     RowBox[{"checkPopDown", " ", "->", " ", "False"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"coinSignAssociation", " ", "=", " ", 
    RowBox[{"Association", "[", 
     RowBox[{
      RowBox[{"checkPopUp", " ", "->", " ", "Plus"}], ",", " ", 
      RowBox[{"checkPopDown", " ", "->", " ", "Subtract"}]}], "]"}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"coinTosses", ":", " ", 
     RowBox[{
     "list", " ", "of", " ", "random", " ", "coin", " ", "flips", " ", "in", 
      " ", "the", " ", "form", " ", "of", " ", "a", " ", "list", " ", 
      "checkPopUp"}]}], ",", " ", 
    RowBox[{"checkPopDown", " ", "functions"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"sites", ":", " ", 
    RowBox[{"list", " ", "of", " ", "random", " ", "sites"}]}], " ", "*)"}], 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "generates", " ", "numSteps", " ", "new", " ", "coin", " ", "tosses", " ", 
    "and", " ", "sites", " ", "and", " ", "adds", " ", "them", " ", "to", " ",
     "the", " ", "the", " ", "beginning", " ", "of", " ", "existing", " ", 
    "lists"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extendRandomLists", "[", "numSteps_", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\n", "\t", 
    RowBox[{
     RowBox[{"coinTosses", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"coinFlip", "[", "]"}], ",", " ", "numSteps"}], "]"}], ",", 
        " ", "coinTosses"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"sites", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"selectRandomSite", "[", "]"}], ",", " ", "numSteps"}], 
         "]"}], ",", " ", "sites"}], "]"}]}], ";"}], "\n", ")"}]}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Execute", " ", "one", " ", "step", " ", "of", " ", "the", " ", "Markov", 
    " ", "chain", " ", "on", " ", "grid"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"OPTIMISATION", ":", " ", 
    RowBox[{
    "maybe", " ", "put", " ", "this", " ", "in", " ", "the", " ", "function", 
     " ", "that", " ", "performs", " ", "multiple", " ", "steps", " ", 
     "instead", " ", "of", " ", "calling", " ", "it", " ", "over", " ", "and",
      " ", 
     RowBox[{"over", "?"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneStep", "[", 
    RowBox[{"coin_", ",", " ", "site_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"initialCubes", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"maxCube", ",", " ", "minCube"}], "}"}]}], ",", " ", 
       RowBox[{"outCubes", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"maxCube", ",", " ", "minCube"}], "}"}]}]}], "}"}], ",", 
     "\n", "   ", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"coin", "[", 
            RowBox[{
             RowBox[{"initialCubes", "[", 
              RowBox[{"[", "#", "]"}], "]"}], ",", " ", "site"}], "]"}], ",", 
           " ", "\n", "   ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"outCubes", "[", 
               RowBox[{"[", "#", "]"}], "]"}], " ", "=", " ", 
              RowBox[{"changeVal", "[", 
               RowBox[{
                RowBox[{"initialCubes", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], ",", " ", "site", ",", " ", 
                RowBox[{
                 RowBox[{"coinSignAssociation", "[", "coin", "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"initialCubes", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"Sequence", " ", "@@", " ", "site"}], "]"}], 
                   "]"}], ",", " ", "2"}], "]"}]}], "]"}]}], ";"}], ")"}]}], 
          "]"}], " ", "&"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "2"}], "}"}]}], "]"}], ";", "\n", "   ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"maxCube", ",", " ", "minCube"}], "}"}], " ", "=", " ", 
       "outCubes"}], ";"}]}], "\n", "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Executes", " ", "the", " ", "algorithm", " ", "for", " ", "numSteps"}], 
    " ", "=", " ", 
    RowBox[{"len", 
     RowBox[{"(", "coinTosses", ")"}], " ", "steps"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Additionally", ":", " ", 
     RowBox[{"logs", " ", "files", " ", "every", " ", 
      RowBox[{"numSteps", "/", "100"}], " ", "or", " ", "10", " ", "million", 
      " ", "steps"}]}], ",", " ", 
    RowBox[{"whichever", " ", "is", " ", "lower"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Returns", " ", "1", " ", "if", " ", "the", " ", "grids", " ", 
     "converged"}], ",", " ", 
    RowBox[{"0", " ", "if", " ", "not"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nStepsMarkovChain", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"numSteps", " ", "=", " ", 
        RowBox[{"Length", "[", "coinTosses", "]"}]}], ",", "\n", 
       "\t\t\t\t\t\t\t", 
       RowBox[{"logInterval", " ", "=", " ", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"10", "^", "7"}], ",", " ", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Length", "[", "coinTosses", "]"}], " ", "/", " ", 
              "100"}], "]"}], ",", " ", "20000"}], "]"}]}], "]"}]}], ",", 
       "\n", "\t\t\t\t\t\t\t", 
       RowBox[{"outDir", " ", "=", " ", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"logDir", ",", " ", "\"\<coupling_\>\"", ",", " ", 
          RowBox[{"ToString", "[", "dim", "]"}], ",", " ", "\"\</log_\>\""}], 
         "]"}]}], ",", "\n", "\t\t\t\t\t\t\t", "i", ",", " ", "tempMinCube", 
       ",", " ", "tempMaxCube", ",", " ", "tempHeightDifference", ",", " ", 
       "tempStepNumber", ",", " ", "finalHeightDifference"}], "}"}], ",", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Running for \>\"", ",", " ", "numSteps", ",", " ", 
        "\"\< steps...\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Logging every \>\"", ",", " ", "logInterval", ",", " ", 
        "\"\< steps\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"Monitor", "[", "\n", "    ", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", " ", "=", " ", "0"}], ",", " ", 
          RowBox[{"i", " ", "<", " ", "numSteps"}], ",", " ", 
          RowBox[{"i", "++"}], ",", " ", 
          RowBox[{"(", "\n", "      ", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{"i", ",", " ", "logInterval"}], "]"}], " ", "==", " ",
                "0"}], ",", " ", "\n", "       ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Export", "[", 
                 RowBox[{
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"outDir", ",", " ", 
                    RowBox[{"ToString", "[", "i", "]"}], ",", " ", 
                    "\"\<.mx\>\""}], "]"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"maxCube", ",", " ", "minCube"}], "}"}]}], "]"}], 
                ";", "\n", "        ", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"tempMinCube", ",", " ", "tempMaxCube"}], "}"}], 
                 " ", "=", " ", 
                 RowBox[{"{", 
                  RowBox[{"minCube", ",", " ", "maxCube"}], "}"}]}], ";", 
                "\n", "        ", 
                RowBox[{"tempHeightDifference", " ", "=", " ", 
                 RowBox[{"checkHeightDifference", "[", 
                  RowBox[{"tempMinCube", ",", " ", "tempMaxCube"}], "]"}]}], 
                ";", "\n", "        ", 
                RowBox[{"tempStepNumber", " ", "=", " ", "i"}], ";"}], "\n", 
               "        ", 
               RowBox[{"(*", " ", 
                RowBox[{
                "WHAT", " ", "IS", " ", "THIS", " ", "LINE", " ", "DOING", 
                 " ", 
                 RowBox[{"HERE", "?"}]}], " ", "*)"}], "\n", "        ", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"displayGrids", "[", 
                  RowBox[{
                  "tempMaxGrid", ",", " ", "tempMinGrid", ",", " ", 
                   "blueColourRules"}], "]"}], ";"}], "*)"}], "\n", 
               "        ", ")"}]}], "\n", "      ", "]"}], ";", "\n", 
            "      ", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"OPTIMISATION", ":", " ", 
               RowBox[{
                RowBox[{"don", "'"}], "t", " ", "need", " ", "to", " ", 
                "check", " ", "height", " ", "difference", " ", "each", " ", 
                RowBox[{"time", ".", " ", "If"}], " ", "difference", " ", 
                "is", " ", "1000"}]}], ",", " ", 
              RowBox[{
              "only", " ", "need", " ", "to", " ", "check", " ", "again", " ",
                "after", " ", "500", " ", "steps"}]}], "*)"}], "\n", "      ", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"OPTIMISATION", ":", " ", 
               RowBox[{
               "maybe", " ", "have", " ", "a", " ", 
                "quickCheckHeightDifference"}]}], ",", " ", 
              RowBox[{
              "that", " ", "checks", " ", "a", " ", "few", " ", "cells", " ", 
               "randomly"}]}], " ", "*)"}], "\n", "      ", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"checkHeightDifference", "[", 
                  RowBox[{"maxCube", ",", " ", "minCube"}], "]"}], " ", "==", 
                 " ", "0"}], ",", " ", 
                RowBox[{"(", "\n", "         ", 
                 RowBox[{
                  RowBox[{"tempHeightDifference", " ", "=", " ", "0"}], ";", 
                  "     ", "\n", "         ", 
                  RowBox[{"Throw", "[", "1", "]"}]}], ")"}]}], "]"}], ";"}], 
             "*)"}], "\n", "      ", "\n", "      ", 
            RowBox[{"oneStep", "[", 
             RowBox[{
              RowBox[{"coinTosses", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
              RowBox[{"sites", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}], ")"}]}], "\n", 
         "    ", "]"}], ",", " ", "\n", "    ", 
        RowBox[{"Grid", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"\"\<Current step: \>\"", ",", " ", 
              RowBox[{"ToString", "[", "tempStepNumber", "]"}]}], "]"}], 
            "}"}], ",", " ", "\n", "          ", 
           RowBox[{"{", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"\"\<Height difference: \>\"", ",", " ", 
              RowBox[{"ToString", "[", "tempHeightDifference", "]"}]}], "]"}],
             "}"}], ","}], " ", "\n", "          ", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"cubesSlicesSimultaneously", "[", 
              RowBox[{"tempMaxCube", ",", " ", "tempMinCube"}], "]"}], "}"}], 
            ",", "\n", "          ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"cubeLayers", "[", "tempMaxCube", "]"}], ",", " ", 
              RowBox[{"cubeLayers", "[", "tempMinCube", "]"}]}], "}"}]}], 
           "*)"}], "}"}], "\n", "    ", "]"}]}], "\n", "  ", "]"}], ";", "\n",
       "  ", "\n", "  ", 
      RowBox[{"finalHeightDifference", "  ", "=", " ", 
       RowBox[{"checkHeightDifference", "[", 
        RowBox[{"tempMinCube", ",", " ", "tempMaxCube"}], "]"}]}], ";", "\n", 
      "  ", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<-- The height difference after \>\"", ",", " ", "i", ",", " ", 
        "\"\< steps was \>\"", ",", " ", "finalHeightDifference", ",", " ", 
        "\"\<.\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"finalHeightDifference", " ", "==", " ", "0"}], ",", " ", 
        RowBox[{"Return", "[", "1", "]"}]}], "]"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"return", " ", "1", " ", "if", " ", "converged"}], " ", "*)"}],
       "\n", "  ", 
      RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\n", "]"}]}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"startChain", "[", 
   RowBox[{"dimension_", ",", " ", "t_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "coins", ",", " ", "timestamp", ",", "\n", "\t\t\t\t\t\t\t\t\t", 
      RowBox[{"dirName", " ", "=", " ", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"logDir", ",", " ", "\"\<coupling_\>\"", ",", " ", 
         RowBox[{"ToString", "[", "dimension", "]"}], ",", " ", 
         "\"\<_logs/\>\""}], "]"}]}], ",", " ", "\n", "\t\t\t\t\t\t\t\t\t", 
      RowBox[{"finalDirName", " ", "=", " ", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"logDir", ",", " ", "\"\<coupling_\>\"", ",", " ", 
         RowBox[{"ToString", "[", "dimension", "]"}], ",", " ", 
         "\"\<_samples/\>\""}], "]"}]}], ",", "\n", "\t\t\t\t\t\t\t\t\t", 
      RowBox[{"steps", " ", "=", " ", "t"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"dim", " ", "=", " ", "dimension"}], ";", "\n", "\t", 
     RowBox[{"sites", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "\t", 
     RowBox[{"coinTosses", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "\t", 
     RowBox[{"converged", " ", "=", " ", "0"}], ";", "\t", "\n", "\t", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"converged", " ", "==", " ", "0"}], ",", " ", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"Reset", " ", "stuff"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"maxCube", ",", " ", "minCube"}], "}"}], " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"generateMaxCube", "[", "dim", "]"}], ",", " ", 
            RowBox[{"generateMinCube", "[", "dim", "]"}]}], "}"}]}], ";", 
         "\n", "\t\t", 
         RowBox[{"Quiet", " ", "@", " ", 
          RowBox[{"DeleteDirectory", "[", 
           RowBox[{"dirName", ",", " ", 
            RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}]}], ";", 
         "\n", "\t    ", 
         RowBox[{"CreateDirectory", "[", "dirName", "]"}], ";", "\n", 
         "\t    ", "\n", "\t    ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "Generate", " ", "new", " ", "coin", " ", "tosses", " ", "and", 
            " ", "sites"}], ",", " ", 
           RowBox[{"and", " ", "log", " ", "them"}]}], "*)"}], "\t\t", "\n", 
         "\t\t", 
         RowBox[{"extendRandomLists", "[", "steps", "]"}], ";", "\n", "\t\t", 
         
         RowBox[{"steps", " ", "=", " ", 
          RowBox[{"Length", "[", "coinTosses", "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"dirName", ",", " ", "\"\<sites.csv\>\""}], "]"}], ",", 
           " ", "sites", ",", " ", "\"\<CSV\>\""}], "]"}], ";", "\n", "\t\t", 
         
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"dirName", ",", " ", "\"\<coin_tosses.csv\>\""}], "]"}], 
           ",", " ", "coinTosses", ",", " ", "\"\<CSV\>\""}], "]"}], ";", 
         "\n", "\t\t", "\n", "\t    ", 
         RowBox[{"converged", " ", "=", " ", 
          RowBox[{"nStepsMarkovChain", "[", "]"}]}], ";", "\n", "\t    ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"converged", " ", "==", " ", "1"}], ",", " ", "Break"}], 
          "]"}]}], "\n", "\t", ")"}]}], "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"timestamp", " ", "=", " ", 
      RowBox[{"DateString", "[", "]"}]}], ";", "\n", "\t", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{
        "finalDirName", ",", " ", "timestamp", ",", " ", "\"\<.mx\>\""}], 
        "]"}], ",", " ", "minCube"}], "]"}], ";", "\n", 
     RowBox[{"(*", "\t", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"StringJoin", "[", 
         RowBox[{
         "finalDirName", ",", " ", "timestamp", ",", " ", 
          "\"\< colourings.pdf\>\""}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"displaySlicePlot", "[", 
          RowBox[{"to3Colouring", "[", 
           RowBox[{"minCube", ",", " ", "blueColourRules"}], "]"}], "]"}], 
         ";", "\t", "\n", "\t", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{
            "finalDirName", ",", " ", "timestamp", ",", " ", 
             "\"\< heights.pdf\>\""}], "]"}], ",", " ", 
           RowBox[{"displaySlicePlot", "[", "minCube", "]"}]}], "]"}], ";", 
         "\n", "\t", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{
            "finalDirName", ",", " ", "timestamp", ",", " ", 
             "\"\< height plots.pdf\>\""}], "]"}], ",", " ", 
           RowBox[{"displayHeightPlot", "[", "minCube", "]"}]}], "]"}], 
         ";"}]}]}], "*)"}], "\n", "\t", 
     RowBox[{"DeleteDirectory", "[", 
      RowBox[{"dirName", ",", " ", 
       RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}], ";", "\n", 
     "\t", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<The chain took \>\"", ",", " ", "steps", ",", " ", 
       "\"\< steps to converge. Here are the results:\>\""}], "]"}], ";", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"cubeSlicesAllAxesSimultaneously", "[", "minCube", "]"}], "\n", 
      "\t", 
      RowBox[{"cubeLayers", "[", "minCube", "]"}], "\n", "\t", 
      RowBox[{"compareThreeCubes", "[", 
       RowBox[{
        RowBox[{"generateMinCube", "[", "dim", "]"}], ",", " ", "minCube", 
        ",", " ", 
        RowBox[{"generateMaxCube", "[", "dim", "]"}]}], "]"}]}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.896460344757543*^9, 3.896460344892894*^9}, {
   3.8964603775487823`*^9, 3.896460427172718*^9}, {3.896460505525404*^9, 
   3.896460507683814*^9}, 3.896460598098578*^9, 3.9121841491362123`*^9, {
   3.912185176747891*^9, 3.9121851950010757`*^9}, {3.912185273068263*^9, 
   3.9121852790699263`*^9}, {3.912185375050088*^9, 3.9121853774319563`*^9}, {
   3.912185782189267*^9, 3.9121858163212442`*^9}, {3.91218618071176*^9, 
   3.9121862071829767`*^9}, {3.912187031857287*^9, 3.912187033409878*^9}, {
   3.912413041483397*^9, 3.912413047210799*^9}, {3.9124132533760777`*^9, 
   3.9124132695067797`*^9}, {3.9124133063997383`*^9, 3.912413327221567*^9}, {
   3.912413421740149*^9, 3.912413427966223*^9}, {3.912413722012274*^9, 
   3.912413722503805*^9}, {3.912414130718193*^9, 3.9124141336035213`*^9}, {
   3.912414204746469*^9, 3.912414262804587*^9}, {3.9124143519006166`*^9, 
   3.912414421557913*^9}, {3.91241449233878*^9, 3.912414496095799*^9}, {
   3.9124146536513567`*^9, 3.9124146650573673`*^9}, {3.912414714602222*^9, 
   3.912414727267124*^9}, 3.9124148030817137`*^9, {3.9124168506681767`*^9, 
   3.912416856065777*^9}, {3.912417188142894*^9, 3.9124171944126053`*^9}, {
   3.9124172646892433`*^9, 3.912417293326352*^9}, 3.915682830604763*^9, {
   3.9156829512067623`*^9, 3.915682952627314*^9}, {3.9156832063680353`*^9, 
   3.9156832411362543`*^9}, 3.915683651455409*^9},
 CellLabel->
  "In[283]:=",ExpressionUUID->"6babd98d-b119-4bcd-9c2e-7c324a23bf54"],

Cell["\<\
Do not run this unless you want to start the simulation for a cube of size 15!\
\>", "Text",
 CellChangeTimes->{{3.912445692094102*^9, 3.912445717763008*^9}, {
  3.912445752519793*^9, 
  3.912445752790062*^9}},ExpressionUUID->"c6dc01b4-d9e3-41d4-a11f-\
2a7a1bfb6ae9"],

Cell[CellGroupData[{

Cell[BoxData["dim"], "Code",
 CellChangeTimes->{{3.91568329756884*^9, 3.9156832983876867`*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"99402e4d-565c-4f0a-80be-a03c7395be5f"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.915683298804594*^9, 3.915683589329721*^9},
 CellLabel->
  "Out[249]=",ExpressionUUID->"686bf14c-cd45-42bf-b5c8-fd529bfb4ee2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"startChain", "[", 
  RowBox[{"7", ",", " ", "2000"}], "]"}]], "Code",
 CellChangeTimes->{{3.915682850803275*^9, 3.915682856855578*^9}},
 CellLabel->
  "In[360]:=",ExpressionUUID->"5bb851d2-ee13-48d4-8953-e45caaecfdc1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "2000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 2000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915682955608548*^9, 3.915683244959326*^9, 
  3.915683527716021*^9, 3.915683656811323*^9, 3.91568371979725*^9, 
  3.91568379674476*^9, 3.915683936345454*^9, 3.9156840901073503`*^9},
 CellLabel->
  "During evaluation of \
In[360]:=",ExpressionUUID->"c1e003b7-e6d6-4498-89c6-5dccbf443329"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{3.915682955608548*^9, 3.915683244959326*^9, 
  3.915683527716021*^9, 3.915683656811323*^9, 3.91568371979725*^9, 
  3.91568379674476*^9, 3.915683936345454*^9, 3.915684090112434*^9},
 CellLabel->
  "During evaluation of \
In[360]:=",ExpressionUUID->"5fe4ed33-8f4c-48e5-97dd-0dab3a1c8f6e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "2000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "306", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 2000, " steps was ", 306, "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915682955608548*^9, 3.915683244959326*^9, 
  3.915683527716021*^9, 3.915683656811323*^9, 3.91568371979725*^9, 
  3.91568379674476*^9, 3.915683936345454*^9, 3.9156840902240887`*^9},
 CellLabel->
  "During evaluation of \
In[360]:=",ExpressionUUID->"ce3747cd-c3f1-4e2d-988d-ab83550f4586"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "4000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 4000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915682955608548*^9, 3.915683244959326*^9, 
  3.915683527716021*^9, 3.915683656811323*^9, 3.91568371979725*^9, 
  3.91568379674476*^9, 3.915683936345454*^9, 3.915684090280345*^9},
 CellLabel->
  "During evaluation of \
In[360]:=",ExpressionUUID->"9cb5303f-ab6d-4146-919a-9e4d9c47f1bb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{3.915682955608548*^9, 3.915683244959326*^9, 
  3.915683527716021*^9, 3.915683656811323*^9, 3.91568371979725*^9, 
  3.91568379674476*^9, 3.915683936345454*^9, 3.915684090284384*^9},
 CellLabel->
  "During evaluation of \
In[360]:=",ExpressionUUID->"f44bd964-1147-4c3c-a136-d15199c06071"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "4000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "306", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 4000, " steps was ", 306, "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915682955608548*^9, 3.915683244959326*^9, 
  3.915683527716021*^9, 3.915683656811323*^9, 3.91568371979725*^9, 
  3.91568379674476*^9, 3.915683936345454*^9, 3.915684090404554*^9},
 CellLabel->
  "During evaluation of \
In[360]:=",ExpressionUUID->"09c894fa-abce-4117-9fdd-7b235ad46154"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "8000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 8000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915682955608548*^9, 3.915683244959326*^9, 
  3.915683527716021*^9, 3.915683656811323*^9, 3.91568371979725*^9, 
  3.91568379674476*^9, 3.915683936345454*^9, 3.915684090521625*^9},
 CellLabel->
  "During evaluation of \
In[360]:=",ExpressionUUID->"9e39b6ed-a545-4ed0-a5da-e92ff41c5c9e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{3.915682955608548*^9, 3.915683244959326*^9, 
  3.915683527716021*^9, 3.915683656811323*^9, 3.91568371979725*^9, 
  3.91568379674476*^9, 3.915683936345454*^9, 3.915684090525021*^9},
 CellLabel->
  "During evaluation of \
In[360]:=",ExpressionUUID->"4102a0a6-78f2-41e3-ba35-350d5e265dc3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "8000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "306", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 8000, " steps was ", 306, "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915682955608548*^9, 3.915683244959326*^9, 
  3.915683527716021*^9, 3.915683656811323*^9, 3.91568371979725*^9, 
  3.91568379674476*^9, 3.915683936345454*^9, 3.915684090752068*^9},
 CellLabel->
  "During evaluation of \
In[360]:=",ExpressionUUID->"4ec965c9-d7b5-4d87-ad3f-d952f1103eda"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "16000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 16000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915682955608548*^9, 3.915683244959326*^9, 
  3.915683527716021*^9, 3.915683656811323*^9, 3.91568371979725*^9, 
  3.91568379674476*^9, 3.915683936345454*^9, 3.915684090992605*^9},
 CellLabel->
  "During evaluation of \
In[360]:=",ExpressionUUID->"a3c27095-d818-4d77-8ca0-1f82528ffa32"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{3.915682955608548*^9, 3.915683244959326*^9, 
  3.915683527716021*^9, 3.915683656811323*^9, 3.91568371979725*^9, 
  3.91568379674476*^9, 3.915683936345454*^9, 3.915684090995685*^9},
 CellLabel->
  "During evaluation of \
In[360]:=",ExpressionUUID->"63dba91b-e73d-4722-9ee5-0508b154f657"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "16000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "306", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 16000, " steps was ", 306, "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915682955608548*^9, 3.915683244959326*^9, 
  3.915683527716021*^9, 3.915683656811323*^9, 3.91568371979725*^9, 
  3.91568379674476*^9, 3.915683936345454*^9, 3.915684091388328*^9},
 CellLabel->
  "During evaluation of \
In[360]:=",ExpressionUUID->"27df9a56-4855-435a-bb44-afe3d82b359e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "32000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 32000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915682955608548*^9, 3.915683244959326*^9, 
  3.915683527716021*^9, 3.915683656811323*^9, 3.91568371979725*^9, 
  3.91568379674476*^9, 3.915683936345454*^9, 3.915684091885111*^9},
 CellLabel->
  "During evaluation of \
In[360]:=",ExpressionUUID->"5d109ffb-8a15-4bfb-ba6d-e6c88561f476"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{3.915682955608548*^9, 3.915683244959326*^9, 
  3.915683527716021*^9, 3.915683656811323*^9, 3.91568371979725*^9, 
  3.91568379674476*^9, 3.915683936345454*^9, 3.915684091891157*^9},
 CellLabel->
  "During evaluation of \
In[360]:=",ExpressionUUID->"1be51bba-7c20-4f1b-9325-ae0c04da9041"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "32000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "0", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 32000, " steps was ", 0, "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.915682955608548*^9, 3.915683244959326*^9, 
  3.915683527716021*^9, 3.915683656811323*^9, 3.91568371979725*^9, 
  3.91568379674476*^9, 3.915683936345454*^9, 3.915684092677106*^9},
 CellLabel->
  "During evaluation of \
In[360]:=",ExpressionUUID->"2487c819-57fe-4ed0-980a-572c95156aa5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The chain took \"\>", "\[InvisibleSpace]", "32000", 
   "\[InvisibleSpace]", "\<\" steps to converge. Here are the results:\"\>"}],
  
  SequenceForm[
  "The chain took ", 32000, " steps to converge. Here are the results:"],
  Editable->False]], "Print",
 CellChangeTimes->{3.915682955608548*^9, 3.915683244959326*^9, 
  3.915683527716021*^9, 3.915683656811323*^9, 3.91568371979725*^9, 
  3.91568379674476*^9, 3.915683936345454*^9, 3.91568409268013*^9},
 CellLabel->
  "During evaluation of \
In[360]:=",ExpressionUUID->"df37d99b-262e-4529-8478-046f3f0d8a00"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  TagBox[GridBox[{
     {
      TagBox[
       StyleBox[
        DynamicModuleBox[{$CellContext`i$$ = 2, Typeset`show$$ = True, 
         Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
         Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
         "\"untitled\"", Typeset`specs$$ = {{
           Hold[$CellContext`i$$], 1, 4, 1}}, Typeset`size$$ = {
         614., {169.861484375, 174.818515625}}, Typeset`update$$ = 0, 
         Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
         DynamicBox[Manipulate`ManipulateBoxes[
          1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
           "ControllerVariables" :> {}, 
           "OtherVariables" :> {
            Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
             Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
             Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
             Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Grid[{{
               $CellContext`displayCube[$CellContext`dim$862188, 
                Part[CompressedData["
1:eJx1kMsRgDAIRAkQrcOWLCEN2P/NUR6ZcMiBhYFl+VzjuYeJyLmYNDXvR2AP
9IIa2AIlmeHtQ/+5TqQWzOxLTZ111Df5tY7VrTZ5XafPOnpMQbtclH2pCbP8
hdvxdU88TP7zAuPNBtg=
                 "], 
                 Span[$CellContext`i$$, -$CellContext`i$$], 
                 Span[$CellContext`i$$, -$CellContext`i$$], 
                 Span[$CellContext`i$$, -$CellContext`i$$]], "DeepSeaColors"], 
               $CellContext`displayCube[$CellContext`dim$862188, 
                Part[CompressedData["
1:eJxtUEEOgCAMG4zOd/gln8AH/P9N3QqOaMjakbSsY+/n0VVEtlRSqjZYIALb
gjWwBEpS3uy9wZWgS72fvvfNhUGn3/2MefrVjTJM9X9OPNMt+ajVlvebGw1f
ykGu4WB67k5ec5Kp5P9cQfAHZA==
                 "], 
                 Span[$CellContext`i$$, -$CellContext`i$$], 
                 Span[$CellContext`i$$, -$CellContext`i$$], 
                 Span[$CellContext`i$$, -$CellContext`i$$]], "DeepSeaColors"], 
               $CellContext`displayCube[$CellContext`dim$862188, 
                Part[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                 "], 
                 Span[$CellContext`i$$, -$CellContext`i$$], 
                 Span[$CellContext`i$$, -$CellContext`i$$], 
                 Span[$CellContext`i$$, -$CellContext`i$$]], 
                "DeepSeaColors"]}, {
               $CellContext`displayCube[$CellContext`dim$862188, 
                Part[$CellContext`cube13$862188, 
                 Span[$CellContext`i$$, -$CellContext`i$$], 
                 Span[$CellContext`i$$, -$CellContext`i$$], 
                 Span[$CellContext`i$$, -$CellContext`i$$]], "DeepSeaColors"], 
               $CellContext`displayCube[$CellContext`dim$862188, 
                Part[$CellContext`cube23$862188, 
                 Span[$CellContext`i$$, -$CellContext`i$$], 
                 Span[$CellContext`i$$, -$CellContext`i$$], 
                 Span[$CellContext`i$$, -$CellContext`i$$]], "DeepSeaColors"], 
               $CellContext`displayCube[$CellContext`dim$862188, 
                Part[$CellContext`cube33$862188, 
                 Span[$CellContext`i$$, -$CellContext`i$$], 
                 Span[$CellContext`i$$, -$CellContext`i$$], 
                 Span[$CellContext`i$$, -$CellContext`i$$]], 
                "DeepSeaColors"]}}], 
           "Specifications" :> {{$CellContext`i$$, 1, 4, 1}}, "Options" :> {},
            "DefaultOptions" :> {}],
          ImageSizeCache->{655., {211.021484375, 215.978515625}},
          SingleEvaluation->True],
         Deinitialization:>None,
         DynamicModuleValues:>{},
         SynchronousInitialization->True,
         UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
         UnsavedVariables:>{Typeset`initDone$$},
         UntrackedVariables:>{Typeset`size$$}], "Manipulate",
        Deployed->True,
        StripOnInput->False],
       Manipulate`InterpretManipulate[1]]},
     {
      TagBox[GridBox[{
         {
          TagBox[
           StyleBox[
            
            DynamicModuleBox[{$CellContext`i$$ = 7, Typeset`show$$ = True, 
             Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
             Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
             "\"untitled\"", Typeset`specs$$ = {{
               Hold[$CellContext`i$$], 1, 7, 1}}, Typeset`size$$ = {
             496., {242.521484375, 247.478515625}}, Typeset`update$$ = 0, 
             Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
             
             DynamicBox[Manipulate`ManipulateBoxes[
              1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
               "ControllerVariables" :> {}, 
               "OtherVariables" :> {
                Typeset`show$$, Typeset`bookmarkList$$, 
                 Typeset`bookmarkMode$$, Typeset`animator$$, 
                 Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                 Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                 Typeset`skipInitDone$$}, 
               "Body" :> (
                Part[$CellContext`args$862189, 1] = {$CellContext`i$$}; Grid[{{
                    $CellContext`sliceGridWithHeight[CompressedData["
1:eJx1kMsRgDAIRAkQrcOWLCEN2P/NUR6ZcMiBhYFl+VzjuYeJyLmYNDXvR2AP
9IIa2AIlmeHtQ/+5TqQWzOxLTZ111Df5tY7VrTZ5XafPOnpMQbtclH2pCbP8
hdvxdU88TP7zAuPNBtg=
                    "], $CellContext`args$862189], 
                    $CellContext`sliceGridWithHeight[CompressedData["
1:eJxtUEEOgCAMG4zOd/gln8AH/P9N3QqOaMjakbSsY+/n0VVEtlRSqjZYIALb
gjWwBEpS3uy9wZWgS72fvvfNhUGn3/2MefrVjTJM9X9OPNMt+ajVlvebGw1f
ykGu4WB67k5ec5Kp5P9cQfAHZA==
                    
                    "], $CellContext`args$862189], 
                    $CellContext`sliceGridWithHeight[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                    "], $CellContext`args$862189]}}]), 
               "Specifications" :> {{$CellContext`i$$, 1, 7, 1}}, 
               "Options" :> {}, "DefaultOptions" :> {}],
              ImageSizeCache->{537., {284.021484375, 288.978515625}},
              SingleEvaluation->True],
             Deinitialization:>None,
             DynamicModuleValues:>{},
             SynchronousInitialization->True,
             UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
             UnsavedVariables:>{Typeset`initDone$$},
             UntrackedVariables:>{Typeset`size$$}], "Manipulate",
            Deployed->True,
            StripOnInput->False],
           Manipulate`InterpretManipulate[1]]},
         {
          TagBox[
           StyleBox[
            
            DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
             Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
             Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
             "\"untitled\"", Typeset`specs$$ = {{
               Hold[$CellContext`i$$], 1, 7, 1}}, Typeset`size$$ = {
             496., {242.521484375, 247.478515625}}, Typeset`update$$ = 0, 
             Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
             
             DynamicBox[Manipulate`ManipulateBoxes[
              1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
               "ControllerVariables" :> {}, 
               "OtherVariables" :> {
                Typeset`show$$, Typeset`bookmarkList$$, 
                 Typeset`bookmarkMode$$, Typeset`animator$$, 
                 Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                 Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                 Typeset`skipInitDone$$}, 
               "Body" :> (
                Part[$CellContext`args$862190, 2] = {$CellContext`i$$}; Grid[{{
                    $CellContext`sliceGridWithHeight[CompressedData["
1:eJx1kMsRgDAIRAkQrcOWLCEN2P/NUR6ZcMiBhYFl+VzjuYeJyLmYNDXvR2AP
9IIa2AIlmeHtQ/+5TqQWzOxLTZ111Df5tY7VrTZ5XafPOnpMQbtclH2pCbP8
hdvxdU88TP7zAuPNBtg=
                    "], $CellContext`args$862190], 
                    $CellContext`sliceGridWithHeight[CompressedData["
1:eJxtUEEOgCAMG4zOd/gln8AH/P9N3QqOaMjakbSsY+/n0VVEtlRSqjZYIALb
gjWwBEpS3uy9wZWgS72fvvfNhUGn3/2MefrVjTJM9X9OPNMt+ajVlvebGw1f
ykGu4WB67k5ec5Kp5P9cQfAHZA==
                    
                    "], $CellContext`args$862190], 
                    $CellContext`sliceGridWithHeight[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                    "], $CellContext`args$862190]}}]), 
               "Specifications" :> {{$CellContext`i$$, 1, 7, 1}}, 
               "Options" :> {}, "DefaultOptions" :> {}],
              ImageSizeCache->{537., {284.021484375, 288.978515625}},
              SingleEvaluation->True],
             Deinitialization:>None,
             DynamicModuleValues:>{},
             SynchronousInitialization->True,
             UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
             UnsavedVariables:>{Typeset`initDone$$},
             UntrackedVariables:>{Typeset`size$$}], "Manipulate",
            Deployed->True,
            StripOnInput->False],
           Manipulate`InterpretManipulate[1]]},
         {
          TagBox[
           StyleBox[
            
            DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
             Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
             Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
             "\"untitled\"", Typeset`specs$$ = {{
               Hold[$CellContext`i$$], 1, 7, 1}}, Typeset`size$$ = {
             496., {242.521484375, 247.478515625}}, Typeset`update$$ = 0, 
             Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
             
             DynamicBox[Manipulate`ManipulateBoxes[
              1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
               "ControllerVariables" :> {}, 
               "OtherVariables" :> {
                Typeset`show$$, Typeset`bookmarkList$$, 
                 Typeset`bookmarkMode$$, Typeset`animator$$, 
                 Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                 Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                 Typeset`skipInitDone$$}, 
               "Body" :> (
                Part[$CellContext`args$862191, 3] = {$CellContext`i$$}; Grid[{{
                    $CellContext`sliceGridWithHeight[CompressedData["
1:eJx1kMsRgDAIRAkQrcOWLCEN2P/NUR6ZcMiBhYFl+VzjuYeJyLmYNDXvR2AP
9IIa2AIlmeHtQ/+5TqQWzOxLTZ111Df5tY7VrTZ5XafPOnpMQbtclH2pCbP8
hdvxdU88TP7zAuPNBtg=
                    "], $CellContext`args$862191], 
                    $CellContext`sliceGridWithHeight[CompressedData["
1:eJxtUEEOgCAMG4zOd/gln8AH/P9N3QqOaMjakbSsY+/n0VVEtlRSqjZYIALb
gjWwBEpS3uy9wZWgS72fvvfNhUGn3/2MefrVjTJM9X9OPNMt+ajVlvebGw1f
ykGu4WB67k5ec5Kp5P9cQfAHZA==
                    
                    "], $CellContext`args$862191], 
                    $CellContext`sliceGridWithHeight[CompressedData["
1:eJx1kLsRwCAMQw3mlzGyUkZggezfhTs/cnZBwVMj2TL3fJ+pItLdk5S11Gas
xhKYjcko3tmbsQaqcefcTDxjqefOse/kv06Jvyfbh8uhTGP2vqj7XAnKfbTn
djT2RHHyPx+xdAgK
                    "], $CellContext`args$862191]}}]), 
               "Specifications" :> {{$CellContext`i$$, 1, 7, 1}}, 
               "Options" :> {}, "DefaultOptions" :> {}],
              ImageSizeCache->{537., {284.021484375, 288.978515625}},
              SingleEvaluation->True],
             Deinitialization:>None,
             DynamicModuleValues:>{},
             SynchronousInitialization->True,
             UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
             UnsavedVariables:>{Typeset`initDone$$},
             UntrackedVariables:>{Typeset`size$$}], "Manipulate",
            Deployed->True,
            StripOnInput->False],
           Manipulate`InterpretManipulate[1]]}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], " ", 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`i$$], 1, 7, 1}}, Typeset`size$$ = {
     496., {242.521484375, 247.478515625}}, Typeset`update$$ = 0, 
     Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
       "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, 
       "Body" :> \
$CellContext`cubeSlicesAllAxesSimultaneouslyGrid[CompressedData["
1:eJxtUEEOgCAMG4zOd/gln8AH/P9N3QqOaMjakbSsY+/n0VVEtlRSqjZYIALb
gjWwBEpS3uy9wZWgS72fvvfNhUGn3/2MefrVjTJM9X9OPNMt+ajVlvebGw1f
ykGu4WB67k5ec5Kp5P9cQfAHZA==
         "], $CellContext`i$$], 
       "Specifications" :> {{$CellContext`i$$, 1, 7, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{537., {284.021484375, 288.978515625}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]], " ", 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`i$$], 1, 4, 1}}, Typeset`size$$ = {
     372., {163., 168.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
       "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, 
       "Body" :> $CellContext`displayCube[$CellContext`dim$862181, 
         Part[CompressedData["
1:eJxtUEEOgCAMG4zOd/gln8AH/P9N3QqOaMjakbSsY+/n0VVEtlRSqjZYIALb
gjWwBEpS3uy9wZWgS72fvvfNhUGn3/2MefrVjTJM9X9OPNMt+ajVlvebGw1f
ykGu4WB67k5ec5Kp5P9cQfAHZA==
          "], 
          Span[$CellContext`i$$, -$CellContext`i$$], 
          Span[$CellContext`i$$, -$CellContext`i$$], 
          Span[$CellContext`i$$, -$CellContext`i$$]], "DeepSeaColors"], 
       "Specifications" :> {{$CellContext`i$$, 1, 4, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{413., {204.021484375, 208.978515625}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]]}]], "Output",
 CellChangeTimes->{{3.915682858935316*^9, 3.915682860726275*^9}, 
   3.915682898432214*^9, 3.915682961940754*^9, 3.9156832511951714`*^9, 
   3.915683534107459*^9, 3.9156836592796307`*^9, 3.9156837223347883`*^9, 
   3.9156837992711897`*^9, 3.915683938881711*^9, 3.9156840927157993`*^9},
 CellLabel->
  "Out[360]=",ExpressionUUID->"d6b456e6-ac86-416d-987e-c45bc379bd8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"startChain", "[", 
  RowBox[{"15", ",", " ", "2000"}], "]"}]], "Code",
 CellChangeTimes->{{3.912412868042281*^9, 3.912412919960894*^9}, {
  3.912414752290742*^9, 3.9124147552345533`*^9}},
 CellLabel->
  "In[429]:=",ExpressionUUID->"079fc432-aa5d-4e3b-8dc1-2ab978cbc470"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "2000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 2000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.9124148178812113`*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"cb9a0ce4-ea62-4c56-b218-a6b23141e656"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.912414817883876*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"88de0c62-6f08-4b1a-a6ff-af411f862be6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "2000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "9506", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 2000, " steps was ", 9506, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.912414823034919*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"4130b192-24fe-42cb-ab2d-893cd2637c7c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "4000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 4000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.912414823174*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"7c11b217-1799-499c-bcfd-815c18965efe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.9124148231767387`*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"cf2c6d8c-fbaa-49e5-9111-ef2382824263"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "4000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "9506", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 4000, " steps was ", 9506, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.912414833858685*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"074e25b6-17fe-45a0-9176-4d7be8582130"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "8000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 8000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.912414834127819*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"7d77fe8b-ab57-47c5-9d90-92a7a96b0523"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, {3.912414808931624*^9, 3.912414834130933*^9}},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"fad3935a-b201-4d51-bc67-f05e14aa33fc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "8000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "9506", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 8000, " steps was ", 9506, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912414852130447*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"5d8543d5-8da5-4443-873b-bd08472bbf7e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "16000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 16000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912414852691204*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"8c456664-06c9-45a4-b90e-5bf4dff908ab"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124148526940002`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"e81475ea-e674-4aaf-aa78-6e48327c7adc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "16000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "9506", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 16000, " steps was ", 9506, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124148956278477`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"912a99bd-56f0-47ec-9a45-fb830a19ba30"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "32000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 32000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912414896772156*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"3955792e-6a61-47b1-8a83-66643ac4cb4c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124148967751007`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"8041e9d3-40de-429c-81e5-d8a569ac918e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "32000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "8878", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 32000, " steps was ", 8878, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912414966034191*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"73f38ab5-536b-4469-9637-94b980091967"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "64000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 64000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912414968308062*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"0d443d62-0e63-4722-b1b7-deba12f3a191"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912414968310853*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"5a7f47c9-d52a-4d8b-91a7-10c9fe81f727"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "64000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "7638", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 64000, " steps was ", 7638, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912415106425127*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"902f528b-c9ba-431f-8699-90837ab28d6e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "128000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 128000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912415111069091*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"bbc4fe57-3363-4f16-85ae-de81c202aad0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124151110720463`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"9a029207-c78e-46d2-80dd-acb855169a09"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "128000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "5512", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 128000, " steps was ", 5512, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912415390586821*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"c32df61f-89d8-4010-8f1f-29563288eb79"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "256000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 256000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912415400086726*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"d192bba6-50cf-4711-9e9a-15aee38d5b89"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124154000900087`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"b7e666e9-92b0-4472-bbac-94e05fb53ccd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "256000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "2662", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 256000, " steps was ", 2662, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124159510999527`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"31c9dab0-5003-49ec-bd3c-1db79e7f464f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "512000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 512000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912415969422639*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"2b5ae421-52cf-446c-966c-326c02c448f5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124159694259872`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"a0c7e168-ddcc-43a3-af76-cf29585bd920"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "512000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "528", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 512000, " steps was ", 528, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912417070426071*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"41b3afc5-49e2-49b5-b53a-20ede96cca42"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "1024000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 1024000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912417107751834*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"61f50e41-4102-4807-874b-7da40b50f749"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912417107755316*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"81d1fd93-f271-432a-bbac-c26e7a074213"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "1024000", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]",
    "38", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 1024000, " steps was ", 38, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912419255168951*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"81c8d74c-cea0-4901-80ba-84972b68ef0b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "2048000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 2048000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912419329947432*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"c42251f0-90ee-4078-a67b-76b315bf5e80"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20480", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20480, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124193299515047`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"7c27a79f-0a5d-4748-b93a-42dba9dffd28"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "981377", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "0", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 981377, " steps was ", 0, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.912421408537613*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"276daed3-ce8c-4766-ad81-8f5e0e4db71d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The chain took \"\>", "\[InvisibleSpace]", "2048000", 
   "\[InvisibleSpace]", "\<\" steps to converge. Here are the results:\"\>"}],
  
  SequenceForm[
  "The chain took ", 2048000, " steps to converge. Here are the results:"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9124129220114737`*^9, 3.912413382314457*^9, 3.912413432322916*^9, 
   3.912413726484405*^9, {3.912414112962682*^9, 3.912414135634413*^9}, {
   3.9124142719767647`*^9, 3.912414288480474*^9}, 3.912414448319663*^9, 
   3.912414501451324*^9, 3.912414667543682*^9, {3.9124147302044573`*^9, 
   3.912414756303781*^9}, 3.912414808931624*^9, 3.9124214085419703`*^9},
 CellLabel->
  "During evaluation of \
In[429]:=",ExpressionUUID->"0b8b7123-3ede-4d62-9cb3-2387bfcdb046"]
}, Open  ]]
}, Open  ]],

Cell["Finally, the output for the cube of size 15 :", "Text",
 CellChangeTimes->{{3.9124457307074623`*^9, 
  3.912445748355562*^9}},ExpressionUUID->"4fb8cb37-2a12-47da-b2ff-\
cd1b9c17dba2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"outCube15", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
     "logDir", ",", " ", 
      "\"\<coupling_15_samples/Sun 24 Dec 2023 21:13:28.mx\>\""}], "]"}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.912443107223297*^9, 3.912443134657501*^9}, {
  3.9124431746889563`*^9, 3.9124432064471292`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"133e8dfb-481b-420c-aaff-48447d5a9a0d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cubeLayers", "[", "outCube15", "]"}], "\n", 
 RowBox[{"cubeSlicesAllAxesSimultaneously", "[", "outCube15", "]"}], "\n", 
 RowBox[{"cubeSlicesAllAxesSeparately", "[", "outCube15", "]"}]}], "Code",
 CellChangeTimes->{{3.912421610557783*^9, 3.91242162992883*^9}, {
  3.912443214832703*^9, 3.912443266269453*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"41b7f8ba-34ea-4163-85b2-17ab13b150fc"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 8, 1}}, Typeset`size$$ = {
    372., {162., 167.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`displayCube[$CellContext`dim$25003, 
        Part[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
         "], 
         Span[$CellContext`i$$, -$CellContext`i$$], 
         Span[$CellContext`i$$, -$CellContext`i$$], 
         Span[$CellContext`i$$, -$CellContext`i$$]], "DeepSeaColors"], 
      "Specifications" :> {{$CellContext`i$$, 1, 8, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{413., {203.021484375, 207.978515625}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.9124216304565353`*^9, 3.912421789055585*^9, 
  3.912443216129654*^9, 3.9124432666758337`*^9, 3.912446792842936*^9, 
  3.9124472811518383`*^9, 3.912585256460669*^9, 3.913939137776622*^9, 
  3.915413111536447*^9, 3.915676669069936*^9, 3.915676944244362*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"97202561-a03e-42f0-8981-0dc7927dc080"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
    496., {241.021484375, 245.978515625}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> \
$CellContext`cubeSlicesAllAxesSimultaneouslyGrid[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
        
        "], $CellContext`i$$], 
      "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{537., {282.521484375, 287.478515625}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.9124216304565353`*^9, 3.912421789055585*^9, 
  3.912443216129654*^9, 3.9124432666758337`*^9, 3.912446792842936*^9, 
  3.9124472811518383`*^9, 3.912585256460669*^9, 3.913939137776622*^9, 
  3.915413111536447*^9, 3.915676669069936*^9, 3.915676944582275*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"cbf132d8-9d7d-4a97-97d8-8998826dc65e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        162., {240.70148437500004`, 245.65851562500004`}}, Typeset`update$$ = 
        0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$25050, 
              1] = {$CellContext`i$$}; \
$CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
             
             "], $CellContext`args$25050]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{218., {282.021484375, 286.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        162., {240.70148437500004`, 245.65851562500004`}}, Typeset`update$$ = 
        0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$25052, 
              2] = {$CellContext`i$$}; \
$CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
             
             "], $CellContext`args$25052]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{218., {282.021484375, 286.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`i$$], 1, 15, 1}}, Typeset`size$$ = {
        162., {240.70148437500004`, 245.65851562500004`}}, Typeset`update$$ = 
        0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
          "ControllerVariables" :> {}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, 
          "Body" :> (
           Part[$CellContext`args$25053, 
              3] = {$CellContext`i$$}; \
$CellContext`sliceGridWithHeight[CompressedData["
1:eJyNl2ty4yAQhOWXLBCQM+yV9gi5wN7/30piHt0DcaVSTrmNwHz0PPCf739/
vx/LsnzBa7ndH8/X+t5S3kttrCqrwmpnlVklVttHtbJ6sXqyerC6s7qxWj4Q
HZrGWhUlo0XGLrWXHcaOzzKrhE8O6n28B7X29fu8Y6eX8n2fREDBKvL+7FFx
IuFrQHSuakR9b32s6+NvU4pzn+fnojqFvFcK+VyZOqvxVnjy2Her/qTw7j/6
O4+6mUdKdK198cuYjl/znELeZ923s/YV4H9OhQlr8VnHTlvkJUIlmsfzPI8o
6vSsaxE++etExteMtmuk892zMkcr6pyaRijwmnq7nxTPaZq/88qAeWS0Z9SB
A7VofErMokuHJseKR5mdgKu8twrPnry1+Pzk3l4UIZ4p1od6Nat1Qy2AM7Ic
w936DOMtEGU9n22P12yNugznCW7TqI9kW8Gz2R2Z1uff8lllwOqAjEMU1lKB
2olMZXwWCNRt4au+psxI+J1QkX/Zj/DZcFaUOz1y9Bs1rnynQlThBflL9eaI
ZyQ48xfdLonPcbNaljWPkrsSPBs6LHanFeKDq3eR3IcTTo3P2jyiejl4rRUJ
87UxUd0o289ah9VuVd19CVkXag7n68vqsfUj5G0eS50X8zBBBrrr4B5WFfcI
Oo7y9H7kcVmVSNbmzhbvV8MtCPmedgrcYQv1I/PXaiPHc9GTnGgltmzv+3kj
YaurddyLV3uZMIXeHTrf5F5HtyDqobHDst9WV7h6h3pF2qjpBqH91/I13DeQ
qMF9Mg+3zVYD341vPXf284HV+Ixnc8M6LGiIEq9moZrbDO+/w30jRl3wKBLF
3wvh7h104A9+h/gO+fy5HwUdKkPIoxB1waNAFH4//AdgU4g2
             
             "], $CellContext`args$25053]), 
          "Specifications" :> {{$CellContext`i$$, 1, 15, 1}}, "Options" :> {},
           "DefaultOptions" :> {}],
         ImageSizeCache->{218., {282.021484375, 286.978515625}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.9124216304565353`*^9, 3.912421789055585*^9, 
  3.912443216129654*^9, 3.9124432666758337`*^9, 3.912446792842936*^9, 
  3.9124472811518383`*^9, 3.912585256460669*^9, 3.913939137776622*^9, 
  3.915413111536447*^9, 3.915676669069936*^9, 3.915676944678153*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"0cf8b191-7f25-48e1-bcb6-482a4f311e53"],

Cell[CellGroupData[{

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.9156838976637373`*^9},
 CellLabel->"",ExpressionUUID->"274cd6e3-e834-4362-8f11-a58af2643c39"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683897667314*^9},
 CellLabel->"",ExpressionUUID->"68452bb0-7661-4618-8abc-a63d4f21766b"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683927276469*^9},
 CellLabel->"",ExpressionUUID->"aff1e1cf-075a-4f24-8aaf-ee7a8984916c"],

Cell[BoxData["15"], "Print",
 CellChangeTimes->{3.915683927279685*^9},
 CellLabel->"",ExpressionUUID->"c498e9a2-e074-4970-a0d6-118b89faf258"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"viewChangeSteps", "[", 
        RowBox[{
        "n_", ",", " ", "maxGrid_", ",", " ", "minGrid_", ",", " ", 
         "steps_"}], "]"}], " ", ":=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"gridsList", " ", "=", " ", 
            RowBox[{"NestList", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"oneStep", "[", 
                RowBox[{"n", ",", " ", 
                 RowBox[{"Sequence", " ", "@@", " ", "#"}]}], "]"}], " ", 
               "&"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}], ",", " ", 
              "steps"}], "]"}]}], ";", " ", "\n", 
           RowBox[{"Manipulate", "[", 
            RowBox[{
             RowBox[{"Grid", "[", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"displayCube", "[", 
                  RowBox[{"n", ",", " ", 
                   RowBox[{
                    RowBox[{"gridsList", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", " ", 
                 RowBox[{"displayCube", "[", 
                  RowBox[{"n", ",", " ", 
                   RowBox[{
                    RowBox[{"gridsList", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "}"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "1", ",", "steps", ",", "1"}], "}"}]}], 
            "]"}]}], ")"}], "\n", "\n", 
         RowBox[{"checkHeightDifference", "[", 
          RowBox[{"n_", ",", " ", "maxGrid_", ",", " ", "minGrid_"}], "]"}]}],
         " ", ":=", " ", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"maxGrid", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", " ", "j", ",", " ", "k"}], "]"}], "]"}], 
              " ", "-", " ", 
              RowBox[{"minGrid", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", " ", "j", ",", " ", "k"}], "]"}], "]"}]}], 
             "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", "2", ",", " ", 
              RowBox[{"n", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"j", ",", " ", "2", ",", " ", 
              RowBox[{"n", " ", "-", " ", "1"}]}], "}"}]}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"k", ",", " ", "2", ",", " ", 
            RowBox[{"n", " ", "-", " ", "1"}]}], "}"}]}], "]"}]}]}], ",", " ",
       "2"}], "]"}], "\n", "\n", 
    RowBox[{"viewAfterSteps", "[", 
     RowBox[{
     "n_", ",", " ", "maxGrid_", ",", " ", "minGrid_", ",", " ", "steps_", 
      ",", " ", "logInterval_", ",", " ", "prevStep_"}], "]"}]}], " ", ":=", 
   " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"step", " ", "=", " ", "prevStep"}], "}"}], ",", "\n", "  ", 
       RowBox[{
        RowBox[{"PrintTemporary", "[", 
         RowBox[{"ProgressIndicator", "[", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"step", "/", 
            RowBox[{"(", 
             RowBox[{"steps", " ", "+", " ", "prevStep"}], ")"}]}], "]"}], 
          "]"}], "]"}], ";", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"time", ",", " ", "finalGrids"}], "}"}], " ", "=", " ", 
         RowBox[{"AbsoluteTiming", "[", 
          RowBox[{"Catch", "[", 
           RowBox[{"Nest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", "\n", "  ", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"step", ",", " ", "logInterval"}], "]"}], " ", "==",
                     " ", "0"}], " ", "||", " ", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ",", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Export", "[", 
                    RowBox[{
                    RowBox[{"StringJoin", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", " ", 
                    "\"\<output files/coupling_\>\"", ",", " ", 
                    RowBox[{"ToString", "[", "n", "]"}], ",", " ", 
                    "\"\</log_\>\"", ",", " ", 
                    RowBox[{"ToString", "[", "step", "]"}], ",", " ", 
                    "\"\<.mx\>\""}], "]"}], ",", " ", "#"}], "]"}], ";", " ", 
                    "\n", "    ", 
                    RowBox[{"Print", "[", 
                    RowBox[{"checkHeightDifference", "[", 
                    RowBox[{"n", ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ")"}]}],
                  "]"}], ";", " ", "\n", "  ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                  RowBox[{"Throw", "[", "#", "]"}]}], "]"}], ";", " ", "\n", 
                "  ", 
                RowBox[{"step", "++"}], ";", " ", "\n", "  ", 
                RowBox[{"oneStep", "[", 
                 RowBox[{"n", ",", " ", 
                  RowBox[{"Sequence", " ", "@@", " ", "#"}]}], "]"}]}], ")"}],
               " ", "&"}], ",", " ", "\n", "  ", 
             RowBox[{"{", 
              RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}], ",", " ", 
             RowBox[{"steps", " ", "+", " ", "1"}]}], "]"}], "]"}], "]"}]}], 
        ";", "\n", "  ", 
        RowBox[{"{", 
         RowBox[{"time", ",", " ", "step", ",", " ", "finalGrids"}], 
         "}"}]}]}], "\n", "]"}], "\n", "\n", 
     RowBox[{"displayTime", "[", "time_", "]"}]}], " ", ":=", " ", 
    RowBox[{"DateString", "[", 
     RowBox[{"time", ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Hour\>\"", ",", " ", "\"\<:\>\"", ",", " ", "\"\<Minute\>\"", ",",
         " ", "\"\<:\>\"", ",", " ", "\"\<Second\>\""}], "}"}]}], "]"}]}]}], 
  "*)"}]], "Code",
 CellChangeTimes->{{3.896460701243726*^9, 3.896460711875445*^9}, {
   3.8965083628926687`*^9, 3.8965083911961737`*^9}, 3.912412819884923*^9},
 CellLabel->
  "In[158]:=",ExpressionUUID->"974ffde9-b169-46f3-a1ad-6a3e27e09793"]
}, Open  ]]
},
WindowSize->{1440., 758.25},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>0.9 Inherited,
FrontEndVersion->"13.0 for Linux x86 (64-bit) (December 2, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["DarkStyle for Notebooks", "Title"], 
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Tongue menu cells", "Section"], 
         Cell[
          StyleData[
          "WolframAlphaShort", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "WolframAlphaLong", "Backspace" -> "Input"}, EvaluationMode -> 
          "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaShortInput", StyleDefinitions -> StyleData["Input"]], 
          EvaluationMode -> "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]], 
              CellBaseline -> Baseline], None}, {None, None}}, ShowCodeAssist -> 
          False, FormatType -> TextForm, FontFamily -> "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaLong", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "Input", "Backspace" -> "WolframAlphaShort"}, 
          EvaluationMode -> "WolframAlphaLong", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[WolframAlphaPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData["WolframAlphaFullOutput"], 
          CellMargins -> {{20, 10}, {Inherited, Inherited}}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ExternalLanguage"], CellFrame -> 1, 
             CellMargins -> {{66, 10}, {8, 8}}, 
             StyleKeyMapping -> {"Backspace" -> "Input"}, Evaluatable -> True,
              EvaluationMode -> "ExternalLanguage", CellGroupingRules -> 
             "InputGrouping", StripStyleOnPaste -> True, 
             CellEvaluationLanguage -> "Python", 
             CellFrameMargins -> {{4, 8}, {8, 8}}, CellFrameColor -> 
             RGBColor[0.2549, 0.23137, 0.42549], CellFrameLabels -> {{
                Cell[
                 BoxData[
                  DynamicBox[
                   ToBoxes[
                   ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged; 
                    FrontEnd`Private`MakeExternalLanguageMenu[
                    ExternalEvaluate`FE`GetDefaultCellEvaluationLanguage[], 
                    ExternalEvaluate`FE`GetExternalLanguageMenuData[]], 
                    StandardForm], 
                   TrackedSymbols :> {
                    ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged}, 
                   ImageSizeCache -> {
                    35., {10.64208984375, 17.35791015625}}]], "Output", 
                 Background -> None, CellFrame -> 0], None}, {None, None}}, 
             CellFrameLabelMargins -> 0, AllowInlineCells -> False, 
             Hyphenation -> False, AutoQuoteCharacters -> {}, 
             PasteAutoQuoteCharacters -> {}, LanguageCategory -> "Formula", 
             ScriptLevel -> 1, MenuSortingValue -> 1800, FontFamily -> Dynamic[
               CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
             FontColor -> GrayLevel[0.97], Background -> 
             RGBColor[0.18, 0.172, 0.22]], 
            Cell[
             StyleData["ExternalLanguage", "Presentation"], 
             CellMargins -> {{101, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "SlideShow"], ShowGroupOpener -> 
             False, CellMargins -> {{110, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "Printout"], 
             CellMargins -> {{48, 10}, {8, 8}}, 
             CellFrameMargins -> {{2, 8}, {8, 8}}]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Notebook options settings", "Section"], 
         Cell[
          StyleData[All, "Working"], InitializationCellEvaluation -> False, 
          DockedCells -> None, DefaultNewCellStyle -> "Code", 
          ShowPredictiveInterface -> False], 
         Cell[
          StyleData["Notebook"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0., 0.8, 1], "HoverColor" -> 
            RGBColor[0.78, 0.64, 1], "Thickness" -> 1.3, "Widths" -> {2, 8}}, 
          StyleKeyMapping -> {
           "==" -> "WolframAlphaLong", "Backspace" -> "WolframAlphaShort", 
            "=" -> "WolframAlphaShort", "*" -> "Item", ">" -> 
            "ExternalLanguage", "Backspace" -> "Code"}, 
          AutoStyleOptions -> {
           "CommentStyle" -> {
             FontColor -> RGBColor[0.89, 0.56, 1., 0.95], ShowAutoStyles -> 
              False, ShowSyntaxStyles -> False, AutoNumberFormatting -> 
              False}, "ExcessArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "FunctionLocalVariableStyle" -> {
             FontColor -> RGBColor[0.52549, 0.843137, 1.]}, 
            "GraphicsCompatibilityProblemStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "LocalScopeConflictStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "LocalVariableStyle" -> {
             FontColor -> RGBColor[0., 0.8200000000000001, 0.32]}, 
            "MissingArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "MisspelledWordStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "NoKernelPresentStyle" -> {
             FontColor -> 
              RGBColor[
               0.16470588235294117`, 0.6313725490196078, 0.596078431372549]}, 
            "PatternVariableStyle" -> {
             FontColor -> RGBColor[0.11, 1., 0.08], FontSlant -> "Italic"}, 
            "StringStyle" -> {
             FontColor -> RGBColor[0.98, 0.71, 0.], ShowAutoStyles -> False, 
              ShowSyntaxStyles -> False, AutoNumberFormatting -> False}, 
            "UndefinedSymbolStyle" -> {FontColor -> RGBColor[0.42, 0.94, 1]}, 
            "UnknownOptionStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "UnwantedAssignmentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 
                0.1843137254901961]}}, 
          CodeAssistOptions -> {
           "AutoConvertEnable" -> False, 
            "HeadHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}, "MatchHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}}, TranslationOptions -> {"Language" -> None}, FontColor -> 
          RGBColor[0, 0.7, 1], Background -> GrayLevel[0.15]], 
         Cell[
          StyleData["DialogStyle"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["NotebookObject"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["LinguisticAssistant"], FontColor -> 
          RGBColor[0, 0.7, 1]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Title and Section Cells", "Section"], 
         Cell[
          StyleData["Title"], FontColor -> GrayLevel[1]], 
         Cell[
          StyleData["Chapter"], FontColor -> RGBColor[0.8, 0.8, 0.8]], 
         Cell[
          StyleData["Subchapter"], FontColor -> RGBColor[0.65, 0.05, 0.65]], 
         Cell[
          StyleData["Subtitle"], FontColor -> 
          RGBColor[0.196078, 0.694118, 0.862745]], 
         Cell[
          StyleData["Subsubtitle"], FontColor -> 
          RGBColor[0.196078, 0.394118, 0.562745]], 
         Cell[
          StyleData["Subsubtitle"]], 
         Cell[
          StyleData["Section"], FontColor -> 
          RGBColor[
           0.1399099717708095, 0.5224231326771954, 0.6501869230182346]], 
         Cell[
          StyleData["Subsection"], FontColor -> GrayLevel[0.749996]], 
         Cell[
          StyleData["Subsubsection"], FontColor -> 
          RGBColor[0.823529, 0.490654, 0.202274]], 
         Cell[
          StyleData["Subsubsubsection"], FontColor -> 
          RGBColor[0.954147, 0.694224, 0.124651]], 
         Cell[
          StyleData["Subsubsubsubsection"], FontColor -> 
          RGBColor[0.913237, 0.365469, 0.0854353]], 
         Cell[
          StyleData["Text"], FontFamily -> "Gill Sans Light", FontSize -> 14, 
          FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
          GrayLevel[0.683803]], 
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[0, 0.7, 1]], CellMargins -> {{81, 10}, {4, 8}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "Subitem", "*" -> "Subitem"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "Item", 
          CounterAssignments -> {{"Subitem", 0}, {"Subsubitem", 0}}, 
          MenuSortingValue -> 1600, FontFamily -> "Source Sans Pro", FontSize -> 
          15], 
         Cell[
          StyleData["ItemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubsubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          CellGroupData[{
            Cell["Chapter", "Subsection"], 
            Cell[
             StyleData["Chapter"], CounterIncrements -> "Chapter", 
             CounterAssignments -> {{"Subchapter", 0}, {"Section", 0}, {
               "Equation", 0}, {"Figure", 0}, {"Subsubtitle", 0}, {
               "Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1150, 
             MenuCommandKey :> "2"], 
            Cell[
             StyleData["Subchapter"], CellDingbat -> 
             StyleBox["\[MathematicaIcon]", Alignment -> Baseline, 
               RGBColor[0., 0.043, 0.9]], CounterIncrements -> "Subchapter", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1200, 
             MenuCommandKey :> "3"]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Input and Output cells", "Section"], 
         Cell[
          StyleData["Code"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontWeight -> Plain, FontColor -> GrayLevel[1], 
          Background -> GrayLevel[0.1]], 
         Cell[
          StyleData["InitializationCell"], 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellFrameMargins -> {{10, 10}, {5, 5}}, CellFrameLabelMargins -> -5,
           FontColor -> GrayLevel[1], Background -> GrayLevel[0.25]], 
         Cell[
          StyleData["Input"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontColor -> GrayLevel[0.7]], 
         Cell[
          StyleData["Output"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontSize -> 13], 
         
         Cell[
          StyleData["Message"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          RGBColor[
           0.704600595101854, 0.24277103837644007`, 0.22278171969176777`]], 
         Cell[
          StyleData["Print"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          GrayLevel[0.3]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["misc", "Section"], 
         Cell[
          StyleData["InformationCell"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.760174, 0.600641, 0.675288]}, FontColor -> 
          GrayLevel[0.3]], 
         Cell[
          StyleData["InformationLink"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["InformationLinkLF"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["CellLabel"], 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontSize -> 9]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Formulas and Programming", "Section"], 
         Cell[
          StyleData["DisplayFormula"], FontColor -> GrayLevel[0.85]], 
         Cell[
          StyleData["DisplayFormulaNumbered"], FontColor -> GrayLevel[0.85]], 
         
         Cell[
          StyleData["Program"], CellFrameColor -> GrayLevel[0.4]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          TextData[{"Styles for ", 
            StyleBox["Mathematica", FontSlant -> "Italic"], 
            " System\[Hyphen]specific Elements"}], "Section", 
          CellChangeTimes -> {{3.601920784160323*^9, 3.60192078489342*^9}, 
            3.60356525124664*^9, {3.6037117681643677`*^9, 
            3.6037117683195887`*^9}}], 
         Cell[
          CellGroupData[{
            Cell["FormatType Styles", "Subsection"], 
            Cell[
             StyleData["StandardForm"]], 
            Cell[
             StyleData["CellExpression"], FontColor -> GrayLevel[0], 
             Background -> GrayLevel[0.75]], 
            Cell[
             StyleData["CellLabel"], FontSize -> 9, FontColor -> 
             RGBColor[0.603861, 0.615915, 0.607843]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
            "Graphics Styles", "Subsection", 
             CellChangeTimes -> {{3.603565272271762*^9, 
              3.603565284491351*^9}}], 
            Cell[
             StyleData["GraphicsAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["GraphicsFrame"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["Graphics3DAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Arial", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]]}, 
           Open]]}, Open]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "13.0 for Linux x86 (64-bit) (December 2, 2021)", StyleDefinitions -> 
  "Default.nb"],
ExpressionUUID->"15b5dd27-6829-4586-82c0-a7ea75e62e6d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 75, 0, 34, "CodeText",ExpressionUUID->"ec0c784a-ce9d-4c5a-b232-cf84abfadbcd"],
Cell[636, 22, 436, 8, 40, "Text",ExpressionUUID->"1c0f1225-b49f-4433-89f2-3809bd6fabfe"],
Cell[CellGroupData[{
Cell[1097, 34, 2752, 67, 200, "Code",ExpressionUUID->"e646de66-4019-4a45-9f24-b862c681f906"],
Cell[3852, 103, 439, 10, 26, "Message",ExpressionUUID->"4e896bef-be97-4176-9320-885695276cad"],
Cell[4294, 115, 305, 6, 22, "Output",ExpressionUUID->"16f1a296-eb73-47de-b328-a8609255a50c"]
}, Open  ]],
Cell[4614, 124, 553, 11, 81, "Text",ExpressionUUID->"7def9534-b5ec-46ec-afcf-1dbb61179113"],
Cell[5170, 137, 395, 8, 42, "Input",ExpressionUUID->"5bd8729e-1b5d-4b5f-b063-cb7f0991f434"],
Cell[5568, 147, 162, 3, 28, "Text",ExpressionUUID->"8a942dd6-5ed6-43b7-bf58-29d355d7d106"],
Cell[5733, 152, 550, 13, 50, "Code",ExpressionUUID->"25294259-c6c3-46b8-9874-58800bbfe360"],
Cell[6286, 167, 192, 6, 46, "Text",ExpressionUUID->"137fda44-2f58-466e-b9cf-77f14954051f"],
Cell[6481, 175, 3680, 101, 275, "Code",ExpressionUUID->"27a3c9a8-323b-4c69-ac0d-666ac9c09b77"],
Cell[10164, 278, 339, 7, 28, "Text",ExpressionUUID->"ba87411f-0479-4ab8-9fa6-a40adbcfb0e3"],
Cell[10506, 287, 14581, 372, 1119, "Code",ExpressionUUID->"fcac06f5-8334-4b9b-ad54-5a70c0e8fdd2"],
Cell[25090, 661, 14889, 304, 500, "Code",ExpressionUUID->"34a5ce17-7bbe-4b28-b8dc-8f3c89a7e4af"],
Cell[39982, 967, 5804, 135, 257, "Code",ExpressionUUID->"43c9ca43-dc34-48cc-ba70-58f0db2b1acf"],
Cell[45789, 1104, 2769, 41, 347, "Text",ExpressionUUID->"b80fafbb-a30b-4188-b067-42d643f41c2b"],
Cell[48561, 1147, 27382, 658, 1025, "Code",ExpressionUUID->"1cb6fad7-3d75-46e5-bdfd-cc2c5aa8136f"],
Cell[CellGroupData[{
Cell[75968, 1809, 337, 7, 31, "Code",ExpressionUUID->"f4ba13d1-148e-4edf-aee7-cb940163b900"],
Cell[76308, 1818, 14552, 285, 1997, "Output",ExpressionUUID->"8b1eeb61-33cf-45f8-a3d8-3207660ff925"],
Cell[CellGroupData[{
Cell[90885, 2107, 141, 2, 21, "Print",ExpressionUUID->"f13472b9-7e58-4ef6-a3d0-00f2a8da757a"],
Cell[91029, 2111, 143, 2, 21, "Print",ExpressionUUID->"1197d463-1f24-4c25-9ee4-337b90bf6300"],
Cell[91175, 2115, 143, 2, 21, "Print",ExpressionUUID->"56f8d518-0195-4c07-99f9-3ed313a511f7"],
Cell[91321, 2119, 141, 2, 21, "Print",ExpressionUUID->"7d4a38eb-b1eb-463a-b726-18f7829ab4b5"],
Cell[91465, 2123, 140, 2, 21, "Print",ExpressionUUID->"67a5fb9c-77be-45a1-8240-6be539991840"],
Cell[91608, 2127, 141, 2, 21, "Print",ExpressionUUID->"16095d1f-e83e-41dc-a909-0cc89d4fc8ed"],
Cell[91752, 2131, 141, 2, 21, "Print",ExpressionUUID->"f81d654d-0d0d-4692-9a6a-80ec79116ac2"],
Cell[91896, 2135, 143, 2, 21, "Print",ExpressionUUID->"04fb1a1d-49f7-44b9-8b69-cca195fdeb2c"],
Cell[92042, 2139, 138, 2, 21, "Print",ExpressionUUID->"890d51cd-6c1d-4854-9c13-8557e236741a"],
Cell[92183, 2143, 141, 2, 21, "Print",ExpressionUUID->"dc5532d0-a3a5-4aa3-bcc5-669728ac70d1"],
Cell[92327, 2147, 142, 2, 21, "Print",ExpressionUUID->"9aa3919a-36b7-49f3-bdbc-61ed332785f4"],
Cell[92472, 2151, 143, 2, 21, "Print",ExpressionUUID->"46d97784-2630-4bff-b5a3-fda550c82416"],
Cell[92618, 2155, 141, 2, 21, "Print",ExpressionUUID->"3f6aaea9-3e20-4f58-b938-4b6af9adedee"],
Cell[92762, 2159, 141, 2, 21, "Print",ExpressionUUID->"9791522c-a66c-4639-952d-311673253d75"],
Cell[92906, 2163, 142, 2, 21, "Print",ExpressionUUID->"58c79c09-0925-4df5-890d-9a8fbcb7c2af"],
Cell[93051, 2167, 141, 2, 21, "Print",ExpressionUUID->"80c4bc26-63b0-4a85-9ad7-e1a674be48af"],
Cell[93195, 2171, 140, 2, 21, "Print",ExpressionUUID->"16a456d4-6d5c-4465-95a9-1a6a2f07e0a7"],
Cell[93338, 2175, 141, 2, 21, "Print",ExpressionUUID->"c93b6307-90a1-43e9-82da-6495b6248fc9"],
Cell[93482, 2179, 141, 2, 21, "Print",ExpressionUUID->"73f4f0ba-5741-4433-bab8-aa9fc9e72bf2"],
Cell[93626, 2183, 141, 2, 21, "Print",ExpressionUUID->"4c5bf92a-164c-4c94-b5d3-400d83aa9396"],
Cell[93770, 2187, 140, 2, 21, "Print",ExpressionUUID->"929f6fae-1eb0-4dd0-9f35-54a7f5bebe5f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93959, 2195, 490, 9, 31, "Code",ExpressionUUID->"e4a19d2d-941b-4e72-be2b-a9812fd4f8fc"],
Cell[94452, 2206, 12683, 239, 1729, "Output",ExpressionUUID->"18cc57fc-00e9-41cf-9f65-96be000042ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107172, 2450, 335, 7, 31, "Code",ExpressionUUID->"9795074e-43fb-4107-b494-babd7733eaec"],
Cell[107510, 2459, 18301, 343, 1987, "Output",ExpressionUUID->"3b69553f-8631-44ab-b6e1-a1a81eae2108"],
Cell[CellGroupData[{
Cell[125836, 2806, 141, 2, 21, "Print",ExpressionUUID->"d4d4be83-0d5b-4342-ade9-48dbfda357b7"],
Cell[125980, 2810, 143, 2, 21, "Print",ExpressionUUID->"d14b815a-4f4a-427f-be8d-267bb591e47f"],
Cell[126126, 2814, 141, 2, 21, "Print",ExpressionUUID->"effeaa01-e713-44a5-984a-db6fbeb2ed1a"],
Cell[126270, 2818, 141, 2, 21, "Print",ExpressionUUID->"e41dc573-e47e-4c57-831e-456214ee2a8f"],
Cell[126414, 2822, 141, 2, 21, "Print",ExpressionUUID->"4392d8c4-2607-49b4-8b97-a32cb0441f5a"],
Cell[126558, 2826, 139, 2, 21, "Print",ExpressionUUID->"274b903a-47c8-400e-b8fb-294747c60d4f"],
Cell[126700, 2830, 141, 2, 21, "Print",ExpressionUUID->"543515c0-6a44-4293-8f1b-32189974da28"],
Cell[126844, 2834, 143, 2, 21, "Print",ExpressionUUID->"8c55d74e-e4cb-4d71-af28-94bb2bae74ce"],
Cell[126990, 2838, 141, 2, 21, "Print",ExpressionUUID->"0efc19e0-7693-40e4-be0d-61ade36d8896"],
Cell[127134, 2842, 141, 2, 21, "Print",ExpressionUUID->"48942a77-b780-4f9e-bc04-a8a20a2fb581"],
Cell[127278, 2846, 141, 2, 21, "Print",ExpressionUUID->"d968d288-50a7-47b9-88cf-412c20cc51a4"],
Cell[127422, 2850, 143, 2, 21, "Print",ExpressionUUID->"9a5949d8-0ac5-4800-9204-eae173991f34"],
Cell[127568, 2854, 143, 2, 21, "Print",ExpressionUUID->"0bdf3de7-23eb-4c1c-9d4e-0247ba4ce468"],
Cell[127714, 2858, 141, 2, 21, "Print",ExpressionUUID->"81bb8500-0276-46a8-bc8d-b8429ebfe5ab"],
Cell[127858, 2862, 143, 2, 21, "Print",ExpressionUUID->"1833a23c-4f1b-4d04-824e-8e718f4f0b8c"],
Cell[128004, 2866, 141, 2, 21, "Print",ExpressionUUID->"c2032a6b-04e5-401d-8a86-5f64bf4732d3"],
Cell[128148, 2870, 141, 2, 21, "Print",ExpressionUUID->"d2ea187d-9ecb-4805-8726-86989239a75c"],
Cell[128292, 2874, 141, 2, 21, "Print",ExpressionUUID->"df9b675b-b385-4ac6-965e-9d823cfb2f2e"],
Cell[128436, 2878, 141, 2, 21, "Print",ExpressionUUID->"17e94f6b-a9d6-49fd-a544-c828877fcef9"],
Cell[128580, 2882, 141, 2, 21, "Print",ExpressionUUID->"ae090b73-e621-4452-baf7-a179ee205722"],
Cell[128724, 2886, 143, 2, 21, "Print",ExpressionUUID->"86c2077b-930c-43ff-97dc-52a8ad2a5321"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128916, 2894, 187, 3, 49, "Subsection",ExpressionUUID->"3cf80991-5947-4fae-80f3-2de0a0a27c13"],
Cell[CellGroupData[{
Cell[129128, 2901, 303, 5, 31, "Code",ExpressionUUID->"4010bd6b-b10a-4a65-9a18-a530dbaa938a"],
Cell[129434, 2908, 493, 11, 26, "Message",ExpressionUUID->"5cba76dd-9b79-44a9-8f94-ae878b8ba7fe"],
Cell[129930, 2921, 10808, 269, 159, "Output",ExpressionUUID->"f4a347de-8587-41f9-97f0-6fdeeedea021"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140775, 3195, 275, 4, 31, "Code",ExpressionUUID->"52c139c6-ba1f-4750-b7c4-512e8ca86c1c"],
Cell[141053, 3201, 203, 3, 22, "Output",ExpressionUUID->"a61ac58d-31b8-4dfd-89a5-771a2f2dc211"]
}, Open  ]],
Cell[141271, 3207, 1563, 38, 125, "Code",ExpressionUUID->"2148de09-ed05-4808-bed8-2a80b8dfc5bc"],
Cell[CellGroupData[{
Cell[142859, 3249, 677, 10, 31, "Code",ExpressionUUID->"57af5111-0f01-4f8c-80d8-9d8ac3a7ab54"],
Cell[143539, 3261, 3979, 74, 263, "Output",ExpressionUUID->"202afc88-dc97-42e2-8b7a-ead9932d7327"],
Cell[CellGroupData[{
Cell[147543, 3339, 141, 2, 21, "Print",ExpressionUUID->"4290e210-f8a5-4d54-b15e-ad7048f1c03e"],
Cell[147687, 3343, 141, 2, 21, "Print",ExpressionUUID->"bc677f51-c2ea-4419-a573-8880e08eecac"],
Cell[147831, 3347, 141, 2, 21, "Print",ExpressionUUID->"edd97c31-3e9e-42ba-b499-73d27460bae6"],
Cell[147975, 3351, 140, 2, 21, "Print",ExpressionUUID->"8101f495-d7b2-4b83-89dc-6d2052223c89"],
Cell[148118, 3355, 143, 2, 21, "Print",ExpressionUUID->"2108c56a-dacd-446b-aed5-a4d74a1b6357"],
Cell[148264, 3359, 142, 2, 21, "Print",ExpressionUUID->"b97505ab-0a09-48d8-bb4c-9534cf31cfe8"],
Cell[148409, 3363, 143, 2, 21, "Print",ExpressionUUID->"8b97c183-e079-4bba-9d40-9d1879b455d5"],
Cell[148555, 3367, 140, 2, 21, "Print",ExpressionUUID->"14d892af-a08b-473e-b1a3-cc5c97807498"],
Cell[148698, 3371, 143, 2, 21, "Print",ExpressionUUID->"2e2af363-c778-44fa-873c-e19db6b87195"],
Cell[148844, 3375, 142, 2, 21, "Print",ExpressionUUID->"3d2fcf66-e9dc-4d46-8d41-6c555a388414"],
Cell[148989, 3379, 141, 2, 21, "Print",ExpressionUUID->"8a85fb12-9784-4a20-8acd-32421ae37b8c"],
Cell[149133, 3383, 140, 2, 21, "Print",ExpressionUUID->"803a90a9-292b-45d9-81ba-cca1b96a3275"],
Cell[149276, 3387, 141, 2, 21, "Print",ExpressionUUID->"fa9700ac-db2c-444a-b522-0581bde1bb8f"],
Cell[149420, 3391, 142, 2, 21, "Print",ExpressionUUID->"7ee684bd-0830-46a4-89bc-54102597f03d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149611, 3399, 797, 11, 50, "Code",ExpressionUUID->"1c71fc96-a296-4b0b-ab7f-73c9848f5424"],
Cell[150411, 3412, 3566, 65, 578, "Output",ExpressionUUID->"3c2d61e7-0e99-4ec9-b0cd-087f9791aabf"],
Cell[153980, 3479, 8752, 167, 578, "Output",ExpressionUUID->"e86a41b5-6b1a-4728-9735-8a0d50451544"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162769, 3651, 556, 9, 50, "Code",ExpressionUUID->"af9d4561-7cad-4ed1-ba9c-ad923ed74cc4"],
Cell[163328, 3662, 5200, 102, 580, "Output",ExpressionUUID->"7d2a1274-27fd-457f-8d63-4928f3d44c6c"],
Cell[168531, 3766, 3407, 64, 578, "Output",ExpressionUUID->"8db44f02-6a9f-477f-86b8-10a012be52d3"]
}, Open  ]],
Cell[171953, 3833, 658, 11, 64, "Text",ExpressionUUID->"00cba1b4-7863-4035-b775-b728565720c5"],
Cell[CellGroupData[{
Cell[172636, 3848, 419, 7, 31, "Code",ExpressionUUID->"8a6f1077-1d8d-412d-b17e-7e387e7a6104"],
Cell[173058, 3857, 6739, 140, 828, "Output",ExpressionUUID->"20f7c4cb-b0db-4a16-82ed-b1c3b2f82431"],
Cell[179800, 3999, 528, 10, 26, "Message",ExpressionUUID->"eb7999d1-0e6f-4802-8d3d-1e74b4723a73"],
Cell[180331, 4011, 528, 10, 26, "Message",ExpressionUUID->"3c20dc61-67a9-4faf-a1cc-174ff023f5ce"],
Cell[180862, 4023, 528, 10, 26, "Message",ExpressionUUID->"24cb0583-3aa6-4852-a107-8a0feebcafbb"],
Cell[181393, 4035, 443, 9, 26, "Message",ExpressionUUID->"72f7c2e6-06bc-4260-9684-24b69d4742b5"],
Cell[181839, 4046, 530, 10, 26, "Message",ExpressionUUID->"ea0c4d14-b57c-4889-b608-dddce031db83"],
Cell[182372, 4058, 528, 10, 26, "Message",ExpressionUUID->"1e477417-0ef8-4681-8e43-6d9bfe1a5981"],
Cell[182903, 4070, 528, 10, 26, "Message",ExpressionUUID->"6deb6a29-72c6-4415-b107-f1cd625960e0"],
Cell[183434, 4082, 443, 9, 26, "Message",ExpressionUUID->"df309c55-5be4-4a3e-95d6-8760f17f36c2"],
Cell[183880, 4093, 8107, 169, 305, "Output",ExpressionUUID->"0cf7af11-1c17-42bb-9958-8cd8ecfaa108"]
}, Open  ]],
Cell[192002, 4265, 462, 9, 46, "Text",ExpressionUUID->"d7acfd83-2905-4c91-8de5-560bb0ab3d78"],
Cell[192467, 4276, 1023, 23, 69, "Code",ExpressionUUID->"4a151634-84be-4917-bc9d-83c658b41256"],
Cell[193493, 4301, 195397, 3220, 322, 3005, 64, "CachedBoxData", "BoxData", "Input",ExpressionUUID->"cabde1b3-64e9-4f2a-bb8d-089c9750c524"],
Cell[388893, 7523, 181373, 2989, 322, 3147, 65, "CachedBoxData", "BoxData", "Input",ExpressionUUID->"b2fc9085-dff3-4763-9494-f96de94b9815"],
Cell[570269, 10514, 277, 6, 28, "Text",ExpressionUUID->"0523a527-9135-41ff-91cc-a27f8aea4859"],
Cell[CellGroupData[{
Cell[570571, 10524, 757, 16, 50, "Code",ExpressionUUID->"d51e056e-190d-42a3-a07a-ca0d26fe9e42"],
Cell[571331, 10542, 9167, 213, 36, "Output",ExpressionUUID->"6089ec0f-ec43-4e5b-bd74-f70880f89d89"],
Cell[580501, 10757, 9216, 214, 36, "Output",ExpressionUUID->"caee3b95-5e6c-4420-846b-cafa9b8d5c83"]
}, Open  ]],
Cell[589732, 10974, 239, 7, 46, "Text",ExpressionUUID->"49bd5e14-9583-45dc-952d-0822b9efa7c7"],
Cell[589974, 10983, 26132, 631, 2038, "Code",ExpressionUUID->"6babd98d-b119-4bcd-9c2e-7c324a23bf54"],
Cell[616109, 11616, 277, 6, 28, "Text",ExpressionUUID->"c6dc01b4-d9e3-41d4-a11f-2a7a1bfb6ae9"],
Cell[CellGroupData[{
Cell[616411, 11626, 178, 3, 31, "Code",ExpressionUUID->"99402e4d-565c-4f0a-80be-a03c7395be5f"],
Cell[616592, 11631, 175, 3, 22, "Output",ExpressionUUID->"686bf14c-cd45-42bf-b5c8-fd529bfb4ee2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[616804, 11639, 242, 5, 31, "Code",ExpressionUUID->"5bb851d2-ee13-48d4-8953-e45caaecfdc1"],
Cell[CellGroupData[{
Cell[617071, 11648, 533, 11, 21, "Print",ExpressionUUID->"c1e003b7-e6d6-4498-89c6-5dccbf443329"],
Cell[617607, 11661, 531, 11, 21, "Print",ExpressionUUID->"5fe4ed33-8f4c-48e5-97dd-0dab3a1c8f6e"],
Cell[618141, 11674, 654, 13, 21, "Print",ExpressionUUID->"ce3747cd-c3f1-4e2d-988d-ab83550f4586"],
Cell[618798, 11689, 531, 11, 21, "Print",ExpressionUUID->"9cb5303f-ab6d-4146-919a-9e4d9c47f1bb"],
Cell[619332, 11702, 531, 11, 21, "Print",ExpressionUUID->"f44bd964-1147-4c3c-a136-d15199c06071"],
Cell[619866, 11715, 652, 13, 21, "Print",ExpressionUUID->"09c894fa-abce-4117-9fdd-7b235ad46154"],
Cell[620521, 11730, 531, 11, 21, "Print",ExpressionUUID->"9e39b6ed-a545-4ed0-a5da-e92ff41c5c9e"],
Cell[621055, 11743, 531, 11, 21, "Print",ExpressionUUID->"4102a0a6-78f2-41e3-ba35-350d5e265dc3"],
Cell[621589, 11756, 652, 13, 21, "Print",ExpressionUUID->"4ec965c9-d7b5-4d87-ad3f-d952f1103eda"],
Cell[622244, 11771, 533, 11, 21, "Print",ExpressionUUID->"a3c27095-d818-4d77-8ca0-1f82528ffa32"],
Cell[622780, 11784, 531, 11, 21, "Print",ExpressionUUID->"63dba91b-e73d-4722-9ee5-0508b154f657"],
Cell[623314, 11797, 654, 13, 21, "Print",ExpressionUUID->"27df9a56-4855-435a-bb44-afe3d82b359e"],
Cell[623971, 11812, 533, 11, 21, "Print",ExpressionUUID->"5d109ffb-8a15-4bfb-ba6d-e6c88561f476"],
Cell[624507, 11825, 531, 11, 21, "Print",ExpressionUUID->"1be51bba-7c20-4f1b-9325-ae0c04da9041"],
Cell[625041, 11838, 650, 13, 21, "Print",ExpressionUUID->"2487c819-57fe-4ed0-980a-572c95156aa5"],
Cell[625694, 11853, 608, 13, 21, "Print",ExpressionUUID->"df37d99b-262e-4529-8478-046f3f0d8a00"]
}, Open  ]],
Cell[626317, 11869, 16303, 325, 2773, "Output",ExpressionUUID->"d6b456e6-ac86-416d-987e-c45bc379bd8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[642657, 12199, 294, 6, 31, "Code",ExpressionUUID->"079fc432-aa5d-4e3b-8dc1-2ab978cbc470"],
Cell[CellGroupData[{
Cell[642976, 12209, 716, 14, 21, "Print",ExpressionUUID->"cb9a0ce4-ea62-4c56-b218-a6b23141e656"],
Cell[643695, 12225, 714, 14, 21, "Print",ExpressionUUID->"88de0c62-6f08-4b1a-a6ff-af411f862be6"],
Cell[644412, 12241, 837, 16, 21, "Print",ExpressionUUID->"4130b192-24fe-42cb-ab2d-893cd2637c7c"],
Cell[645252, 12259, 711, 14, 21, "Print",ExpressionUUID->"7c11b217-1799-499c-bcfd-815c18965efe"],
Cell[645966, 12275, 716, 14, 21, "Print",ExpressionUUID->"cf2c6d8c-fbaa-49e5-9111-ef2382824263"],
Cell[646685, 12291, 837, 16, 21, "Print",ExpressionUUID->"074e25b6-17fe-45a0-9176-4d7be8582130"],
Cell[647525, 12309, 714, 14, 21, "Print",ExpressionUUID->"7d77fe8b-ab57-47c5-9d90-92a7a96b0523"],
Cell[648242, 12325, 714, 14, 21, "Print",ExpressionUUID->"fad3935a-b201-4d51-bc67-f05e14aa33fc"],
Cell[648959, 12341, 835, 16, 21, "Print",ExpressionUUID->"5d8543d5-8da5-4443-873b-bd08472bbf7e"],
Cell[649797, 12359, 714, 14, 21, "Print",ExpressionUUID->"8c456664-06c9-45a4-b90e-5bf4dff908ab"],
Cell[650514, 12375, 714, 14, 21, "Print",ExpressionUUID->"e81475ea-e674-4aaf-aa78-6e48327c7adc"],
Cell[651231, 12391, 839, 16, 21, "Print",ExpressionUUID->"912a99bd-56f0-47ec-9a45-fb830a19ba30"],
Cell[652073, 12409, 714, 14, 21, "Print",ExpressionUUID->"3955792e-6a61-47b1-8a83-66643ac4cb4c"],
Cell[652790, 12425, 714, 14, 21, "Print",ExpressionUUID->"8041e9d3-40de-429c-81e5-d8a569ac918e"],
Cell[653507, 12441, 837, 16, 21, "Print",ExpressionUUID->"73f38ab5-536b-4469-9637-94b980091967"],
Cell[654347, 12459, 714, 14, 21, "Print",ExpressionUUID->"0d443d62-0e63-4722-b1b7-deba12f3a191"],
Cell[655064, 12475, 712, 14, 21, "Print",ExpressionUUID->"5a7f47c9-d52a-4d8b-91a7-10c9fe81f727"],
Cell[655779, 12491, 837, 16, 21, "Print",ExpressionUUID->"902f528b-c9ba-431f-8699-90837ab28d6e"],
Cell[656619, 12509, 716, 14, 21, "Print",ExpressionUUID->"bbc4fe57-3363-4f16-85ae-de81c202aad0"],
Cell[657338, 12525, 714, 14, 21, "Print",ExpressionUUID->"9a029207-c78e-46d2-80dd-acb855169a09"],
Cell[658055, 12541, 839, 16, 21, "Print",ExpressionUUID->"c32df61f-89d8-4010-8f1f-29563288eb79"],
Cell[658897, 12559, 716, 14, 21, "Print",ExpressionUUID->"d192bba6-50cf-4711-9e9a-15aee38d5b89"],
Cell[659616, 12575, 714, 14, 21, "Print",ExpressionUUID->"b7e666e9-92b0-4472-bbac-94e05fb53ccd"],
Cell[660333, 12591, 841, 16, 21, "Print",ExpressionUUID->"31c9dab0-5003-49ec-bd3c-1db79e7f464f"],
Cell[661177, 12609, 716, 14, 21, "Print",ExpressionUUID->"2b5ae421-52cf-446c-966c-326c02c448f5"],
Cell[661896, 12625, 714, 14, 21, "Print",ExpressionUUID->"a0c7e168-ddcc-43a3-af76-cf29585bd920"],
Cell[662613, 12641, 837, 16, 21, "Print",ExpressionUUID->"41b3afc5-49e2-49b5-b53a-20ede96cca42"],
Cell[663453, 12659, 718, 14, 21, "Print",ExpressionUUID->"61f50e41-4102-4807-874b-7da40b50f749"],
Cell[664174, 12675, 712, 14, 21, "Print",ExpressionUUID->"81d1fd93-f271-432a-bbac-c26e7a074213"],
Cell[664889, 12691, 837, 16, 21, "Print",ExpressionUUID->"81c8d74c-cea0-4901-80ba-84972b68ef0b"],
Cell[665729, 12709, 718, 14, 21, "Print",ExpressionUUID->"c42251f0-90ee-4078-a67b-76b315bf5e80"],
Cell[666450, 12725, 714, 14, 21, "Print",ExpressionUUID->"7c27a79f-0a5d-4748-b93a-42dba9dffd28"],
Cell[667167, 12741, 833, 16, 21, "Print",ExpressionUUID->"276daed3-ce8c-4766-ad81-8f5e0e4db71d"],
Cell[668003, 12759, 796, 16, 21, "Print",ExpressionUUID->"0b8b7123-3ede-4d62-9cb3-2387bfcdb046"]
}, Open  ]]
}, Open  ]],
Cell[668826, 12779, 189, 3, 28, "Text",ExpressionUUID->"4fb8cb37-2a12-47da-b2ff-cd1b9c17dba2"],
Cell[669018, 12784, 463, 11, 31, "Code",ExpressionUUID->"133e8dfb-481b-420c-aaff-48447d5a9a0d"],
Cell[CellGroupData[{
Cell[669506, 12799, 413, 6, 69, "Code",ExpressionUUID->"41b7f8ba-34ea-4163-85b2-17ab13b150fc"],
Cell[669922, 12807, 2960, 56, 420, "Output",ExpressionUUID->"97202561-a03e-42f0-8981-0dc7927dc080"],
Cell[672885, 12865, 2817, 54, 579, "Output",ExpressionUUID->"cbf132d8-9d7d-4a97-97d8-8998826dc65e"],
Cell[675705, 12921, 8495, 164, 578, "Output",ExpressionUUID->"0cf8b191-7f25-48e1-bcb6-482a4f311e53"],
Cell[CellGroupData[{
Cell[684225, 13089, 143, 2, 21, "Print",ExpressionUUID->"274cd6e3-e834-4362-8f11-a58af2643c39"],
Cell[684371, 13093, 141, 2, 21, "Print",ExpressionUUID->"68452bb0-7661-4618-8abc-a63d4f21766b"],
Cell[684515, 13097, 141, 2, 21, "Print",ExpressionUUID->"aff1e1cf-075a-4f24-8aaf-ee7a8984916c"],
Cell[684659, 13101, 141, 2, 21, "Print",ExpressionUUID->"c498e9a2-e074-4970-a0d6-118b89faf258"]
}, Open  ]]
}, Open  ]],
Cell[684827, 13107, 7148, 170, 332, "Code",ExpressionUUID->"974ffde9-b169-46f3-a1ad-6a3e27e09793"]
}, Open  ]]
}
]
*)

