(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    471564,       9157]
NotebookOptionsPosition[    447417,       8676]
NotebookOutlinePosition[    466102,       9092]
CellTagsIndexPosition[    466059,       9089]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["", "CodeText",ExpressionUUID->"ec0c784a-ce9d-4c5a-b232-cf84abfadbcd"],

Cell[BoxData[{
 RowBox[{"Ideas", ":", "\n", 
  RowBox[{"-", " ", 
   RowBox[{"ListPlot3D", "[", "]"}]}], " ", ":", " ", 
  RowBox[{"plot", " ", "height", " ", "function"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"-", " ", "try"}], " ", "colours", " ", "\"\<Tomato\>\""}], ",", 
  " ", "\"\<Gold\>\"", ",", " ", "\"\<LawnGreen\>\"", ",", " ", 
  "\"\<SteelBlue\>\""}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"-", " ", 
    RowBox[{"Image3D", "[", "]"}]}], " ", "with", " ", 
   RowBox[{"Image3DSlices", "[", "]"}]}], ":", " ", 
  RowBox[{"prints", " ", "all", " ", "slices"}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"ListDensityPlot", "[", "]"}]}], ":", " ", 
  RowBox[{
  "useful", " ", "if", " ", "we", " ", "want", " ", "to", " ", 
   "blur"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"-", " ", 
    RowBox[{"ListContourPlot", "[", "]"}]}], ":", " ", 
   RowBox[{"gives", " ", "contours"}]}], " "}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"ListVectorPlot", "[", "]"}]}], ",", " ", 
  RowBox[{"ListVectorPlot3D", "[", "]"}], ",", " ", 
  RowBox[{"ListStreamPlot", "[", "]"}], ",", " ", 
  RowBox[{"ListStreamPlot3D", "[", "]"}], ",", " ", 
  RowBox[{
   RowBox[{"ListSliceVectorPlot3D", "[", "]"}], ":", " ", 
   RowBox[{"for", " ", 
    RowBox[{"flows", "?", " ", 
     RowBox[{"(", 
      RowBox[{
      "look", " ", "at", " ", "density", " ", "functions", " ", "also"}], 
      ")"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"ArrayPlot3D", "[", "]"}]}], ",", " ", 
  RowBox[{"Raster3D", "[", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"Graphics3D", "[", "]"}]}], ":", " ", 
  RowBox[{
  "example", " ", "on", " ", "website", " ", "tells", " ", "you", " ", "how", 
   " ", "to", " ", "space", " ", "your", " ", "cell"}]}], "\n", 
 RowBox[{
  RowBox[{"-", " ", 
   RowBox[{"RegionPlot3D", "[", "]"}]}], ":", " ", 
  RowBox[{
  "shows", " ", "only", " ", "region", " ", "for", " ", "which", " ", "pred", 
   " ", "is", " ", "True"}]}]}], "Code",
 CellChangeTimes->{{3.8961935040712976`*^9, 3.8961935381558247`*^9}, {
  3.896194936842407*^9, 3.896194938170011*^9}, {3.8961976953367853`*^9, 
  3.8961977638117313`*^9}, {3.896198335144771*^9, 3.896198366856309*^9}, {
  3.8961986608628683`*^9, 3.896198674854718*^9}, {3.896198716270617*^9, 
  3.896198716661545*^9}, {3.896198782094411*^9, 3.896198791070257*^9}, {
  3.8961989110295343`*^9, 3.8961989204212313`*^9}, {3.896198964157205*^9, 
  3.896198979236967*^9}, {3.89619921442766*^9, 3.896199283091106*^9}, {
  3.896199362138769*^9, 3.896199418306302*^9}, {3.896328007182756*^9, 
  3.8963280077184763`*^9}},ExpressionUUID->"f15ecd80-bfeb-4108-81fd-\
9197722539ae"],

Cell["\<\
Ideas for visualisation:
- layers with slider. all three dimensions. either together or separately. \
maybe make both for safety
- translucent cells?\
\>", "Text",
 CellChangeTimes->{{3.912187496858489*^9, 3.9121875178478317`*^9}, {
  3.912187612260333*^9, 
  3.912187642990597*^9}},ExpressionUUID->"7def9534-b5ec-46ec-afcf-\
1dbb61179113"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<DarkMode\>\"", "]"}], "[", 
  "]"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"5bd8729e-1b5d-4b5f-b063-cb7f0991f434"],

Cell["Output Locations", "Text",
 CellChangeTimes->{{3.9120763950365133`*^9, 
  3.9120763988073053`*^9}},ExpressionUUID->"8a942dd6-5ed6-43b7-bf58-\
29d355d7d106"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"currDir", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"logDir", " ", "=", " ", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"currDir", ",", " ", "\"\<3D output files/\>\""}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.912076419771578*^9, 3.9120764205557737`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"25294259-c6c3-46b8-9874-58800bbfe360"],

Cell["\<\
Colour Templates
(uncomment displaySwatches[] to pick a colour!)\
\>", "Text",
 CellChangeTimes->{
  3.9120763846005793`*^9},ExpressionUUID->"137fda44-2f58-466e-b9cf-\
77f14954051f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rybColourRules", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "->", "Red"}], ",", 
     RowBox[{"1", "->", "Yellow"}], ",", 
     RowBox[{"2", "->", "Blue"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rybDarkColourRules", " ", "=", " ", "\"\<DarkRainbow\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"fancyColourRules", " ", "=", " ", "\"\<CandyColors\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"blueColourRules", " ", "=", " ", "\"\<DeepSeaColors\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"pinkColourRules", " ", "=", " ", "\"\<ValentineTones\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"orangeColourRules", " ", "=", " ", "\"\<SolarColors\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tigerColourRules", " ", "=", " ", "\"\<SunsetColors\>\""}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaySwatch", "[", "colourFunction_", "]"}], " ", ":=", " ", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"generateMaxHeightGrid", "[", "21", "]"}], ",", "3"}], "]"}], 
     ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "colourFunction"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaySwatches", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gradients", " ", "=", " ", 
        RowBox[{"ColorData", "[", "\"\<Gradients\>\"", "]"}]}], ",", " ", 
       RowBox[{"len", " ", "=", " ", 
        RowBox[{"Length", "[", 
         RowBox[{"ColorData", "[", "\"\<Gradients\>\"", "]"}], "]"}]}], ",", 
       " ", 
       RowBox[{"swatches", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", " ", 
       RowBox[{"i", " ", "=", " ", "0"}]}], "}"}], ",", " ", "\n", "\t", 
     RowBox[{"Grid", "[", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{"Nest", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", " ", 
             RowBox[{"displaySwatch", "[", 
              RowBox[{"gradients", "[", 
               RowBox[{"[", 
                RowBox[{"i", "++"}], "]"}], "]"}], "]"}]}], "]"}], " ", "&"}],
           ",", " ", "swatches", ",", " ", 
          RowBox[{"len", " ", "+", " ", "1"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Ceiling", "[", 
           RowBox[{"len", " ", "/", " ", "6"}], "]"}], ",", "6"}], "}"}]}], 
       "]"}], "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"displaySwatches", "[", "]"}], "*)"}]}]}], "Code",
 CellLabel->"In[3]:=",ExpressionUUID->"27a3c9a8-323b-4c69-ac0d-666ac9c09b77"],

Cell["\<\
The following codeblock contains functions that will be evaluated either at \
the beginning or at the end of the simulation. They generate min/max height \
grids, and go between 3-coloured grids to height grids.\
\>", "Text",
 CellChangeTimes->{
  3.9120770127480183`*^9},ExpressionUUID->"ba87411f-0479-4ab8-9fa6-\
a40adbcfb0e3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"initialFaceGrid2D", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", " ", "+", " ", "j"}], " ", "<=", " ", 
       RowBox[{"n", " ", "-", " ", "1"}]}], ",", " ", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"i", " ", "+", " ", "j"}], ",", " ", "n"}], "]"}], ",", " ", 
      RowBox[{"n", " ", "-", " ", "2", " ", "-", " ", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"i", " ", "+", " ", "j"}], ",", " ", "n"}], "]"}]}]}], "]"}],
     ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "0", ",", " ", 
      RowBox[{"n", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"j", ",", " ", "0", ",", " ", 
      RowBox[{"n", " ", "-", " ", "1"}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"initialCubeBorder", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cube", " ", "=", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"n", ",", " ", "n", ",", " ", "n"}], "}"}]}], "]"}]}], ",",
        " ", "\n", "\t", 
       RowBox[{"top", " ", "=", " ", 
        RowBox[{"initialFaceGrid2D", "[", "n", "]"}]}], ",", "\n", "\t", 
       RowBox[{"bottom", " ", "=", " ", 
        RowBox[{"Reverse", "[", 
         RowBox[{
          RowBox[{"initialFaceGrid2D", "[", "n", "]"}], ",", " ", 
          RowBox[{"{", "1", "}"}]}], "]"}]}]}], "}"}], ",", " ", "\n", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "top"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "bottom"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "1", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "top"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "n", ",", " ", "All"}], "]"}], "]"}], " ", 
       "=", " ", "bottom"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "All", ",", " ", "1"}], "]"}], "]"}], " ", 
       "=", " ", "top"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"cube", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "All", ",", " ", "n"}], "]"}], "]"}], " ", 
       "=", " ", "bottom"}], ";", "\n", " ", "cube"}]}], "\n", " ", "]"}]}], 
  "\n", " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayCube", "[", 
    RowBox[{"n_", ",", " ", "cube_"}], "]"}], " ", ":=", " ", 
   RowBox[{"ArrayPlot3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"cube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"n", " ", "+", " ", "1"}], ")"}]}], ",", " ", 
     RowBox[{"ColorFunction", " ", "->", " ", "\"\<CandyColors\>\""}]}], 
    "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Generate", " ", 
     RowBox[{"the", " ", "'"}], 
     RowBox[{"empty", "'"}], " ", "grid", " ", "with", " ", "only", " ", 
     "the", " ", "boundary", " ", "cells", " ", "filled", " ", 
     RowBox[{"in", ".", " ", "Internal"}], " ", "cells", " ", "carry", " ", 
     "the", " ", "value"}], " ", "-", "1."}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"initialGridBorder", "[", "dim_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"initialGridBorder", "[", "dim", "]"}], " ", "=", " ", "\n", "\t", 
    RowBox[{"Normal", "[", 
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i_", ",", " ", "j_"}], "}"}], " ", "/;", " ", 
           RowBox[{
            RowBox[{"i", " ", "==", " ", "1"}], " ", "||", " ", 
            RowBox[{"j", " ", "==", " ", "1"}]}]}], " ", "->", " ", 
          RowBox[{"i", " ", "+", " ", "j", " ", "-", " ", "2"}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i_", ",", " ", "j_"}], "}"}], " ", "/;", " ", 
           RowBox[{
            RowBox[{"i", " ", "==", " ", "dim"}], " ", "||", " ", 
            RowBox[{"j", " ", "==", " ", "dim"}]}]}], " ", "->", " ", 
          RowBox[{
           RowBox[{"2", "dim"}], " ", "-", " ", "i", " ", "-", " ", "j"}]}]}],
         "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"dim", ",", " ", "dim"}], "}"}], ",", " ", 
       RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Helper", " ", "function", " ", "for", " ", 
    RowBox[{"generateMaxHeightGrid", ".", " ", "Fills"}], " ", "one", " ", 
    "concentric", " ", "square", " ", "of", " ", 
    RowBox[{"cells", "."}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fillConcentricSquareMax", "[", 
    RowBox[{
     RowBox[{"Hold", "[", "grid_", "]"}], ",", " ", "k_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"(", "\n", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{"k", ",", " ", 
         RowBox[{"k", " ", ";;", " ", 
          RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"k", " ", "-", " ", "1"}], ",", " ", 
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "+", " ", "1"}]}], ";", 
     " ", "\n", " ", 
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", "k"}], ",", " ", 
         RowBox[{"k", " ", ";;", " ", 
          RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"k", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "+", " ", "1"}]}], ";", 
     "\n", " ", 
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"k", " ", ";;", " ", 
          RowBox[{"-", "k"}]}], ",", " ", "k"}], "]"}], "]"}], " ", "=", " ", 
      
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}], ",", " ", 
          RowBox[{"k", " ", "-", " ", "1"}]}], "]"}], "]"}], " ", "+", " ", 
       "1"}]}], ";", " ", "\n", " ", 
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"k", " ", ";;", " ", 
          RowBox[{"-", "k"}]}], ",", " ", 
         RowBox[{"-", "k"}]}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}], ",", " ", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"k", " ", "-", " ", "1"}], ")"}]}]}], "]"}], "]"}], " ", 
       "+", " ", "1"}]}], ";", " ", "\n", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", "grid", "]"}], "]"}]}], ")"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Helper", " ", "function", " ", "for", " ", 
    RowBox[{"generateMinHeightGrid", ".", " ", "Fills"}], " ", "one", " ", 
    "concentric", " ", "square", " ", "of", " ", 
    RowBox[{"cells", "."}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fillConcentricSquareMin", "[", 
    RowBox[{
     RowBox[{"Hold", "[", "grid_", "]"}], ",", " ", "k_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"(", "\n", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{"k", ",", " ", 
         RowBox[{"k", " ", ";;", " ", 
          RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"k", " ", "-", " ", "1"}], ",", " ", 
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "-", " ", "1"}]}], ";", 
     " ", "\n", " ", 
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", "k"}], ",", " ", 
         RowBox[{"k", " ", ";;", " ", 
          RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"k", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "-", " ", "1"}]}], ";", 
     "\n", " ", 
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"k", " ", ";;", " ", 
          RowBox[{"-", "k"}]}], ",", " ", "k"}], "]"}], "]"}], " ", "=", " ", 
      
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}], ",", " ", 
          RowBox[{"k", " ", "-", " ", "1"}]}], "]"}], "]"}], " ", "-", " ", 
       "1"}]}], ";", " ", "\n", " ", 
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"k", " ", ";;", " ", 
          RowBox[{"-", "k"}]}], ",", " ", 
         RowBox[{"-", "k"}]}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}], ",", " ", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"k", " ", "-", " ", "1"}], ")"}]}]}], "]"}], "]"}], " ", 
       "-", " ", "1"}]}], ";", " ", "\n", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", "grid", "]"}], "]"}]}], ")"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Generates", " ", "the", " ", "grid", " ", "with", " ", "maximum", " ", 
     "height", " ", "by", " ", "starting", " ", "from", " ", "the", " ", 
     "boundary", " ", "and", " ", "moving", " ", "inwards"}], ",", " ", 
    RowBox[{"filling", " ", "in", " ", "concentric", " ", 
     RowBox[{"squares", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"generateMaxHeightGrid", "[", "dim_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"generateMaxHeightGrid", "[", "dim", "]"}], " ", "=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"depth", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dim", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
          "2"}]}]}], "}"}], ",", "\n", " ", 
      RowBox[{
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"k", "++"}], ";", " ", 
            RowBox[{"currGrid", " ", "=", " ", "#"}], ";", " ", 
            RowBox[{"fillConcentricSquareMax", "[", 
             RowBox[{
              RowBox[{"Hold", "[", "currGrid", "]"}], ",", " ", "k"}], "]"}], 
            ";", " ", 
            RowBox[{"initialGrid", " ", "=", " ", "currGrid"}]}], " ", ")"}], 
          " ", "&"}], ",", " ", 
         RowBox[{"initialGrid", " ", "=", " ", 
          RowBox[{"initialGridBorder", "[", "dim", "]"}]}], ",", " ", 
         RowBox[{"depth", " ", "-", " ", "1"}]}], "]"}], ";", "\n", " ", 
       RowBox[{"Normal", "[", "initialGrid", "]"}]}]}], "\n", "]"}]}]}], "\n",
   "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Generates", " ", "the", " ", "grid", " ", "with", " ", "minimum", " ", 
     "height", " ", "by", " ", "starting", " ", "from", " ", "the", " ", 
     "boundary", " ", "and", " ", "moving", " ", "inwards"}], ",", " ", 
    RowBox[{"filling", " ", "in", " ", "concentric", " ", 
     RowBox[{"squares", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"generateMinHeightGrid", "[", "dim_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"generateMinHeightGrid", "[", "dim", "]"}], " ", "=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"depth", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dim", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
          "2"}]}]}], "}"}], ",", "\n", " ", 
      RowBox[{
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"k", "++"}], ";", " ", 
            RowBox[{"currGrid", " ", "=", " ", "#"}], ";", " ", 
            RowBox[{"fillConcentricSquareMin", "[", 
             RowBox[{
              RowBox[{"Hold", "[", "currGrid", "]"}], ",", " ", "k"}], "]"}], 
            ";", " ", 
            RowBox[{"initialGrid", " ", "=", " ", "currGrid"}]}], " ", ")"}], 
          " ", "&"}], ",", " ", 
         RowBox[{"initialGrid", " ", "=", " ", 
          RowBox[{"initialGridBorder", "[", "dim", "]"}]}], ",", " ", 
         RowBox[{"depth", " ", "-", " ", "1"}]}], "]"}], ";", "\n", " ", 
       RowBox[{"Normal", "[", "initialGrid", "]"}]}]}], "\n", "]"}]}]}], "\n",
   "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Takes", " ", "a", " ", "grid", " ", "with", " ", "a", " ", "filled", " ",
      "in", " ", "height", " ", "function", " ", "as", " ", "input", " ", 
     "and", " ", "converts", " ", "it", " ", "to", " ", "its", " ", 
     "corresponding", " ", "3"}], "-", 
    RowBox[{"colouring", " ", 
     RowBox[{"form", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"to3Colouring", "[", "grid_", "]"}], " ", ":=", " ", 
   RowBox[{"Mod", "[", 
    RowBox[{"grid", ",", " ", "3"}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Helper", " ", "function", " ", "for", " ", "toHeightFunction"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"findListHeight", "[", 
    RowBox[{"first_", ",", " ", "list_", ",", " ", "len_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"initialList", " ", "=", " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", " ", 
          RowBox[{"{", "len", "}"}], ",", " ", 
          RowBox[{"-", "1"}]}], "]"}]}], ",", " ", 
       RowBox[{"k", " ", "=", " ", "0"}], ",", " ", 
       RowBox[{"prev", " ", "=", " ", "first"}]}], "}"}], ",", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "remember", " ", "that", " ", "list", " ", "is", " ", "of", " ", 
       "length", " ", 
       RowBox[{"(", 
        RowBox[{"len", " ", "+", " ", "1"}], ")"}]}], " ", "*)"}], "\n", " ", 
     
     RowBox[{"Nest", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k", "++"}], ";", " ", 
          RowBox[{"newList", " ", "=", " ", "#"}], ";", " ", 
          RowBox[{"prev", " ", "=", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"list", "[", 
                RowBox[{"[", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", " ", 
                   RowBox[{"k", " ", "+", " ", "1"}]}], "}"}], "]"}], "]"}], 
               ",", " ", "1"}], "]"}], ",", " ", 
             RowBox[{"prev", " ", "+", " ", 
              RowBox[{"list", "[", 
               RowBox[{"[", 
                RowBox[{"k", " ", "+", " ", "1"}], "]"}], "]"}], " ", "-", 
              " ", 
              RowBox[{"list", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ",", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"list", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], " ", "==", " ", "2"}], ",", 
               " ", 
               RowBox[{"prev", " ", "+", " ", "1"}], ",", " ", 
               RowBox[{"prev", " ", "-", " ", "1"}]}], "]"}]}], "]"}]}], ";", 
          " ", 
          RowBox[{
           RowBox[{"newList", "[", 
            RowBox[{"[", "k", "]"}], "]"}], " ", "=", " ", "prev"}], ";", " ",
           "newList"}], " ", ")"}], " ", "&"}], " ", ",", " ", 
       RowBox[{"Normal", "[", "initialList", "]"}], ",", " ", "len"}], 
      "]"}]}], "\n", "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Takes", " ", "a", " ", "3"}], "-", 
    RowBox[{
    "coloured", " ", "grid", " ", "as", " ", "input", " ", "and", " ", 
     "returns", " ", "the", " ", "corresponding", " ", "grid", " ", 
     "labelled", " ", "with", " ", "its", " ", "height", " ", 
     RowBox[{"values", "."}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Edit", ":", " ", 
     RowBox[{
      RowBox[{
      "we", " ", "now", " ", "convert", " ", "our", " ", "grid", " ", "to", 
       " ", "a", " ", "3"}], "-", 
      RowBox[{"coloured", " ", "grid", " ", "before", " ", "computing"}]}]}], 
    ",", " ", 
    RowBox[{
    "so", " ", "it", " ", "gives", " ", "the", " ", "correct", " ", "output", 
     " ", "on", " ", "every", " ", 
     RowBox[{"grid", "!"}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Note", ":", " ", 
    RowBox[{
    "this", " ", "starts", " ", "with", " ", "the", " ", "initial", " ", 
     "border", " ", "grid"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toHeightFunction", "[", "grid_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"Length", "[", "grid", "]"}]}], ",", " ", 
       RowBox[{"heightGrid", " ", "=", " ", 
        RowBox[{"initialGridBorder", "[", 
         RowBox[{"Length", "[", "grid", "]"}], "]"}]}], ",", " ", 
       RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
       RowBox[{"cgrid", " ", "=", " ", 
        RowBox[{"to3Colouring", "[", "grid", "]"}]}]}], "}"}], ",", "\n", 
     "  ", 
     RowBox[{"Nest", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k", "++"}], ";", " ", 
          RowBox[{"nextHeightGrid", " ", "=", " ", "#"}], ";", " ", 
          RowBox[{
           RowBox[{"nextHeightGrid", "[", 
            RowBox[{"[", 
             RowBox[{"k", ",", " ", 
              RowBox[{"2", " ", ";;", " ", 
               RowBox[{"-", "2"}]}]}], "]"}], "]"}], " ", "=", " ", 
           RowBox[{"findListHeight", "[", 
            RowBox[{
             RowBox[{"heightGrid", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
             RowBox[{"Normal", "[", 
              RowBox[{"cgrid", "[", 
               RowBox[{"[", 
                RowBox[{"k", ",", " ", 
                 RowBox[{"1", " ", ";;", " ", 
                  RowBox[{"-", "2"}]}]}], "]"}], "]"}], "]"}], ",", " ", 
             RowBox[{"dim", " ", "-", " ", "2"}]}], "]"}]}], ";", " ", 
          "nextHeightGrid"}], ")"}], " ", "&"}], ",", " ", "heightGrid", ",", 
       " ", 
       RowBox[{"dim", " ", "-", " ", "2"}]}], "]"}]}], " ", "\n", "]"}]}], 
  " ", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculates", " ", "the", " ", "sum", " ", "of", " ", "absolute", " ", 
    "differences", " ", "between", " ", "the", " ", "heights", " ", "of", " ",
     "corresponding", " ", "sites", " ", "in", " ", "the", " ", "input", " ", 
    "grids"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkHeightDifference", "[", 
    RowBox[{"grid1_", ",", " ", "grid2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"grid1", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], " ", "-", " ", 
         RowBox[{"grid2", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", " ", "j"}], "]"}], "]"}]}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "2", ",", " ", 
         RowBox[{"dim", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", "2", ",", " ", 
         RowBox[{"dim", " ", "-", " ", "1"}]}], "}"}]}], "]"}], ",", " ", 
     "2"}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Format", " ", "time"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayTime", "[", "time_", "]"}], " ", ":=", " ", 
   RowBox[{"DateString", "[", 
    RowBox[{"time", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Hour\>\"", ",", " ", "\"\<:\>\"", ",", " ", "\"\<Minute\>\"", ",", 
       " ", "\"\<:\>\"", ",", " ", "\"\<Second\>\""}], "}"}]}], "]"}]}], "\n",
   "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**"}], "*", " ", "Display", " ", "Functions"}], " ", 
   "******)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Displays", " ", "height", " ", "grid", " ", "matrix", " ", "in", " ", 
    "array", " ", "form"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"OPTIMISATION", ":", " ", 
    RowBox[{
    "check", " ", "if", " ", "you", " ", "need", " ", "to", " ", "perform", 
     " ", 
     RowBox[{"toHeightFunction", "!"}], " ", "maybe", " ", "check", " ", 
     "max", " ", "value", " ", "in", " ", 
     RowBox[{"grid", "?"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayHeightGrid", "[", "grid_", "]"}], " ", ":=", " ", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{"grid", ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Displays", " ", "height", " ", "grid", " ", "matrices", " ", "in", " ", 
    "array", " ", "form"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayHeightGrids", "[", 
    RowBox[{"grid1_", ",", " ", "grid2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"displayHeightGrid", "[", "grid1", "]"}], ",", " ", 
       RowBox[{"displayHeightGrid", "[", "grid2", "]"}]}], "}"}], "}"}], 
    "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Displays", " ", "height", " ", "grid", " ", "matrix", " ", "in", " ", 
    "array", " ", "form"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"OPTIMISATION", ":", " ", 
    RowBox[{
    "check", " ", "if", " ", "you", " ", "need", " ", "to", " ", "perform", 
     " ", 
     RowBox[{"to3Coloring", "!"}], " ", "maybe", " ", "check", " ", "max", 
     " ", "value", " ", "in", " ", 
     RowBox[{"grid", "?"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayColouringGrid", "[", 
    RowBox[{"grid_", ",", " ", "colourFunction_"}], "]"}], " ", ":=", " ", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"to3Colouring", "[", "grid", "]"}], ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "colourFunction"}]}], "]"}]}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Displays", " ", "height", " ", "grid", " ", "matrices", " ", "in", " ", 
    "array", " ", "form"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayColouringGrids", "[", 
    RowBox[{"grid1_", ",", " ", "grid2_", ",", " ", "colourFunction_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"displayColouringGrid", "[", 
        RowBox[{"grid1", ",", " ", "colourFunction"}], "]"}], ",", " ", 
       RowBox[{"displayColouringGrid", "[", 
        RowBox[{"grid2", ",", " ", "colourFunction"}], "]"}]}], "}"}], "}"}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayHeightPlot", "[", "grid_", "]"}], " ", ":=", " ", 
   RowBox[{"ListPlot3D", "[", "grid", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayHeightPlots", "[", 
    RowBox[{"grid1_", ",", " ", "grid2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"displayHeightPlot", "[", "grid1", "]"}], ",", " ", 
       RowBox[{"displayHeightPlot", "[", "grid2", "]"}]}], "}"}], "}"}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displayGrid", "[", 
    RowBox[{"grid_", ",", " ", "colourFunction_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"displayHeightGrid", "[", "grid", "]"}], "}"}], ",", " ", "\n",
       "\t\t\t\t\t\t\t\t\t\t\t\t\t  ", 
      RowBox[{"{", 
       RowBox[{"displayColouringGrid", "[", 
        RowBox[{"grid", ",", " ", "colourFunction"}], "]"}], "}"}], ",", "\n",
       "\t\t\t\t\t\t\t\t\t\t\t\t\t  ", 
      RowBox[{"{", 
       RowBox[{"displayHeightPlot", "[", "grid", "]"}], "}"}]}], "}"}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displayGrids", "[", 
   RowBox[{"grid1_", ",", " ", "grid2_", ",", " ", "colourFunction_"}], "]"}],
   " ", ":=", " ", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"displayHeightGrids", "[", 
       RowBox[{"grid1", ",", " ", "grid2"}], "]"}], "}"}], ",", " ", "\n", 
     "\t\t\t\t\t\t\t\t\t\t\t\t\t  ", 
     RowBox[{"{", 
      RowBox[{"displayColouringGrids", "[", 
       RowBox[{"grid1", ",", " ", "grid2", ",", " ", "colourFunction"}], 
       "]"}], "}"}], ",", "\n", "\t\t\t\t\t\t\t\t\t\t\t\t\t  ", 
     RowBox[{"{", 
      RowBox[{"displayHeightPlots", "[", 
       RowBox[{"grid1", ",", " ", "grid2"}], "]"}], "}"}]}], "}"}], 
   "]"}]}], "\n", 
 RowBox[{"\t\t\t\t\t\t"}]}], "Code",
 CellChangeTimes->{{3.9120775054307423`*^9, 3.9120775067779837`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"fcac06f5-8334-4b9b-ad54-5a70c0e8fdd2"],

Cell[BoxData[""], "Code",
 CellChangeTimes->{{3.8963280107611856`*^9, 3.896328011942237*^9}, {
   3.8963281666755342`*^9, 3.896328170061144*^9}, {3.896328218583344*^9, 
   3.89632833724439*^9}, {3.896328387479247*^9, 3.896328436099647*^9}, {
   3.8963290310964127`*^9, 3.896329041000531*^9}, {3.896329115824822*^9, 
   3.8963292109685287`*^9}, {3.896329255609343*^9, 3.896329285280219*^9}, {
   3.896329968277679*^9, 3.8963301563183823`*^9}, {3.896330446084741*^9, 
   3.8963305147864017`*^9}, {3.896330615627178*^9, 3.896330634843149*^9}, {
   3.896330727226912*^9, 3.896330728762649*^9}, {3.896330777043009*^9, 
   3.8963307794743347`*^9}, {3.896331457951667*^9, 3.8963314604950733`*^9}, {
   3.896332224130781*^9, 3.8963322258267736`*^9}, {3.896338186344421*^9, 
   3.89633818685597*^9}, 3.896373042453947*^9, 3.896373101768344*^9, {
   3.8963731412338057`*^9, 3.896373146424266*^9}, 3.896373207273748*^9, {
   3.896408637507595*^9, 3.896408648659946*^9}, 
   3.912077501541276*^9},ExpressionUUID->"1560c7ad-163e-474d-83be-\
5104f0dbe0a7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"displayCube", "[", 
  RowBox[{"7", ",", " ", 
   RowBox[{"initialCubeBorder", "[", "7", "]"}]}], "]"}], "\n", 
 RowBox[{" ", 
  RowBox[{"i", " ", "=", " ", "1"}]}], "\n", 
 RowBox[{"displayCube", "[", 
  RowBox[{"7", ",", " ", 
   RowBox[{"maxCube", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"i", ";;", " ", 
       RowBox[{"-", "i"}]}], ",", " ", 
      RowBox[{"i", " ", ";;", " ", 
       RowBox[{"-", "i"}]}], ",", " ", 
      RowBox[{"i", " ", ";;", " ", 
       RowBox[{"-", "i"}]}]}], "]"}], "]"}]}], "]"}], "\n", 
 RowBox[{"displayCube", "[", 
  RowBox[{"7", ",", " ", 
   RowBox[{"minCube", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"i", ";;", " ", 
       RowBox[{"-", "i"}]}], ",", " ", 
      RowBox[{"i", " ", ";;", " ", 
       RowBox[{"-", "i"}]}], ",", " ", 
      RowBox[{"i", " ", ";;", " ", 
       RowBox[{"-", "i"}]}]}], "]"}], "]"}]}], "]"}], "\n", 
 RowBox[{" ", 
  RowBox[{"i", " ", "=", " ", "2"}]}], "\n", 
 RowBox[{"displayCube", "[", 
  RowBox[{"7", ",", " ", 
   RowBox[{"maxCube", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"i", ";;", " ", 
       RowBox[{"-", "i"}]}], ",", " ", 
      RowBox[{"i", " ", ";;", " ", 
       RowBox[{"-", "i"}]}], ",", " ", 
      RowBox[{"i", " ", ";;", " ", 
       RowBox[{"-", "i"}]}]}], "]"}], "]"}]}], "]"}], "\n", 
 RowBox[{"displayCube", "[", 
  RowBox[{"7", ",", " ", 
   RowBox[{"minCube", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"i", ";;", " ", 
       RowBox[{"-", "i"}]}], ",", " ", 
      RowBox[{"i", " ", ";;", " ", 
       RowBox[{"-", "i"}]}], ",", " ", 
      RowBox[{"i", " ", ";;", " ", 
       RowBox[{"-", "i"}]}]}], "]"}], "]"}]}], "]"}], "\n", 
 RowBox[{" ", 
  RowBox[{"i", " ", "=", " ", "3"}]}], "\n", 
 RowBox[{"displayCube", "[", 
  RowBox[{"7", ",", " ", 
   RowBox[{"maxCube", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"i", ";;", " ", 
       RowBox[{"-", "i"}]}], ",", " ", 
      RowBox[{"i", " ", ";;", " ", 
       RowBox[{"-", "i"}]}], ",", " ", 
      RowBox[{"i", " ", ";;", " ", 
       RowBox[{"-", "i"}]}]}], "]"}], "]"}]}], "]"}], "\n", 
 RowBox[{"displayCube", "[", 
  RowBox[{"7", ",", " ", 
   RowBox[{"minCube", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"i", ";;", " ", 
       RowBox[{"-", "i"}]}], ",", " ", 
      RowBox[{"i", " ", ";;", " ", 
       RowBox[{"-", "i"}]}], ",", " ", 
      RowBox[{"i", " ", ";;", " ", 
       RowBox[{"-", "i"}]}]}], "]"}], "]"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.896330162070631*^9, 3.896330191659737*^9}, {
  3.896330349660368*^9, 3.89633043341031*^9}, {3.8963304979252243`*^9, 
  3.896330508610751*^9}, {3.8964153763436337`*^9, 3.896415457147052*^9}, {
  3.9121879383775578`*^9, 3.912187966755496*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"d45ce1b6-d0eb-40cc-8f44-5a12f740ee92"],

Cell[BoxData[
 Graphics3DBox[{GeometricTransformation3DBox[{
     {RGBColor[
      0.6033010000000001, 0.22473442857142858`, 0.36270257142857143`], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{0, -7, -7}}, {{
       6, -1, -7}}, {{6, -7, -1}}, {{0, -1, -1}}}]}, 
     {RGBColor[0.7647998571428571, 0.3022755714285714, 0.4413708571428571], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{1, -7, -7}}, {{
       0, -6, -7}}, {{6, -2, -7}}, {{5, -1, -7}}, {{0, -7, -6}}, {{
       6, -1, -6}}, {{6, -7, -2}}, {{0, -1, -2}}, {{5, -7, -1}}, {{
       6, -6, -1}}, {{0, -2, -1}}, {{1, -1, -1}}}]}, 
     {RGBColor[0.8306595714285715, 0.45290014285714286`, 0.5840857142857143], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{2, -7, -7}}, {{
       1, -6, -7}}, {{0, -5, -7}}, {{6, -3, -7}}, {{5, -2, -7}}, {{
       4, -1, -7}}, {{1, -7, -6}}, {{0, -6, -6}}, {{6, -2, -6}}, {{
       5, -1, -6}}, {{0, -7, -5}}, {{6, -1, -5}}, {{6, -7, -3}}, {{
       0, -1, -3}}, {{5, -7, -2}}, {{6, -6, -2}}, {{0, -2, -2}}, {{
       1, -1, -2}}, {{4, -7, -1}}, {{5, -6, -1}}, {{6, -5, -1}}, {{
       0, -3, -1}}, {{1, -2, -1}}, {{2, -1, -1}}}]}, 
     {RGBColor[0.7940618571428572, 0.5946167142857143, 0.7287942857142857], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNkIsJwzAMBZWPs0ehE3WEDtDOXzn2qwRnUEDkcE7Pih7v7+tzmNkzaos6
qJ+krD3Y4fze4UC74atwCx7wGTzhzFTJzLeT0+GLXqdX8Ibf8R2+yO/cq+Kk
f+MsNpx1vrjhDM4dNvIHMwg+8Sd+h435J/8oeO1T9Drc6FXZp8o+xb0D3plH
ZZ/5/AEvYiBh
       "]]}, 
     {RGBColor[0.7161124285714285, 0.7039788571428571, 0.8368194285714285], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNkVEOwjAMQ1NWdg9uwFk4AgeA89O1MY1kS/6I9hY5XuY83t/X54iI5662
q7jv+gGoqvdBvm2+yKdxzU3y3XhjLHI3Ls80T1i/noOzk3waH9QPzpb+okYc
3E39ZX2Qu3Hj7OT+4uC/T/oM66f1xY2e8oHpy3Pxu2JluCyrZZlII1Y+afmk
5ZOWT1o+sDvC8gH3EeuOsDuCPot8GuuO8iHiD6++f+k=
       "]]}, 
     {RGBColor[0.6765432857142857, 0.8166457142857143, 0.9024562857142857], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxd0oEJwyAUhGGTNO7RPTpFR+gA7fyN+l4V7uCnAcmH+I4TvL8+z/dRSnnM
tc21fM71zcy1btOXXOF1rsknvE93zNore2DWniyB2cD5RM76X+pAN7ko0055
hw/NNnW2fa+m2Y79jv2Q3a0p096V2dG5a7bJFXZn79vu7Bx7U+bAXYZyLrjL
9c+B2ZRPuCgzcJdA/0DPQDfv2+6Z6JbKtDdlJt6Sz3T5BvvNpDoPnAm5wr7X
+n7srN9x
       "]]}, 
     {RGBColor[0.659388, 0.872053, 0.882048], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNkMERwyAMBIWJ6cMpySW4gKT+IOAizeyDh4Z9LHeC6/nen2pm75gSk9xi
fpJyzuAOv4IdTm/AR/CEM2PBgaYtJ8/MamR2nAUX/E5X+o7vsNHl9Aqu+ANn
wG3jij+4m/7Ed7iRP9lBcMFf+B1u7L94ozYnfXG3wwdd2v5QdE34JFPkg/oD
/50QdQ==
       "]]}, 
     {RGBColor[0.405188, 0.204349, 0.343389], Opacity[0], EdgeForm[
      None]}}, {{{1, 0, 0}, {0, -1, 0}, {0, 0, -1}}, {0, 0, 0}}], 
   GeometricTransformation3DBox[GeometricTransformation3DBox[
     {EdgeForm[GrayLevel[0.2]], FaceForm[None, None], 
      CuboidBox[{0, 0, 0}]}, CompressedData["
1:eJxdlott6zAQBEWJUh9pKSWkgKTfdBLxczEBDjiWAeMtDuTluDuP9MfXz+f3
sW3b7+ubXt+hx+cvIsb3eumQHv+Ozzbr45O0ftRvre9Tn+pD/1v9b/Xv6t/n
Xv7uNfszQ9cMzLNrnqR5xvqi2ZpmY86sOZPm5FzM2ac+NT/nKjoXetSbztV0
rq5zcfY+dZIPWT6c8uGa58KTJk/wZ5c/h/zZ5U+SP6NPlVfoU75l+XbIt/3h
W5Fvbeos35J8w2d861PjM2vG+ipvq7yljsbnJp/Jok+Nz00+k0tRLm1q/Ozy
M+ZecjkfuVTlhU7Ka1de+ElP8jqU1/7gGZ0eeaGZn+yaenb1DNWdY1WOaOa8
lbuZJ6+ielOdTLM0PDg78r2V7616Vx1NpvQJrYeHvL2zUcRGmxpPWIPGH9io
YgaNPzADJ+QIG3CSpckxlCOcwMwlTY70Ce2FH/iEGfQhfk7pXfxkabhlL5os
2Nu1PtTH9781dwX+oyMWY2j8534we9wh5EK9qs7dwmxFeRXlVTUz/JRYvBXV
m+poZqYPGs7NEuz5jqqx2LPu2hux3pTQXvjct3dWudOYs2s26mjmDM0Wsd6O
iPV2hFhiDdxmaZiJWG8Ka2D4kuZc1OGZdxCu4PYQq/x/gUOYhCv6mEPeejjh
nYpY75d5436DAfiJWFyZnxqLEzQ5wox54F4iL+4usiYj8uW3BB7yOyq0hkz5
jUReztHZOS9nRC7/GJ3JkA==
     "]], {{{1, 0, 0}, {0, -1, 0}, {0, 0, -1}}, {0, 
     0, 0}}]},
  AxesLabel->{None, None, None},
  DisplayFunction->Identity,
  ImageSize->{303.3962558834435, 318.1342826685052},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"RelieveDPZFighting" -> False},
  PlotRange->{{All, All}, {All, All}, {All, All}},
  Ticks->{{{-0.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}, {{7.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}, {{7.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}},
  ViewPoint->{-0.33151333986457004`, 3.267501270783035, -0.8145761787108069},
  ViewVertical->{-0.17364405458578192`, 0.752767167466671, 
   0.6349719158287356}]], "Output",
 CellChangeTimes->{{3.896330176088093*^9, 3.896330192665531*^9}, {
   3.8963303631655607`*^9, 3.89633038976855*^9}, {3.896330423233328*^9, 
   3.89633043410995*^9}, {3.896330509216579*^9, 3.896330517282062*^9}, {
   3.896330627519936*^9, 3.896330636247086*^9}, 3.89633073077172*^9, 
   3.896330781069508*^9, 3.8963314621825953`*^9, 3.896332227841249*^9, 
   3.8963381893310957`*^9, {3.8963729778830233`*^9, 3.896372986594284*^9}, 
   3.896373047968767*^9, 3.896373149514886*^9, 3.8963732109932213`*^9, {
   3.896406898297853*^9, 3.89640691466749*^9}, 3.896408665498767*^9, 
   3.896415387638708*^9, {3.896415443746346*^9, 3.8964154581666193`*^9}, {
   3.912183312113934*^9, 3.912183321707129*^9}, {3.912187917118978*^9, 
   3.912187967344035*^9}},
 CellLabel->"Out[74]=",ExpressionUUID->"791bd5c9-e908-4552-b8f7-f06531615bc2"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.896330176088093*^9, 3.896330192665531*^9}, {
   3.8963303631655607`*^9, 3.89633038976855*^9}, {3.896330423233328*^9, 
   3.89633043410995*^9}, {3.896330509216579*^9, 3.896330517282062*^9}, {
   3.896330627519936*^9, 3.896330636247086*^9}, 3.89633073077172*^9, 
   3.896330781069508*^9, 3.8963314621825953`*^9, 3.896332227841249*^9, 
   3.8963381893310957`*^9, {3.8963729778830233`*^9, 3.896372986594284*^9}, 
   3.896373047968767*^9, 3.896373149514886*^9, 3.8963732109932213`*^9, {
   3.896406898297853*^9, 3.89640691466749*^9}, 3.896408665498767*^9, 
   3.896415387638708*^9, {3.896415443746346*^9, 3.8964154581666193`*^9}, {
   3.912183312113934*^9, 3.912183321707129*^9}, {3.912187917118978*^9, 
   3.912187967348776*^9}},
 CellLabel->"Out[75]=",ExpressionUUID->"627adbe2-9d6e-4f11-a9b1-f6025d66beaa"],

Cell[BoxData[
 Graphics3DBox[{GeometricTransformation3DBox[{
     {RGBColor[0.405188, 0.204349, 0.343389], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{0, -7, -7}}, {{
       6, -1, -7}}, {{6, -7, -1}}, {{0, -1, -1}}}]}, 
     {RGBColor[0.5612377777777778, 0.2163418888888889, 0.3538672222222222], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{1, -7, -7}}, {{
       0, -6, -7}}, {{6, -2, -7}}, {{5, -1, -7}}, {{0, -7, -6}}, {{
       6, -1, -6}}, {{6, -7, -2}}, {{0, -1, -2}}, {{5, -7, -1}}, {{
       6, -6, -1}}, {{0, -2, -1}}, {{1, -1, -1}}}]}, 
     {RGBColor[0.7035543333333334, 0.2553718888888889, 0.39614955555555553`], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{2, -7, -7}}, {{
       1, -6, -7}}, {{0, -5, -7}}, {{6, -3, -7}}, {{5, -2, -7}}, {{
       4, -1, -7}}, {{1, -7, -6}}, {{0, -6, -6}}, {{6, -2, -6}}, {{
       5, -1, -6}}, {{0, -7, -5}}, {{6, -1, -5}}, {{6, -7, -3}}, {{
       0, -1, -3}}, {{5, -7, -2}}, {{6, -6, -2}}, {{0, -2, -2}}, {{
       1, -1, -2}}, {{4, -7, -1}}, {{5, -6, -1}}, {{6, -5, -1}}, {{
       0, -3, -1}}, {{1, -2, -1}}, {{2, -1, -1}}}]}, 
     {RGBColor[0.7996756666666667, 0.3505163333333333, 0.48605733333333334`], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNkFsKwzAMBJWHc4/+9Tw9Qg/Qnr9y7K0EY1BAZHB2B0eP9/f1OczsGbPF
HMxPUs4e7HB+73Cg3fBVuAUP+AyecDpVnPl2nA4bfsc54IbHcap009PpOnyR
73RVMpm/ySw2Mut8cSMzOHfY8A/uIPgkP+k6fPFfk+6ANzyTnQhe+xdOhxse
lf2r7F84B7zjV9l/Pn8MYUA5
       "]]}, 
     {RGBColor[0.8307981111111111, 0.47072922222222224`, 0.6015457777777778], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNku0NwzAIBe0kzh7do1N0hA7Qzl9/QI10SO8HygWRQ3rh8f6+Pmcp5bmr
7gq+dv3cPSreO3xsHvAtHN9NuAlvLAu+hMNp4nTpx7PT73BlV8c54Vu44e/s
MvjEn87wD75Nruwa+IfMLLjhzBmHL+GKczKfXPBPnF36Jv3kijM9LvPhXOxN
bjiX/Jcl+S+cBmfmOZ+c+Rv+DjecJvmb5G/4F3ywyyT/7Iff5a5cMnf2Judd
udyV41nwLZx3lR7Q//Es33E=
       "]]}, 
     {RGBColor[0.8023332222222223, 0.5809532222222222, 0.7140968888888889], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNk4uJw0AQQzeJ7T7SUrgKroBL/dnPzO2ARF5gycNoZSHk5+/79fdorf3s
c9un+Nznk5l1js1dfIFLN8Qn+L554q65vBfumje2wN2APuFT/10ZzA/l6bo7
oDHflKErp7kpQ5f/gmdAk/BPaCrDkKf5rjwDXQ1lGOKmDNZM+CxoQnyA3clQ
hsR7K8NEV1P6Lj7BTXkmuvLzhecLPgEfszvxexP6yrDQ1ZJ/Fx9g78eaKb7A
3s/CTqwJvCvhmfCsDIGuAvsJdBLKZvZ+AvuxzxJfYO/HPglNwrMyJDpJ7Cex
mczvt2bNFB9gf1OZ3y1ZE+IL7H7q9w+spp6Q
       "]]}, 
     {RGBColor[0.742797, 0.6702466666666667, 0.8056613333333333], Opacity[1], 
      EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNk9ttxEAMA9fPPq6dfF4JV0BSf9a7UlbAEOGH4IFBUbQgvz4/7++jtfa1
altVfK/6zcyqa3GHz8UPXLoB74snXB4BL2xpPvXs+HT4Nj7w7+jFO7PUK96Y
q15xI4N6w/RpPpXnobfDl/FOhoec4o0M0osbGR78p+nDZoX5p72vPIP3HT6N
NzIM289g7oBvY+1H+mn+Yf7igzzSVJ6JT4cP40aGabch/YAvY93JJOc0zzB9
mGeaZ+UJ5nZ4N9Z+wm5JmgGfxrqZsP1IE/BtfJFHGSpP2n7Sbibz/x9Ju4e0
b0z8wfwDj21O9A==
       "]]}, 
     {RGBColor[0.691029, 0.7519288888888889, 0.8711464444444444], Opacity[1], 
      EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNkNENwyAMBSEkg7QjdYQOkOxfY1NbOqT3YXGCx/HE6/t87tFae+f0nOIr
57fWqjmTDa6zCR/JDte9kHytRt7gS/jAY+Q3d5z7rks+ZL/8k32DT+GOc/Lu
lLxLfvPAvzPldzwGD+Hd36W/S2fnXZdMiLP8If1D/jakW+AJ+A8O0BB1
       "]]}, 
     {RGBColor[0.67174, 0.8357454444444444, 0.9064506666666666], Opacity[1], 
      EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{4, -5, -5}}, {{
       3, -4, -5}}, {{2, -3, -5}}, {{3, -5, -4}}, {{2, -4, -4}}, {{
       4, -4, -4}}, {{3, -3, -4}}, {{2, -5, -3}}, {{3, -4, -3}}, {{
       4, -3, -3}}}]}, 
     {RGBColor[0.659388, 0.872053, 0.882048], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{3, -4, -4}}}]}, 
     {RGBColor[0, 0, 0], Opacity[0], EdgeForm[None]}}, {{{1, 0, 0}, {0, -1, 
     0}, {0, 0, -1}}, {0, 0, 0}}], 
   GeometricTransformation3DBox[GeometricTransformation3DBox[
     {EdgeForm[GrayLevel[0.2]], FaceForm[None, None], 
      CuboidBox[{0, 0, 0}]}, CompressedData["
1:eJxd11Fu40YQRVGJorSPbCk/+c8CkvVHYndnCPBAd2yMMQ+NYqnr1X20/cff
//75z+N2u/11v91+/bud+vz6b611fr9+6RV9/n9+3a7z8+ue+vP8nfp56Wf6
6P9O/3f6z/Sf17M+93X1d4eZO7jPlvvcc5+z/pO7jdzNPffc8557mss956Wf
ub+5PpmLPs9H5hqZa2Yus89L3+PDHh+e8eF1zcWTEU/4s8WfR/zZ4s89/px9
jnhFP+PbHt8e8W2Lb/f4xn8ejnjIT/57lp/85+e8NP/VnPVHPD/iuXOa/yP+
29G8NP9H/MekffHf7kZ2Z4/8n/F/XT3t8fljj0f2S9+z3y375b+e9vvIfrcf
/NP3H/ulzWLXIz1neq6c2zuu7NHezYUBGlcYwIO59Gy+aIxh4JOaEU5majCz
R+OtbODnHX7eOZ85pzGjz0o93vZoLOHws74cjvXlEJM8V0/z37sCn7jC57G+
3NK4wipu+e8ct7ha8Rx7NK5WuFpXHwy/onGlz8qzeDYXhulHeH5Gb+F5jzav
Z2k79exM/Uqf/vyieYLVvutonmCetmv8j/ScqVnpv1IjC89oGZQFWh5l4UjN
kT4jNbKzR/PkE058ruzs0XIqF83RZ31z9Mn5yPlIn5k+NE987kq9rD1uv/8s
lrs9Gj9qjvXNGo0feZypmfmslZ4rPeV0i8aPnMrsHo0fuT7SR35f0fjRZ6Vm
pWd/r5PrLRoza32zpkau92iZWuvLkhoZf0Xzx7m840Tu5PqRLJtdTmVWXvSR
U7uWTdpcskmb0bM0BjxLy4tnZ+pX+sipvcsd7R0imzQG1NPyIqcj9TOfNdN/
5VxO7V2OaAzIXXN6rG9Oj9SP1I/0n+lPy4saOfXekKn+nianezR/5I7GiZyO
9Jypn+m50rN/m8jpFs0fufukRk73aMzI8kiNzL6iZcQdZJY/K8ys9c3ICg8r
M671fQ84lwV+vtMHzzjHVTOFJaw+o/mATxonnh2pL7c4NOORe+INe89od1ZP
23uZt2ssPaLdf+T+I3fGz0hN/44oM+WkbJSHvrd5+Ihv2w/f+LBl9j36cfs9
g52xc40f5+f3/+asq+s=
     "]], {{{1, 0, 0}, {0, -1, 0}, {0, 0, -1}}, {0, 0, 
     0}}]},
  AxesLabel->{None, None, None},
  DisplayFunction->Identity,
  ImageSize->{303.3962558834435, 318.1342826685052},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"RelieveDPZFighting" -> False},
  PlotRange->{{All, All}, {All, All}, {All, All}},
  Ticks->{{{-0.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}, {{7.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}, {{7.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}},
  ViewPoint->{-0.33151333986457004`, 3.267501270783035, -0.8145761787108069},
  ViewVertical->{-0.17364405458578192`, 0.752767167466671, 
   0.6349719158287356}]], "Output",
 CellChangeTimes->{{3.896330176088093*^9, 3.896330192665531*^9}, {
   3.8963303631655607`*^9, 3.89633038976855*^9}, {3.896330423233328*^9, 
   3.89633043410995*^9}, {3.896330509216579*^9, 3.896330517282062*^9}, {
   3.896330627519936*^9, 3.896330636247086*^9}, 3.89633073077172*^9, 
   3.896330781069508*^9, 3.8963314621825953`*^9, 3.896332227841249*^9, 
   3.8963381893310957`*^9, {3.8963729778830233`*^9, 3.896372986594284*^9}, 
   3.896373047968767*^9, 3.896373149514886*^9, 3.8963732109932213`*^9, {
   3.896406898297853*^9, 3.89640691466749*^9}, 3.896408665498767*^9, 
   3.896415387638708*^9, {3.896415443746346*^9, 3.8964154581666193`*^9}, {
   3.912183312113934*^9, 3.912183321707129*^9}, {3.912187917118978*^9, 
   3.912187967462188*^9}},
 CellLabel->"Out[76]=",ExpressionUUID->"9a9d5f20-28d9-4071-96be-3d77ab6e8465"],

Cell[BoxData[
 Graphics3DBox[{GeometricTransformation3DBox[{
     {RGBColor[0.405188, 0.204349, 0.343389], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{0, -7, -7}}, {{
       6, -1, -7}}, {{6, -7, -1}}, {{0, -1, -1}}}]}, 
     {RGBColor[
      0.6333770000000001, 0.23392566666666667`, 0.37273666666666666`], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{1, -7, -7}}, {{
       0, -6, -7}}, {{6, -2, -7}}, {{5, -1, -7}}, {{0, -7, -6}}, {{
       1, -6, -6}}, {{5, -2, -6}}, {{6, -1, -6}}, {{6, -7, -2}}, {{
       5, -6, -2}}, {{1, -2, -2}}, {{0, -1, -2}}, {{5, -7, -1}}, {{
       6, -6, -1}}, {{0, -2, -1}}, {{1, -1, -1}}}]}, 
     {RGBColor[0.7996756666666667, 0.3505163333333333, 0.48605733333333334`], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNzsENwjAMRuGkpN2jN+ZhBAaA+bHlGFt6h/9g9VOVvPh+f1+fxxjjWTNr
2kfNLzN7+p/h4nB8lQOf5Y1XOeVuf427hg/xpGl0Ai+axltbzqQ0u++yp9N3
vGi67Ok0U9yd4IzhRSdoBp50gh1S7nZnc9fwJT5pbjqBB83NW1vOpDS7n7Jn
0nc8aKbsmTRh/gEOKUA5
       "]]}, 
     {RGBColor[0.831283, 0.533131, 0.662656], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNk2sOwjAMg7t12z04Dn85AgeA89NHTCPZmpEqPnWu40Tt4/19fWop5bnW
tlbl+gHItS9u5PzeyQvLIF/G5+JJPhYHOT1hnvnfuN/Ihf6NGvFG/0Z/8cFa
jRmmeYZpYD5Zt7NWI+/G6rHTp5tmkA/jyrrdepcmyJfxyTzKkHkGNeKNeQb1
Ys1k0F9cmUeaaZppnmGe4sI8ygDTZJ5Jn0a+jDWfSb1Ys9JZ8cY8OisuzKOz
YXqYT+YJuzNhcwhmE+vOhN2ZYK1J3o11Z7QP28+6sDnA+gXutwDcbwHWL6wv
4H4L+fsDFoxG/g==
       "]]}, 
     {RGBColor[0.742797, 0.6702466666666667, 0.8056613333333333], Opacity[1], 
      EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNktFtwzAQQ+XE8R5dqQPkowO089eSjrEAEn4fgp+FI48+39fP3/fvs7X2
vs52ncX7df4lrbPeT/Pj4m4+wEs3zC/whW2ad/DyLHgK9+t5uv40P93rtH+4
uddpnwFt+ABvzhDPCW3hXrhfebp9wplJd55wc7buDOHMJ9oBbfjhPOk1oS1o
C72EXkL9yjnsH27OOdwrvIMP8Ob8A/OPZ4fPgM+AdkI7oZ3IU/Ap+BTyFDwF
H8FnfeO0Nrz5Wyb+18QOT+xw6gfqwy9w9jm9JuoL9YVeQi+hfuUs/IvCzAsz
L917nvrwDj7AmXlh5qkv1AieK48wK+neZ+neZ2FWwnyke4ele4fjWfAx6gNC
ie4s
       "]]}, 
     {RGBColor[0.680889, 0.7972306666666666, 0.8930633333333333], Opacity[1], 
      EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNk9ttxDAMBHW+k/u4lq6EFJDUHz3IiMAuMgYEz8eIXCzs99fP5/vZWvuc
8zinuJ/zm5l1XoeH+AaXN8UdfB1euGuu2Rt3zQdb4G7AT8yp91AGc1eeIWfC
MT+VYWjXFl/gh/baSTiJObV3aq/Z/Uz0Y2eKmzLYMbsTOyG+wO5hKkPCqQwL
/Sw5Q9yUYaGTpZlL3MHux/7GzBC7E+9NzKwMG11tzRziC/xQHjtLfIO7Mmzt
CjiBXQk/MbMyBLoK7R1i92PH7G8mtHeLb3BXBjsJJ7Gr9iZ6SPSQ6CHz/5+y
s8QvsP+dRD92QnyD3Uk9f6gQjqQ=
       "]]}, 
     {RGBColor[0.659388, 0.872053, 0.882048], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNkMERwyAMBIWJ6cMpySW4gKT+IOAizeyDh4Z9LHeC6/nen2pm75gSk9xi
fpJyzuAOv4IdTm/AR/CEM2PBgaYtJ8/MamR2nAUX/E5X+o7vsNHl9Aqu+ANn
wG3jij+4m/7Ed7iRP9lBcMFf+B1u7L94ozYnfXG3wwdd2v5QdE34JFPkg/oD
/50QdQ==
       "]]}, 
     {RGBColor[0, 0, 0], Opacity[0], EdgeForm[None]}}, {{{1, 0, 0}, {0, -1, 
     0}, {0, 0, -1}}, {0, 0, 0}}], 
   GeometricTransformation3DBox[GeometricTransformation3DBox[
     {EdgeForm[GrayLevel[0.2]], FaceForm[None, None], 
      CuboidBox[{0, 0, 0}]}, CompressedData["
1:eJxdl0uO3DAQQ223W/eYK2WTfQ6QnD/WhxkBetDrNGYQwqBoVRVZPfn69efH
79dxHD/P4/j+OSaen79J5m/5xhGe/87PsZ7Pzyn+fP6IPxZ+Swf9Z519Fn4v
/qP3PnrvWJxn4XPxh+4Dh3uWxefOQ3fm/pfuf+r+k19VS1ct1HWrrlN1Harr
Ej6XJvX2he//ah/iRJpTv+qedenXhe+lWXXPqn6Cp05XP/s6Wxe+lk5Xn7v6
zFnmcmsuRfi9NJlX17yY3SXMXNBkjtyTmVbNtGumzPfSfF+aL7NgXsx36jTN
GsyMmDVzf2nu+OdZz5k1/sED4HPpM18ws8MDXZpDnEgHP+A3/ACmxrp0qjhN
nmni2D9dHHtpiBPdYd6nyWMt26tNc2zqScv2Xlt3aOJ0cbo0hzTB+JM7RBw8
j1d7tle7+oO3nYWms2D8zFkw3ubsED/SITt4Bs+Tl3J8ZqdlZwqM/8lRl6bz
FT0nU/QhqjfZWUh2FqJ6o7qSnQU0yRp1kRHvUjB1kTUwdZG7Ls0hzeg5GaQu
suN9C6ZGsukMgoswtaPZdXboefScbBZhekJ2wOwKsgamP5xtOgtm7ryr6+zQ
2aF3Re+K+GT2LcxuIY/gW7gIs3PIcpVmlU6TTtPZrrNdZ7vuM6QzpDN0nyHN
SCfS8U4As6/INRgPszeq+E188FsYP/Mu740hvvdG9K6Iz95gFuwHdsVLGJ/D
B9/CRZies2e6+EOcSJN9Qq+S7edk+znqVdSfZHs42R5Gc0gnOsuewYfsFjB9
YLeA6QNnwXiPs2D8xtkhfqTD/inCZJzdUsUB4xn2kncLmCzDiTiRDnvmLUx/
2A/eP+wZfAIHTE/gsEMuYfrAnok47JBbGJ+QQXZCEcYnZLaJ38X3rvBOiN4b
aZLxlzD7jdyByRQcslyOz4w710OcoXdF/EjTWQazf8hvFccZd5bJaTk+8zvE
iTjRu/x/OvJ7CdOHZGcKDvm9hclO1B84ZLkI0xOek2uyQ77IL7WTR3JKRshs
pONs+u9zMoWHyam/u50RsoDH8Ly/K/FqEcYD+NPe83eKvZRsH+INZsQcmS89
hMNM8RLz8hw9O8/LM2Iu/wB0HKvr
     "]], {{{1, 0, 0}, {0, -1, 0}, {0, 0, -1}}, {
     0, 0, 0}}]},
  AxesLabel->{None, None, None},
  DisplayFunction->Identity,
  ImageSize->{303.3962558834435, 318.1342826685052},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"RelieveDPZFighting" -> False},
  PlotRange->{{All, All}, {All, All}, {All, All}},
  Ticks->{{{-0.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}, {{7.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}, {{7.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}},
  ViewPoint->{-0.33151333986457004`, 3.267501270783035, -0.8145761787108069},
  ViewVertical->{-0.17364405458578192`, 0.752767167466671, 
   0.6349719158287356}]], "Output",
 CellChangeTimes->{{3.896330176088093*^9, 3.896330192665531*^9}, {
   3.8963303631655607`*^9, 3.89633038976855*^9}, {3.896330423233328*^9, 
   3.89633043410995*^9}, {3.896330509216579*^9, 3.896330517282062*^9}, {
   3.896330627519936*^9, 3.896330636247086*^9}, 3.89633073077172*^9, 
   3.896330781069508*^9, 3.8963314621825953`*^9, 3.896332227841249*^9, 
   3.8963381893310957`*^9, {3.8963729778830233`*^9, 3.896372986594284*^9}, 
   3.896373047968767*^9, 3.896373149514886*^9, 3.8963732109932213`*^9, {
   3.896406898297853*^9, 3.89640691466749*^9}, 3.896408665498767*^9, 
   3.896415387638708*^9, {3.896415443746346*^9, 3.8964154581666193`*^9}, {
   3.912183312113934*^9, 3.912183321707129*^9}, {3.912187917118978*^9, 
   3.912187967514563*^9}},
 CellLabel->"Out[77]=",ExpressionUUID->"98fbeeea-c1c7-4350-89d1-d409f067e225"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.896330176088093*^9, 3.896330192665531*^9}, {
   3.8963303631655607`*^9, 3.89633038976855*^9}, {3.896330423233328*^9, 
   3.89633043410995*^9}, {3.896330509216579*^9, 3.896330517282062*^9}, {
   3.896330627519936*^9, 3.896330636247086*^9}, 3.89633073077172*^9, 
   3.896330781069508*^9, 3.8963314621825953`*^9, 3.896332227841249*^9, 
   3.8963381893310957`*^9, {3.8963729778830233`*^9, 3.896372986594284*^9}, 
   3.896373047968767*^9, 3.896373149514886*^9, 3.8963732109932213`*^9, {
   3.896406898297853*^9, 3.89640691466749*^9}, 3.896408665498767*^9, 
   3.896415387638708*^9, {3.896415443746346*^9, 3.8964154581666193`*^9}, {
   3.912183312113934*^9, 3.912183321707129*^9}, {3.912187917118978*^9, 
   3.912187967518218*^9}},
 CellLabel->"Out[78]=",ExpressionUUID->"0798aa96-eae9-4d03-b959-86b0df56044d"],

Cell[BoxData[
 Graphics3DBox[{GeometricTransformation3DBox[{
     {RGBColor[0.405188, 0.204349, 0.343389], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{0, -5, -5}}, {{
       4, -1, -5}}, {{4, -5, -1}}, {{0, -1, -1}}}]}, 
     {RGBColor[
      0.6333770000000001, 0.23392566666666667`, 0.37273666666666666`], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{1, -5, -5}}, {{
       0, -4, -5}}, {{4, -2, -5}}, {{3, -1, -5}}, {{0, -5, -4}}, {{
       4, -1, -4}}, {{4, -5, -2}}, {{0, -1, -2}}, {{3, -5, -1}}, {{
       4, -4, -1}}, {{0, -2, -1}}, {{1, -1, -1}}}]}, 
     {RGBColor[0.7996756666666667, 0.3505163333333333, 0.48605733333333334`], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{2, -5, -5}}, {{
       1, -4, -5}}, {{0, -3, -5}}, {{4, -3, -5}}, {{3, -2, -5}}, {{
       2, -1, -5}}, {{1, -5, -4}}, {{0, -4, -4}}, {{4, -2, -4}}, {{
       3, -1, -4}}, {{0, -5, -3}}, {{4, -5, -3}}, {{0, -1, -3}}, {{
       4, -1, -3}}, {{3, -5, -2}}, {{4, -4, -2}}, {{0, -2, -2}}, {{
       1, -1, -2}}, {{2, -5, -1}}, {{3, -4, -1}}, {{0, -3, -1}}, {{
       4, -3, -1}}, {{1, -2, -1}}, {{2, -1, -1}}}]}, 
     {RGBColor[0.831283, 0.533131, 0.662656], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNkVEKQyEQA9fnu0j/ep4eoQdo7081qQsJRFgcljis+nh/X59ZVc9T49RU
/Uh2XYeX+A7u7BbP4IOFOIvIM/q9LznNQ/4lz46MecrpDMVX8JBzK28u+Xfc
xX1E3+yZ7WHk24m4C5RZYs+PmB9yIs4yMoxMOxkzM/6C8f6M93cG4jvY8/f6
A0MhQGE=
       "]]}, 
     {RGBColor[0.742797, 0.6702466666666667, 0.8056613333333333], Opacity[1], 
      EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNkNENgCAMRCu4iI7kCA6g+8fSs02uyX00PMjxuHDc7/VMMztztpziPecD
UFN7J4/kRa5skBMNkq/VmXfyLrzR48w3G519NyQPOS//4rmTp7DRufjuknxI
vnnQ35nyBz1OHsLdP6R/SOfguyEZiLP8kP6Qv4V0Az1E/CkcEJc=
       "]]}, 
     {RGBColor[0.680889, 0.7972306666666666, 0.8930633333333333], Opacity[1], 
      EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{3, -4, -4}}, {{
       2, -3, -4}}, {{1, -2, -4}}, {{2, -4, -3}}, {{1, -3, -3}}, {{
       3, -3, -3}}, {{2, -2, -3}}, {{1, -4, -2}}, {{2, -3, -2}}, {{
       3, -2, -2}}}]}, 
     {RGBColor[0.659388, 0.872053, 0.882048], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{2, -3, -3}}}]}, 
     {RGBColor[0, 0, 0], Opacity[0], EdgeForm[None]}}, {{{1, 0, 0}, {0, -1, 
     0}, {0, 0, -1}}, {0, 0, 0}}], 
   GeometricTransformation3DBox[GeometricTransformation3DBox[
     {EdgeForm[GrayLevel[0.2]], FaceForm[None, None], 
      CuboidBox[{0, 0, 0}]}, CompressedData["
1:eJxdlIFtwzAMBCXKi3SljtABmgk6eS0yFqADLjJg5EG8leefk6+f1/fvaK39
PXd/7qXX9V9V674eXdLrc11tz9fV5V/zW/7ceugczr91/q3zU+fnfpbvvfb5
ZEhlIE8oT1ee5Z/Khh7KGcrZlZO9yJlbD+Vnr6ldpnZhjh7al73YPbfu6iHU
wzh6mOoH3dVPqJ+hfuLghe5HP+h2dJXyl+bmi+7qkMx40LDAQ7chDRd3SM+3
er41T83RZOackh8uIU3nMJpih6Zzni15Sh7/juAY0vQPrykPTC9p8jOHL5nh
AkdywrTkhxd5YIQmG7zQ9MyzKb85wov3YSon/U/xmvKn/Gh6xuP/EHiFNPlh
OuWB3SVNt5wJO/LDxbzMqDSnw1Bv/eiNHrp2H9LRPt9h7+i98piv+w0L4uWC

     "]], {{{1, 0, 0}, {0, -1, 0}, {0, 0, -1}}, {0, 0, 0}}]},
  AxesLabel->{None, None, None},
  DisplayFunction->Identity,
  ImageSize->{303.3962558834435, 318.1342826685052},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"RelieveDPZFighting" -> False},
  PlotRange->{{All, All}, {All, All}, {All, All}},
  Ticks->{{{-0.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}}, {{5.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}}, {{5.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}}},
  ViewPoint->{-0.33151333986457004`, 3.267501270783035, -0.8145761787108069},
  ViewVertical->{-0.17364405458578192`, 0.752767167466671, 
   0.6349719158287356}]], "Output",
 CellChangeTimes->{{3.896330176088093*^9, 3.896330192665531*^9}, {
   3.8963303631655607`*^9, 3.89633038976855*^9}, {3.896330423233328*^9, 
   3.89633043410995*^9}, {3.896330509216579*^9, 3.896330517282062*^9}, {
   3.896330627519936*^9, 3.896330636247086*^9}, 3.89633073077172*^9, 
   3.896330781069508*^9, 3.8963314621825953`*^9, 3.896332227841249*^9, 
   3.8963381893310957`*^9, {3.8963729778830233`*^9, 3.896372986594284*^9}, 
   3.896373047968767*^9, 3.896373149514886*^9, 3.8963732109932213`*^9, {
   3.896406898297853*^9, 3.89640691466749*^9}, 3.896408665498767*^9, 
   3.896415387638708*^9, {3.896415443746346*^9, 3.8964154581666193`*^9}, {
   3.912183312113934*^9, 3.912183321707129*^9}, {3.912187917118978*^9, 
   3.912187967556785*^9}},
 CellLabel->"Out[79]=",ExpressionUUID->"5045ac29-3a6f-4623-804c-db7ae156d31d"],

Cell[BoxData[
 Graphics3DBox[{GeometricTransformation3DBox[{
     {RGBColor[0.405188, 0.204349, 0.343389], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{0, -5, -5}}, {{
       4, -1, -5}}, {{4, -5, -1}}, {{0, -1, -1}}}]}, 
     {RGBColor[0.738643, 0.266095, 0.407856], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{1, -5, -5}}, {{
       0, -4, -5}}, {{4, -2, -5}}, {{3, -1, -5}}, {{0, -5, -4}}, {{
       1, -4, -4}}, {{3, -2, -4}}, {{4, -1, -4}}, {{4, -5, -2}}, {{
       3, -4, -2}}, {{1, -2, -2}}, {{0, -1, -2}}, {{3, -5, -1}}, {{
       4, -4, -1}}, {{0, -2, -1}}, {{1, -1, -1}}}]}, 
     {RGBColor[0.831283, 0.533131, 0.662656], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNkNEJAzEMQ325W6QfXagjdIDe/lxiNQIJFDB5BPnh+PW9P7+zqt67jl3k
sesBwOLbFG+sJb6C2dNi9iJ6eU/1TvEIPuSZ8qzItPgKPuW3k/6ljNkzL+XN
Q35nOjLmkt9ORIb+jvlbGbP/0vGXlrOjtyOPeKcfMTNi54idI+ZH7JznDwjA
KHw=
       "]]}, 
     {RGBColor[0.696099, 0.729278, 0.860188], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNkIEJQyEQQ/1fF+kCHaYjdIB2f+pd6kEOnnD4kCQaH+/v6zPHGM8z15np
+UmquQ9v8wKXNswTfHAkvAm9cF77dmbzdP52Tphv8AJfzm+9oBc0lR/Obx6+
K9Ax0DHQsb0Bb8Kb8Ca8glfw1hsS/5DWb3N3b03zAk/f1RpBI2RWvtBX6Ct0
FDq2Js0L3F1q/QHTpXAr
       "]]}, 
     {RGBColor[0.659388, 0.872053, 0.882048], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{4, -5, -5}}, {{
       3, -4, -5}}, {{2, -3, -5}}, {{1, -2, -5}}, {{0, -1, -5}}, {{
       3, -5, -4}}, {{4, -4, -4}}, {{0, -2, -4}}, {{1, -1, -4}}, {{
       2, -5, -3}}, {{0, -3, -3}}, {{4, -3, -3}}, {{2, -1, -3}}, {{
       1, -5, -2}}, {{0, -4, -2}}, {{4, -2, -2}}, {{3, -1, -2}}, {{
       0, -5, -1}}, {{1, -4, -1}}, {{2, -3, -1}}, {{3, -2, -1}}, {{
       4, -1, -1}}}]}, 
     {RGBColor[0, 0, 0], Opacity[0], EdgeForm[None]}}, {{{1, 0, 0}, {0, -1, 
     0}, {0, 0, -1}}, {0, 0, 0}}], 
   GeometricTransformation3DBox[GeometricTransformation3DBox[
     {EdgeForm[GrayLevel[0.2]], FaceForm[None, None], 
      CuboidBox[{0, 0, 0}]}, CompressedData["
1:eJxdlIFpRDEMQ5OfLNKVOkIHaCfo5I3tXsAPXhsIJ4LsL0vm3j6+3j/XGOP7
defrXnzPT1Xdu1+4hO/vPaPf75ni3/cjfjZe6kP/07Wn8Wr+0XePvpvNOY1n
81N64KBzNx/NKc3of6R/Sv/lh2YBL831aK6puYbmeoRn92HeEMezpzilnrd/
yJOQ5pA/0T1DnBQHjG/0LHHwHP0pP/E/5DkYn6lN8UvvZIRmMgplB0Y/eZVq
yQ6d5AVGJ9mB0Ultil96J9MtjGZycY4hPhj98Ev8EodMlzC7RKbgLcyM1IZq
U7Wp2lStcy/VegfA7BtZhzjgPf7uhvehxCn19H8L+/AIMyO5hzjsxhZmFt7Z
E7IjX/aBjNiNEt874NzJFA/J1NmRxRbGB/zHW2bHH3xb8mrIq/nPK/tjT/Dh
F/6b5YI=
     "]], {{{1, 0, 0}, {0, -1, 0}, {0, 0, -1}}, {0, 0, 0}}]},
  AxesLabel->{None, None, None},
  DisplayFunction->Identity,
  ImageSize->{303.3962558834435, 318.1342826685052},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"RelieveDPZFighting" -> False},
  PlotRange->{{All, All}, {All, All}, {All, All}},
  Ticks->{{{-0.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}}, {{5.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}}, {{5.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}}},
  ViewPoint->{-0.33151333986457004`, 3.267501270783035, -0.8145761787108069},
  ViewVertical->{-0.17364405458578192`, 0.752767167466671, 
   0.6349719158287356}]], "Output",
 CellChangeTimes->{{3.896330176088093*^9, 3.896330192665531*^9}, {
   3.8963303631655607`*^9, 3.89633038976855*^9}, {3.896330423233328*^9, 
   3.89633043410995*^9}, {3.896330509216579*^9, 3.896330517282062*^9}, {
   3.896330627519936*^9, 3.896330636247086*^9}, 3.89633073077172*^9, 
   3.896330781069508*^9, 3.8963314621825953`*^9, 3.896332227841249*^9, 
   3.8963381893310957`*^9, {3.8963729778830233`*^9, 3.896372986594284*^9}, 
   3.896373047968767*^9, 3.896373149514886*^9, 3.8963732109932213`*^9, {
   3.896406898297853*^9, 3.89640691466749*^9}, 3.896408665498767*^9, 
   3.896415387638708*^9, {3.896415443746346*^9, 3.8964154581666193`*^9}, {
   3.912183312113934*^9, 3.912183321707129*^9}, {3.912187917118978*^9, 
   3.912187967595896*^9}},
 CellLabel->"Out[80]=",ExpressionUUID->"13d463c9-9fc2-4be7-9eb8-6f24d214cce2"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.896330176088093*^9, 3.896330192665531*^9}, {
   3.8963303631655607`*^9, 3.89633038976855*^9}, {3.896330423233328*^9, 
   3.89633043410995*^9}, {3.896330509216579*^9, 3.896330517282062*^9}, {
   3.896330627519936*^9, 3.896330636247086*^9}, 3.89633073077172*^9, 
   3.896330781069508*^9, 3.8963314621825953`*^9, 3.896332227841249*^9, 
   3.8963381893310957`*^9, {3.8963729778830233`*^9, 3.896372986594284*^9}, 
   3.896373047968767*^9, 3.896373149514886*^9, 3.8963732109932213`*^9, {
   3.896406898297853*^9, 3.89640691466749*^9}, 3.896408665498767*^9, 
   3.896415387638708*^9, {3.896415443746346*^9, 3.8964154581666193`*^9}, {
   3.912183312113934*^9, 3.912183321707129*^9}, {3.912187917118978*^9, 
   3.912187967598885*^9}},
 CellLabel->"Out[81]=",ExpressionUUID->"ae314794-b0b8-4bb2-a1d8-20f489001186"],

Cell[BoxData[
 Graphics3DBox[{GeometricTransformation3DBox[{
     {RGBColor[0.405188, 0.204349, 0.343389], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{0, -3, -3}}, {{
       2, -1, -3}}, {{2, -3, -1}}, {{0, -1, -1}}}]}, 
     {RGBColor[0.7996756666666667, 0.3505163333333333, 0.48605733333333334`], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{1, -3, -3}}, {{
       0, -2, -3}}, {{2, -2, -3}}, {{1, -1, -3}}, {{0, -3, -2}}, {{
       2, -3, -2}}, {{0, -1, -2}}, {{2, -1, -2}}, {{1, -3, -1}}, {{
       0, -2, -1}}, {{2, -2, -1}}, {{1, -1, -1}}}]}, 
     {RGBColor[0.742797, 0.6702466666666667, 0.8056613333333333], Opacity[1], 
      EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{2, -3, -3}}, {{
       1, -2, -3}}, {{0, -1, -3}}, {{1, -3, -2}}, {{0, -2, -2}}, {{
       2, -2, -2}}, {{1, -1, -2}}, {{0, -3, -1}}, {{1, -2, -1}}, {{
       2, -1, -1}}}]}, 
     {RGBColor[0.659388, 0.872053, 0.882048], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{1, -2, -2}}}]}, 
     {RGBColor[0, 0, 0], Opacity[0], EdgeForm[None]}}, {{{1, 0, 0}, {0, -1, 
     0}, {0, 0, -1}}, {0, 0, 0}}], 
   GeometricTransformation3DBox[GeometricTransformation3DBox[
     {EdgeForm[GrayLevel[0.2]], FaceForm[None, None], 
      CuboidBox[{0, 0, 0}]}, CompressedData["
1:eJxdjtEJgEAMQ1sdwy9XcoQbQPf/sPECFh5XCA2lvOQcz3XvEXFM5ZS955Vk
bdML3tsT/92T+Pe98N8+wWl+gVlgFnILfIEv8AW+wOzc7hDokEtuIbd9okOg
Qy4dtNytD0s42OI=
     "]], {{{1, 0, 0}, {0, -1, 0}, {0, 0, -1}}, {0, 0, 0}}]},
  
  AxesLabel->{None, None, None},
  DisplayFunction->Identity,
  ImageSize->{303.3962558834435, 318.1342826685052},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"RelieveDPZFighting" -> False},
  PlotRange->{{All, All}, {All, All}, {All, All}},
  Ticks->{{{-0.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}}, {{3.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}}, {{3.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}}},
  ViewPoint->{-0.33151333986457004`, 3.267501270783035, -0.8145761787108069},
  ViewVertical->{-0.17364405458578192`, 0.752767167466671, 
   0.6349719158287356}]], "Output",
 CellChangeTimes->{{3.896330176088093*^9, 3.896330192665531*^9}, {
   3.8963303631655607`*^9, 3.89633038976855*^9}, {3.896330423233328*^9, 
   3.89633043410995*^9}, {3.896330509216579*^9, 3.896330517282062*^9}, {
   3.896330627519936*^9, 3.896330636247086*^9}, 3.89633073077172*^9, 
   3.896330781069508*^9, 3.8963314621825953`*^9, 3.896332227841249*^9, 
   3.8963381893310957`*^9, {3.8963729778830233`*^9, 3.896372986594284*^9}, 
   3.896373047968767*^9, 3.896373149514886*^9, 3.8963732109932213`*^9, {
   3.896406898297853*^9, 3.89640691466749*^9}, 3.896408665498767*^9, 
   3.896415387638708*^9, {3.896415443746346*^9, 3.8964154581666193`*^9}, {
   3.912183312113934*^9, 3.912183321707129*^9}, {3.912187917118978*^9, 
   3.9121879676303473`*^9}},
 CellLabel->"Out[82]=",ExpressionUUID->"89564260-b478-4eb5-93c8-17505e0c200e"],

Cell[BoxData[
 Graphics3DBox[{GeometricTransformation3DBox[{
     {RGBColor[0.405188, 0.204349, 0.343389], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{0, -3, -3}}, {{
       2, -1, -3}}, {{2, -3, -1}}, {{0, -1, -1}}}]}, 
     {RGBColor[0.831283, 0.533131, 0.662656], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{1, -3, -3}}, {{
       0, -2, -3}}, {{2, -2, -3}}, {{1, -1, -3}}, {{0, -3, -2}}, {{
       2, -3, -2}}, {{1, -2, -2}}, {{0, -1, -2}}, {{2, -1, -2}}, {{
       1, -3, -1}}, {{0, -2, -1}}, {{2, -2, -1}}, {{1, -1, -1}}}]}, 
     {RGBColor[0.659388, 0.872053, 0.882048], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{2, -3, -3}}, {{
       1, -2, -3}}, {{0, -1, -3}}, {{1, -3, -2}}, {{0, -2, -2}}, {{
       2, -2, -2}}, {{1, -1, -2}}, {{0, -3, -1}}, {{1, -2, -1}}, {{
       2, -1, -1}}}]}, 
     {RGBColor[0, 0, 0], Opacity[0], EdgeForm[None]}}, {{{1, 0, 0}, {0, -1, 
     0}, {0, 0, -1}}, {0, 0, 0}}], 
   GeometricTransformation3DBox[GeometricTransformation3DBox[
     {EdgeForm[GrayLevel[0.2]], FaceForm[None, None], 
      CuboidBox[{0, 0, 0}]}, CompressedData["
1:eJxNjsEJwDAMA512jL66UkfIAO3+D0uNIYYzCAsjTr7n97xnRFxLY6l8Tdou
HcsbvnZN7HvNQL7uQr79AKf5AlM7o+2bL/wgdBldRpfRZfAT/AQ/wRSYAlNg
dibRxR+69wdK8Nji
     "]], {{{1, 0, 0}, {0, -1, 0}, {0, 0, -1}}, {0, 0, 0}}]},
  
  AxesLabel->{None, None, None},
  DisplayFunction->Identity,
  ImageSize->{303.3962558834435, 318.1342826685052},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"RelieveDPZFighting" -> False},
  PlotRange->{{All, All}, {All, All}, {All, All}},
  Ticks->{{{-0.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}}, {{3.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}}, {{3.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}}},
  ViewPoint->{-0.33151333986457004`, 3.267501270783035, -0.8145761787108069},
  ViewVertical->{-0.17364405458578192`, 0.752767167466671, 
   0.6349719158287356}]], "Output",
 CellChangeTimes->{{3.896330176088093*^9, 3.896330192665531*^9}, {
   3.8963303631655607`*^9, 3.89633038976855*^9}, {3.896330423233328*^9, 
   3.89633043410995*^9}, {3.896330509216579*^9, 3.896330517282062*^9}, {
   3.896330627519936*^9, 3.896330636247086*^9}, 3.89633073077172*^9, 
   3.896330781069508*^9, 3.8963314621825953`*^9, 3.896332227841249*^9, 
   3.8963381893310957`*^9, {3.8963729778830233`*^9, 3.896372986594284*^9}, 
   3.896373047968767*^9, 3.896373149514886*^9, 3.8963732109932213`*^9, {
   3.896406898297853*^9, 3.89640691466749*^9}, 3.896408665498767*^9, 
   3.896415387638708*^9, {3.896415443746346*^9, 3.8964154581666193`*^9}, {
   3.912183312113934*^9, 3.912183321707129*^9}, {3.912187917118978*^9, 
   3.912187967663138*^9}},
 CellLabel->"Out[83]=",ExpressionUUID->"1f8830d5-95ba-44da-a7a7-4f035075cc8d"],

Cell[BoxData[
 Graphics3DBox[{GeometricTransformation3DBox[{
     {RGBColor[0.405188, 0.204349, 0.343389], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{0, -7, -7}}, {{
       6, -1, -7}}, {{6, -7, -1}}, {{0, -1, -1}}}]}, 
     {RGBColor[
      0.6333770000000001, 0.23392566666666667`, 0.37273666666666666`], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, {{{1, -7, -7}}, {{
       0, -6, -7}}, {{6, -2, -7}}, {{5, -1, -7}}, {{0, -7, -6}}, {{
       1, -6, -6}}, {{5, -2, -6}}, {{6, -1, -6}}, {{6, -7, -2}}, {{
       5, -6, -2}}, {{1, -2, -2}}, {{0, -1, -2}}, {{5, -7, -1}}, {{
       6, -6, -1}}, {{0, -2, -1}}, {{1, -1, -1}}}]}, 
     {RGBColor[0.7996756666666667, 0.3505163333333333, 0.48605733333333334`], 
      Opacity[1], EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNzsENwjAMRuGkpN2jN+ZhBAaA+bHlGFt6h/9g9VOVvPh+f1+fxxjjWTNr
2kfNLzN7+p/h4nB8lQOf5Y1XOeVuf427hg/xpGl0Ai+axltbzqQ0u++yp9N3
vGi67Ok0U9yd4IzhRSdoBp50gh1S7nZnc9fwJT5pbjqBB83NW1vOpDS7n7Jn
0nc8aKbsmTRh/gEOKUA5
       "]]}, 
     {RGBColor[0.831283, 0.533131, 0.662656], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNk2sOwjAMg7t12z04Dn85AgeA89NHTCPZmpEqPnWu40Tt4/19fWop5bnW
tlbl+gHItS9u5PzeyQvLIF/G5+JJPhYHOT1hnvnfuN/Ihf6NGvFG/0Z/8cFa
jRmmeYZpYD5Zt7NWI+/G6rHTp5tmkA/jyrrdepcmyJfxyTzKkHkGNeKNeQb1
Ys1k0F9cmUeaaZppnmGe4sI8ygDTZJ5Jn0a+jDWfSb1Ys9JZ8cY8OisuzKOz
YXqYT+YJuzNhcwhmE+vOhN2ZYK1J3o11Z7QP28+6sDnA+gXutwDcbwHWL6wv
4H4L+fsDFoxG/g==
       "]]}, 
     {RGBColor[0.742797, 0.6702466666666667, 0.8056613333333333], Opacity[1], 
      EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNktFtwzAQQ+XE8R5dqQPkowO089eSjrEAEn4fgp+FI48+39fP3/fvs7X2
vs52ncX7df4lrbPeT/Pj4m4+wEs3zC/whW2ad/DyLHgK9+t5uv40P93rtH+4
uddpnwFt+ABvzhDPCW3hXrhfebp9wplJd55wc7buDOHMJ9oBbfjhPOk1oS1o
C72EXkL9yjnsH27OOdwrvIMP8Ob8A/OPZ4fPgM+AdkI7oZ3IU/Ap+BTyFDwF
H8FnfeO0Nrz5Wyb+18QOT+xw6gfqwy9w9jm9JuoL9YVeQi+hfuUs/IvCzAsz
L917nvrwDj7AmXlh5qkv1AieK48wK+neZ+neZ2FWwnyke4ele4fjWfAx6gNC
ie4s
       "]]}, 
     {RGBColor[0.680889, 0.7972306666666666, 0.8930633333333333], Opacity[1], 
      EdgeForm[None], GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNk9ttxDAMBHW+k/u4lq6EFJDUHz3IiMAuMgYEz8eIXCzs99fP5/vZWvuc
8zinuJ/zm5l1XoeH+AaXN8UdfB1euGuu2Rt3zQdb4G7AT8yp91AGc1eeIWfC
MT+VYWjXFl/gh/baSTiJObV3aq/Z/Uz0Y2eKmzLYMbsTOyG+wO5hKkPCqQwL
/Sw5Q9yUYaGTpZlL3MHux/7GzBC7E+9NzKwMG11tzRziC/xQHjtLfIO7Mmzt
CjiBXQk/MbMyBLoK7R1i92PH7G8mtHeLb3BXBjsJJ7Gr9iZ6SPSQ6CHz/5+y
s8QvsP+dRD92QnyD3Uk9f6gQjqQ=
       "]]}, 
     {RGBColor[0.659388, 0.872053, 0.882048], Opacity[1], EdgeForm[None], 
      GeometricTransformation3DBox[{{}, 
        {EdgeForm[None], CuboidBox[{0, 0, 0}]}}, CompressedData["
1:eJxNkMERwyAMBIWJ6cMpySW4gKT+IOAizeyDh4Z9LHeC6/nen2pm75gSk9xi
fpJyzuAOv4IdTm/AR/CEM2PBgaYtJ8/MamR2nAUX/E5X+o7vsNHl9Aqu+ANn
wG3jij+4m/7Ed7iRP9lBcMFf+B1u7L94ozYnfXG3wwdd2v5QdE34JFPkg/oD
/50QdQ==
       "]]}, 
     {RGBColor[0, 0, 0], Opacity[0], EdgeForm[None]}}, {{{1, 0, 0}, {0, -1, 
     0}, {0, 0, -1}}, {0, 0, 0}}], 
   GeometricTransformation3DBox[GeometricTransformation3DBox[
     {EdgeForm[GrayLevel[0.2]], FaceForm[None, None], 
      CuboidBox[{0, 0, 0}]}, CompressedData["
1:eJxdl0uO3DAQQ223W/eYK2WTfQ6QnD/WhxkBetDrNGYQwqBoVRVZPfn69efH
79dxHD/P4/j+OSaen79J5m/5xhGe/87PsZ7Pzyn+fP6IPxZ+Swf9Z519Fn4v
/qP3PnrvWJxn4XPxh+4Dh3uWxefOQ3fm/pfuf+r+k19VS1ct1HWrrlN1Harr
Ej6XJvX2he//ah/iRJpTv+qedenXhe+lWXXPqn6Cp05XP/s6Wxe+lk5Xn7v6
zFnmcmsuRfi9NJlX17yY3SXMXNBkjtyTmVbNtGumzPfSfF+aL7NgXsx36jTN
GsyMmDVzf2nu+OdZz5k1/sED4HPpM18ws8MDXZpDnEgHP+A3/ACmxrp0qjhN
nmni2D9dHHtpiBPdYd6nyWMt26tNc2zqScv2Xlt3aOJ0cbo0hzTB+JM7RBw8
j1d7tle7+oO3nYWms2D8zFkw3ubsED/SITt4Bs+Tl3J8ZqdlZwqM/8lRl6bz
FT0nU/QhqjfZWUh2FqJ6o7qSnQU0yRp1kRHvUjB1kTUwdZG7Ls0hzeg5GaQu
suN9C6ZGsukMgoswtaPZdXboefScbBZhekJ2wOwKsgamP5xtOgtm7ryr6+zQ
2aF3Re+K+GT2LcxuIY/gW7gIs3PIcpVmlU6TTtPZrrNdZ7vuM6QzpDN0nyHN
SCfS8U4As6/INRgPszeq+E188FsYP/Mu740hvvdG9K6Iz95gFuwHdsVLGJ/D
B9/CRZies2e6+EOcSJN9Qq+S7edk+znqVdSfZHs42R5Gc0gnOsuewYfsFjB9
YLeA6QNnwXiPs2D8xtkhfqTD/inCZJzdUsUB4xn2kncLmCzDiTiRDnvmLUx/
2A/eP+wZfAIHTE/gsEMuYfrAnok47JBbGJ+QQXZCEcYnZLaJ38X3rvBOiN4b
aZLxlzD7jdyByRQcslyOz4w710OcoXdF/EjTWQazf8hvFccZd5bJaTk+8zvE
iTjRu/x/OvJ7CdOHZGcKDvm9hclO1B84ZLkI0xOek2uyQ77IL7WTR3JKRshs
pONs+u9zMoWHyam/u50RsoDH8Ly/K/FqEcYD+NPe83eKvZRsH+INZsQcmS89
hMNM8RLz8hw9O8/LM2Iu/wB0HKvr
     "]], {{{1, 0, 0}, {0, -1, 0}, {0, 0, -1}}, {
     0, 0, 0}}]},
  AxesLabel->{None, None, None},
  DisplayFunction->Identity,
  ImageSize->{379.87336963797566`, 407.6791323910808},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
    "M10DefaultGradient", 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "RelieveDPZFighting" -> False},
  PlotRange->{{0, 7}, {0, 7}, {0, 7}},
  PlotRangePadding->Scaled[0.02],
  Ticks->{{{-0.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}, {{7.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}, {{7.5, 
      FormBox[
       TagBox["0", HoldForm], TraditionalForm]}, {6.5, 
      FormBox[
       TagBox["1", HoldForm], TraditionalForm]}, {5.5, 
      FormBox[
       TagBox["2", HoldForm], TraditionalForm]}, {4.5, 
      FormBox[
       TagBox["3", HoldForm], TraditionalForm]}, {3.5, 
      FormBox[
       TagBox["4", HoldForm], TraditionalForm]}, {2.5, 
      FormBox[
       TagBox["5", HoldForm], TraditionalForm]}, {1.5, 
      FormBox[
       TagBox["6", HoldForm], TraditionalForm]}, {0.5, 
      FormBox[
       TagBox["7", HoldForm], TraditionalForm]}}},
  ViewPoint->{1.6024874414144943`, 2.1165085027338746`, 2.09819583403553},
  ViewVertical->{-0.012468070083046264`, -0.03622730679870235, 
   0.9992657952069194}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.896330176088093*^9, 3.896330192665531*^9}, {
   3.8963303631655607`*^9, 3.89633038976855*^9}, {3.896330423233328*^9, 
   3.89633043410995*^9}, {3.896330509216579*^9, 3.896330517282062*^9}, {
   3.896330627519936*^9, 3.896330636247086*^9}, 3.89633073077172*^9, 
   3.896330781069508*^9, 3.8963314621825953`*^9, 3.896332227841249*^9, 
   3.8963381893310957`*^9, {3.8963729778830233`*^9, 3.896372986594284*^9}, 
   3.896373047968767*^9, 3.896373149514886*^9, 3.8963732109932213`*^9, {
   3.896406898297853*^9, 3.89640691466749*^9}, 3.896408665498767*^9, 
   3.896415387910993*^9, 
   3.8964154184164343`*^9},ExpressionUUID->"0cf7af11-1c17-42bb-9958-\
8cd8ecfaa108"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Helper", " ", "function", " ", "for", " ", 
    RowBox[{"generateMaxHeightGrid", ".", " ", "Fills"}], " ", "one", " ", 
    "concentric", " ", "square", " ", "of", " ", 
    RowBox[{"cells", "."}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"fillConcentricSquareMax", "[", 
     RowBox[{
      RowBox[{"Hold", "[", "grid_", "]"}], ",", " ", "k_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"(", "\n", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{"k", ",", " ", 
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"grid", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"k", " ", "-", " ", "1"}], ",", " ", 
           RowBox[{"k", " ", ";;", " ", 
            RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "+", " ", "1"}]}], ";",
       " ", "\n", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"-", "k"}], ",", " ", 
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"grid", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"k", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
           RowBox[{"k", " ", ";;", " ", 
            RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "+", " ", "1"}]}], ";",
       "\n", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}], ",", " ", "k"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"grid", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"k", " ", ";;", " ", 
            RowBox[{"-", "k"}]}], ",", " ", 
           RowBox[{"k", " ", "-", " ", "1"}]}], "]"}], "]"}], " ", "+", " ", 
        "1"}]}], ";", " ", "\n", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}], ",", " ", 
          RowBox[{"-", "k"}]}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"grid", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"k", " ", ";;", " ", 
            RowBox[{"-", "k"}]}], ",", " ", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"k", " ", "-", " ", "1"}], ")"}]}]}], "]"}], "]"}], " ", 
        "+", " ", "1"}]}], ";", " ", "\n", 
      RowBox[{"ReleaseHold", "[", 
       RowBox[{"Hold", "[", "grid", "]"}], "]"}]}], ")"}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Helper", " ", "function", " ", "for", " ", 
     RowBox[{"generateMinHeightGrid", ".", " ", "Fills"}], " ", "one", " ", 
     "concentric", " ", "square", " ", "of", " ", 
     RowBox[{"cells", "."}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"fillSquareMin", "[", 
     RowBox[{
      RowBox[{"Hold", "[", "grid_", "]"}], ",", " ", "above_", ",", " ", 
      "below_", ",", " ", "dim_"}], "]"}], " ", ":=", " ", 
    RowBox[{"(", "\n", " ", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", " ", "=", " ", "2"}], ",", " ", 
        RowBox[{"i", " ", "<", " ", "dim"}], ",", " ", 
        RowBox[{"i", "++"}], ",", "\n", "  ", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", " ", "=", " ", "2"}], ",", " ", 
          RowBox[{"j", " ", "<", " ", "dim"}], ",", " ", 
          RowBox[{"j", "++"}], ",", "\n", "   ", 
          RowBox[{
           RowBox[{
            RowBox[{"grid", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], " ", "=", " ", 
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"grid", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "j"}], "]"}], 
                 "]"}], ",", " ", 
                RowBox[{"grid", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", " ", 
                   RowBox[{"j", " ", "-", " ", "1"}]}], "]"}], "]"}], ",", 
                " ", 
                RowBox[{"grid", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", " ", 
                   RowBox[{"j", " ", "+", " ", "1"}]}], "]"}], "]"}], ",", 
                " ", 
                RowBox[{"above", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], ",", " ", 
                RowBox[{"below", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", " ", "j"}], "]"}], "]"}]}], "}"}], "]"}], 
             " ", "-", " ", "1"}]}], ";"}]}], "\n", "  ", "]"}]}], "\n", " ", 
       "]"}], ";", "\n", 
      RowBox[{"ReleaseHold", "[", 
       RowBox[{"Hold", "[", "grid", "]"}], "]"}]}], ")"}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Generates", " ", "the", " ", "grid", " ", "with", " ", "maximum", " ", 
      "height", " ", "by", " ", "starting", " ", "from", " ", "the", " ", 
      "boundary", " ", "and", " ", "moving", " ", "inwards"}], ",", " ", 
     RowBox[{"filling", " ", "in", " ", "concentric", " ", 
      RowBox[{"squares", "."}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"generateMaxHeightGrid", "[", 
     RowBox[{"dim_", ",", " ", "initialGrid_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"generateMaxHeightGrid", "[", "dim", "]"}], " ", "=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"depth", " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"dim", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
           "2"}]}], ",", " ", "currGrid"}], "}"}], ",", "\n", " ", 
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"k", "++"}], ";", " ", 
            RowBox[{"currGrid", " ", "=", " ", "#"}], ";", " ", 
            RowBox[{"fillConcentricSquareMax", "[", 
             RowBox[{
              RowBox[{"Hold", "[", "currGrid", "]"}], ",", " ", "k"}], "]"}], 
            ";", " ", "currGrid"}], " ", ")"}], " ", "&"}], ",", " ", 
         "initialGrid", ",", " ", 
         RowBox[{"depth", " ", "-", " ", "1"}]}], "]"}]}], "\n", "]"}]}]}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Generates", " ", "the", " ", "grid", " ", "with", " ", "minimum", " ", 
      "height", " ", "by", " ", "starting", " ", "from", " ", "the", " ", 
      "boundary", " ", "and", " ", "moving", " ", "inwards"}], ",", " ", 
     RowBox[{"filling", " ", "in", " ", "concentric", " ", 
      RowBox[{"squares", "."}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"generateMinHeightGrid2", "[", 
     RowBox[{
     "dim_", ",", " ", "initialGrid_", ",", " ", "above_", ",", " ", 
      "below_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"depth", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dim", " ", "+", " ", "1"}], ")"}], " ", "/", " ", "2"}]}],
         ",", " ", "currGrid"}], "}"}], ",", "\n", " ", 
      RowBox[{"Nest", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"k", "++"}], ";", " ", 
           RowBox[{"currGrid", " ", "=", " ", "#"}], ";", " ", 
           RowBox[{"fillSquareMin", "[", 
            RowBox[{
             RowBox[{"Hold", "[", "currGrid", "]"}], ",", " ", "above", ",", 
             " ", "below", ",", " ", "dim"}], "]"}], ";", " ", "currGrid"}], 
          " ", ")"}], " ", "&"}], ",", " ", "initialGrid", ",", " ", 
        RowBox[{"depth", " ", "-", " ", "1"}]}], "]"}]}], "\n", "]"}]}], "\n",
    "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"generateMaxCube", "[", "dim_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cube", " ", "=", " ", 
         RowBox[{"initialCubeBorder", "[", "dim", "]"}]}], "}"}], ",", " ", 
       "\n", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"cube", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], 
         "}"}], " ", "~", " ", "Join", " ", "~", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"generateMaxHeightGrid", "[", 
           RowBox[{"dim", ",", " ", 
            RowBox[{"cube", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}]}],
            "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "2", ",", " ", "6"}], "}"}]}], "]"}], " ", 
        "~", " ", "Join", " ", "~", " ", 
        RowBox[{"{", 
         RowBox[{"cube", "[", 
          RowBox[{"[", 
           RowBox[{"7", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], 
         "}"}]}]}], "]"}]}], "*)"}], "\n", " ", "\n", 
   RowBox[{
    RowBox[{"generateMaxCube", "[", "dim_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cube", " ", "=", " ", 
         RowBox[{"initialCubeBorder", "[", "dim", "]"}]}], ",", " ", 
        RowBox[{"depth", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dim", " ", "+", " ", "1"}], ")"}], " ", "/", " ", "2"}]}],
         ",", " ", "nextLevelTop", ",", " ", "nextLevelBottom"}], "}"}], ",", 
      "  ", "\n", " ", 
      RowBox[{
       RowBox[{"Do", "[", "\n", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"nextLevelTop", " ", "=", " ", 
           RowBox[{
            RowBox[{"cube", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "+", " ", "1"}]}], 
          ";", "\n", " ", 
          RowBox[{"nextLevelBottom", " ", "=", " ", 
           RowBox[{"Reverse", "[", 
            RowBox[{"nextLevelTop", ",", " ", 
             RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i"}], "]"}], "]"}], " ", "=", 
           " ", "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "2", ",", " ", "depth"}], "}"}]}], "]"}], 
       ";", "\n", " ", "cube"}]}], "]"}]}], " ", "\n", " ", "\n", 
   RowBox[{
    RowBox[{"generateMinCube", "[", "dim_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cube", " ", "=", " ", 
         RowBox[{"initialCubeBorder", "[", "dim", "]"}]}], ",", " ", 
        RowBox[{"depth", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dim", " ", "+", " ", "1"}], ")"}], " ", "/", " ", "2"}]}],
         ",", " ", "nextLevelTop", ",", " ", "nextLevelBottom"}], "}"}], ",", 
      "  ", "\n", " ", 
      RowBox[{
       RowBox[{"Do", "[", "\n", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"nextLevelTop", " ", "=", " ", 
           RowBox[{
            RowBox[{"cube", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}], ",", " ", 
               RowBox[{"i", " ", ";;", " ", 
                RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "-", " ", "1"}]}], 
          ";", "\n", " ", 
          RowBox[{"nextLevelBottom", " ", "=", " ", 
           RowBox[{"Reverse", "[", 
            RowBox[{"nextLevelTop", ",", " ", 
             RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i", ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", "i"}], "]"}], "]"}], " ", "=", 
           " ", "nextLevelTop"}], ";", "\n", " ", 
          RowBox[{
           RowBox[{"cube", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"i", " ", ";;", " ", 
               RowBox[{"-", "i"}]}], ",", " ", 
              RowBox[{"-", "i"}]}], "]"}], "]"}], " ", "=", " ", 
           "nextLevelBottom"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "2", ",", " ", "depth"}], "}"}]}], "]"}], 
       ";", "\n", " ", "cube"}]}], "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.895851743137969*^9, 3.895851743139699*^9}, 
   3.895924359871799*^9, {3.89592453810701*^9, 3.895924578194954*^9}, {
   3.8959252186688757`*^9, 3.895925220809202*^9}, {3.895925524859675*^9, 
   3.8959256363294773`*^9}, {3.8959256734090548`*^9, 3.895925702131855*^9}, {
   3.8959258099186487`*^9, 3.895925816806987*^9}, {3.8959259730488577`*^9, 
   3.895926282836673*^9}, {3.8959265493100758`*^9, 3.895926662644783*^9}, {
   3.895926706278529*^9, 3.895926786482958*^9}, {3.895926821613821*^9, 
   3.895926844925844*^9}, {3.895926900435109*^9, 3.895926936672982*^9}, {
   3.895926973114499*^9, 3.8959269735383453`*^9}, {3.895927198189516*^9, 
   3.895927215223157*^9}, {3.895927252199391*^9, 3.895927286790578*^9}, {
   3.895927406293037*^9, 3.895927410636898*^9}, {3.895927797828179*^9, 
   3.895927846144252*^9}, {3.89592793271642*^9, 3.8959279929073544`*^9}, {
   3.895931126242578*^9, 3.895931154621812*^9}, {3.8959313015059223`*^9, 
   3.895931377045375*^9}, {3.8959323011157093`*^9, 3.895932313219329*^9}, {
   3.895932461177787*^9, 3.8959325714721403`*^9}, {3.895932678723037*^9, 
   3.895932757580627*^9}, {3.8959328868123503`*^9, 3.895932888159932*^9}, {
   3.895935459823525*^9, 3.895935511447383*^9}, {3.8959357274782267`*^9, 
   3.8959357371406116`*^9}, {3.895936585436318*^9, 3.895936664508355*^9}, {
   3.89593717123914*^9, 3.895937174638939*^9}, {3.895937700482608*^9, 
   3.89593781260238*^9}, {3.895937851834051*^9, 3.895937883000745*^9}, {
   3.8959385051235247`*^9, 3.895938554533948*^9}, {3.89593860441994*^9, 
   3.895938624564167*^9}, {3.895938669851734*^9, 3.895938702339554*^9}, {
   3.895938816474195*^9, 3.895938875201742*^9}, {3.89593897753822*^9, 
   3.8959390346086817`*^9}, {3.895939281351036*^9, 3.8959394332172203`*^9}, {
   3.895939477153347*^9, 3.895939545154372*^9}, {3.895939589287294*^9, 
   3.895939606036065*^9}, {3.8959396848508453`*^9, 3.8959397130195103`*^9}, {
   3.8959398017319927`*^9, 3.895939804211789*^9}, {3.8959398409789457`*^9, 
   3.8959399341642437`*^9}, {3.895940025532848*^9, 3.8959400487644033`*^9}, {
   3.895940116780529*^9, 3.895940226988255*^9}, {3.895940507003642*^9, 
   3.8959405075474253`*^9}, {3.8959405866897993`*^9, 3.895940671176176*^9}, {
   3.895940703692581*^9, 3.8959407116663027`*^9}, {3.895940754848997*^9, 
   3.89594075729636*^9}, {3.8959407924797487`*^9, 3.895940922519642*^9}, {
   3.895940955351569*^9, 3.89594096823952*^9}, {3.895941016398425*^9, 
   3.8959411012133713`*^9}, {3.8959416217422657`*^9, 
   3.8959416510212517`*^9}, {3.895941751587575*^9, 3.895941811835779*^9}, {
   3.8959418894383717`*^9, 3.895941941232431*^9}, {3.8959420049647017`*^9, 
   3.895942005128944*^9}, {3.8959420661853848`*^9, 3.8959420678330383`*^9}, {
   3.895942138071947*^9, 3.8959422674461203`*^9}, 3.8959423198197193`*^9, {
   3.895942374462367*^9, 3.895942384931842*^9}, 3.895942746413762*^9, {
   3.8959427883930693`*^9, 3.895942810457045*^9}, {3.8959428545690527`*^9, 
   3.895942859976574*^9}, {3.895942894983653*^9, 3.8959428979759197`*^9}, {
   3.895942937507091*^9, 3.895942937591359*^9}, {3.895943262735242*^9, 
   3.895943267316884*^9}, {3.895966917004333*^9, 3.8959669469986143`*^9}, {
   3.895966997823306*^9, 3.89596704386239*^9}, {3.89596809177496*^9, 
   3.895968142191331*^9}, {3.8959682178881483`*^9, 3.8959682261725473`*^9}, {
   3.896029050033618*^9, 3.896029068137042*^9}, {3.8960291353107023`*^9, 
   3.896029139532143*^9}, {3.89602917515187*^9, 3.896029247645176*^9}, {
   3.8961074083514023`*^9, 3.8961076271262617`*^9}, {3.896108202159047*^9, 
   3.896108217674529*^9}, {3.89612133484925*^9, 3.896121334879374*^9}, {
   3.896333926923399*^9, 3.896333957460273*^9}, {3.8963342115459137`*^9, 
   3.8963342124743032`*^9}, {3.896334412981388*^9, 3.896334437790207*^9}, 
   3.8963344724866858`*^9, {3.8963347829749804`*^9, 3.896334788763483*^9}, {
   3.896337232426865*^9, 3.896337241139146*^9}, {3.896337276290044*^9, 
   3.896337298000836*^9}, {3.89633757679998*^9, 3.8963376254077663`*^9}, {
   3.8963376957588987`*^9, 3.896337842910202*^9}, {3.896337873366638*^9, 
   3.896337890286662*^9}, {3.8963379309026833`*^9, 3.89633795526123*^9}, {
   3.896338010019981*^9, 3.8963380326993437`*^9}, {3.8963381139954643`*^9, 
   3.896338122499373*^9}, {3.896338203438754*^9, 3.896338210235207*^9}, {
   3.8963382822578373`*^9, 3.896338305210328*^9}, 3.8963383916974993`*^9, {
   3.8963483268507853`*^9, 3.896348424583952*^9}, {3.896348514567173*^9, 
   3.896348516114107*^9}, {3.896348558057222*^9, 3.8963486335051517`*^9}, {
   3.8963487681597023`*^9, 3.896348850607461*^9}, {3.8963489171436357`*^9, 
   3.896348921088109*^9}, {3.8963489775137453`*^9, 3.896348990512315*^9}, {
   3.896349024592252*^9, 3.896349031358507*^9}, {3.896349186133471*^9, 
   3.896349204749407*^9}, {3.8963716164542627`*^9, 3.896371655926025*^9}, {
   3.896371756413437*^9, 3.896371790636338*^9}, {3.896372567219589*^9, 
   3.896372571050908*^9}, {3.896373316915986*^9, 3.896373358291664*^9}, {
   3.896407376844158*^9, 3.896407406656273*^9}, {3.89640745709867*^9, 
   3.8964074616951942`*^9}, {3.896407601239127*^9, 3.89640761911943*^9}, {
   3.896407650855463*^9, 3.896407652271559*^9}, {3.896407682339316*^9, 
   3.896407714302945*^9}, 3.8964078818960533`*^9, {3.896408474561571*^9, 
   3.8964084797293053`*^9}, {3.8964085304903517`*^9, 3.896408576912929*^9}, {
   3.8964088431539507`*^9, 3.89640886725655*^9}, {3.8964089190345383`*^9, 
   3.8964089912410507`*^9}, 3.896411364032544*^9, {3.896411555775547*^9, 
   3.896411560210909*^9}, {3.8964116249414473`*^9, 3.8964116268667393`*^9}, {
   3.8964117236814823`*^9, 3.896411733209247*^9}, {3.89641176893865*^9, 
   3.896411788777835*^9}, {3.896411829490048*^9, 3.896411854225235*^9}, {
   3.896413117100971*^9, 3.896413457913006*^9}, {3.89641348873833*^9, 
   3.896413593256999*^9}, {3.896414227715905*^9, 3.896414261627845*^9}, {
   3.896414345804163*^9, 3.896414366524419*^9}, {3.8964144449315357`*^9, 
   3.896414482055689*^9}, {3.896414532026331*^9, 3.8964145387787027`*^9}, {
   3.896414661241715*^9, 3.896414875292243*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"34a5ce17-7bbe-4b28-b8dc-8f3c89a7e4af"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"minCube", " ", "=", " ", 
   RowBox[{"generateMinCube", "[", "7", "]"}]}], ";"}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"MatrixForm", "[", 
    RowBox[{"minCube", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], "]"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", " ", "7"}], "}"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.896408450237463*^9, 3.896408468106264*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"677679fe-0fd3-444e-8fed-86a92ef2cd8d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "2", "3", "4", "5", "6"},
       {"1", "2", "3", "4", "5", "6", "5"},
       {"2", "3", "4", "5", "6", "5", "4"},
       {"3", "4", "5", "6", "5", "4", "3"},
       {"4", "5", "6", "5", "4", "3", "2"},
       {"5", "6", "5", "4", "3", "2", "1"},
       {"6", "5", "4", "3", "2", "1", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "2", "3", "4", "5", "6", "5"},
       {"2", "1", "2", "3", "4", "5", "6"},
       {"3", "2", "3", "4", "5", "4", "5"},
       {"4", "3", "4", "5", "4", "3", "4"},
       {"5", "4", "5", "4", "3", "2", "3"},
       {"6", "5", "4", "3", "2", "1", "2"},
       {"5", "6", "5", "4", "3", "2", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "3", "4", "5", "6", "5", "4"},
       {"3", "2", "3", "4", "5", "4", "5"},
       {"4", "3", "2", "3", "4", "5", "6"},
       {"5", "4", "3", "4", "3", "4", "5"},
       {"6", "5", "4", "3", "2", "3", "4"},
       {"5", "4", "5", "4", "3", "2", "3"},
       {"4", "5", "6", "5", "4", "3", "2"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "4", "5", "6", "5", "4", "3"},
       {"4", "3", "4", "5", "4", "3", "4"},
       {"5", "4", "3", "4", "3", "4", "5"},
       {"6", "5", "4", "3", "4", "5", "6"},
       {"5", "4", "3", "4", "3", "4", "5"},
       {"4", "3", "4", "5", "4", "3", "4"},
       {"3", "4", "5", "6", "5", "4", "3"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "5", "6", "5", "4", "3", "2"},
       {"5", "4", "5", "4", "3", "2", "3"},
       {"6", "5", "4", "3", "2", "3", "4"},
       {"5", "4", "3", "4", "3", "4", "5"},
       {"4", "3", "2", "3", "4", "5", "6"},
       {"3", "2", "3", "4", "5", "4", "5"},
       {"2", "3", "4", "5", "6", "5", "4"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"5", "6", "5", "4", "3", "2", "1"},
       {"6", "5", "4", "3", "2", "1", "2"},
       {"5", "4", "5", "4", "3", "2", "3"},
       {"4", "3", "4", "5", "4", "3", "4"},
       {"3", "2", "3", "4", "5", "4", "5"},
       {"2", "1", "2", "3", "4", "5", "6"},
       {"1", "2", "3", "4", "5", "6", "5"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"6", "5", "4", "3", "2", "1", "0"},
       {"5", "6", "5", "4", "3", "2", "1"},
       {"4", "5", "6", "5", "4", "3", "2"},
       {"3", "4", "5", "6", "5", "4", "3"},
       {"2", "3", "4", "5", "6", "5", "4"},
       {"1", "2", "3", "4", "5", "6", "5"},
       {"0", "1", "2", "3", "4", "5", "6"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8964143940437117`*^9, {3.896414461823914*^9, 3.896414483544649*^9}, {
   3.896414524526495*^9, 3.896414540110299*^9}, {3.896414670363858*^9, 
   3.896414714880932*^9}, {3.89641474634375*^9, 3.89641480437281*^9}, 
   3.89641491856831*^9, {3.912183302053372*^9, 3.912183315416588*^9}},
 CellLabel->"Out[52]=",ExpressionUUID->"5e361169-5999-4591-8e5a-ac1422fc1f36"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cube", " ", "=", " ", 
   RowBox[{"initialCubeBorder", "[", "7", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dim", " ", "=", " ", "7"}], ";"}]}], "Code",
 CellChangeTimes->{{3.8963315301595716`*^9, 3.8963315999490423`*^9}, 
   3.8963316511910553`*^9, {3.89633391267474*^9, 3.896333913798381*^9}, {
   3.896333984558095*^9, 3.8963339860371017`*^9}, {3.896334238850512*^9, 
   3.8963342404267263`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"2148de09-ed05-4808-bed8-2a80b8dfc5bc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxCube", " ", "=", " ", 
   RowBox[{"generateMaxCube", "[", "dim", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"minCube", " ", "=", " ", 
   RowBox[{"generateMinCube", "[", "dim", "]"}]}], ";"}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"MatrixForm", "[", 
    RowBox[{"maxCube", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], "]"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", " ", "7"}], "}"}]}], "]"}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"MatrixForm", "[", 
    RowBox[{"minCube", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", " ", "All", ",", " ", "All"}], "]"}], "]"}], "]"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", " ", "7"}], "}"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.896371577316053*^9, 3.896371603846746*^9}, {
  3.896373430967228*^9, 3.896373439340259*^9}, {3.89640694226118*^9, 
  3.8964069505477667`*^9}, {3.896411895267703*^9, 3.896411937489583*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"5a27674b-47e1-47cb-bd9a-3d1f3c532b69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "2", "3", "4", "5", "6"},
       {"1", "2", "3", "4", "5", "6", "5"},
       {"2", "3", "4", "5", "6", "5", "4"},
       {"3", "4", "5", "6", "5", "4", "3"},
       {"4", "5", "6", "5", "4", "3", "2"},
       {"5", "6", "5", "4", "3", "2", "1"},
       {"6", "5", "4", "3", "2", "1", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "2", "3", "4", "5", "6", "5"},
       {"2", "3", "4", "5", "6", "7", "6"},
       {"3", "4", "5", "6", "7", "6", "5"},
       {"4", "5", "6", "7", "6", "5", "4"},
       {"5", "6", "7", "6", "5", "4", "3"},
       {"6", "7", "6", "5", "4", "3", "2"},
       {"5", "6", "5", "4", "3", "2", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "3", "4", "5", "6", "5", "4"},
       {"3", "4", "5", "6", "7", "6", "5"},
       {"4", "5", "6", "7", "8", "7", "6"},
       {"5", "6", "7", "8", "7", "6", "5"},
       {"6", "7", "8", "7", "6", "5", "4"},
       {"5", "6", "7", "6", "5", "4", "3"},
       {"4", "5", "6", "5", "4", "3", "2"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "4", "5", "6", "5", "4", "3"},
       {"4", "5", "6", "7", "6", "5", "4"},
       {"5", "6", "7", "8", "7", "6", "5"},
       {"6", "7", "8", "9", "8", "7", "6"},
       {"5", "6", "7", "8", "7", "6", "5"},
       {"4", "5", "6", "7", "6", "5", "4"},
       {"3", "4", "5", "6", "5", "4", "3"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "5", "6", "5", "4", "3", "2"},
       {"5", "6", "7", "6", "5", "4", "3"},
       {"6", "7", "8", "7", "6", "5", "4"},
       {"5", "6", "7", "8", "7", "6", "5"},
       {"4", "5", "6", "7", "8", "7", "6"},
       {"3", "4", "5", "6", "7", "6", "5"},
       {"2", "3", "4", "5", "6", "5", "4"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"5", "6", "5", "4", "3", "2", "1"},
       {"6", "7", "6", "5", "4", "3", "2"},
       {"5", "6", "7", "6", "5", "4", "3"},
       {"4", "5", "6", "7", "6", "5", "4"},
       {"3", "4", "5", "6", "7", "6", "5"},
       {"2", "3", "4", "5", "6", "7", "6"},
       {"1", "2", "3", "4", "5", "6", "5"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"6", "5", "4", "3", "2", "1", "0"},
       {"5", "6", "5", "4", "3", "2", "1"},
       {"4", "5", "6", "5", "4", "3", "2"},
       {"3", "4", "5", "6", "5", "4", "3"},
       {"2", "3", "4", "5", "6", "5", "4"},
       {"1", "2", "3", "4", "5", "6", "5"},
       {"0", "1", "2", "3", "4", "5", "6"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896373223468034*^9, {3.896373368665174*^9, 3.89637338421276*^9}, {
   3.8963734161897097`*^9, 3.8963734413125134`*^9}, 3.8964069511576557`*^9, {
   3.8964118469459047`*^9, 3.896411864370466*^9}, 3.896411937899544*^9, 
   3.896414881838376*^9, {3.9121832990646257`*^9, 3.912183317701848*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"28c78142-cc0a-4aff-b996-d189a68a5ecd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "2", "3", "4", "5", "6"},
       {"1", "2", "3", "4", "5", "6", "5"},
       {"2", "3", "4", "5", "6", "5", "4"},
       {"3", "4", "5", "6", "5", "4", "3"},
       {"4", "5", "6", "5", "4", "3", "2"},
       {"5", "6", "5", "4", "3", "2", "1"},
       {"6", "5", "4", "3", "2", "1", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "2", "3", "4", "5", "6", "5"},
       {"2", "1", "2", "3", "4", "5", "6"},
       {"3", "2", "3", "4", "5", "4", "5"},
       {"4", "3", "4", "5", "4", "3", "4"},
       {"5", "4", "5", "4", "3", "2", "3"},
       {"6", "5", "4", "3", "2", "1", "2"},
       {"5", "6", "5", "4", "3", "2", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "3", "4", "5", "6", "5", "4"},
       {"3", "2", "3", "4", "5", "4", "5"},
       {"4", "3", "2", "3", "4", "5", "6"},
       {"5", "4", "3", "4", "3", "4", "5"},
       {"6", "5", "4", "3", "2", "3", "4"},
       {"5", "4", "5", "4", "3", "2", "3"},
       {"4", "5", "6", "5", "4", "3", "2"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "4", "5", "6", "5", "4", "3"},
       {"4", "3", "4", "5", "4", "3", "4"},
       {"5", "4", "3", "4", "3", "4", "5"},
       {"6", "5", "4", "3", "4", "5", "6"},
       {"5", "4", "3", "4", "3", "4", "5"},
       {"4", "3", "4", "5", "4", "3", "4"},
       {"3", "4", "5", "6", "5", "4", "3"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"4", "5", "6", "5", "4", "3", "2"},
       {"5", "4", "5", "4", "3", "2", "3"},
       {"6", "5", "4", "3", "2", "3", "4"},
       {"5", "4", "3", "4", "3", "4", "5"},
       {"4", "3", "2", "3", "4", "5", "6"},
       {"3", "2", "3", "4", "5", "4", "5"},
       {"2", "3", "4", "5", "6", "5", "4"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"5", "6", "5", "4", "3", "2", "1"},
       {"6", "5", "4", "3", "2", "1", "2"},
       {"5", "4", "5", "4", "3", "2", "3"},
       {"4", "3", "4", "5", "4", "3", "4"},
       {"3", "2", "3", "4", "5", "4", "5"},
       {"2", "1", "2", "3", "4", "5", "6"},
       {"1", "2", "3", "4", "5", "6", "5"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"6", "5", "4", "3", "2", "1", "0"},
       {"5", "6", "5", "4", "3", "2", "1"},
       {"4", "5", "6", "5", "4", "3", "2"},
       {"3", "4", "5", "6", "5", "4", "3"},
       {"2", "3", "4", "5", "6", "5", "4"},
       {"1", "2", "3", "4", "5", "6", "5"},
       {"0", "1", "2", "3", "4", "5", "6"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896373223468034*^9, {3.896373368665174*^9, 3.89637338421276*^9}, {
   3.8963734161897097`*^9, 3.8963734413125134`*^9}, 3.8964069511576557`*^9, {
   3.8964118469459047`*^9, 3.896411864370466*^9}, 3.896411937899544*^9, 
   3.896414881838376*^9, {3.9121832990646257`*^9, 3.9121833177060204`*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"e2fc4e85-7d72-4462-a493-18afc2d77d00"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Image3D", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"maxCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
   RowBox[{"Max", "[", "maxCube", "]"}]}], "]"}], "\n", 
 RowBox[{"Image3D", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"minCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"Max", "[", "minCube", "]"}], ")"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"minCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
  RowBox[{"(", 
   RowBox[{"Max", "[", "minCube", "]"}], ")"}]}]}], "Code",
 CellChangeTimes->{{3.8963316730691643`*^9, 3.896331746094306*^9}, {
   3.896334624808174*^9, 3.8963346560064697`*^9}, {3.8963348102956*^9, 
   3.896334818678288*^9}, {3.896334880560091*^9, 3.896334900623008*^9}, 
   3.896415066154051*^9, {3.89641525094273*^9, 3.896415289726448*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"4a151634-84be-4917-bc9d-83c658b41256"],

Cell[BoxData[
 Graphics3DBox[
  TagBox[Raster3DBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOM5DJjoQt+x7bWvYl
261etcoOyLZ7YsFnv3qVln2RjLs9LnEQjUscxCdHHGQeLnGQO3CJ43M/LncC
1UNp7OIwe0gVB5mHS5yQ/0gJT3zuYWBoQJEnVZyQ//DFH63d/8Sij+b+ICZ9
4ot3Qu4gRR5fuOELb0L5iFD6JBRepMjjz3+40z2+/I5Pntz0iV8etzvxlT8A
escStg==
    "], {{0, 7, 7}, {7, 0, 0}}, {0., 1.},
    ColorFunction->"GrayLevelDefaultColorFunction",
    Method->{"FastRendering" -> True}],
   BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  AxesStyle->{},
  Background->None,
  BoxRatios->Automatic,
  Boxed->False,
  DefaultBaseStyle->"Image3DGraphics3D",
  ImageSize->{305.82244218466644`, 297.24353549648055`},
  ImageSizeRaw->7,
  PlotRange->{{0, 7}, {0, 7}, {0, 7}},
  ViewPoint->{-1.5974463491485018`, 0.3737014210994636, -2.959478401587073},
  ViewVertical->{-0.44063069032041324`, -0.7540601859752768, \
-0.4870706629172889}]], "Output",
 CellChangeTimes->{{3.896331695181623*^9, 3.896331731194665*^9}, 
   3.896331763393186*^9, 3.896333541735243*^9, 3.896334656876666*^9, 
   3.8963347502818003`*^9, 3.896334819057868*^9, {3.8963348819360027`*^9, 
   3.896334900983534*^9}, {3.896415052620182*^9, 3.8964150665424356`*^9}, {
   3.896415254695978*^9, 3.8964152931942873`*^9}},
 CellLabel->"Out[311]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzUnQd8VFX2xy8JkIQk9CaKHduqqyJF11VWparrWuhdmiBITygqrmvvuupa
195QIaBg710pgg3ppEAgvfe5/9+59/X+ZgbXP5/PzZuZhGTmvfN795zvPefc
SyYuuHrKrIkLpk+aeOTAeRPnXD190vwjB8yeh5cSmzHW7FGMu49kzfGYM2b7
8hhj/y8eTxcPE5txpv87xfD9SeJhcgJfxlJyhrKOef1Y97wB7Oj8i9gRe4ew
TvsGs5Y/DWWnGv7LWPGwNf2XVnkXix85Nmcg65s7mA3OGcCG5g5iw/Er/pE9
gF2YN5D13jeQnYDnh+weiD9xlulXDRcPOyYuHyp+VeftA1iPnP7s7N3yv0/F
r8vEr74xZxD7J45Lcwewefj10/G9cbkD2eV7B7EB2f3ZWXjtT3sGskNzLmap
+QNMf+Iy8fDQRK78iXzlT9A7xJiG/3odfu09+HWP4088m42Bx0/hTz+C4734
3q34c9fj8QIcZ+D/TMgexIbu6c8G4ef/ktefnZJzITs870LWumgwEyfaeIIv
Eg/T6O/TW+uy8wJ2XO4Q8f8uw8e6Gr+X/j79nf/i8Wv4u2/h9ya8iwesw1p8
zcLT5fj2C3mDxI/8B+M+jNvwfBm+vxDHmfiZiTjZw/EWh+DX/nXvQPZn/MyR
+waxdnsuYnSxTG/rQvGwDb3dlj8tY21L5rAjSq5hp+4fx/6273J2ufLWrs8e
qL81nKq38Xc+xfgar7GE7+k9dvkG3/sCzz/Bs/fxeC3GKuXnX8R7ehqPH8X3
H8D371CuJl3VWTiVk/DeR2BcjO/3w+tn4H0fkz2Ydci9gDX/uJ/5PZ8rHp4q
3jM+T7vSRexojL7VGezyigw2o2wuu7FkJruvaDJ7vGAsezF/KFux9+/ae/4O
YzPe068YW/GefsPxFxx/xPgBYz3Gt/iZL3Pp5wewD3B8G+9/Nd7b63j8Mo7P
YDyG//cg3uud+Jl/4vuL8dps/L8pGKPw/i/FOTsfr525tz87bscFwqpJQ8aP
0lc87NCMc/FR2uOtH1O6kJ1dnsmGVixkcysXsbvKF7Kny+ezN8rnsrdLr2Uf
l0xnXxZPYesKJrDNB8awXw+MYNvzr2B79l3K8mDZLGFf3hDGjsiDDrMxduK0
bsNb+hVv/SccN+UoHxHjKzoleOsf4m2+g8dv4rU3MF5RrP9xfO/feP0ufMx/
4WeW4LW5uVItY/DaZVCQk7ZNn/EM8fBs+oxJ22bhMy5jx5YtYmdXZ7JhFZls
XmUmu6c8gz2Pz/wWHn+KS/h9+QK2CZ/3l7LZbFvpTLarZAbLKZnG9hVPZQVF
k1hJ4QRWhktbfmA0K9s/nJXkX86K8i5hB/IuYvn49OKz5w1mu/A+t4lLjc+O
97kJxw250gS+wvEzHD/CIJG9hecr8BlexWd/Do+fxGsP4Xt0R7iZ1JntcNPB
37DedIwf/WTx8G/io/NZrEP5YtajbCE7Bx91OC7vfHzse/CRn8dYU5nBvsBH
34jxK07LTlz27IoFbG/5PLYfp6IQp6IEo7x0FqvEKamGSmtLrma1xdNYbeFk
VlM4kVUVjGeVOCXlOCWlMImivZeyAnFKLmJ7cUpyMHZjbMel24KP8DMpAR+T
Tglp+GuMz/H4I4z3MNbg+Uq66+AjP4/L/hQeO98MB7EJuT43w5MN5+U48XCg
mG34ctYR5n0czs1f8ZnFecG5uLfccl5w/A3nZTeOe3E8gNeK8fOlGOUwl6qy
BawGv6cW56sOo758DmvA+Woou5Y14Jw14HzVQzp1MKFayKem8CpWVUjnawzO
10icrytZsXK+9sOE9uLmnJMnz9cOnK/fcpTzhc++UTlf32B8gc//MZ6LO55y
l6ab94s4Ot2lM/D6TJjiVfh/6l36XBxtd2nj+TpSPOxMr6fy57p046tanc5f
bzWEv9pqSuPTrW6oe6jlv6tvTXyxYrHj+dqH54V4XIpRgVGF81qD12rxvTqM
hAacdNarEebWhFMoxzyMuaypbA5rxGlsLLWcRqhRPY3VZHYFY1jF/hGsdP9Q
VrzvH6wwV55Guhfl4lTuodMIE5E32wHsR5yGHzDWYVgnDrpR08TxOo5eE8e1
eD4Zx5HZHhOH8TR2Ew+7JkCOqfzdLofy5Smn41Reylekz+Ir0+7mb6S/1PRq
6tuRF1p90fB0yvr6R5N+rnug5faaO1tkV/8rYV/l4mbaaaxaxKpxd67FqMfz
Bho4rY10OptwbtlZTXgYwYmVYwGLlNOYjzHPfnrJSstwekuNp3cqq8HNrho3
u6oDY1nFgZGsDHNZyd7LWCFu9AfU04uxB5a6M0fOZ+5z2cBAc9lNuTSXDXKZ
y4aY5jLT6e0oHnZJhKLT+PJOh/E3Us5UTu9svjL1Ppzi5Rgf8RVp6/kbab9G
XkvbGXmlVU7TC63yG59JKWx4KqWk4bGk8vqHW1bV3d+ipvbO5nXVtyTWV13X
rAGnvrFyMSa3JvraogmnPYJTHqlUB854Isd5T6DTnUDnm52pn23FoDG9Npar
Z5sMeiarL52Bs437aInhbBeMw9kehallmJhaCvdeIs62NrV4TKtianGbVnPl
tPpETrBptQ+uhnFaNZ7s1qo/u5yl81Udu/MsOtltLuNZ4mTfjxP9Gs9K+xjH
jRjbIivTcnDi9+PEF+HEl0aWp1Y0vdKqqunFVjW4AHWNz6XUNz6d0tD4ZHJj
w+NJTfUPJzXB9iM1d7eIVN+WGKm6MQGnFZeBTvNixisWiYF7Fb7iS6Y8/axv
pHKhxeydLsIccREa6Y6iXIT64qtxc54iJrNqMZnJi1AuLgJNZur8Liczz/k9
12N+z9Xn94cVj/+WbPv8fgX+n9P8brwIyeLhUepFOIKvaduLv9H6CpzweXxF
6gO4AHQRPlEvAl+ZnovnBXhcglEBZVTh52r466l1kddS6zEacGEaI6+mNjW9
jPFSqwguUAQXJwKFRBr/m8zrH0/mdY8k8boHW/Lae1rwmtua86p/JuD008Vp
jq+MQx1imC9N84jljpRA14b1tF+Z2cqVmYUrQzekq+W06ehmXKm7GXsvktOm
6mbkmt2MjRjCzciVbsbHOQY3I8/FzchV3Iw8g5uBMWiv6mYMMbsZfzJcngTx
8Pjm/ON+bfnG047m7x/em69sfSU0MB+X4kFcgtcx9MuTpV2eUny/Es9roJk6
PK/HsQHHRhybIm+kNeF3RCI0XqeRGsGl45g7eNMrGC+14rhsvPE5jGdSeMNT
ybwBl63+P7hs/8ZluxeX7fbmvPom18uWSJctwfuyVThN07NcvR0xTZO3g3lE
TNMWbyeXLlue7u3QNK16O2KaJm8n9yB5O8pla5DxEF2x9vyrs47jP/T+G1/X
ZyL/7owb+denPsk/P241/6D75/ytThtxpZyvWJa4YvJqrUzDlIGvzSP0MJFH
VqRxXDYa+MO4eKwtp0sH1fGIevleVi7f8xjP4vL9F+MJXL5Hlct3Hy7fHbh8
/8LFu65ZgscV1Kck1juwD+DjYpEPENbFIh/gC7zu5GK9lOPgYuWpLtYgXxdL
uXRV4mun5pzj0v101gl8Xc/z+frek/nG3rfg+CLf0OsjvLaBf3/GVv71yXv4
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
9uWrRcarIqgkGeF1/K0fOz1vsGxgAgEtwKRFm/tqDUwIw+To7W9NDUxUDFN8
NRzGhayx6ZXUxsjy1CZEak1Urxp5Iy0CKSO87UJAikfEer1D1ox1L4cUSwtb
h6Q3rUC6lcM6/STukLDqhGIyXSpDjCjmYKTY2Nt++aXYmOowpyl1mOFTbKaQ
HMaTxz0hQUR4SjUNRcaUMCim/WvkHalSesL+e3ZPDqc0K38dLJMyNv9xIKie
7+YFQdV8NysE/Tce34RxLX4XQdC/4jUVgh5mUl96wd9FmciA7ACNSaDAzXmX
spLau5qX1z/Usqrh8aTahqdT6pqeT2lAKKarbzmpL1VRH8aaThFKA46IBiPG
yiwX9aXJJXrRmdZYlBWQr0wPwFdaSQZCEiBFOfMVrWGXfz5NBv9982nUJDeH
fBovBc6keStNrYRWFJhsUKAysannsCLDY10ygzushARX4kizEo2gM2iiTZAK
zt8DdKql0F9ivI/HWXjtBRwfxrgFEpCgc1Xq+XisJp6ahHg0NRmhwg+xAy8V
fsCfFE1GIMDVB8ayDcpGTDvLM0Rzzv2V1zUrrrmjeXndAy2r6h9Lqmn8b3Jd
43Mp9YjHGiKvtGqMvGoQIrVuIDG+2YGAEo9oCTO2Tj+G3NFUl36z8WQosWTR
2BhKiCyaijBZNM5idCiiVBu++yS3GasoZX+9ltqcKMQ4QRek8DSnKG22Z9J/
bhlAkaYFj46OjQ8CMVR1y+3z/j+izSwNbb6poc2stNvxfxfCJ1TRptqZwCTH
HlTHQfvvXlmdweZXLhKbrjyH8WZlBvsEY1253Apiu9LROr9ySbOi6lsTy+ru
b1HZ8GhSTcNTkOOzkOMLZjnCMxVyFHPjqrYRWpWPaKvy1kQZF5xCDFutpwqM
U6Y6ddpywynTQ+GUuCfXOPXi2jbcBac41Uma9lwJmtdmLJW8KsEySVrdVOMk
mWloMea9uDFHilJZ3LAjl7G+Oa2m6ul+0WHO0/+nmDMr7Rs8/phTu8uV6a/i
+ASmxbugRxVzXsTf0BoQmHVJ9RnH1i5il1RlsmuhvduhvacwHa7E4w9pqzMM
2vaMusvTrhD7qAN99c2JpXX3tqisfySpGrqsbXwmpb4Rumx6WfisTU2vWnSZ
1UbBL0eGxC9Kl1lRJ+VQ52jHL5Mdmmi54RfyObWeH6Nd8YtTbs0cKcrSuObW
+PbYsnZyl8WP1ky3ti6xnVb76DEhCvzSNoD2rI0LQuLOYc64U0EzLiltvq32
DgLs3MtXmmDnJijrW5HTtkLAztdwJNh5L9R2HX52Gn5Gh53LWytqS5bRIW25
2780g10NRf0LSnoMx9dxfB/ja4xNUB9tikRbmFHX+IKqfyaUIjqsQHRY3fAE
lEbR4QuW6NDEZtIkm/nAwGa+8mczaoNYXzaTFpTNOISIDpkyVuppKbbwzJL5
XZJk6C3sNpYrznFMkklz8RmNCwrqBHct/VzHYCuDpm6W4eknIow9ts1SDhL9
dIIwhzgVDXvjzywL/sxKewPHZxzx5xsibZSZNUYbgv21fKHYyu966OthaO5V
HN8RW9hniO0AaTPPXeVyM7IDVTcklFTfqRGYmsank3UC87IHgXm/u53AqPVK
XgRmSDgCMzEggUmRpv+/zXBRQUx0GS5qtaGS4XII/S36cEsS1Rl8Ec0wQi6K
yovndfWI3xwzvePCNn/86/9jtvkexkqM5/B/JNtclXYtfl5P8Fwu2OahJmWl
8Lli/+lRZZlsEeK1+6GeF6CmNcp2uLSfNe0WtkPZOlcglerbEsvrHmjhjVSM
viIhlfcO1ZGKaTsfUyWgiarQ/W2PP1XRwjdjsymzpIzhW4r09YIjFWNaihNS
8UxLcc4ZWxgKbVoLkiaaSgUPE58qTZcPTY40rZLi6E07lucv7hIQWs5W2riG
h5bafiSG9pD/H6BlLhToAC1F/8ZV+D8ELR/B41twnMdXCGhpzM40KaxHc2ju
T1DPFRUL2Two6C6MZ8vlzvCfiD34MthPlTol2Ve5uFlR9S2SktQTJXlSpyQU
jblTkm6/LyUp96Uk88Mknajr4TEmnbiVIKlJJ0E6litx2W5Dx3Kl+q+T7pa2
NGe40B+it507OdDKoJKZ3TXkyuDUTra0rzCdH2WNb2gJum9i4A8qA3VkDAIq
v0YIpoLKl/H8MTzWQeUqE6g0S5CAyFE117GLMMldU5XJboPcniqX+9HS7tHf
Vsp94LcqQIR2nS6sIiByDyT4sBKmERB5PgQQ+SIgENlkASJ5gfJRrgmSj7Iw
bLHR7vFe+ShRAxFjCaBXSop77V9bXXdJyh9T/gjdIiiCo6l51xi6SwVcGVS2
hbcq0K/SXi5GREVGTFSSEsHS4gUmT/idwKSsyLWCyay0u/B/FuO5nn/5uiiU
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
pMV0bYWFJVMNAY1fVoshEHWtyXPLanHIQzPuk6LiRgd5OYRV+u55zF1UMwxT
1qK0kMsJV8dGLAVBiROx3Bi6+JyIZTLf1c+sri6d4dTRfgtLMO88zrPSVuP4
JZy8zUobtDylqyd1+KSWadX8rQ51/P3DG/gnxzYi+mriX58s1fUdqeuMiJ08
tlIyrodYejjY5KWr6yrFJ/RTF6kjf4Y5V8xNXWRlWoa1be3aJSKzohG7Z2gR
mCH5JD2a5BMWjklGXYo3wbMUr7WHEmbpNxrbPLWobQBJ2RJHA0rKrbBvcJyh
ZG9z4uaGXh/hNWcoua5va76tj0VStFPQhTwrdS4GbV25AvL5FIMadlJD3Fxl
V9kSTVKr29XCxavnnxzTyD8/QUrq21OlpL53klSy3sTP2KBBT+VK0PCiTLFQ
QIYpIURcoQRTJCSyQWY6bbFlzpHWMYchR9p9MdoFc8yKO+aY6oA5QiSIkKLo
U8SUy1W+SO4K6+CtOShBwoqO4dcEJscGD4fEFR4SslgfAB6u7z0euvkrjgIe
mnVD/TJp65Hp0MY9SkPbj5Qm7b+JrUyyRJdOajRNzd2r+Oq2tXD06vnHRzdA
N438K1U3p6m6iSgFvbpuRPu9Acqqsi2VQ+ZUpdpzqjzKDAzW3ZKbtujROYUb
plAzl6+ViYTemCJTwRTXxoIpTLrxIhWLwpKKqIrvlEZfQjHiRGob4llmPFrE
LhDLWvnT6XPSn1aq1zva5eZJ9ae0V9ddxtFM58Qe3ECf2oX9x3MN6OFQvyJW
J85H6MGN89nrvNcpnO8b62RDJOJk+HDj4cPRrgW0myvt7fOd0sJ2j+gevTKN
dkGgdrdVYpeEd7pSf6MG/tnxaoQU4d+eZoiQjKJJ1XlDgJVjR/BgWs6KHjyo
qcLWPP9FvuBhhg94CEj1AiRiSK24Fc0pKwf+HZu9iuYW0l3f9Oda271DDXBM
VaZyaxMGMV11ji+1G+NC7QzZTzFSO7VANR//z4va/Qev3YTnKrU7BnZNWukk
1dNWsoUj+cq2w6CIZRjU2HkNxtcYtDcI7RNCO2gVCuWsTKfGtTV8bec6/sHh
Cls40cIWznBmC+frbMG+G2oc2EJ2ALZAl1/FVla2YHHUdAUtceELU8wKigUv
+OViWFKZnPZfda9xs6I7c41buv4X3brZWpKGZZTFfFe8DDsid7IILEjfvAlK
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
Z9UuqE1hfX0nIHIHnHE7IE/bztZc1MY+hzBUN8pjiBoMhgiLTWSIlhND1FD1
Ptx/WxSbz8PCYvMeeM6v4PF5qthsEMXm+uGlbONIROG3DBTi7KiZbOnAZxJ1
6qAhnu5cqbnReiis8csoAoiiUm/ai3OAvFFx8nBI7uUniw4cqY7QmuekbAmv
pHp+g58dTpH792FeFMXHpXBdiokxb1IxkOv3hCyhB9IwHILUTR8DgmaWmhYK
Yop5HH+Yrs6Gf6x5NpTpzbMBnc1z8DH6ac0ecLLCr3A06kj8EUcivi6ijLZk
jVAnyt+b1dxqeu08c9soEyXj0CEXRgWJcnK3UEFm+2yBwlyBjrn3Tsp0ID30
/5o7DyipqnTf76ruJjVIMM54vY5jGEcnOCp4HSc4Y0CMSEaSBEEFQZQMignD
qIhZTIMiKijQgCiIoqjknHPsnFOFrrjf79v7VHVVdzXgfbPeer3Wd/ZJVX1q
7///S2eHkMDk12yvDgKcIAAKoMprIF8NPpZf77rWR2iJz3ejh9CymtCyCl+s
Qhf1TpXdiYWKW9lfx/4PyFL2CRX7fch5CRWfQkZyrpcu7ncd5y+CyK10uViZ
ybckEa6pzu46SO/vPgcybYFcx5m+JmGEzUlnd+qOTK+X3cm0L0JNdqdOR/wG
uZbQqyHWm6HexO1JXQTtsehN24BuyQmIUpCPLPlFrbtpDZwZgZKWotNPmtm2
toyb1QDjEpM79V6v1I5gdzthocM4Y/KUME7GIRFps23MxtVCCOiW+1Rz+Yih
njGCQjtngVjTjamuUXvMnZFMr7STjvoamoQ61dy1tpNSKr/ypJM18U5KTpb1
h9pRrGnJ1JJuf5vbQa22McGscbpxWG9sF2LPkauCACVIGTBhYo2YvnP8wMmH
eIGWB2e0GtNXBdwqgF253t+hVB++tVhndyrUBT1tYqb07kOwaC/72yk3UK4E
tMvYX8D+LPaTg73Sfjfrorv/oMv6SrBn3mvenkg3k5m5Q+/pIlPKrXMmk6zN
zOxNlZnpUZuZaXjUTKzPQsqpHetEe01qe+bGOs6btdHrpGRaJqdk4kNfLkse
+lKv/1Bin/mmVsXK+ZjXIvcZqhma1elL10SoxX9OIledxEvtu8tEb7IOsdxO
IDfOkAgUVY+RvTGwAU411VVjuIVDnpBjoZgRPmQ4ZrzTx90xM2Veo5iQMIWL
+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
SUiOVcI/oZ84oUK2USieOO3SLe0eVMZJjJEOky/GryKBc+X3W5/SEGeIJVHp
Pa5k4zeglniFvZDe7Pexx0WJRByQQMQhDhGHOUQcadM7J0rrpAwnH6+/wJav
TreWlBN42qyOnTtMZt1Z0EJYaJiYIVs51VK1EiJGaEAri1ojhohhWjiMjQzj
uoZRwiFiyxD+UQgiBiFiEEUd1Gv+eEL6GWvYrpR9oZ/EinlINnKE+w9Au93c
u51yI+Vqzq/g/FIki/1POPcu5TSuPwEsR+kNbQdQdtQb2l2j1195PtRraZfq
66r6J9FPBlY8YgZW7O+6Jz6wIuW8IM7AivrzS6caWDHOTrr189I08VUlfkaa
xiwkE+u1cs5JpGkS6PdZi9oVHmPT29WdSaCBcU7m9XUs1znBodwYa0pMlsUk
LZXjceJ2CN3E31RAt3KESvI143QTOtSlGnQpGYgMQPq7oJLL2DahFzSDHxBO
tUqmXN8UlBPKJoaHw5Mol5niXbrhXvqJ18E5TvomoRNLqDZ9Yzp5NhK2yeYU
Yjq7aan+yLZVmMYKwzJH2oQIEkMEiSF0alAvPSuIyxOEZQG9/LwAereGyKRG
r/69X2+48uekYY6YgG9jPODbBP3WQqUf2F9GuZByNuf+rTde9Sr7T2PJxlIO
BoJdAOC14PG3euP/nGaWrd1whRqUSK1mzfWOrkNxLOdpu9ybrPZY5azcHDL9
wvYnOppRfbh3VBeknM9D1Yn46k7oMbCBiC9xoQYz9OFnpGDiL8dTdERJmYI5
M3n6nNhU7dPrzhtZt09JWupOlZCqaowlkiRIbKyWlhCrKRQN23Shk5IMJaR6
ABkmxg6I82OSbFfMbg1KIFM/pK9LF/VGerl0YU8J+Ap6yPuIgp4Q7C4jylg1
1bqWZH2SnUxDsoEpSPaAzeYk5GBUs1RMS0tkmmpw9r26nVdSLT3zTm0uJmKm
FoFrxrI1ico01RHpfhcRfzMsVu73bFuGMG+OtArqL1ojbZBTA5i3AH5mDaat
BgD4AYIfJ8dH7OEDHF5I58EBOvnMyuZ2O9nfgqxDfuKebyi/4PxnlB8gbyDP
cTyR7xuG3IUNuwFoXoYL+QtI1kR/d60akki008Wr7KH3dplJ9LbReS0ur/Kq
nfRKwEl8xtzJiD50V1TnDY7q4uF2ufWqhtY3jc3KcdLplU4NpFeuSUG239Vf
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
ku4WIrmFSeq0JC55n3R49HRGBNsUqfkX8mKjCD5hBJ8wEngdLk2HS+81DUdm
NgtHZ2cKgRLpY9jjFvKoS2LU8et5zYU99c2Q5U5ZHe7kUeZQHqM8zPUDyF5k
F5/drrNabgEQGwDGWryYlYQTK/BsvgVAS/B0FgKouXrdnxIjrycB3MNwSiKv
O+HOX/SGqy7SW9q10psvk8hrrOXO38z2jMZ6f4dL9c7OA/X+Hs/p4uGzzJLQ
Ml+/d5IstiFLRhc5i3FUm3Vm7VI7sgolDuBYIrDhsiSPszyPLNMzUBgj86ja
F2SOZ1d3Tvx4r5G/njDHIfMlJM4NeNyRNxfXz3HMTph1O9YDJDHHMaWh2KqB
HMcwhziDnQzF8YjjGB9DmE5CGtUkbmwS+NKooeSFJcwZ8VfTDb6erkOXeq+n
RzsDfSYkdLg2WYwJQmF24U2iCJM8zjbOJSndUTMLYhRnL+p5LD2Cq2flSeQp
ZEp6xP8MlHoOeaFROPAS8krjMDorDJ3C0CkEnUKRTzNDsi5HLYUuraVQ1nEo
lAWFsgyFipFCBPPTPJfSUiirxUFLoea7kG3IJq6v5dxPlN8hX+v5pywGGlmY
qTkECDP10jPfw6d5Q39/wUv4ORJAyduyIdCnG4FTLIA6U6+5SgIok0wcb3n0
Dzu+TWbGl4VnZCbu6fBDVlpdravNzPqycI0sv+7YoEleu4TcuADudVBX3B/C
jwnhtoXNUlfynllWzVEtnVV0+sncpVZkP6+rnbQ4lp2oJZGd8DgxO5E4h73M
k7Ayxawj9WYGSkhQXFi/v0ds7uvE6XWeO/6STUkJiodtUFHRQILChkgqHiKl
IJFYoTvFwiT6bP/rQCgp/eCqHwjVTz8YzmBiJrgaRYU90GCCW7gSkzShjDvi
fUQ2j6apUyPeyWkRTE8E0xPB9IThSZgaC2O3w/AkTC2GMD0hfOIQvnGIGg6G
3m0SDH/QNBj5uFlAz20e89Cc5MLFlh9ZKSIdMTFZxkUr5noiP7KRI1wXfuxD
dnN+O+c2I+s5Xsnnvmd/GfIF+3MpP0bex/94nfIF7nkCcIyHMw/qZWffo1de
LC+5YtHO2YCvmcOPSZYe18USfOWT2+KK3aerJ8lKa7LAxPfU42aosN8sU+41
KyhiZsZXEc14cU/80KIGVywALYK4YrLMhUwUeLedZT9qFlux8/seuT2q999k
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
C0CaORX7q7CFrm20/6/3lev/ABwI3WA=\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"d38405ec-d1be-4a21-bd13-d2649ec53fa3"],

Cell[BoxData[
 Graphics3DBox[
  TagBox[Raster3DBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOM5DJjoRXr9KyW71q
lR2QaQ9k24eGhtozMDQA6an2uMRBNC5xEJ8ccZB5uMRB7sAljs/9CHfi8p8W
Fn+E4nAvJh/TPVo43U/If4TCk5A7iYkPWppPuv24+eSmK1qaj4g/UuKdGPtx
hx++eMEX3uTkI8L+wx+e+N1JevmCL7/j9x956RO/PG534it/ABf7oJ4=
    "], {{0, 7, 7}, {7, 0, 0}}, {0., 1.},
    ColorFunction->"GrayLevelDefaultColorFunction",
    Method->{"FastRendering" -> True}],
   BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  AxesStyle->{},
  Background->None,
  BoxRatios->Automatic,
  Boxed->False,
  DefaultBaseStyle->"Image3DGraphics3D",
  ImageSize->{305.82244218466644`, 297.24353549648055`},
  ImageSizeRaw->7,
  PlotRange->{{0, 7}, {0, 7}, {0, 7}},
  ViewPoint->{3.0851019147081513`, -0.18223053399998324`, 1.3780196690694217`},
  ViewVertical->{0.6297555579814934, 0.775488318765345, 
   0.04500893966665442}]], "Output",
 CellChangeTimes->{{3.896331695181623*^9, 3.896331731194665*^9}, 
   3.896331763393186*^9, 3.896333541735243*^9, 3.896334656876666*^9, 
   3.8963347502818003`*^9, 3.896334819057868*^9, {3.8963348819360027`*^9, 
   3.896334900983534*^9}, {3.896415052620182*^9, 3.8964150665424356`*^9}, {
   3.896415254695978*^9, 3.89641529320192*^9}},
 CellLabel->"Out[312]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzcvXecVdX1PnyYfqcPvdmwJxpijL0hoyBV0ViiohRRQVAp0g1RE0s0amzR
GCsMKNIVu4JdYQakg/Rep8/A1Lt/z9rlnH3qPXfwm/fzef/YnHPvDHDvWWuv
9ay1nrV2n4Fj7h4yYuCYoYMHHt991MD77x46ePTx3e4bhbcSmxlGs5exnjre
SMI9MwzXH68Yxv/f7v/O/8xphveaMWYksuuNJDbFSN3Yw0jbOsDI2NffyDo4
yMgtHWC0qLjNaF3Z32iP18fsHsjfS1rURf57yeLfG8P/7Ej/VgL+nSS2yEhh
M40IViab2SqPfZDTki3Ias/mpx/D5kVOZHNzTmdzMjuz9zPOZXOzz6t7PXJW
9fjkPxwcaJxzaIBxwf7bjEsP3G5cfvA2o9v+242eB/obfQ4OMPodus34U/Ft
xo1Ytxy83Ui47dDt+AxX4+2L8GsnHxhg5JXdzL+K+HgJ4uMN5n+eJ74quz6Z
Fd6ZznZPyWIHx+ayrde0Yht7tGc7+h7Ptl51Gtva+3dsS99z2OY+l7ItPbux
Lb2vZlt7/plt7jmAbep5J1t58UC2uNMg9kHzO9nczOFsfuYoNj9rHJuXNRmv
H2LzMh9lczP+gddPYz2H1y/h/RcapqU/Xfd86uNVD6U8VD466S/FdyVMPjTQ
+Au+xl+LBxiP4Jv8Hd/jMawncP9k8e3GP/H1nzkorn/F1x+F6yB89X54PJfg
u5568FYunpTV1xtGVHzV6/ifPUkK+JpnR9j3F2SzH3u0Yst6dGQrupzCfs7/
HSvKP5f93P0CVnx/F3Zkcm9WPfkGdvjBAaxq4jBWOekBVjX5YVY58UlWNelF
Vj3pv7i+xUpHvcF293+Dbb/2LTyS6XgcM9mmXnNxfR/rY9x/xjb3+hLra6zv
sL5lqy/9mv3UeRFbfOLn7OP2n+KRfcrmZ3+GR/IFHslirK+xvsXr79ncrB/w
uH6iKx7VtzUvRxYfeTr186qHkz8un5D0fvnIxLmlQ5vNOjTYeA+PZxbWbDyq
ObjOw2OZj+sCLHpdgNf/kY/uYVzH4HoHrtdBRS472N/4TfFAo9XegdD2EUa9
eGpd+Z+9hIIIvc1m05q3Zm9nHs/eSDuVTU09i81Iv4hNi1zFpmZcx6ZHBrCC
jBF4PYFNS3uMTc94ki36/QtsSZc3WWH+u6yo6/u4for1NdYPeOJFrLDrSlzX
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
YEMTKrHKiu9MKC6+M3F/8ZDE3YfuSNgO8W0Gztxw6I5mqyHO5UA2P5Xe3eyb
kmHNvigd3mxhyb2Js6A3byO6frlyYuJTVVOS/4rIe2TNi5FB7N30q9icjFPZ
/Kxs9mFzShmtF1K7UPg/Sh79BaZzKaR0ENcjkJPu/+yBGJ7WYuUDnVY0zQrE
9twpnSBH/T5OcEw8ThDObg3+syKCtWdIJ3h8sBNcIJxgo3SCteQEn45IE2p3
guXKCVryyzZll0yyI7yZaBzXgD+xkupL7kmqKxmWXFtyT3JNyT0ph4uHp1aV
DE+pwOvSkuFJh0qHJ+7Hv7IbaHVH2ciErWWjEzci3lsHNLsSe74IceAPkNHi
I8+kfVz777T5DW+lv8Pm8twr5WTvZvMzeyKGPI0tyMplc3N5rLZGF1zqseyt
tJchlbVYpb6+bzruPjrJitW4tXRIjXzfNoRf+4ZasZplMu1SK9N9342xfd8m
Ga4t9QzXhMn0QC/R2TCZ0zJZ3avk+7Dp/olN9xgE93BM39dcCm5YIkwmZNYJ
f2L73ZPUWDI8GSsFK7WhZEQaYrxIfcl9aXWl96UiBk89UjYqpRqrsmxMcjlg
UUnF+KRDFZOS9ldNSdoLp7vr8OOp2448nbq59qW0DXWvRVY3Ts9YBllRQvhj
rJmQ3StYf8P9cFyvZnOyzmBzMpuzj7MpTbvSJr6L2fS0eRDS1kBn914LGc6d
6+ns1uKp7xgond2oEOHcCOnsbgnh7BDOraDoHvv929PiD+ficXYjEkzJJZHk
6GWScRL+xOYbTislWjIiNVpybyRacl+ksfR+rJFpiNaxRqfVl49NrSsfl1pb
MTG1pnJy6uGqKSlV1X9Lqax+LKW8+qnU0prnUovrXokcwC7bF303YxcktIXN
y1oPKS2X6fxPcT8L61VI7DFYzHvx/rW86DMnoxX7MJMkuFxI8AJhOcmWUlr9
K+7zCuDz7OGeKcS5MFBfALl/F+Dy/iRc3sERwZFDhXJ5A63UlcPlCSFm4c9e
0u3ly4jvd5rb6yjdXms94jOE38uxQr43IMh/W35PD/kqxnv6PcOSYiKX4qkM
EsQClBmRCriVxiDBKCQYLR2JNQprdFq07IG0xvJxWBPTGismpzVUTkmrr3ok
rb760bS6w0+m1eITHKl9KXIY+66qYVp6ZXR2ZhmkVgyJ7cfajbUVEt2A6wpI
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
pivD68MQXy1WPVYjrE6UbYAiL7/CveHMYyjdFGEr8lSMHmfbiuYZFVfUJ/KU
Ob9Eh8wc0FOvpvCIGaZ0O7zXgaHid6omHhMyyTfMIvTGLsY55zucYY4BChOK
2DsACjjrgkKRh7HhzA4Au+hyEUTfAVGR//sOItoEke3HqsD9EVzrsBog2kY4
/igrvifKykeJeurybo6Oo07Cx1nj5tz+j9fT9GNNHP4vzdv/eeX5TnY8/mxH
uKAlanja/BphK0gU9E/S7wk5tjVDSr79PPJ6XmycFT3CiNIxGVCO84kj9nBO
on1D0vQp9miuCzKvE9vQaxzb2msWBEZObxvWIQi1Etcavv82QZDb+zXCaUR5
+YESaPQ1qS2InjgEmqC3AtGpTb40GlkpozjFm0ZjmlDa5nz69aCgeaQBJrTS
J0xQgBK7inOZSBHpP6P/iH7HEnFLXwvbpBKa3olhK6HxSfihHKOiO0yLCLrD
1PSPJN3hDtxT+GGTbvvz2C89H0MI9iGkC8fYaxdWCaRbbVnXno1wLlFg8yif
iUgQgpqCxRMQT4zMIpXC+TEwng7S5h8pwKS0pfNUDk24lGui8oWareHu2Ikh
XCcBUqFL2meCGC2IiyRcQt1u4ebG/nc96DChGjJ0MqQYs+PpPoMHvyoa/eN4
vx+u1H4uhdtGbF1yn9ewrb1fhCAXAeWshzD34t7Dfd4cZYeGRvkxFFzA4wUr
rUr0PvAIj1RXnfPj50ZpW1Nd0AwwfUpnV/uXzvR+LKctTrO7QlUXoX9GbKws
XaQkartJzojNc/l1uipO4JNaY7lWP9I7TWol0vslCEV4GGITa05ztrr7nRDn
27C8P2CRaz3g7VoHSNc6WsRyleP1BskUYS9JEAS9Kd2nDWa081VOc/jXLp7+
ldy3eXrYfd7ZPkumtDs8Y4mR0sUOURXA5lysyV4iJacSbwmtKb0RcuY7Hc9V
kG7cSQ+Hk9eOaxpz4TPZrk1M9lPZ1NQWNgmfyDb2GA8pzsYqglS3+/jcqPC5
94rUKY/iJ+gSThP6LHq+xBwk2r3c8abbAk5VSwsKOJddcZQO15WX0+bJyFp1
a0UhpqjWkrT1nUJ52/3DfZJ9/pU0W6+DJd4ELu5E64y26RkSqMQ9RJV46xTq
EL2BeOtS5K1FHrAZM4yL2PYej0O8H0HUq6QzLsWyO+OdN0pnfJ9lq/UnRF9v
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
fjzZK5SXxBZ1uYpt7fkv7NXPuUf16+/adTM86t3OmNieiVWTnc0Dr5wtfCnC
mPkExh1U3oHcKj04AsgUWvEjpR3Rr5VuDctxUywlTlT3yrY6vKjKcJDlXMhT
6s80laEUS4T2AGefDHBWYlGAMwO/TQHOjbi2Ziu62URo9jm/jqV70QpbipST
0W8L8qKSjL5NDmX2CmnP1ibw2h3oMSqkpWIw7QOyflxkNuQTj6fUm4EIR60O
KuR6hKsEYgoynJ7SaU09GUOcm+LpJq2YpciMWchNHpJZS4pZimTM8ibem4DV
Hfqfhn1m2OXWli06XvUyLxVtXbKX2eUmB8dwk+R21PFPlFT0cJPmeH0PN2kK
j9fOThB/gf49snp8YJNDeLHtZqnTGYpGjvC1VJWNnNc+hN10RCQfnRwuIiGX
aEUkRXCJhTKlWNj1R/yN9/Gzl3A/HPfnsOX5nKljF+KpbH7WUDY3cxorPHsp
W3/FdrapR4lJ9dqkureuDxF40sM2z0fwDzy9uV7mLE+z/+f3woDRv0hGzxJj
GCmO9SZxxa5r+pK4wgcgXrSZkAEIN53523Bdjfe+wf0s/PwpXG/DfujEluSL
cS5yqkAeDfC5kM3LegBSfAPXxeyL4zaylRcehCQr2carauAVRerAi+zt9H6V
aiRxgPcjrEd+wWynteqQQoQZki9zujVO4kc51p7iG4oESx0adGJ4LpVoLw9O
++mFRjVo/t1cH9cXg8DyY8gUnzPioBTfZlwp4vhCRhwPAbxcg9fN2ffdDZsc
EUh+0qYXm5/9EJuX+Q5249dYa9gHLfawJWeVszWXHmEbrqzjcqTErr2e7NOP
5cN3Ipy+wDWEXrOiORZ3RXXPmofpSYRKwQyhU2d7BXSpkz+9yUHPVo0Wq3rH
DjDs9KZ4Aox4ySRWGq/QTOOJAKOIAox8BBj5o7EuQ+SYCtzikGMbNj/jFqyn
2NysuZDlD9iT6yHLnVgl7JtTq9mKC2vx1xpEX91w2Vfn6RK1riuyptQc63CJ
5kBZX5eYK37IB+J1tqZJ2E4UuFz8Y5QyJDNJJlP1xlXykZXaOIEwtTuKRWUb
esjknVaonds2ZPLORvpwhRhEio5N+qDk3Vqs7/HePFyfw3t3IZI8kxVe0cEm
19PZnMxhkOe/sT6EbAshz42Q7R5ci7Eq2efH1LJVlzewXf0buVx9oY739H/T
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
jUQxrGpg70QPp0cNBIJUf1oVCFTrvbwU+8pE+q7JkbXjsxRL1ylP6+G652m5
+/TZ3KffjZduxkw+/W94Dnz6Pp/gsZdxfg/L6XUZ29uXFn4lVFL43yYt2NTk
QTBQ/wHhWcgWtt3F1l56lG259gTbcWMF292tBh6YDxDxc4hwmCiiY0m3N4mO
HSW8wlr18evtznP4zjZnCxUxVfWgEgom2g6RYE2LqMJeMY+VV3OUGJWNBlSk
hSKunt4iitfvJwg/ncg17zVyofhCZhV9Er1LfPCIz3/DeT8JaV25ciEhm68R
Z/fZYDjv2b1/AqrexTwM127FY2exfX35GrGERyr/25h2J3+Czaw/jq08bzXb
1Cmbbb8hH455KbRHFdvToxbQwFfp5Tfwe+AOy74ILjl4wvgkiIxbyrbeezdz
bI5glqXKUmjeuqape/J1mNxFFsCTfNdc39SzlQxFGFWbPnK8VP0HfQv6cgRi
HkWgIsfumlg8jlZfWim+DdQwa70sY/tf5YbVeX3B6aZTbhi56TNw/C1gQ276
EzgnN70FqMylNsQQiDqwea1fY5s7zYELvhUM9zDQUgRbU45XwOL1gkqzIOag
alv8TAi6Ql2z+EZ4d1nCOQ66Qvc56YGgdCXKO+BS357qt7hDM4dT3MTbgaH7
nsRJ34++J1EKshakE0jUZEHsAKL3ijJWPGTpiWyT1Y3X5nczrsU4mYy1jixg
YYL75eEuTPxf5Z8p33yB9M0p/4x884HAQycgKZVl3irRVI//bRjDFnfuxfb3
+pzt7b0UYw9f/8rqVYJXVXIcZ/X2yW+lsyP369zEujXANmxS4XP27nxBmYuz
ZXHkzEU10ru8Wfg2xO7LGCvolBhD7h4lx3Bs9RO4M7DVy4kt+gwOW85zAppc
eaWzPfE/z2ZTLrjMZuststmyeo+X2WwjMPdj2X0pm4039pCwqS9ihYnsUP/7
8NAPEnDZMlBUKj+SQIuvdYsOFqOzwhAshu+0e6+jG7GDxay6xlIj5FLhHiRa
I90YI34ikxH/vDY8xDgdmOIXRDdBnko13BsxWxViekRxWxZt6x0UqwCzwQUw
VH5rJzr/n8mFI3+bFinI31a5cG/jfCjA0guKox3L6XkKaI4CTAMBG1oSpdyp
iXj6WrlIViDIdm8BmIN3+qEcAZahOjsRiteQ+g3sx2fjNcsdMZkgvMbNr7bm
MvIeeVozk9Q4xLapR2DwVjQqEB1VUkXD7aOPi/gbdVwxgHKLFShWtSLX6BNl
TbNb55b7ReZmeB7138+ec2M17h61NXtuGqPsuaw+/8RMCCCPuhE71OMygY+G
whq1Zrv7Us4N+d8b5DsRxSZrVw0M+4BnP7CtOxakAgkMKfVMlfHgEm+xVii7
EZgw7M4vlhZ30mMOe7XaUpLSmH/tJiKrnrxdwgxlcHFw3CZes9UKDElgNsoF
A6Wddt8lSAmx/RMv8p+ksbfb/H+YWrcfzxWpdfv6rMSg1Dpymz/FdXKb78e4
HNcS2aqrJR4aCef5XJbTd4xMtyVWc0i+cwVAWwMi5WPFw4CFEbpnmQLvfReE
gqh9f8IKnoSqZjB6z10ZPguxNV8a5mhpUvCMECclNpADR9aAmlNwOJDKuUnw
UrIUJP6cB0i/8NWhWHqP+v/H2XX7PLLrxN1M2XWzcf4TMPE+3o+c4ttZTq+z
CVa0om0XPrk4V7J9t7wpIy3bBZxuPcGOpVWxgiG1+PJ+UUb9kq6UgCF8VbkQ
mAdpiYlcI+Tl1XrOw+m15jJYKs1F17cgkreGQx3ZTSUvWRZjxOpeKjPak1Cb
hX3QCJnU+wf/y1b8L7vwf2Xj2lFLJwq8C732ZRMAiTYFEE4eXe7Jy6PLln5u
Nvm5fcjPpTy6tbi+CMhIxznl0f0bx+Tndgd1aMl29rhcgKCx8HYp65I84I+k
HcmEqcqDFSjDF67Gl/eJMuqRBACdkwKjRbgkCUTW9vQPGvygUITRz6ROJOGX
RuZmOX9cFIQkuK3GkTOQO6S5Q/6N7JZbKWryIA/hBXvI/ONNDj0oPEreWkB2
nyDjyNPBOSY4JIhH8AJs0USdg0O4PEz9apbPTnJhDW5pdZHG4a1WglhDER63
ptWZ1VM8ra73VFk99Q+MQXjetUACcUiJkSZCUcTjCi0UUgLeCrjV+/Elj8My
VODL10A5+Dg2Sg18mJkHIyyRDntqpM1HXdTBrQlvWD5qqj0DkpqnhfRRewTG
Oa21MOJ2bu3B/5VOtzqNaSITI/sWkZVBCcVH7hfOJMVB6bYn0brDR61KyLyN
kQZeYk28JIfxJVSK3a1aXXPsenvn2O2TOXZZ3LUQhVjZvBDrQjyXF2JJzDQV
KzgpLK//IJ7if+yRzfiif0GXnMB/W4V/pJZ3ZSkbpfNRbtlygG+Y80BgKYXV
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\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"c5806353-2d39-4c0a-ad56-6333f7bc88ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "6"], ",", 
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"], ",", 
       FractionBox["1", "6"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"], ",", 
       FractionBox["1", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["1", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"], ",", 
       FractionBox["2", "3"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1", ",", 
       FractionBox["5", "6"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "6"], ",", 
       FractionBox["1", "3"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["2", "3"], ",", 
       FractionBox["5", "6"], ",", "1", ",", 
       FractionBox["7", "6"]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.896331695181623*^9, 3.896331731194665*^9}, 
   3.896331763393186*^9, 3.896333541735243*^9, 3.896334656876666*^9, 
   3.8963347502818003`*^9, 3.896334819057868*^9, {3.8963348819360027`*^9, 
   3.896334900983534*^9}, {3.896415052620182*^9, 3.8964150665424356`*^9}, {
   3.896415254695978*^9, 3.896415293213668*^9}},
 CellLabel->
  "Out[313]=",ExpressionUUID->"d97cfb3d-818a-4fba-9d79-270e56743867"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Image3DSlices", "[", 
  RowBox[{"Image3D", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"maxCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
    RowBox[{"Max", "[", "maxCube", "]"}]}], "]"}], "]"}], "\n", 
 RowBox[{"Image3DSlices", "[", 
  RowBox[{"Image3D", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"minCube", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
    RowBox[{"Max", "[", "minCube", "]"}]}], "]"}], "]"}]}], "Code",
 CellChangeTimes->{{3.8963317489102383`*^9, 3.8963317547401857`*^9}, {
  3.896333381775753*^9, 3.8963334130694427`*^9}, {3.89633467388951*^9, 
  3.896334689438015*^9}, {3.896334841120194*^9, 3.896334848670566*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"d51e056e-190d-42a3-a07a-ca0d26fe9e42"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.1111111119389534, 0.2222222238779068, 
       0.3333333432674408, 0.4444444477558136, 0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544}, {0.2222222238779068, 
       0.3333333432674408, 0.4444444477558136, 0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544, 0.6666666865348816}, {
       0.3333333432674408, 0.4444444477558136, 0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544, 0.6666666865348816, 
       0.5555555820465088}, {0.4444444477558136, 0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544, 0.6666666865348816, 
       0.5555555820465088, 0.4444444477558136}, {0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544, 0.6666666865348816, 
       0.5555555820465088, 0.4444444477558136, 0.3333333432674408}, {
       0.6666666865348816, 0.7777777910232544, 0.6666666865348816, 
       0.5555555820465088, 0.4444444477558136, 0.3333333432674408, 
       0.2222222238779068}, {0.7777777910232544, 0.6666666865348816, 
       0.5555555820465088, 0.4444444477558136, 0.3333333432674408, 
       0.2222222238779068, 0.1111111119389534}}], {{0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.2222222238779068, 0.3333333432674408, 
       0.4444444477558136, 0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.6666666865348816}, {0.3333333432674408, 
       0.4444444477558136, 0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.8888888955116272, 0.7777777910232544}, {
       0.4444444477558136, 0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.8888888955116272, 0.7777777910232544, 
       0.6666666865348816}, {0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.8888888955116272, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088}, {0.6666666865348816, 
       0.7777777910232544, 0.8888888955116272, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088, 0.4444444477558136}, {
       0.7777777910232544, 0.8888888955116272, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088, 0.4444444477558136, 
       0.3333333432674408}, {0.6666666865348816, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088, 0.4444444477558136, 
       0.3333333432674408, 0.2222222238779068}}], {{0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.3333333432674408, 0.4444444477558136, 
       0.5555555820465088, 0.6666666865348816, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088}, {0.4444444477558136, 
       0.5555555820465088, 0.6666666865348816, 0.7777777910232544, 
       0.8888888955116272, 0.7777777910232544, 0.6666666865348816}, {
       0.5555555820465088, 0.6666666865348816, 0.7777777910232544, 
       0.8888888955116272, 1., 0.8888888955116272, 0.7777777910232544}, {
       0.6666666865348816, 0.7777777910232544, 0.8888888955116272, 1., 
       0.8888888955116272, 0.7777777910232544, 0.6666666865348816}, {
       0.7777777910232544, 0.8888888955116272, 1., 0.8888888955116272, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088}, {
       0.6666666865348816, 0.7777777910232544, 0.8888888955116272, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088, 
       0.4444444477558136}, {0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088, 
       0.4444444477558136, 0.3333333432674408}}], {{0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.4444444477558136, 0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544, 0.6666666865348816, 
       0.5555555820465088, 0.4444444477558136}, {0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544, 0.8888888955116272, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088}, {
       0.6666666865348816, 0.7777777910232544, 0.8888888955116272, 1., 
       0.8888888955116272, 0.7777777910232544, 0.6666666865348816}, {
       0.7777777910232544, 0.8888888955116272, 1., 1.1111111640930176`, 1., 
       0.8888888955116272, 0.7777777910232544}, {0.6666666865348816, 
       0.7777777910232544, 0.8888888955116272, 1., 0.8888888955116272, 
       0.7777777910232544, 0.6666666865348816}, {0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544, 0.8888888955116272, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088}, {
       0.4444444477558136, 0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088, 
       0.4444444477558136}}], {{0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088, 
       0.4444444477558136, 0.3333333432674408}, {0.6666666865348816, 
       0.7777777910232544, 0.8888888955116272, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088, 0.4444444477558136}, {
       0.7777777910232544, 0.8888888955116272, 1., 0.8888888955116272, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088}, {
       0.6666666865348816, 0.7777777910232544, 0.8888888955116272, 1., 
       0.8888888955116272, 0.7777777910232544, 0.6666666865348816}, {
       0.5555555820465088, 0.6666666865348816, 0.7777777910232544, 
       0.8888888955116272, 1., 0.8888888955116272, 0.7777777910232544}, {
       0.4444444477558136, 0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.8888888955116272, 0.7777777910232544, 
       0.6666666865348816}, {0.3333333432674408, 0.4444444477558136, 
       0.5555555820465088, 0.6666666865348816, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088}}], {{0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.6666666865348816, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088, 0.4444444477558136, 
       0.3333333432674408, 0.2222222238779068}, {0.7777777910232544, 
       0.8888888955116272, 0.7777777910232544, 0.6666666865348816, 
       0.5555555820465088, 0.4444444477558136, 0.3333333432674408}, {
       0.6666666865348816, 0.7777777910232544, 0.8888888955116272, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088, 
       0.4444444477558136}, {0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.8888888955116272, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088}, {0.4444444477558136, 
       0.5555555820465088, 0.6666666865348816, 0.7777777910232544, 
       0.8888888955116272, 0.7777777910232544, 0.6666666865348816}, {
       0.3333333432674408, 0.4444444477558136, 0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544, 0.8888888955116272, 
       0.7777777910232544}, {0.2222222238779068, 0.3333333432674408, 
       0.4444444477558136, 0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.6666666865348816}}], {{0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.7777777910232544, 0.6666666865348816, 
       0.5555555820465088, 0.4444444477558136, 0.3333333432674408, 
       0.2222222238779068, 0.1111111119389534}, {0.6666666865348816, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088, 
       0.4444444477558136, 0.3333333432674408, 0.2222222238779068}, {
       0.5555555820465088, 0.6666666865348816, 0.7777777910232544, 
       0.6666666865348816, 0.5555555820465088, 0.4444444477558136, 
       0.3333333432674408}, {0.4444444477558136, 0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544, 0.6666666865348816, 
       0.5555555820465088, 0.4444444477558136}, {0.3333333432674408, 
       0.4444444477558136, 0.5555555820465088, 0.6666666865348816, 
       0.7777777910232544, 0.6666666865348816, 0.5555555820465088}, {
       0.2222222238779068, 0.3333333432674408, 0.4444444477558136, 
       0.5555555820465088, 0.6666666865348816, 0.7777777910232544, 
       0.6666666865348816}, {0.1111111119389534, 0.2222222238779068, 
       0.3333333432674408, 0.4444444477558136, 0.5555555820465088, 
       0.6666666865348816, 0.7777777910232544}}], {{0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.896331755379592*^9, 3.896331765428173*^9}, {
   3.896333386471965*^9, 3.8963334133407717`*^9}, {3.8963346614386787`*^9, 
   3.896334690766985*^9}, 3.896334753576983*^9, 3.896334849032866*^9, {
   3.896415056361308*^9, 3.8964150704640007`*^9}},
 CellLabel->
  "Out[303]=",ExpressionUUID->"c847e9b8-6d1e-48b2-8b14-2637ff4b6b81"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.1666666716337204, 0.3333333432674408, 0.5, 
       0.6666666865348816, 0.8333333134651184, 1., 1.1666666269302368`}, {
       0.3333333432674408, 0.5, 0.6666666865348816, 0.8333333134651184, 1., 
       1.1666666269302368`, 1.}, {0.5, 0.6666666865348816, 0.8333333134651184,
        1., 1.1666666269302368`, 1., 0.8333333134651184}, {0.6666666865348816,
        0.8333333134651184, 1., 1.1666666269302368`, 1., 0.8333333134651184, 
       0.6666666865348816}, {0.8333333134651184, 1., 1.1666666269302368`, 1., 
       0.8333333134651184, 0.6666666865348816, 0.5}, {1., 1.1666666269302368`,
        1., 0.8333333134651184, 0.6666666865348816, 0.5, 
       0.3333333432674408}, {1.1666666269302368`, 1., 0.8333333134651184, 
       0.6666666865348816, 0.5, 0.3333333432674408, 0.1666666716337204}}], {{
       0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.3333333432674408, 0.5, 0.6666666865348816, 
       0.8333333134651184, 1., 1.1666666269302368`, 1.}, {0.5, 
       0.3333333432674408, 0.5, 0.6666666865348816, 0.8333333134651184, 1., 
       1.1666666269302368`}, {0.6666666865348816, 0.5, 0.6666666865348816, 
       0.8333333134651184, 1., 0.8333333134651184, 1.}, {0.8333333134651184, 
       0.6666666865348816, 0.8333333134651184, 1., 0.8333333134651184, 
       0.6666666865348816, 0.8333333134651184}, {1., 0.8333333134651184, 1., 
       0.8333333134651184, 0.6666666865348816, 0.5, 0.6666666865348816}, {
       1.1666666269302368`, 1., 0.8333333134651184, 0.6666666865348816, 0.5, 
       0.3333333432674408, 0.5}, {1., 1.1666666269302368`, 1., 
       0.8333333134651184, 0.6666666865348816, 0.5, 0.3333333432674408}}], {{
       0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.5, 0.6666666865348816, 0.8333333134651184, 1., 
       1.1666666269302368`, 1., 0.8333333134651184}, {0.6666666865348816, 0.5,
        0.6666666865348816, 0.8333333134651184, 1., 0.8333333134651184, 1.}, {
       0.8333333134651184, 0.6666666865348816, 0.5, 0.6666666865348816, 
       0.8333333134651184, 1., 1.1666666269302368`}, {1., 0.8333333134651184, 
       0.6666666865348816, 0.8333333134651184, 0.6666666865348816, 
       0.8333333134651184, 1.}, {1.1666666269302368`, 1., 0.8333333134651184, 
       0.6666666865348816, 0.5, 0.6666666865348816, 0.8333333134651184}, {1., 
       0.8333333134651184, 1., 0.8333333134651184, 0.6666666865348816, 0.5, 
       0.6666666865348816}, {0.8333333134651184, 1., 1.1666666269302368`, 1., 
       0.8333333134651184, 0.6666666865348816, 0.5}}], {{0, 7.}, {7., 0}}, {
      0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.6666666865348816, 0.8333333134651184, 1., 
       1.1666666269302368`, 1., 0.8333333134651184, 0.6666666865348816}, {
       0.8333333134651184, 0.6666666865348816, 0.8333333134651184, 1., 
       0.8333333134651184, 0.6666666865348816, 0.8333333134651184}, {1., 
       0.8333333134651184, 0.6666666865348816, 0.8333333134651184, 
       0.6666666865348816, 0.8333333134651184, 1.}, {1.1666666269302368`, 1., 
       0.8333333134651184, 0.6666666865348816, 0.8333333134651184, 1., 
       1.1666666269302368`}, {1., 0.8333333134651184, 0.6666666865348816, 
       0.8333333134651184, 0.6666666865348816, 0.8333333134651184, 1.}, {
       0.8333333134651184, 0.6666666865348816, 0.8333333134651184, 1., 
       0.8333333134651184, 0.6666666865348816, 0.8333333134651184}, {
       0.6666666865348816, 0.8333333134651184, 1., 1.1666666269302368`, 1., 
       0.8333333134651184, 0.6666666865348816}}], {{0, 7.}, {7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{0.8333333134651184, 1., 1.1666666269302368`, 1., 
       0.8333333134651184, 0.6666666865348816, 0.5}, {1., 0.8333333134651184, 
       1., 0.8333333134651184, 0.6666666865348816, 0.5, 0.6666666865348816}, {
       1.1666666269302368`, 1., 0.8333333134651184, 0.6666666865348816, 0.5, 
       0.6666666865348816, 0.8333333134651184}, {1., 0.8333333134651184, 
       0.6666666865348816, 0.8333333134651184, 0.6666666865348816, 
       0.8333333134651184, 1.}, {0.8333333134651184, 0.6666666865348816, 0.5, 
       0.6666666865348816, 0.8333333134651184, 1., 1.1666666269302368`}, {
       0.6666666865348816, 0.5, 0.6666666865348816, 0.8333333134651184, 1., 
       0.8333333134651184, 1.}, {0.5, 0.6666666865348816, 0.8333333134651184, 
       1., 1.1666666269302368`, 1., 0.8333333134651184}}], {{0, 7.}, {
       7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{1., 1.1666666269302368`, 1., 0.8333333134651184, 
       0.6666666865348816, 0.5, 0.3333333432674408}, {1.1666666269302368`, 1.,
        0.8333333134651184, 0.6666666865348816, 0.5, 0.3333333432674408, 
       0.5}, {1., 0.8333333134651184, 1., 0.8333333134651184, 
       0.6666666865348816, 0.5, 0.6666666865348816}, {0.8333333134651184, 
       0.6666666865348816, 0.8333333134651184, 1., 0.8333333134651184, 
       0.6666666865348816, 0.8333333134651184}, {0.6666666865348816, 0.5, 
       0.6666666865348816, 0.8333333134651184, 1., 0.8333333134651184, 1.}, {
       0.5, 0.3333333432674408, 0.5, 0.6666666865348816, 0.8333333134651184, 
       1., 1.1666666269302368`}, {0.3333333432674408, 0.5, 0.6666666865348816,
        0.8333333134651184, 1., 1.1666666269302368`, 1.}}], {{0, 7.}, {
       7., 0}}, {0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}], ",", 
   GraphicsBox[
    TagBox[
     RasterBox[
      RawArray["Real32",{{1.1666666269302368`, 1., 0.8333333134651184, 
       0.6666666865348816, 0.5, 0.3333333432674408, 0.1666666716337204}, {1., 
       1.1666666269302368`, 1., 0.8333333134651184, 0.6666666865348816, 0.5, 
       0.3333333432674408}, {0.8333333134651184, 1., 1.1666666269302368`, 1., 
       0.8333333134651184, 0.6666666865348816, 0.5}, {0.6666666865348816, 
       0.8333333134651184, 1., 1.1666666269302368`, 1., 0.8333333134651184, 
       0.6666666865348816}, {0.5, 0.6666666865348816, 0.8333333134651184, 1., 
       1.1666666269302368`, 1., 0.8333333134651184}, {0.3333333432674408, 0.5,
        0.6666666865348816, 0.8333333134651184, 1., 1.1666666269302368`, 
       1.}, {0.1666666716337204, 0.3333333432674408, 0.5, 0.6666666865348816, 
       0.8333333134651184, 1., 1.1666666269302368`}}], {{0, 7.}, {7., 0}}, {
      0., 1.},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{7., 7.},
    PlotRange->{{0, 7.}, {0, 7.}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.896331755379592*^9, 3.896331765428173*^9}, {
   3.896333386471965*^9, 3.8963334133407717`*^9}, {3.8963346614386787`*^9, 
   3.896334690766985*^9}, 3.896334753576983*^9, 3.896334849032866*^9, {
   3.896415056361308*^9, 3.896415070480075*^9}},
 CellLabel->
  "Out[304]=",ExpressionUUID->"4a576f16-0a7f-47be-bb2f-4b2a5fed13b3"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"selectRandomSite", "[", "dim_", "]"}], " ", ":=", " ", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"2", ",", " ", 
        RowBox[{"dim", " ", "-", " ", "1"}]}], "]"}], ",", " ", "3"}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"coinFlip", "[", "]"}], " ", ":=", " ", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"{", 
    RowBox[{"checkPopUp", ",", " ", "checkPopDown"}], "}"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeVal", "[", 
    RowBox[{"grid_", ",", " ", "pos_", ",", " ", "newVal_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{"grid", ",", " ", 
     RowBox[{"pos", " ", "->", " ", "newVal"}]}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Check", " ", "if", " ", "you", " ", "can", " ", "pop", " ", "up", " ", 
     "a", " ", "cell", " ", "at", " ", "pos", " ", "in", " ", 
     RowBox[{"grid", ".", " ", "Works"}], " ", "on", " ", "both", " ", 
     "height", " ", "values", " ", "and", " ", "3"}], "-", "colourings"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkPopUp", "[", 
    RowBox[{"grid_", ",", " ", "pos_"}], "]"}], " ", ":=", " ", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], " ", "~", " ", 
      "Join", " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "~", " ", "Join", 
      " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}]}], "]"}], "]"}]}], 
     ",", " ", "\n", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"grid", "[", 
           RowBox[{"[", 
            RowBox[{"Sequence", " ", "@@", " ", "pos"}], "]"}], "]"}], " ", 
          "-", " ", "#"}], ",", " ", "3"}], "]"}], " ", "==", " ", "2"}], " ",
       "&"}]}], "]"}]}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Check", " ", "if", " ", "you", " ", "can", " ", "pop", " ", "down", " ", 
     "a", " ", "cell", " ", "at", " ", "pos", " ", "in", " ", 
     RowBox[{"grid", ".", " ", "Works"}], " ", "on", " ", "both", " ", 
     "height", " ", "values", " ", "and", " ", "3"}], "-", "colourings"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkPopDown", "[", 
    RowBox[{"grid_", ",", " ", "pos_"}], "]"}], " ", ":=", " ", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], " ", "~", " ", 
      "Join", " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], "~", " ", "Join", 
      " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}]}], "]"}], "]"}]}], 
     ",", " ", "\n", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"grid", "[", 
           RowBox[{"[", 
            RowBox[{"Sequence", " ", "@@", " ", "pos"}], "]"}], "]"}], " ", 
          "-", " ", "#"}], ",", " ", "3"}], "]"}], " ", "==", " ", "1"}], " ",
       "&"}]}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"If", " ", "heads"}], ",", " ", 
    RowBox[{
     RowBox[{
     "check", " ", "if", " ", "site", " ", "can", " ", "be", " ", "popped", 
      " ", "up"}], ";", " ", "otherwise"}], ",", " ", 
    RowBox[{
    "check", " ", "if", " ", "site", " ", "can", " ", "be", " ", "popped", 
     " ", 
     RowBox[{"down", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"coinFunctionAssociation", " ", "=", " ", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"checkPopUp", " ", "->", " ", "True"}], ",", " ", 
     RowBox[{"checkPopDown", " ", "->", " ", "False"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"coinSignAssociation", " ", "=", " ", 
    RowBox[{"Association", "[", 
     RowBox[{
      RowBox[{"checkPopUp", " ", "->", " ", "Plus"}], ",", " ", 
      RowBox[{"checkPopDown", " ", "->", " ", "Subtract"}]}], "]"}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"coinTosses", ":", " ", 
     RowBox[{
     "list", " ", "of", " ", "random", " ", "coin", " ", "flips", " ", "in", 
      " ", "the", " ", "form", " ", "of", " ", "a", " ", "list", " ", 
      "checkPopUp"}]}], ",", " ", 
    RowBox[{"checkPopDown", " ", "functions"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"sites", ":", " ", 
    RowBox[{"list", " ", "of", " ", "random", " ", "sites"}]}], " ", "*)"}], 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "generates", " ", "numSteps", " ", "new", " ", "coin", " ", "tosses", " ", 
    "and", " ", "sites", " ", "and", " ", "adds", " ", "them", " ", "to", " ",
     "the", " ", "the", " ", "beginning", " ", "of", " ", "existing", " ", 
    "lists"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extendRandomLists", "[", "numSteps_", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\n", "\t", 
    RowBox[{
     RowBox[{"coinTosses", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"coinFlip", "[", "]"}], ",", " ", "numSteps"}], "]"}], ",", 
        " ", "coinTosses"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"sites", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"selectRandomSite", "[", "]"}], ",", " ", "numSteps"}], 
         "]"}], ",", " ", "sites"}], "]"}]}], ";"}], "\n", ")"}]}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Execute", " ", "one", " ", "step", " ", "of", " ", "the", " ", "Markov", 
    " ", "chain", " ", "on", " ", "grid"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"OPTIMISATION", ":", " ", 
    RowBox[{
    "maybe", " ", "put", " ", "this", " ", "in", " ", "the", " ", "function", 
     " ", "that", " ", "performs", " ", "multiple", " ", "steps", " ", 
     "instead", " ", "of", " ", "calling", " ", "it", " ", "over", " ", "and",
      " ", 
     RowBox[{"over", "?"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneStep", "[", 
    RowBox[{"coin_", ",", " ", "site_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"initialGrids", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}]}], ",", " ", 
       RowBox[{"outGrids", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}]}]}], "}"}], ",", 
     "\n", "   ", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"coin", "[", 
            RowBox[{
             RowBox[{"initialGrids", "[", 
              RowBox[{"[", "#", "]"}], "]"}], ",", " ", "site"}], "]"}], ",", 
           " ", "\n", "   ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"outGrids", "[", 
               RowBox[{"[", "#", "]"}], "]"}], " ", "=", " ", 
              RowBox[{"changeVal", "[", 
               RowBox[{
                RowBox[{"initialGrids", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], ",", " ", "site", ",", " ", 
                RowBox[{
                 RowBox[{"coinSignAssociation", "[", "coin", "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"initialGrids", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"Sequence", " ", "@@", " ", "site"}], "]"}], 
                   "]"}], ",", " ", "2"}], "]"}]}], "]"}]}], ";"}], ")"}]}], 
          "]"}], " ", "&"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "2"}], "}"}]}], "]"}], ";", "\n", "   ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}], " ", "=", " ", 
       "outGrids"}], ";"}]}], "\n", "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Executes", " ", "the", " ", "algorithm", " ", "for", " ", "numSteps"}], 
    " ", "=", " ", 
    RowBox[{"len", 
     RowBox[{"(", "coinTosses", ")"}], " ", "steps"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Additionally", ":", " ", 
     RowBox[{"logs", " ", "files", " ", "every", " ", 
      RowBox[{"numSteps", "/", "100"}], " ", "or", " ", "10", " ", "million", 
      " ", "steps"}]}], ",", " ", 
    RowBox[{"whichever", " ", "is", " ", "lower"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Returns", " ", "1", " ", "if", " ", "the", " ", "grids", " ", 
     "converged"}], ",", " ", 
    RowBox[{"0", " ", "if", " ", "not"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nStepsMarkovChain", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"numSteps", " ", "=", " ", 
        RowBox[{"Length", "[", "coinTosses", "]"}]}], ",", "\n", 
       "\t\t\t\t\t\t\t", 
       RowBox[{"logInterval", " ", "=", " ", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"10", "^", "7"}], ",", " ", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Length", "[", "coinTosses", "]"}], " ", "/", " ", 
              "100"}], "]"}], ",", " ", "20000"}], "]"}]}], "]"}]}], ",", 
       "\n", "\t\t\t\t\t\t\t", 
       RowBox[{"outDir", " ", "=", " ", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"logDir", ",", " ", "\"\<coupling_\>\"", ",", " ", 
          RowBox[{"ToString", "[", "dim", "]"}], ",", " ", "\"\</log_\>\""}], 
         "]"}]}], ",", "\n", "\t\t\t\t\t\t\t", "i", ",", " ", "tempMinGrid", 
       ",", " ", "tempMaxGrid", ",", " ", "tempHeightDifference", ",", " ", 
       "tempStepNumber"}], "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Running for \>\"", ",", " ", "numSteps", ",", " ", 
        "\"\< steps...\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Logging every \>\"", ",", " ", "logInterval", ",", " ", 
        "\"\< steps\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"Catch", "[", 
       RowBox[{
        RowBox[{"Monitor", "[", "\n", "    ", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", " ", "=", " ", "0"}], ",", " ", 
            RowBox[{"i", " ", "<", " ", "numSteps"}], ",", " ", 
            RowBox[{"i", "++"}], ",", " ", 
            RowBox[{"(", "\n", "      ", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"i", ",", " ", "logInterval"}], "]"}], " ", "==", 
                 " ", "0"}], ",", " ", "\n", "       ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Export", "[", 
                   RowBox[{
                    RowBox[{"StringJoin", "[", 
                    RowBox[{"outDir", ",", " ", 
                    RowBox[{"ToString", "[", "i", "]"}], ",", " ", 
                    "\"\<.mx\>\""}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}]}], "]"}], 
                  ";", "\n", "        ", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"tempMinGrid", ",", " ", "tempMaxGrid"}], "}"}], 
                   " ", "=", " ", 
                   RowBox[{"{", 
                    RowBox[{"minGrid", ",", " ", "maxGrid"}], "}"}]}], ";", 
                  "\n", "        ", 
                  RowBox[{"tempHeightDifference", " ", "=", " ", 
                   RowBox[{"checkHeightDifference", "[", 
                    RowBox[{"tempMinGrid", ",", " ", "tempMaxGrid"}], "]"}]}],
                   ";", "\n", "        ", 
                  RowBox[{"tempStepNumber", " ", "=", " ", "i"}], ";"}], "\n",
                  "        ", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "WHAT", " ", "IS", " ", "THIS", " ", "LINE", " ", "DOING", 
                   " ", 
                   RowBox[{"HERE", "?"}]}], " ", "*)"}], "\n", "        ", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"displayGrids", "[", 
                    RowBox[{
                    "tempMaxGrid", ",", " ", "tempMinGrid", ",", " ", 
                    "blueColourRules"}], "]"}], ";"}], "*)"}], "\n", 
                 "        ", ")"}]}], "\n", "      ", "]"}], ";", "\n", 
              "      ", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{"OPTIMISATION", ":", " ", 
                 RowBox[{
                  RowBox[{"don", "'"}], "t", " ", "need", " ", "to", " ", 
                  "check", " ", "height", " ", "difference", " ", "each", " ", 
                  RowBox[{"time", ".", " ", "If"}], " ", "difference", " ", 
                  "is", " ", "1000"}]}], ",", " ", 
                RowBox[{
                "only", " ", "need", " ", "to", " ", "check", " ", "again", 
                 " ", "after", " ", "500", " ", "steps"}]}], "*)"}], "\n", 
              "      ", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{"OPTIMISATION", ":", " ", 
                 RowBox[{
                 "maybe", " ", "have", " ", "a", " ", 
                  "quickCheckHeightDifference"}]}], ",", " ", 
                RowBox[{
                "that", " ", "checks", " ", "a", " ", "few", " ", "cells", 
                 " ", "randomly"}]}], " ", "*)"}], "\n", "      ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"checkHeightDifference", "[", 
                  RowBox[{"maxGrid", ",", " ", "minGrid"}], "]"}], " ", "==", 
                 " ", "0"}], ",", " ", 
                RowBox[{"(", "\n", "         ", 
                 RowBox[{
                  RowBox[{"tempHeightDifference", " ", "=", " ", "0"}], ";", 
                  "     ", "\n", "         ", 
                  RowBox[{"Throw", "[", "1", "]"}]}], ")"}]}], "]"}], ";", 
              "\n", "      ", "\n", "      ", 
              RowBox[{"oneStep", "[", 
               RowBox[{
                RowBox[{"coinTosses", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
                RowBox[{"sites", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}], ")"}]}], 
           "\n", "    ", "]"}], ",", " ", "\n", "    ", 
          RowBox[{"Grid", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<Current step: \>\"", ",", " ", 
                RowBox[{"ToString", "[", "tempStepNumber", "]"}]}], "]"}], 
              "}"}], ",", " ", "\n", "          ", 
             RowBox[{"{", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<Height difference: \>\"", ",", " ", 
                RowBox[{"ToString", "[", "tempHeightDifference", "]"}]}], 
               "]"}], "}"}], ",", " ", "\n", "          ", 
             RowBox[{"{", 
              RowBox[{"displayGrids", "[", 
               RowBox[{
               "tempMaxGrid", ",", " ", "tempMinGrid", ",", " ", 
                "blueColourRules"}], "]"}], "}"}]}], "}"}], "\n", "    ", 
           "]"}]}], "\n", "  ", "]"}], ";"}], "]"}], ";", "\n", "  ", "\n", 
      "  ", "\n", "  ", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<-- The height difference after \>\"", ",", " ", "i", ",", " ", 
        "\"\< steps was \>\"", ",", " ", "tempHeightDifference", ",", " ", 
        "\"\<.\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"tempHeightDifference", " ", "==", " ", "0"}], ",", " ", 
        RowBox[{"Return", "[", "1", "]"}]}], "]"}], ";", "\n", "  ", 
      RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\n", "]"}]}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"startChain", "[", 
   RowBox[{"dimension_", ",", " ", "t_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "coins", ",", " ", "timestamp", ",", "\n", "\t\t\t\t\t\t\t\t\t", 
      RowBox[{"dirName", " ", "=", " ", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"logDir", ",", " ", "\"\<coupling_\>\"", ",", " ", 
         RowBox[{"ToString", "[", "dimension", "]"}], ",", " ", 
         "\"\<_logs/\>\""}], "]"}]}], ",", " ", "\n", "\t\t\t\t\t\t\t\t\t", 
      RowBox[{"finalDirName", " ", "=", " ", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"logDir", ",", " ", "\"\<coupling_\>\"", ",", " ", 
         RowBox[{"ToString", "[", "dimension", "]"}], ",", " ", 
         "\"\<_samples/\>\""}], "]"}]}], ",", "\n", "\t\t\t\t\t\t\t\t\t", 
      RowBox[{"steps", " ", "=", " ", "t"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"dim", " ", "=", " ", "dimension"}], ";", "\n", "\t", 
     RowBox[{"sites", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "\t", 
     RowBox[{"coinTosses", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "\t", 
     RowBox[{"converged", " ", "=", " ", "0"}], ";", "\t", "\n", "\t", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"converged", " ", "==", " ", "0"}], ",", " ", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"Reset", " ", "stuff"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}], " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"generateMaxHeightGrid", "[", "dim", "]"}], ",", " ", 
            RowBox[{"generateMinHeightGrid", "[", "dim", "]"}]}], "}"}]}], 
         ";", "\n", "\t\t", 
         RowBox[{"Quiet", " ", "@", " ", 
          RowBox[{"DeleteDirectory", "[", 
           RowBox[{"dirName", ",", " ", 
            RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}]}], ";", 
         "\n", "\t    ", 
         RowBox[{"CreateDirectory", "[", "dirName", "]"}], ";", "\n", 
         "\t    ", "\n", "\t    ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "Generate", " ", "new", " ", "coin", " ", "tosses", " ", "and", 
            " ", "sites"}], ",", " ", 
           RowBox[{"and", " ", "log", " ", "them"}]}], "*)"}], "\t\t", "\n", 
         "\t\t", 
         RowBox[{"extendRandomLists", "[", "steps", "]"}], ";", "\n", "\t\t", 
         
         RowBox[{"steps", " ", "=", " ", 
          RowBox[{"Length", "[", "coinTosses", "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"dirName", ",", " ", "\"\<sites.csv\>\""}], "]"}], ",", 
           " ", "sites", ",", " ", "\"\<CSV\>\""}], "]"}], ";", "\n", "\t\t", 
         
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"dirName", ",", " ", "\"\<coin_tosses.csv\>\""}], "]"}], 
           ",", " ", "coinTosses", ",", " ", "\"\<CSV\>\""}], "]"}], ";", 
         "\n", "\t\t", "\n", "\t    ", 
         RowBox[{"converged", " ", "=", " ", 
          RowBox[{"nStepsMarkovChain", "[", "]"}]}], ";", "\n", "\t    ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"converged", " ", "==", " ", "1"}], ",", " ", "Break"}], 
          "]"}]}], "\n", "\t", ")"}]}], "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"timestamp", " ", "=", " ", 
      RowBox[{"DateString", "[", "]"}]}], ";", "\n", "\t", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{
        "finalDirName", ",", " ", "timestamp", ",", " ", "\"\<.mx\>\""}], 
        "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}]}], "]"}], ";", "\n", 
     "\t", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{
        "finalDirName", ",", " ", "timestamp", ",", " ", 
         "\"\< colourings.pdf\>\""}], "]"}], ",", " ", 
       RowBox[{"displayColouringGrid", "[", 
        RowBox[{"minGrid", ",", " ", "blueColourRules"}], "]"}]}], "]"}], ";",
      "\t", "\n", "\t", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{
        "finalDirName", ",", " ", "timestamp", ",", " ", 
         "\"\< heights.pdf\>\""}], "]"}], ",", " ", 
       RowBox[{"displayHeightGrid", "[", "minGrid", "]"}]}], "]"}], ";", "\n",
      "\t", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{
        "finalDirName", ",", " ", "timestamp", ",", " ", 
         "\"\< height plots.pdf\>\""}], "]"}], ",", " ", 
       RowBox[{"displayHeightPlot", "[", "minGrid", "]"}]}], "]"}], ";", "\n",
      "\t", 
     RowBox[{"DeleteDirectory", "[", 
      RowBox[{"dirName", ",", " ", 
       RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}], ";", "\n", 
     "\t", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<The chain took \>\"", ",", " ", "steps", ",", " ", 
       "\"\< steps to converge. Here are the results:\>\""}], "]"}], ";", 
     "\n", "\t", 
     RowBox[{"displayGrids", "[", 
      RowBox[{"minGrid", ",", " ", "maxGrid", ",", " ", "blueColourRules"}], 
      "]"}]}]}], "\n", "]"}]}]}], "Code",
 CellChangeTimes->{{3.896460344757543*^9, 3.896460344892894*^9}, {
   3.8964603775487823`*^9, 3.896460427172718*^9}, {3.896460505525404*^9, 
   3.896460507683814*^9}, 3.896460598098578*^9, 3.9121841491362123`*^9, {
   3.912185176747891*^9, 3.9121851950010757`*^9}, {3.912185273068263*^9, 
   3.9121852790699263`*^9}, {3.912185375050088*^9, 3.9121853774319563`*^9}, {
   3.912185782189267*^9, 3.9121858163212442`*^9}, {3.91218618071176*^9, 
   3.9121862071829767`*^9}, {3.912187031857287*^9, 
   3.912187033409878*^9}},ExpressionUUID->"6babd98d-b119-4bcd-9c2e-\
7c324a23bf54"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"viewChangeSteps", "[", 
      RowBox[{
      "n_", ",", " ", "maxGrid_", ",", " ", "minGrid_", ",", " ", "steps_"}], 
      "]"}], " ", ":=", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"gridsList", " ", "=", " ", 
        RowBox[{"NestList", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"oneStep", "[", 
            RowBox[{"n", ",", " ", 
             RowBox[{"Sequence", " ", "@@", " ", "#"}]}], "]"}], " ", "&"}], 
          ",", " ", 
          RowBox[{"{", 
           RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}], ",", " ", 
          "steps"}], "]"}]}], ";", " ", "\n", 
       RowBox[{"Manipulate", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"displayCube", "[", 
              RowBox[{"n", ",", " ", 
               RowBox[{
                RowBox[{"gridsList", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", " ", 
             RowBox[{"displayCube", "[", 
              RowBox[{"n", ",", " ", 
               RowBox[{
                RowBox[{"gridsList", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "}"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "steps", ",", "1"}], "}"}]}], "]"}]}], 
      ")"}]}], "\n", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"checkHeightDifference", "[", 
       RowBox[{"n_", ",", " ", "maxGrid_", ",", " ", "minGrid_"}], "]"}], " ",
       ":=", " ", 
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"maxGrid", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", " ", "j", ",", " ", "k"}], "]"}], "]"}], " ", 
            "-", " ", 
            RowBox[{"minGrid", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", " ", "j", ",", " ", "k"}], "]"}], "]"}]}], 
           "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "2", ",", " ", 
            RowBox[{"n", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "2", ",", " ", 
            RowBox[{"n", " ", "-", " ", "1"}]}], "}"}]}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"k", ",", " ", "2", ",", " ", 
          RowBox[{"n", " ", "-", " ", "1"}]}], "}"}]}], "]"}]}], ",", " ", 
     "2"}]}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"viewAfterSteps", "[", 
    RowBox[{
    "n_", ",", " ", "maxGrid_", ",", " ", "minGrid_", ",", " ", "steps_", ",",
      " ", "logInterval_", ",", " ", "prevStep_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"step", " ", "=", " ", "prevStep"}], "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"PrintTemporary", "[", 
       RowBox[{"ProgressIndicator", "[", 
        RowBox[{"Dynamic", "[", 
         RowBox[{"step", "/", 
          RowBox[{"(", 
           RowBox[{"steps", " ", "+", " ", "prevStep"}], ")"}]}], "]"}], 
        "]"}], "]"}], ";", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"time", ",", " ", "finalGrids"}], "}"}], " ", "=", " ", 
       RowBox[{"AbsoluteTiming", "[", 
        RowBox[{"Catch", "[", 
         RowBox[{"Nest", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", "\n", "  ", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Mod", "[", 
                   RowBox[{"step", ",", " ", "logInterval"}], "]"}], " ", "==",
                   " ", "0"}], " ", "||", " ", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], ",", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Export", "[", 
                   RowBox[{
                    RowBox[{"StringJoin", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", " ", 
                    "\"\<output files/coupling_\>\"", ",", " ", 
                    RowBox[{"ToString", "[", "n", "]"}], ",", " ", 
                    "\"\</log_\>\"", ",", " ", 
                    RowBox[{"ToString", "[", "step", "]"}], ",", " ", 
                    "\"\<.mx\>\""}], "]"}], ",", " ", "#"}], "]"}], ";", " ", 
                  "\n", "    ", 
                  RowBox[{"Print", "[", 
                   RowBox[{"checkHeightDifference", "[", 
                    RowBox[{"n", ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ")"}]}],
                "]"}], ";", " ", "\n", "  ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
                RowBox[{"Throw", "[", "#", "]"}]}], "]"}], ";", " ", "\n", 
              "  ", 
              RowBox[{"step", "++"}], ";", " ", "\n", "  ", 
              RowBox[{"oneStep", "[", 
               RowBox[{"n", ",", " ", 
                RowBox[{"Sequence", " ", "@@", " ", "#"}]}], "]"}]}], ")"}], 
            " ", "&"}], ",", " ", "\n", "  ", 
           RowBox[{"{", 
            RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}], ",", " ", 
           RowBox[{"steps", " ", "+", " ", "1"}]}], "]"}], "]"}], "]"}]}], 
      ";", "\n", "  ", 
      RowBox[{"{", 
       RowBox[{"time", ",", " ", "step", ",", " ", "finalGrids"}], "}"}]}]}], 
    "\n", "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"displayTime", "[", "time_", "]"}], " ", ":=", " ", 
  RowBox[{"DateString", "[", 
   RowBox[{"time", ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Hour\>\"", ",", " ", "\"\<:\>\"", ",", " ", "\"\<Minute\>\"", ",", 
      " ", "\"\<:\>\"", ",", " ", "\"\<Second\>\""}], "}"}]}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.896460701243726*^9, 3.896460711875445*^9}, {
  3.8965083628926687`*^9, 3.8965083911961737`*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->
  "In[394]:=",ExpressionUUID->"974ffde9-b169-46f3-a1ad-6a3e27e09793"],

Cell[BoxData[
 TemplateBox[{
  "Syntax", "bktmop", 
   "\"Expression \
\\\"\\!\\(\\*RowBox[{RowBox[{RowBox[{RowBox[{\\\"viewChangeSteps\\\", \\\"[\\\
\", RowBox[{\\\"n_\\\", \\\",\\\", \\\"maxGrid_\\\", \\\",\\\", \
\\\"minGrid_\\\", \\\",\\\", \\\"steps_\\\"}], \\\"]\\\"}], \\\":=\\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"gridsList\\\", \\\"=\\\", \
RowBox[{\\\"NestList\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"oneStep\\\", \
\\\"[\\\", RowBox[{\\\"n\\\", \\\",\\\", RowBox[{\\\"Sequence\\\", \
\\\"@@\\\", \\\"#\\\"}]}], \\\"]\\\"}], \\\"&\\\"}], \\\",\\\", RowBox[{\\\"{\
\\\", RowBox[{\\\"maxGrid\\\", \\\",\\\", \\\"minGrid\\\"}], \\\"}\\\"}], \
\\\",\\\", \\\"steps\\\"}], \\\"]\\\"}]}], \\\";\\\", \
RowBox[{\\\"Manipulate\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Grid\\\", \
\\\"[\\\", RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"displayCube\\\", \\\"[\\\", RowBox[{\\\"n\\\", \\\",\\\", \
RowBox[{RowBox[{\\\"gridsList\\\", \\\"[\\\", RowBox[{\\\"[\\\", \\\"k\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\"[\\\", RowBox[{\\\"[\\\", \\\"1\\\", \
\\\"]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"displayCube\\\
\", \\\"[\\\", RowBox[{\\\"n\\\", \\\",\\\", \
RowBox[{RowBox[{\\\"gridsList\\\", \\\"[\\\", RowBox[{\\\"[\\\", \\\"k\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\"[\\\", RowBox[{\\\"[\\\", \\\"2\\\", \
\\\"]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]}], \\\"}\\\"}], \\\"}\\\"}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"k\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"steps\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}]}], \
\\\"]\\\"}]}], \\\")\\\"}]}], \\\"\\\\n\\\", \
RowBox[{RowBox[{RowBox[{\\\"checkHeightDifference\\\", \\\"[\\\", \
RowBox[{\\\"n_\\\", \\\",\\\", \\\"maxGrid_\\\", \\\",\\\", \
\\\"minGrid_\\\"}], \\\"]\\\"}], \\\":=\\\", RowBox[{\\\"Total\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Abs\\\", \\\"[\\\", RowBox[{RowBox[{\\\"maxGrid\\\", \
\\\"[\\\", RowBox[{\\\"[\\\", RowBox[{\\\"i\\\", \\\",\\\", \\\"j\\\", \
\\\",\\\", \\\"k\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\"-\\\", \
RowBox[{\\\"minGrid\\\", \\\"[\\\", RowBox[{\\\"[\\\", RowBox[{\\\"i\\\", \
\\\",\\\", \\\"j\\\", \\\",\\\", \\\"k\\\"}], \\\"]\\\"}], \\\"]\\\"}]}], \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"i\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", RowBox[{\\\"n\\\", \\\"-\\\", \\\"1\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"j\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", RowBox[{\\\"n\\\", \\\"-\\\", \\\"1\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"k\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", RowBox[{\\\"n\\\", \\\"-\\\", \\\"1\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}]}], \\\",\\\", \\\"2\\\"}]}], \\\"]\\\"}]\\)\\\" \
has no opening \
\\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"[\\\\\\\"\\\"}]\\)\\\"\\!\\(\\*RowBox[{\\\"\\\
\\\\\"\\\\\\\"\\\"}]\\).\"", 2, 394, 250, 32388282914663186954, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896508457193864*^9},
 CellLabel->
  "During evaluation of \
In[394]:=",ExpressionUUID->"2a7b0a62-5082-42c9-8d8f-9585d78d9448"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dim", " ", "=", " ", "11"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"minCube", " ", "=", " ", 
   RowBox[{"generateMinCube", "[", "dim", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"maxCube", " ", "=", " ", 
   RowBox[{"generateMaxCube", "[", "dim", "]"}]}], ";"}], "\n", 
 RowBox[{"viewChangeSteps", "[", 
  RowBox[{"dim", ",", " ", "maxCube", ",", " ", "minCube", ",", " ", "100"}], 
  "]"}]}], "Code",
 CellChangeTimes->{{3.8965082301616364`*^9, 3.8965083002729473`*^9}, {
  3.896508401342095*^9, 3.896508411237862*^9}},
 CellLabel->
  "In[390]:=",ExpressionUUID->"2baf9286-66b6-4c06-a25a-ed36a8f8d537"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"3\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\
\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\
\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"2\
\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\
\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\
\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"10\\\", \\\",\\\", \\\"11\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \
\\\",\\\", \\\"3\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) cannot be used as a part \
specification.\"", 2, 393, 240, 32388282914663186954, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8965084456048803`*^9},
 CellLabel->
  "During evaluation of \
In[390]:=",ExpressionUUID->"c1861ccd-0696-40c0-8240-6aae8c344519"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \
\\\"7\\\"}], \\\"}\\\"}]\\) of \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\
\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"5\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"2\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \
\\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"11\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\
\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\
\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\
\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\
\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"10\\\", \\\",\\\", \\\"11\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \
\\\",\\\", \\\"3\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"9\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"5\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\"\
\[RightDoubleBracket]\\\"}]\\) does not exist.\"", 2, 393, 241, 
   32388282914663186954, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896508445620874*^9},
 CellLabel->
  "During evaluation of \
In[390]:=",ExpressionUUID->"e1c70da9-8d19-4461-99c8-40a6aa6ac571"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"6\\\"}]\\) of \
\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \
\\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"2\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \
\\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"11\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\
\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\
\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\
\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\
\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"10\\\", \\\",\\\", \\\"11\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \
\\\",\\\", \\\"3\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"9\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"5\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\"\
\[RightDoubleBracket]\\\"}]\\) does not exist.\"", 2, 393, 242, 
   32388282914663186954, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8965084456310472`*^9},
 CellLabel->
  "During evaluation of \
In[390]:=",ExpressionUUID->"115e057e-1fb0-4828-9e1a-a428db4287be"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\
\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"5\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"2\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \
\\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"11\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\
\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\
\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\
\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\
\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"10\\\", \\\",\\\", \\\"11\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \
\\\",\\\", \\\"3\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"9\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"5\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\"\
\[RightDoubleBracket]\\\"}]\\) cannot be used as a part specification.\"", 2, 
   393, 243, 32388282914663186954, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896508445640394*^9},
 CellLabel->
  "During evaluation of \
In[390]:=",ExpressionUUID->"72060248-c12a-4282-97b3-a09b67929de4"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"6\\\"}]\\) of \
\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \
\\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \
\\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"2\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \
\\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"11\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\
\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\
\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\
\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\
\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"10\\\", \\\",\\\", \\\"11\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \
\\\",\\\", \\\"3\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"9\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"5\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\"\
\[RightDoubleBracket]\\\"}]\\) does not exist.\"", 2, 393, 244, 
   32388282914663186954, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896508445649787*^9},
 CellLabel->
  "During evaluation of \
In[390]:=",ExpressionUUID->"58b37fd4-06f2-4d33-bd28-d62fe19d6a33"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 393, 245, 32388282914663186954, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896508445659152*^9},
 CellLabel->
  "During evaluation of \
In[390]:=",ExpressionUUID->"f10fa9de-7929-4227-b0c5-157aa6fdb1c4"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\
\", RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"5\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"4\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"2\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \
\\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\", \
\\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"11\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4\\\", \\\",\\\
\", \\\"5\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\
\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\
\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \
\\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
\\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \
\\\",\\\", \\\"6\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\
\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9\\\", \\\",\\\", \
\\\"10\\\", \\\",\\\", \\\"11\\\", \\\",\\\", \\\"10\\\", \\\",\\\", \
\\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"10\\\", \\\",\\\", \\\"11\\\", \
\\\",\\\", \\\"10\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \
\\\"7\\\", \\\",\\\", \\\"6\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"4\\\", \
\\\",\\\", \\\"3\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"8\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \\\"6\\\", \
\\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"9\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"5\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\"\
\[RightDoubleBracket]\\\"}]\\) cannot be used as a part specification.\"", 2, 
   393, 246, 32388282914663186954, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.896508445666482*^9},
 CellLabel->
  "During evaluation of \
In[390]:=",ExpressionUUID->"6e62f5ec-cf08-4e73-b241-ccfc139cf5d5"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"pkspec1\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 393, 247, 32388282914663186954, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8965084456760607`*^9},
 CellLabel->
  "During evaluation of \
In[390]:=",ExpressionUUID->"c2090f7b-c321-4c6f-91ec-d5922bbe5b40"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`k$$], 1, 100, 1}}, Typeset`size$$ = {
    241., {1.673828125, 3.326171875}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`k$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          ArrayPlot[
           Part[
            Part[$CellContext`gridsList, $CellContext`k$$], 1], 
           ColorRules -> $CellContext`colourRules, Frame -> True], 
          ArrayPlot[
           Part[
            Part[$CellContext`gridsList, $CellContext`k$$], 2], 
           ColorRules -> $CellContext`colourRules, Frame -> True]}}], 
      "Specifications" :> {{$CellContext`k$$, 1, 100, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{258., {18.673828125, 20.326171875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8965084124600077`*^9, 3.8965084458073463`*^9},
 CellLabel->
  "Out[393]=",ExpressionUUID->"08687325-36b4-4fa5-95e9-97cec23e9276"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"gridsList\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 63, 32, 22187177884966700809, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.912183942055503*^9},
 CellLabel->"",ExpressionUUID->"05a08924-8d57-4b94-abbc-7b6d65d9b75c"],

Cell[BoxData[
 TemplateBox[{
  "ArrayPlot", "mat", 
   "\"Argument \\!\\(\\*RowBox[{\\\"gridsList\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a list of lists.\"", 2, 63, 33, 
   22187177884966700809, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.912183942137759*^9},
 CellLabel->"",ExpressionUUID->"fc3b5ed3-e3ae-47bd-99e6-32c8a940b001"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"gridsList\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 63, 34, 22187177884966700809, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9121839421431847`*^9},
 CellLabel->"",ExpressionUUID->"27449a0a-b4fd-4f73-86ed-9a6b278bde69"],

Cell[BoxData[
 TemplateBox[{
  "ArrayPlot", "mat", 
   "\"Argument \\!\\(\\*RowBox[{\\\"1\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a list of lists.\"", 2, 63, 35, 
   22187177884966700809, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.912183942166046*^9},
 CellLabel->"",ExpressionUUID->"2c702ab5-2246-40fe-a555-79ed3b7dc30f"]
}, Open  ]]
},
WindowSize->{1440., 758.25},
WindowMargins->{{0, Automatic}, {0, Automatic}},
Magnification:>1. Inherited,
FrontEndVersion->"13.0 for Linux x86 (64-bit) (December 2, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["DarkStyle for Notebooks", "Title"], 
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Tongue menu cells", "Section"], 
         Cell[
          StyleData[
          "WolframAlphaShort", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "WolframAlphaLong", "Backspace" -> "Input"}, EvaluationMode -> 
          "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaShortInput", StyleDefinitions -> StyleData["Input"]], 
          EvaluationMode -> "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]], 
              CellBaseline -> Baseline], None}, {None, None}}, ShowCodeAssist -> 
          False, FormatType -> TextForm, FontFamily -> "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaLong", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "Input", "Backspace" -> "WolframAlphaShort"}, 
          EvaluationMode -> "WolframAlphaLong", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[WolframAlphaPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData["WolframAlphaFullOutput"], 
          CellMargins -> {{20, 10}, {Inherited, Inherited}}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ExternalLanguage"], CellFrame -> 1, 
             CellMargins -> {{66, 10}, {8, 8}}, 
             StyleKeyMapping -> {"Backspace" -> "Input"}, Evaluatable -> True,
              EvaluationMode -> "ExternalLanguage", CellGroupingRules -> 
             "InputGrouping", StripStyleOnPaste -> True, 
             CellEvaluationLanguage -> "Python", 
             CellFrameMargins -> {{4, 8}, {8, 8}}, CellFrameColor -> 
             RGBColor[0.2549, 0.23137, 0.42549], CellFrameLabels -> {{
                Cell[
                 BoxData[
                  DynamicBox[
                   ToBoxes[
                   ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged; 
                    FrontEnd`Private`MakeExternalLanguageMenu[
                    ExternalEvaluate`FE`GetDefaultCellEvaluationLanguage[], 
                    ExternalEvaluate`FE`GetExternalLanguageMenuData[]], 
                    StandardForm], 
                   TrackedSymbols :> {
                    ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged}, 
                   ImageSizeCache -> {
                    35., {10.64208984375, 17.35791015625}}]], "Output", 
                 Background -> None, CellFrame -> 0], None}, {None, None}}, 
             CellFrameLabelMargins -> 0, AllowInlineCells -> False, 
             Hyphenation -> False, AutoQuoteCharacters -> {}, 
             PasteAutoQuoteCharacters -> {}, LanguageCategory -> "Formula", 
             ScriptLevel -> 1, MenuSortingValue -> 1800, FontFamily -> Dynamic[
               CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
             FontColor -> GrayLevel[0.97], Background -> 
             RGBColor[0.18, 0.172, 0.22]], 
            Cell[
             StyleData["ExternalLanguage", "Presentation"], 
             CellMargins -> {{101, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "SlideShow"], ShowGroupOpener -> 
             False, CellMargins -> {{110, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "Printout"], 
             CellMargins -> {{48, 10}, {8, 8}}, 
             CellFrameMargins -> {{2, 8}, {8, 8}}]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Notebook options settings", "Section"], 
         Cell[
          StyleData[All, "Working"], InitializationCellEvaluation -> False, 
          DockedCells -> None, DefaultNewCellStyle -> "Code", 
          ShowPredictiveInterface -> False], 
         Cell[
          StyleData["Notebook"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0., 0.8, 1], "HoverColor" -> 
            RGBColor[0.78, 0.64, 1], "Thickness" -> 1.3, "Widths" -> {2, 8}}, 
          StyleKeyMapping -> {
           "==" -> "WolframAlphaLong", "Backspace" -> "WolframAlphaShort", 
            "=" -> "WolframAlphaShort", "*" -> "Item", ">" -> 
            "ExternalLanguage", "Backspace" -> "Code"}, 
          AutoStyleOptions -> {
           "CommentStyle" -> {
             FontColor -> RGBColor[0.89, 0.56, 1., 0.95], ShowAutoStyles -> 
              False, ShowSyntaxStyles -> False, AutoNumberFormatting -> 
              False}, "ExcessArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "FunctionLocalVariableStyle" -> {
             FontColor -> RGBColor[0.52549, 0.843137, 1.]}, 
            "GraphicsCompatibilityProblemStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "LocalScopeConflictStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "LocalVariableStyle" -> {
             FontColor -> RGBColor[0., 0.8200000000000001, 0.32]}, 
            "MissingArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "MisspelledWordStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "NoKernelPresentStyle" -> {
             FontColor -> 
              RGBColor[
               0.16470588235294117`, 0.6313725490196078, 0.596078431372549]}, 
            "PatternVariableStyle" -> {
             FontColor -> RGBColor[0.11, 1., 0.08], FontSlant -> "Italic"}, 
            "StringStyle" -> {
             FontColor -> RGBColor[0.98, 0.71, 0.], ShowAutoStyles -> False, 
              ShowSyntaxStyles -> False, AutoNumberFormatting -> False}, 
            "UndefinedSymbolStyle" -> {FontColor -> RGBColor[0.42, 0.94, 1]}, 
            "UnknownOptionStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "UnwantedAssignmentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 
                0.1843137254901961]}}, 
          CodeAssistOptions -> {
           "AutoConvertEnable" -> False, 
            "HeadHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}, "MatchHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}}, TranslationOptions -> {"Language" -> None}, FontColor -> 
          RGBColor[0, 0.7, 1], Background -> GrayLevel[0.15]], 
         Cell[
          StyleData["DialogStyle"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["NotebookObject"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["LinguisticAssistant"], FontColor -> 
          RGBColor[0, 0.7, 1]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Title and Section Cells", "Section"], 
         Cell[
          StyleData["Title"], FontColor -> GrayLevel[1]], 
         Cell[
          StyleData["Chapter"], FontColor -> RGBColor[0.8, 0.8, 0.8]], 
         Cell[
          StyleData["Subchapter"], FontColor -> RGBColor[0.65, 0.05, 0.65]], 
         Cell[
          StyleData["Subtitle"], FontColor -> 
          RGBColor[0.196078, 0.694118, 0.862745]], 
         Cell[
          StyleData["Subsubtitle"], FontColor -> 
          RGBColor[0.196078, 0.394118, 0.562745]], 
         Cell[
          StyleData["Subsubtitle"]], 
         Cell[
          StyleData["Section"], FontColor -> 
          RGBColor[
           0.1399099717708095, 0.5224231326771954, 0.6501869230182346]], 
         Cell[
          StyleData["Subsection"], FontColor -> GrayLevel[0.749996]], 
         Cell[
          StyleData["Subsubsection"], FontColor -> 
          RGBColor[0.823529, 0.490654, 0.202274]], 
         Cell[
          StyleData["Subsubsubsection"], FontColor -> 
          RGBColor[0.954147, 0.694224, 0.124651]], 
         Cell[
          StyleData["Subsubsubsubsection"], FontColor -> 
          RGBColor[0.913237, 0.365469, 0.0854353]], 
         Cell[
          StyleData["Text"], FontFamily -> "Gill Sans Light", FontSize -> 14, 
          FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
          GrayLevel[0.683803]], 
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[0, 0.7, 1]], CellMargins -> {{81, 10}, {4, 8}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "Subitem", "*" -> "Subitem"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "Item", 
          CounterAssignments -> {{"Subitem", 0}, {"Subsubitem", 0}}, 
          MenuSortingValue -> 1600, FontFamily -> "Source Sans Pro", FontSize -> 
          15], 
         Cell[
          StyleData["ItemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubsubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          CellGroupData[{
            Cell["Chapter", "Subsection"], 
            Cell[
             StyleData["Chapter"], CounterIncrements -> "Chapter", 
             CounterAssignments -> {{"Subchapter", 0}, {"Section", 0}, {
               "Equation", 0}, {"Figure", 0}, {"Subsubtitle", 0}, {
               "Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1150, 
             MenuCommandKey :> "2"], 
            Cell[
             StyleData["Subchapter"], CellDingbat -> 
             StyleBox["\[MathematicaIcon]", Alignment -> Baseline, 
               RGBColor[0., 0.043, 0.9]], CounterIncrements -> "Subchapter", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1200, 
             MenuCommandKey :> "3"]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Input and Output cells", "Section"], 
         Cell[
          StyleData["Code"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontWeight -> Plain, FontColor -> GrayLevel[1], 
          Background -> GrayLevel[0.1]], 
         Cell[
          StyleData["InitializationCell"], 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellFrameMargins -> {{10, 10}, {5, 5}}, CellFrameLabelMargins -> -5,
           FontColor -> GrayLevel[1], Background -> GrayLevel[0.25]], 
         Cell[
          StyleData["Input"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontColor -> GrayLevel[0.7]], 
         Cell[
          StyleData["Output"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontSize -> 13], 
         
         Cell[
          StyleData["Message"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          RGBColor[
           0.704600595101854, 0.24277103837644007`, 0.22278171969176777`]], 
         Cell[
          StyleData["Print"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          GrayLevel[0.3]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["misc", "Section"], 
         Cell[
          StyleData["InformationCell"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.760174, 0.600641, 0.675288]}, FontColor -> 
          GrayLevel[0.3]], 
         Cell[
          StyleData["InformationLink"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["InformationLinkLF"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["CellLabel"], 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontSize -> 9]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Formulas and Programming", "Section"], 
         Cell[
          StyleData["DisplayFormula"], FontColor -> GrayLevel[0.85]], 
         Cell[
          StyleData["DisplayFormulaNumbered"], FontColor -> GrayLevel[0.85]], 
         
         Cell[
          StyleData["Program"], CellFrameColor -> GrayLevel[0.4]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          TextData[{"Styles for ", 
            StyleBox["Mathematica", FontSlant -> "Italic"], 
            " System\[Hyphen]specific Elements"}], "Section", 
          CellChangeTimes -> {{3.601920784160323*^9, 3.60192078489342*^9}, 
            3.60356525124664*^9, {3.6037117681643677`*^9, 
            3.6037117683195887`*^9}}], 
         Cell[
          CellGroupData[{
            Cell["FormatType Styles", "Subsection"], 
            Cell[
             StyleData["StandardForm"]], 
            Cell[
             StyleData["CellExpression"], FontColor -> GrayLevel[0], 
             Background -> GrayLevel[0.75]], 
            Cell[
             StyleData["CellLabel"], FontSize -> 9, FontColor -> 
             RGBColor[0.603861, 0.615915, 0.607843]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
            "Graphics Styles", "Subsection", 
             CellChangeTimes -> {{3.603565272271762*^9, 
              3.603565284491351*^9}}], 
            Cell[
             StyleData["GraphicsAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["GraphicsFrame"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["Graphics3DAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Arial", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]]}, 
           Open]]}, Open]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "13.0 for Linux x86 (64-bit) (December 2, 2021)", StyleDefinitions -> 
  "Default.nb"],
ExpressionUUID->"15b5dd27-6829-4586-82c0-a7ea75e62e6d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 75, 0, 38, "CodeText",ExpressionUUID->"ec0c784a-ce9d-4c5a-b232-cf84abfadbcd"],
Cell[636, 22, 2671, 66, 221, "Code",ExpressionUUID->"f15ecd80-bfeb-4108-81fd-9197722539ae"],
Cell[3310, 90, 350, 9, 72, "Text",ExpressionUUID->"7def9534-b5ec-46ec-afcf-1dbb61179113"],
Cell[3663, 101, 188, 4, 24, "Input",ExpressionUUID->"5bd8729e-1b5d-4b5f-b063-cb7f0991f434"],
Cell[3854, 107, 162, 3, 32, "Text",ExpressionUUID->"8a942dd6-5ed6-43b7-bf58-29d355d7d106"],
Cell[4019, 112, 473, 11, 56, "Code",ExpressionUUID->"25294259-c6c3-46b8-9874-58800bbfe360"],
Cell[4495, 125, 192, 6, 52, "Text",ExpressionUUID->"137fda44-2f58-466e-b9cf-77f14954051f"],
Cell[4690, 133, 2686, 76, 303, "Code",ExpressionUUID->"27a3c9a8-323b-4c69-ac0d-666ac9c09b77"],
Cell[7379, 211, 339, 7, 52, "Text",ExpressionUUID->"ba87411f-0479-4ab8-9fa6-a40adbcfb0e3"],
Cell[7721, 220, 26033, 692, 1994, "Code",ExpressionUUID->"fcac06f5-8334-4b9b-ad54-5a70c0e8fdd2"],
Cell[33757, 914, 1042, 15, 34, "Code",ExpressionUUID->"1560c7ad-163e-474d-83be-5104f0dbe0a7"],
Cell[CellGroupData[{
Cell[34824, 933, 2824, 80, 221, "Code",ExpressionUUID->"d45ce1b6-d0eb-40cc-8f44-5a12f740ee92"],
Cell[37651, 1015, 7211, 145, 339, "Output",ExpressionUUID->"791bd5c9-e908-4552-b8f7-f06531615bc2"],
Cell[44865, 1162, 855, 12, 38, "Output",ExpressionUUID->"627adbe2-9d6e-4f11-a9b1-f6025d66beaa"],
Cell[45723, 1176, 8751, 170, 339, "Output",ExpressionUUID->"9a9d5f20-28d9-4071-96be-3d77ab6e8465"],
Cell[54477, 1348, 7721, 157, 339, "Output",ExpressionUUID->"98fbeeea-c1c7-4350-89d1-d409f067e225"],
Cell[62201, 1507, 855, 12, 38, "Output",ExpressionUUID->"0798aa96-eae9-4d03-b959-86b0df56044d"],
Cell[63059, 1521, 5979, 118, 339, "Output",ExpressionUUID->"5045ac29-3a6f-4623-804c-db7ae156d31d"],
Cell[69041, 1641, 5408, 110, 339, "Output",ExpressionUUID->"13d463c9-9fc2-4be7-9eb8-6f24d214cce2"],
Cell[74452, 1753, 855, 12, 38, "Output",ExpressionUUID->"ae314794-b0b8-4bb2-a1d8-20f489001186"],
Cell[75310, 1767, 3867, 77, 339, "Output",ExpressionUUID->"89564260-b478-4eb5-93c8-17505e0c200e"],
Cell[79180, 1846, 3643, 74, 339, "Output",ExpressionUUID->"1f8830d5-95ba-44da-a7a7-4f035075cc8d"],
Cell[82826, 1922, 8108, 169, 416, "Output",ExpressionUUID->"0cf7af11-1c17-42bb-9958-8cd8ecfaa108"]
}, Open  ]],
Cell[90949, 2094, 22915, 508, 1108, "Code",ExpressionUUID->"34a5ce17-7bbe-4b28-b8dc-8f3c89a7e4af"],
Cell[CellGroupData[{
Cell[113889, 2606, 566, 14, 56, "Code",ExpressionUUID->"677679fe-0fd3-444e-8fed-86a92ef2cd8d"],
Cell[114458, 2622, 5788, 148, 138, "Output",ExpressionUUID->"5e361169-5999-4591-8e5a-ac1422fc1f36"]
}, Open  ]],
Cell[120261, 2773, 515, 10, 56, "Code",ExpressionUUID->"2148de09-ed05-4808-bed8-2a80b8dfc5bc"],
Cell[CellGroupData[{
Cell[120801, 2787, 1119, 28, 97, "Code",ExpressionUUID->"5a27674b-47e1-47cb-bd9a-3d1f3c532b69"],
Cell[121923, 2817, 5796, 148, 138, "Output",ExpressionUUID->"28c78142-cc0a-4aff-b996-d189a68a5ecd"],
Cell[127722, 2967, 5798, 148, 138, "Output",ExpressionUUID->"e2fc4e85-7d72-4462-a493-18afc2d77d00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133557, 3120, 934, 22, 76, "Code",ExpressionUUID->"4a151634-84be-4917-bc9d-83c658b41256"],
Cell[134494, 3144, 103247, 1700, 321, 964, 23, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"d38405ec-d1be-4a21-bd13-d2649ec53fa3"],
Cell[237744, 4846, 82011, 1351, 321, 951, 22, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"c5806353-2d39-4c0a-ad56-6333f7bc88ea"],
Cell[319758, 6199, 13068, 382, 284, "Output",ExpressionUUID->"d97cfb3d-818a-4fba-9d79-270e56743867"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332863, 6586, 761, 17, 56, "Code",ExpressionUUID->"d51e056e-190d-42a3-a07a-ca0d26fe9e42"],
Cell[333627, 6605, 10509, 187, 61, "Output",ExpressionUUID->"c847e9b8-6d1e-48b2-8b14-2637ff4b6b81"],
Cell[344139, 6794, 8538, 156, 61, "Output",ExpressionUUID->"4a576f16-0a7f-47be-bb2f-4b2a5fed13b3"]
}, Open  ]],
Cell[352692, 6953, 24514, 600, 2180, "Code",ExpressionUUID->"6babd98d-b119-4bcd-9c2e-7c324a23bf54"],
Cell[CellGroupData[{
Cell[377231, 7557, 6763, 169, 365, "Code",ExpressionUUID->"974ffde9-b169-46f3-a1ad-6a3e27e09793"],
Cell[383997, 7728, 3111, 49, 61, "Message",ExpressionUUID->"2a7b0a62-5082-42c9-8d8f-9585d78d9448"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387145, 7782, 636, 15, 97, "Code",ExpressionUUID->"2baf9286-66b6-4c06-a25a-ed36a8f8d537"],
Cell[387784, 7799, 7947, 109, 92, "Message",ExpressionUUID->"c1861ccd-0696-40c0-8240-6aae8c344519"],
Cell[395734, 7910, 9480, 130, 92, "Message",ExpressionUUID->"e1c70da9-8d19-4461-99c8-40a6aa6ac571"],
Cell[405217, 8042, 9428, 130, 98, "Message",ExpressionUUID->"115e057e-1fb0-4828-9e1a-a428db4287be"],
Cell[414648, 8174, 9425, 129, 87, "Message",ExpressionUUID->"72060248-c12a-4282-97b3-a09b67929de4"],
Cell[424076, 8305, 9426, 130, 87, "Message",ExpressionUUID->"58b37fd4-06f2-4d33-bd28-d62fe19d6a33"],
Cell[433505, 8437, 453, 10, 48, "Message",ExpressionUUID->"f10fa9de-7929-4227-b0c5-157aa6fdb1c4"],
Cell[433961, 8449, 9425, 129, 87, "Message",ExpressionUUID->"6e62f5ec-cf08-4e73-b241-ccfc139cf5d5"],
Cell[443389, 8580, 457, 10, 48, "Message",ExpressionUUID->"c2090f7b-c321-4c6f-91ec-d5922bbe5b40"],
Cell[443849, 8592, 1940, 41, 145, "Output",ExpressionUUID->"08687325-36b4-4fa5-95e9-97cec23e9276"],
Cell[445792, 8635, 422, 8, 48, "Message",ExpressionUUID->"05a08924-8d57-4b94-abbc-7b6d65d9b75c"],
Cell[446217, 8645, 381, 8, 48, "Message",ExpressionUUID->"fc3b5ed3-e3ae-47bd-99e6-32c8a940b001"],
Cell[446601, 8655, 424, 8, 48, "Message",ExpressionUUID->"27449a0a-b4fd-4f73-86ed-9a6b278bde69"],
Cell[447028, 8665, 373, 8, 48, "Message",ExpressionUUID->"2c702ab5-2246-40fe-a555-79ed3b7dc30f"]
}, Open  ]]
}
]
*)

