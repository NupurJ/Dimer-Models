(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    433888,       7936]
NotebookOptionsPosition[    412444,       7483]
NotebookOutlinePosition[    431129,       7899]
CellTagsIndexPosition[    431086,       7896]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<DarkMode\>\"", "]"}], "[", 
  "]"}]], "Input",
 CellChangeTimes->{{3.903764799124889*^9, 3.903764799296071*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ccd3e227-a6c0-4673-9247-965b041328ac"],

Cell["Output Locations", "Text",
 CellChangeTimes->{{3.9061981451607857`*^9, 
  3.906198151810851*^9}},ExpressionUUID->"7ca1d755-3490-4dec-9324-\
a43511d4d242"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"currDir", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"logDir", " ", "=", " ", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"currDir", ",", " ", "\"\<output files/\>\""}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.906198157765965*^9, 3.90619816170743*^9}, {
  3.906198210677166*^9, 3.9061982332058477`*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"ebae49cf-8b58-4921-8a9d-f7e44ea0234b"],

Cell["\<\
Colour Templates
(uncomment displaySwatches[] to pick a colour!)\
\>", "Text",
 CellChangeTimes->{
  3.903764846211985*^9, {3.903765106963459*^9, 3.903765115148199*^9}, {
   3.9062088074100723`*^9, 
   3.906208822622459*^9}},ExpressionUUID->"685b8f17-9041-4799-8cd0-\
f9988ef4cbca"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rybColourRules", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "->", "Red"}], ",", 
     RowBox[{"1", "->", "Yellow"}], ",", 
     RowBox[{"2", "->", "Blue"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rybDarkColourRules", " ", "=", " ", "\"\<DarkRainbow\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"fancyColourRules", " ", "=", " ", "\"\<CandyColors\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"blueColourRules", " ", "=", " ", "\"\<DeepSeaColors\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"pinkColourRules", " ", "=", " ", "\"\<ValentineTones\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"orangeColourRules", " ", "=", " ", "\"\<SolarColors\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tigerColourRules", " ", "=", " ", "\"\<SunsetColors\>\""}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaySwatch", "[", "colourFunction_", "]"}], " ", ":=", " ", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"generateMaxHeightGrid", "[", "21", "]"}], ",", "3"}], "]"}], 
     ",", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "colourFunction"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"displaySwatches", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gradients", " ", "=", " ", 
        RowBox[{"ColorData", "[", "\"\<Gradients\>\"", "]"}]}], ",", " ", 
       RowBox[{"len", " ", "=", " ", 
        RowBox[{"Length", "[", 
         RowBox[{"ColorData", "[", "\"\<Gradients\>\"", "]"}], "]"}]}], ",", 
       " ", 
       RowBox[{"swatches", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", " ", 
       RowBox[{"i", " ", "=", " ", "0"}]}], "}"}], ",", " ", "\n", "\t", 
     RowBox[{"Grid", "[", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{"Nest", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"#", ",", " ", 
             RowBox[{"displaySwatch", "[", 
              RowBox[{"gradients", "[", 
               RowBox[{"[", 
                RowBox[{"i", "++"}], "]"}], "]"}], "]"}]}], "]"}], " ", "&"}],
           ",", " ", "swatches", ",", " ", 
          RowBox[{"len", " ", "+", " ", "1"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Ceiling", "[", 
           RowBox[{"len", " ", "/", " ", "6"}], "]"}], ",", "6"}], "}"}]}], 
       "]"}], "]"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"displaySwatches", "[", "]"}], "*)"}]}]}], "Code",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQfSPlhfd10beOPenHA0D0g8neOSBa9nQvmHbJe3P1
KZBeJ3fjFohOq2T7C6JfWHnyPAPSWZzfBUB03bNJYiD6g7qEHIjWmrRJA0R/
9dDQBdEvlGeZguhdpy2tQPS251fAdF/qNF8QfS0+KhBE++xvDgerey0RAaL9
5NJjQbSCtk8aiF7/QzELRN+slCsA67Ps6QDRX1pNekF04e5nE0H0hEO980G0
5ImkNSD6lp3wWhA9j9XtPIjOLXS6D6Lf+D9/DqLFZhq+ALvnx583IPpcO8N7
EH2++d0XEC2T8fg7mO7j/gOim/7PA9MAy4qq/Q==
  "],
 CellLabel->
  "In[211]:=",ExpressionUUID->"6c41c651-013e-4e44-9f1f-4aff284c593c"],

Cell["\<\
The following codeblock contains functions that will be evaluated either at \
the beginning or at the end of the simulation. They generate min/max height \
grids, and go between 3-coloured grids to height grids.\
\>", "Text",
 CellChangeTimes->{
  3.903764926364134*^9},ExpressionUUID->"34226dcd-589c-4b8c-9404-\
7108a5175185"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Generate", " ", 
     RowBox[{"the", " ", "'"}], 
     RowBox[{"empty", "'"}], " ", "grid", " ", "with", " ", "only", " ", 
     "the", " ", "boundary", " ", "cells", " ", "filled", " ", 
     RowBox[{"in", ".", " ", "Internal"}], " ", "cells", " ", "carry", " ", 
     "the", " ", "value"}], " ", "-", "1."}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"initialGridBorder", "[", "dim_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"initialGridBorder", "[", "dim", "]"}], " ", "=", " ", "\n", 
     "\t", 
     RowBox[{"Normal", "[", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i_", ",", " ", "j_"}], "}"}], " ", "/;", " ", 
            RowBox[{
             RowBox[{"i", " ", "==", " ", "1"}], " ", "||", " ", 
             RowBox[{"j", " ", "==", " ", "1"}]}]}], " ", "->", " ", 
           RowBox[{"i", " ", "+", " ", "j", " ", "-", " ", "2"}]}], ",", " ", 
          
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i_", ",", " ", "j_"}], "}"}], " ", "/;", " ", 
            RowBox[{
             RowBox[{"i", " ", "==", " ", "dim"}], " ", "||", " ", 
             RowBox[{"j", " ", "==", " ", "dim"}]}]}], " ", "->", " ", 
           RowBox[{
            RowBox[{"2", "dim"}], " ", "-", " ", "i", " ", "-", " ", 
            "j"}]}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"dim", ",", " ", "dim"}], "}"}], ",", " ", 
        RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Helper", " ", "function", " ", "for", " ", 
     RowBox[{"generateMaxHeightGrid", ".", " ", "Fills"}], " ", "one", " ", 
     "concentric", " ", "square", " ", "of", " ", 
     RowBox[{"cells", "."}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"fillConcentricSquareMax", "[", 
     RowBox[{
      RowBox[{"Hold", "[", "grid_", "]"}], ",", " ", "k_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"(", "\n", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{"k", ",", " ", 
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"grid", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"k", " ", "-", " ", "1"}], ",", " ", 
           RowBox[{"k", " ", ";;", " ", 
            RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "+", " ", "1"}]}], ";",
       " ", "\n", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"-", "k"}], ",", " ", 
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"grid", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"k", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
           RowBox[{"k", " ", ";;", " ", 
            RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "+", " ", "1"}]}], ";",
       "\n", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}], ",", " ", "k"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"grid", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"k", " ", ";;", " ", 
            RowBox[{"-", "k"}]}], ",", " ", 
           RowBox[{"k", " ", "-", " ", "1"}]}], "]"}], "]"}], " ", "+", " ", 
        "1"}]}], ";", " ", "\n", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}], ",", " ", 
          RowBox[{"-", "k"}]}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"grid", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"k", " ", ";;", " ", 
            RowBox[{"-", "k"}]}], ",", " ", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"k", " ", "-", " ", "1"}], ")"}]}]}], "]"}], "]"}], " ", 
        "+", " ", "1"}]}], ";", " ", "\n", 
      RowBox[{"ReleaseHold", "[", 
       RowBox[{"Hold", "[", "grid", "]"}], "]"}]}], ")"}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Helper", " ", "function", " ", "for", " ", 
     RowBox[{"generateMinHeightGrid", ".", " ", "Fills"}], " ", "one", " ", 
     "concentric", " ", "square", " ", "of", " ", 
     RowBox[{"cells", "."}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"fillConcentricSquareMin", "[", 
     RowBox[{
      RowBox[{"Hold", "[", "grid_", "]"}], ",", " ", "k_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"(", "\n", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{"k", ",", " ", 
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"grid", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"k", " ", "-", " ", "1"}], ",", " ", 
           RowBox[{"k", " ", ";;", " ", 
            RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "-", " ", "1"}]}], ";",
       " ", "\n", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"-", "k"}], ",", " ", 
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"grid", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"k", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
           RowBox[{"k", " ", ";;", " ", 
            RowBox[{"-", "k"}]}]}], "]"}], "]"}], " ", "-", " ", "1"}]}], ";",
       "\n", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}], ",", " ", "k"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"grid", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"k", " ", ";;", " ", 
            RowBox[{"-", "k"}]}], ",", " ", 
           RowBox[{"k", " ", "-", " ", "1"}]}], "]"}], "]"}], " ", "-", " ", 
        "1"}]}], ";", " ", "\n", " ", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"k", " ", ";;", " ", 
           RowBox[{"-", "k"}]}], ",", " ", 
          RowBox[{"-", "k"}]}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"grid", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"k", " ", ";;", " ", 
            RowBox[{"-", "k"}]}], ",", " ", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"k", " ", "-", " ", "1"}], ")"}]}]}], "]"}], "]"}], " ", 
        "-", " ", "1"}]}], ";", " ", "\n", 
      RowBox[{"ReleaseHold", "[", 
       RowBox[{"Hold", "[", "grid", "]"}], "]"}]}], ")"}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Generates", " ", "the", " ", "grid", " ", "with", " ", "maximum", " ", 
      "height", " ", "by", " ", "starting", " ", "from", " ", "the", " ", 
      "boundary", " ", "and", " ", "moving", " ", "inwards"}], ",", " ", 
     RowBox[{"filling", " ", "in", " ", "concentric", " ", 
      RowBox[{"squares", "."}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"generateMaxHeightGrid", "[", "dim_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"generateMaxHeightGrid", "[", "dim", "]"}], " ", "=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"depth", " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"dim", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
           "2"}]}]}], "}"}], ",", "\n", " ", 
       RowBox[{
        RowBox[{"Nest", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"k", "++"}], ";", " ", 
             RowBox[{"currGrid", " ", "=", " ", "#"}], ";", " ", 
             RowBox[{"fillConcentricSquareMax", "[", 
              RowBox[{
               RowBox[{"Hold", "[", "currGrid", "]"}], ",", " ", "k"}], "]"}],
              ";", " ", 
             RowBox[{"initialGrid", " ", "=", " ", "currGrid"}]}], " ", ")"}],
            " ", "&"}], ",", " ", 
          RowBox[{"initialGrid", " ", "=", " ", 
           RowBox[{"initialGridBorder", "[", "dim", "]"}]}], ",", " ", 
          RowBox[{"depth", " ", "-", " ", "1"}]}], "]"}], ";", "\n", " ", 
        RowBox[{"Normal", "[", "initialGrid", "]"}]}]}], "\n", "]"}]}]}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Generates", " ", "the", " ", "grid", " ", "with", " ", "minimum", " ", 
      "height", " ", "by", " ", "starting", " ", "from", " ", "the", " ", 
      "boundary", " ", "and", " ", "moving", " ", "inwards"}], ",", " ", 
     RowBox[{"filling", " ", "in", " ", "concentric", " ", 
      RowBox[{"squares", "."}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"generateMinHeightGrid", "[", "dim_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"generateMinHeightGrid", "[", "dim", "]"}], " ", "=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"depth", " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"dim", " ", "+", " ", "1"}], ")"}], " ", "/", " ", 
           "2"}]}]}], "}"}], ",", "\n", " ", 
       RowBox[{
        RowBox[{"Nest", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"k", "++"}], ";", " ", 
             RowBox[{"currGrid", " ", "=", " ", "#"}], ";", " ", 
             RowBox[{"fillConcentricSquareMin", "[", 
              RowBox[{
               RowBox[{"Hold", "[", "currGrid", "]"}], ",", " ", "k"}], "]"}],
              ";", " ", 
             RowBox[{"initialGrid", " ", "=", " ", "currGrid"}]}], " ", ")"}],
            " ", "&"}], ",", " ", 
          RowBox[{"initialGrid", " ", "=", " ", 
           RowBox[{"initialGridBorder", "[", "dim", "]"}]}], ",", " ", 
          RowBox[{"depth", " ", "-", " ", "1"}]}], "]"}], ";", "\n", " ", 
        RowBox[{"Normal", "[", "initialGrid", "]"}]}]}], "\n", "]"}]}]}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Takes", " ", "a", " ", "grid", " ", "with", " ", "a", " ", "filled", 
      " ", "in", " ", "height", " ", "function", " ", "as", " ", "input", " ",
       "and", " ", "converts", " ", "it", " ", "to", " ", "its", " ", 
      "corresponding", " ", "3"}], "-", 
     RowBox[{"colouring", " ", 
      RowBox[{"form", "."}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"to3Colouring", "[", "grid_", "]"}], " ", ":=", " ", 
    RowBox[{"Mod", "[", 
     RowBox[{"grid", ",", " ", "3"}], "]"}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Helper", " ", "function", " ", "for", " ", "toHeightFunction"}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"findListHeight", "[", 
     RowBox[{"first_", ",", " ", "list_", ",", " ", "len_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"initialList", " ", "=", " ", 
         RowBox[{"SparseArray", "[", 
          RowBox[{
           RowBox[{"{", "}"}], ",", " ", 
           RowBox[{"{", "len", "}"}], ",", " ", 
           RowBox[{"-", "1"}]}], "]"}]}], ",", " ", 
        RowBox[{"k", " ", "=", " ", "0"}], ",", " ", 
        RowBox[{"prev", " ", "=", " ", "first"}]}], "}"}], ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "remember", " ", "that", " ", "list", " ", "is", " ", "of", " ", 
        "length", " ", 
        RowBox[{"(", 
         RowBox[{"len", " ", "+", " ", "1"}], ")"}]}], " ", "*)"}], "\n", " ", 
      RowBox[{"Nest", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"k", "++"}], ";", " ", 
           RowBox[{"newList", " ", "=", " ", "#"}], ";", " ", 
           RowBox[{"prev", " ", "=", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"list", "[", 
                 RowBox[{"[", 
                  RowBox[{"{", 
                   RowBox[{"k", ",", " ", 
                    RowBox[{"k", " ", "+", " ", "1"}]}], "}"}], "]"}], "]"}], 
                ",", " ", "1"}], "]"}], ",", " ", 
              RowBox[{"prev", " ", "+", " ", 
               RowBox[{"list", "[", 
                RowBox[{"[", 
                 RowBox[{"k", " ", "+", " ", "1"}], "]"}], "]"}], " ", "-", 
               " ", 
               RowBox[{"list", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], ",", " ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"list", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], " ", "==", " ", "2"}], ",", 
                " ", 
                RowBox[{"prev", " ", "+", " ", "1"}], ",", " ", 
                RowBox[{"prev", " ", "-", " ", "1"}]}], "]"}]}], "]"}]}], ";",
            " ", 
           RowBox[{
            RowBox[{"newList", "[", 
             RowBox[{"[", "k", "]"}], "]"}], " ", "=", " ", "prev"}], ";", 
           " ", "newList"}], " ", ")"}], " ", "&"}], " ", ",", " ", 
        RowBox[{"Normal", "[", "initialList", "]"}], ",", " ", "len"}], 
       "]"}]}], "\n", "]"}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Takes", " ", "a", " ", "3"}], "-", 
     RowBox[{
     "coloured", " ", "grid", " ", "as", " ", "input", " ", "and", " ", 
      "returns", " ", "the", " ", "corresponding", " ", "grid", " ", 
      "labelled", " ", "with", " ", "its", " ", "height", " ", 
      RowBox[{"values", "."}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Edit", ":", " ", 
      RowBox[{
       RowBox[{
       "we", " ", "now", " ", "convert", " ", "our", " ", "grid", " ", "to", 
        " ", "a", " ", "3"}], "-", 
       RowBox[{"coloured", " ", "grid", " ", "before", " ", "computing"}]}]}],
      ",", " ", 
     RowBox[{
     "so", " ", "it", " ", "gives", " ", "the", " ", "correct", " ", "output",
       " ", "on", " ", "every", " ", 
      RowBox[{"grid", "!"}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Note", ":", " ", 
     RowBox[{
     "this", " ", "starts", " ", "with", " ", "the", " ", "initial", " ", 
      "border", " ", "grid"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"toHeightFunction", "[", "grid_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dim", " ", "=", " ", 
         RowBox[{"Length", "[", "grid", "]"}]}], ",", " ", 
        RowBox[{"heightGrid", " ", "=", " ", 
         RowBox[{"initialGridBorder", "[", 
          RowBox[{"Length", "[", "grid", "]"}], "]"}]}], ",", " ", 
        RowBox[{"k", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"cgrid", " ", "=", " ", 
         RowBox[{"to3Colouring", "[", "grid", "]"}]}]}], "}"}], ",", "\n", 
      "  ", 
      RowBox[{"Nest", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"k", "++"}], ";", " ", 
           RowBox[{"nextHeightGrid", " ", "=", " ", "#"}], ";", " ", 
           RowBox[{
            RowBox[{"nextHeightGrid", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", " ", 
               RowBox[{"2", " ", ";;", " ", 
                RowBox[{"-", "2"}]}]}], "]"}], "]"}], " ", "=", " ", 
            RowBox[{"findListHeight", "[", 
             RowBox[{
              RowBox[{"heightGrid", "[", 
               RowBox[{"[", 
                RowBox[{"k", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
              RowBox[{"Normal", "[", 
               RowBox[{"cgrid", "[", 
                RowBox[{"[", 
                 RowBox[{"k", ",", " ", 
                  RowBox[{"1", " ", ";;", " ", 
                   RowBox[{"-", "2"}]}]}], "]"}], "]"}], "]"}], ",", " ", 
              RowBox[{"dim", " ", "-", " ", "2"}]}], "]"}]}], ";", " ", 
           "nextHeightGrid"}], ")"}], " ", "&"}], ",", " ", "heightGrid", ",",
         " ", 
        RowBox[{"dim", " ", "-", " ", "2"}]}], "]"}]}], " ", "\n", "]"}]}], 
   " ", "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Calculates", " ", "the", " ", "sum", " ", "of", " ", "absolute", " ", 
     "differences", " ", "between", " ", "the", " ", "heights", " ", "of", 
     " ", "corresponding", " ", "sites", " ", "in", " ", "the", " ", "input", 
     " ", "grids"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"checkHeightDifference", "[", 
     RowBox[{"grid1_", ",", " ", "grid2_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"grid1", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], " ", "-", " ", 
          RowBox[{"grid2", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", " ", "j"}], "]"}], "]"}]}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "2", ",", " ", 
          RowBox[{"dim", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", "2", ",", " ", 
          RowBox[{"dim", " ", "-", " ", "1"}]}], "}"}]}], "]"}], ",", " ", 
      "2"}], "]"}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Format", " ", "time"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"displayTime", "[", "time_", "]"}], " ", ":=", " ", 
    RowBox[{"DateString", "[", 
     RowBox[{"time", ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Hour\>\"", ",", " ", "\"\<:\>\"", ",", " ", "\"\<Minute\>\"", ",",
         " ", "\"\<:\>\"", ",", " ", "\"\<Second\>\""}], "}"}]}], "]"}]}], 
   "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"**", "**"}], "*", " ", "Display", " ", "Functions"}], " ", 
    "******)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Displays", " ", "height", " ", "grid", " ", "matrix", " ", "in", " ", 
     "array", " ", "form"}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"OPTIMISATION", ":", " ", 
     RowBox[{
     "check", " ", "if", " ", "you", " ", "need", " ", "to", " ", "perform", 
      " ", 
      RowBox[{"toHeightFunction", "!"}], " ", "maybe", " ", "check", " ", 
      "max", " ", "value", " ", "in", " ", 
      RowBox[{"grid", "?"}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"displayHeightGrid", "[", "grid_", "]"}], " ", ":=", " ", 
    RowBox[{"ArrayPlot", "[", 
     RowBox[{"grid", ",", " ", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Displays", " ", "height", " ", "grid", " ", "matrices", " ", "in", " ", 
     "array", " ", "form"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"displayHeightGrids", "[", 
     RowBox[{"grid1_", ",", " ", "grid2_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"displayHeightGrid", "[", "grid1", "]"}], ",", " ", 
        RowBox[{"displayHeightGrid", "[", "grid2", "]"}]}], "}"}], "}"}], 
     "]"}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Displays", " ", "height", " ", "grid", " ", "matrix", " ", "in", " ", 
     "array", " ", "form"}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"OPTIMISATION", ":", " ", 
     RowBox[{
     "check", " ", "if", " ", "you", " ", "need", " ", "to", " ", "perform", 
      " ", 
      RowBox[{"to3Coloring", "!"}], " ", "maybe", " ", "check", " ", "max", 
      " ", "value", " ", "in", " ", 
      RowBox[{"grid", "?"}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"displayColouringGrid", "[", 
     RowBox[{"grid_", ",", " ", "colourFunction_"}], "]"}], " ", ":=", " ", 
    RowBox[{"ArrayPlot", "[", 
     RowBox[{
      RowBox[{"to3Colouring", "[", "grid", "]"}], ",", " ", 
      RowBox[{"ColorFunction", "\[Rule]", "colourFunction"}]}], "]"}]}], "\n",
    "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Displays", " ", "height", " ", "grid", " ", "matrices", " ", "in", " ", 
     "array", " ", "form"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"displayColouringGrids", "[", 
     RowBox[{"grid1_", ",", " ", "grid2_", ",", " ", "colourFunction_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"displayColouringGrid", "[", 
         RowBox[{"grid1", ",", " ", "colourFunction"}], "]"}], ",", " ", 
        RowBox[{"displayColouringGrid", "[", 
         RowBox[{"grid2", ",", " ", "colourFunction"}], "]"}]}], "}"}], "}"}],
      "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"displayHeightPlot", "[", "grid_", "]"}], " ", ":=", " ", 
    RowBox[{"ListPlot3D", "[", "grid", "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"displayHeightPlots", "[", 
     RowBox[{"grid1_", ",", " ", "grid2_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"displayHeightPlot", "[", "grid1", "]"}], ",", " ", 
        RowBox[{"displayHeightPlot", "[", "grid2", "]"}]}], "}"}], "}"}], 
     "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"displayGrids", "[", 
     RowBox[{"grid1_", ",", " ", "grid2_", ",", " ", "colourFunction_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"displayHeightGrids", "[", 
         RowBox[{"grid1", ",", " ", "grid2"}], "]"}], "}"}], ",", " ", "\n", 
       "\t\t\t\t\t\t\t\t\t\t\t\t\t  ", 
       RowBox[{"{", 
        RowBox[{"displayColouringGrids", "[", 
         RowBox[{"grid1", ",", " ", "grid2", ",", " ", "colourFunction"}], 
         "]"}], "}"}], ",", "\n", "\t\t\t\t\t\t\t\t\t\t\t\t\t  ", 
       RowBox[{"{", 
        RowBox[{"displayHeightPlots", "[", 
         RowBox[{"grid1", ",", " ", "grid2"}], "]"}], "}"}]}], "}"}], 
     "]"}]}]}]}]], "Code",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQHXrul/V10beOO07ZeYBoLV6vABC9ki0JTHu9ZX1+
A0i7xZx/BaL5C305bgPpKd+SeEB0jWSJIIju0++SAdGPbnzZ9BRIh9/1OQyi
RQQfHgfRK37xXwXR+6Xza54D6TOBcbUg2k5FrBNEXyth6wLRE4/tfwiiHVY8
A9P/Pi58WSn11lGXfTmYTnhu+RNE5wrcYqkC0nMu7uWpB9J/Lh7mBdGHsip8
QXT05oB4EH1kYns6iH7z/QSYnj3hTB6I7hJkLwLRdSdXtq4B0nqN9X0g+kLn
7EkgWmcVwywQnRMpMg9Ed+1QXgKixd5+atkKpA305btA9IGIko+5Mm8deRgW
gOkVFlPV84C0270PGiD62z6tThB9RetaL4hm/z1jMoje8PIKmAYAayfBIg==

  "],
 CellLabel->
  "In[220]:=",ExpressionUUID->"698d248a-498b-48b1-856a-96ca1ac9964e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"displayGrids", "[", 
  RowBox[{
   RowBox[{"generateMaxHeightGrid", "[", "27", "]"}], ",", 
   RowBox[{"generateMinHeightGrid", "[", "27", "]"}], ",", " ", 
   "blueColourRules"}], "]"}]], "Code",
 CellChangeTimes->{{3.903798923194264*^9, 3.9037989521495132`*^9}, {
   3.9037989895473022`*^9, 3.903799042531639*^9}, {3.903799548686378*^9, 
   3.9037995812417803`*^9}, 3.906186928342874*^9, {3.906206438924465*^9, 
   3.906206449656274*^9}, {3.90620661787883*^9, 3.9062066188943863`*^9}, {
   3.906308279510099*^9, 3.906308291340032*^9}, {3.907220702013302*^9, 
   3.9072207034654083`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"9eae7779-6611-466c-b4da-e135a9e0b764"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         GraphicsBox[RasterBox[CompressedData["
1:eJzt239MzGEcB/CmGkKLodTaqMsmdfm10K83acZQY+kQqSzlR2mcSiGZ5DcR
qy6apTVUSJtY02XlhNLd6aQ73fXj1PXLlbodmx+z+c+ef59/fJ7tu+f7x3fP
nu/neW3ffZ/n85kTfWBTjKWFhYXT3+vPfWpHU2Z2xCBWrBM9vJgyCMGa4lb5
sgGUVZ2dbg4fQMjNWaXHkwcgz17uaRXWD+3loKKIrf2I+KIuOZDUj3R1Y4b3
oT5Mjf21sD6sD/ErbxVFHu6Dh1u0Ku6KAUEBz6TzQw04ei2ycKPYgI8JJndJ
WS+SZxwOubqxF+f1LpLAQ73IqjqX3vi6Bz7dP4ICRz7Dpta7xizswZXMepjL
PkO3wCenLk0P/c8IT91HPRK+Ghxvn9Qj61hS12rrbkj9siSyU90IjrI1rRV1
Q/i6YlHDpU4UpD6Y+MCrC8J3i+Qj87ugmvklY51DB1KqPiTfaOuArb+oVGLR
ifXWPb4BpVpUrhA8WVuuwyXjyRjLMR0U4cVeJfGfUF1YbbnTRwvjnal27j+0
EFXscrXzUsP2+YI8d4dPeBnnvHmDXTs0E1zsjxhbEaW5IzSNtaHAY15+oqsG
UTt1Np2PVHj83aGuVtmKROMS7TXvNlyv3pErbX6PtKLFsuNfVTD5y9rtxa1o
Kjpy4V2aEkanV0NuSS2w2uZq8hhWYfz56yfa5yqwO2f7zEazEtOS0qcEJrQA
Bx+JB+XN0Ewe9henKTD7qlog6ldiuCJfbv7WhE2ZmTFOP5shLF/qtz9OgckI
T0z1eYuM0yGjQ7om+I5sGbz8qhlvawMM5wQNcBeOOx286g3OlDpP0uxpxIUg
l2iJ7UsoWyrty4tlyBOf9c0NbMB6mbX6vvkFjh6LvTtlQh3u+Y3tC3Wqh2OO
oiSlvgYCN0ff+L1SVFtFFdiNSpGf96c9/adneSOf5JOnT5Yf8kk+efpkeSCf
5JOnT9b6kk/yydMna73IJ/nk6ZMVf/JJPnn6ZMWTfJJPnj5Z8SGf5JOnT9b7
kk/yydMna/7kk3zy9MmaD/kknzx9ssYnn+STp0/W8+STfJJP8vm/+WR9r8kn
+eTpk/X/Qj7JJ0+frP0c8kk+efpk7W+TT/LJ0yfrvI98kk+ePln5D+STfPL0
ycoHI5/kk6dPVn4s+SSfPH2y6gXIJ/nk6ZNVP0U+ySdPn6x6UvJJPnn6ZNXX
k0/yydPnb4UYNPw=
           "], {{0, 0}, {27, 27}}, {0, 1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic}], 
         GraphicsBox[RasterBox[CompressedData["
1:eJzt3H9MzGEcB/CmGkKLodTaqMsmdfm10K83acZQY+kQqSzlR2mcSiGZ5DcR
qy6apTVUSJtY02XlhNLd6aQ73fXj1PXLlbodmx+z+c+ef59/fL7bs+/3j2ff
Pc/neW3ffZ/v5/OdE31gU4ylhYWF09/25zq1oykzO2IQK9aJHl5MGYRgTXGr
fNkAyqrOTjeHDyDk5qzS48kDkGcv97QK64f2clBRxNZ+RHxRlxxI6ke6ujHD
+1Afpsb+Wlgf1of4lbeKIg/3wcMtWhV3xYCggGfS+aEGHL0WWbhRbMDHBJO7
pKwXyTMOh1zd2IvzehdJ4KFeZFWdS2983QOf7h9BgSOfYVPrXWMW9uBKZj3M
ZZ+hW+CTU5emh/5nhKfuox4JXw2Ot0/qkXUsqWu1dTekflkS2aluBEfZmtaK
uiF8XbGo4VInClIfTHzg1QXhu0XykfldUM38krHOoQMpVR+Sb7R1wNZfVCqx
6MR66x7fgFItKlcInqwt1+GS8WSM5ZgOivBir5L4T6gurLbc6aOF8c5UO/cf
Wogqdrnaealh+3xBnrvDJ7yMc968wa4dmgku9keMrYjS3BGaxtpQ4DEvP9FV
g6idOpvORyo8/u5QV6tsRaJxifaadxuuV+/IlTa/R1rRYtnxryqY/GXt9uJW
NBUdufAuTQmj06sht6QWWG1zNXkMqzD+/PUT7XMV2J2zfWajWYlpSelTAhNa
gIOPxIPyZmgmD/uL0xSYfVUtEPUrMVyRLzd/a8KmzMwYp5/NEJYv9dsfp8Bk
hCem+rxFxumQ0SFdE3xHtgxeftWMt7UBhnOCBrgLx50OXvUGZ0qdJ2n2NOJC
kEu0xPYllC2V9uXFMuSJz/rmBjZgvcxafd/8AkePxd6dMqEO9/zG9oU61cMx
R1GSUl8DgZujb/xeKaqtogrsRqXIz/tzPP3nTN7IG09vrP7kjbzx9Ma6P3kj
bzy9scZD3sgbT2+s8ZM38sbTG2u+5I288fTGig95I288vbHiSd7IG09vrPiT
N/LG0xtrvcgbeePpjbW+5I288fTG8kDeyBtPbyw/5I28kTfy9r95Yz1/yRt5
4+mN9T5C3sgbT2+s/RnyRt54emPtV5M38sbTG+v7HXkjbzy9sfIZyBt54+mN
ld9F3sgbT2+sfFfyRt54emPl/5M38sbTG6seiryRN57eWPWh5I288fTGqpcn
b+SNpzfW/0N+A26sdcE=
           "], {{0, 0}, {27, 27}}, {0, 1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         GraphicsBox[RasterBox[CompressedData["
1:eJzt1aFrAmEcxvEX9idoW5lWi7AwWHmT2IQJwtIGA+MwWsb+gcXBgpgswoLp
ymFeuGLZwuqwyGBcEpaGDKyXBuN5Xr/CgYh8uPvdl9/buBn1h0chhOP99fs9
f2h38mwT37vzxd3TVywub3+ut2U8Hy+vJs1VnJ7OsrPvt7iZNdYXz5/xpBy0
avcvMew/9az4eOy9RhycvzhV/1e7T5zDdOgT5z+dqt/pE0d579EnDn3qzw1H
81ymTxzlvUefOPSpP/9Dc1y6os+0Hfeu6DNtx70r+vRyXHpQc9Teo7vj3oOa
496DmuPeg5rj3gPnctqOWg/sPRyFHtQc9/eYquPeFedy2o5aV+w9HIWu6BPH
sU+XueGk3af73HDoU3luOF59ujwvjpfD3sNRdugTR9nZASkgtqc=
           "], {{0, 0}, {
           27, 27}}, {0, 1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic}], 
         GraphicsBox[RasterBox[CompressedData["
1:eJzt1aFrAmEYx/GD/QmzrajVMjAIlieNNUFBWJogGMVoEf8Bo7AgJouwsHTl
WF64srKF1WE5BuOSYBoiWA0ig+f33vfg4MLx4YHny/tW+qPO4CqKopvje/hO
Zrd3SZzZ1/36ZfL0a+nD8K+3za05fn1cVN9tWV/Fjd2nZavKpv38Y+W8W7ue
vll0fEpx+j1vfRgOziWO+vw4Wo76/Dhazqn/T/ne5sfRcs7tjXMSh95wVJz/
7o17GcdDb5yTxXToDYfeuJdDddR745zUclQ6obcwHJVOuJfDcNQ74ZzUclT2
681R2a83R2W/Ko63/Xpz1Per7qh0Qm9hOCqd0FvYjrdO6A2H3nDojd6K7NAb
jmeH3nDoDadoDr3heHbU58fRctTnxwnD2QOQ73wD
           "], {{0, 0}, {27, 27}}, {
           0, 1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx1nVtuHEeahWvk7h71XGyVrTYpm02X0qJalmVKJEXxUg9da5gVEAPM82yh
lqKl5FJqCQ3DMIyGYczD/N8B4kv/fEnkqWBm5Mm4/JcTkc//+3//638erVar
iz+vVp+s+PvH38dj/na///tj4ZR7svv9ck+FU+5YOOVOhFNuI5xyk3DKvRBO
uZfCKfdKOOVeC6fcG+GUOxdOuXfCKXchnHKXwil3JZxy74VT7lo45T4Ip9yN
cMrdCqfcnXDK3Qun3Fa4y7ndce7j4+b8iXDOnwrn/Fg45yfCOd8I53wSzvkL
4Zy/FM75K+GcvxbO+RvhnJ8L5/ydcM4vhHN+KZzzK+GcvxfO+bVwzj8I5/xG
OOe3wjm/E875vXDOt015j19du+uOT3T0OPhU+LGO4Cc6gm90BJ90BH+hI/hL
HcFf6Qj+WkfwNzqCn+sI/k5H8AsdwS91BL/SEfy9juDXOoJ/0BH8RkfwWx3B
73QEv9fR5bfCPc66HXlc8+8e71zuuPn9RL+Db/Q7+KTfwV/od/CX+h38lX4H
f63fwd/od/Bz/Q7+Tr+DX+h38Ev9Dn6l38Hf63fwa/0O/kG/g9/od/Bb/Q5+
p9/B7/W7y98L5/+3wm0HuL14HvW45vnV7fJE5xxpT26nU/N/tKeNcNrTJJz2
9EI47emlcNrTK+G0p9fCaU9vhNOezoXTnt4Jpz1dCKc9XQqnPV0Jpz29F877
vRZOe/ggnPZzI5z2dNuUvxNu+9D12Qq3nep2YbvN86jtOY+DbjfgU3Nd2o3H
S9qN2y/txtej3bwQTrt5KZx280o47ea1cNrNG+G0m3PhtJt3wmk3F8JpN5fC
eV9Xwnm/74XTHq6F024+CKfd3DTlb4XbPnR97oVzv61w+1F+//YTbLfZf/C8
O9XR46PbB/hLnXOkfXjepn1Mwmkfbte0D9+H9vFKOO3jtXDaxxvhtI9z4bSP
d8Lh/0I47+tSOO/3Sjjt4b1w2se1cNrHh6b8jXDbh67PnXCuey+cemyF28/3
e7Zfaj/B/qrtPM+L4B6PwN0OwF/rnCPtYBJOO/B8Tjvw+Eo7cHunHfj+tIM3
wuHzXDj8vxPO+7oQzvu9FE47uBJOO3gvnHZw3ZT/INz2oetzK5z/vxPO/e6F
U7+tcMehJv3uOAhH+6v2B8Bth4F7/gP3uAPu9w1+rnOOvG/7Mbxv25W8b8/z
8ONxFz7dD+Df9eJ9vRPO+70Qzvu+FM77vhLO+37flL8WbvvQ9bkR7vghONe9
E0497oVT761wx0n93hx3cxzE8Tj7sbb7wW1vgXueA/f4Au73Cn6hc448r/1p
+LF/A5+2N+Hf8z/vy+Mx79X9g/fq+vJeL4XzXq+a8u+F2z50fT4Id/zQz3sr
nPvdCad+98J5nq1wx/H9fhznddzN8V/HTexngtu+B7ddBe75DNzjCLjfH/iV
zjnCp+M68G8/m/dlv4f3ZzuU92e7gPfncZr3537j8dDXfy/c/rLr/0G48ynm
51Y49bgTTr3vhfOcW+HOM/k9OK/gOK/zDY7TOa4Bbn8S3HY8uO0ncM9b4B4v
wP2ewK91zpH35Pgi78nxHt6T/W/ek/0h3pPtU4+Hvr7Hb/vLrr+fz/kU83Mj
nPvdCqd+d8J5nnvhPP9WuPOg5tt5LOcVnN9yXNhxNHDHL8DtN4LbXge3nQTu
+Qnc4wK43wf4jc458j4c5+Z9OO7I+3AcyOOhr28/yf6y6287wvkU8+N+xnX9
3NTjVjj1vhPOc94Lh5etcOfpzavzps5jOZ/qPITjtuCOl4E7TgFu/xDcdjm4
7SFwz0Pg7v/g5h38Tucc4d35Fo+Hvr7jkfaXXX/7686nmB/bs/y/7Qvu5/Ge
+rn/8Tzmg+e/F85xq3PrSMyf8/TOmzp/77yX8wTgjs+COy4G7ngEuP1AcNvf
4LZ7wD3fgLufd/y6vPmyfej6OA/j+KGf13FK55fNp/14rmu/inrYzqXetju6
5+76JTxuhVvnZJ6sC3Ge3noR51mdlwJ3PgDccVhwx7/AHXcAt79nHm0f277p
5pWu/3fvyfUxj44f+nmdD3R+2Xw6Xs7/O37J/RxP6urb9aduvO/sEfjdCrcO
z3xYh2RdiPVJzus7Dwru/BO44/7my3Fnx7k8fzguYL+us6c7u6ebn7pxpHvf
fl7z6/yy+XRe2vpDX8/36fpBN053dkRn53Z+GLxvhVsn6ue27s06JOvhrCNx
3t3903lZ55lsrzjP4biq/TfHrRxH6Py9zi7v7KdunuvGo67dmE/z3v3etd9u
fO3m/84+7fynzr/v4k+8j63wqY7W71p/2enePB9Yt2Sdh+1j6wCc13S8wHkg
x/G7+GkX5+riEZ3f2Nn3nR3WzZfduNa1v66c52fP251d2fk9nV/exY26uGYX
d5/quBVunb2fw7pe6yztj1knZ12R41PWnTiP7ni985TOG3Xx/S4O28XLurhG
5392fkJnz3Xzbjc+du24u5/9ZvvTXbyni0d28fIunzPV0flG3t9WuNeBuL7W
kVvX63iodZnWsTk/ZN2PdRtdvrzLa3b5py5P0MVzu7hbFx/p/NjO3+jswm7+
7sbZrj909XY823HuLg/T5QmnOjqP3ekseK9b4V6n5Hp53YJ15M5HWgds3aT1
GdalWSfU6Tm6vHuXH+3yWF2+oYsLd/G7Ls7S+cOd39LZl50d0I3XXb/qnt9x
LuefpzpaH9Hpdzp9Ge97K5z24fVXXj/TrVuwHsg6b+t0O31kp2Pr9EadLqTL
33d51i4f1uUtuvhyFwfs4jWdX935P52d2tkT3bjf9c+OR/uH1oV1usVOV0s7
2Aqn3Xi9n9drdetkrMf1OgTrwjv9bqez7PRwnW6p05d0OoAuX9vl1br8Rxen
7uKJXdyn8887P6qzdzu7pJs/un7evQ/bVdZrd+sJaB9b4bQnry/ld6/r87qs
bj1Mt26h05d3OuBOr9np6jr9U6dT6fQEXd63y891eZQu3t3FJbv4Uefnd/5Y
Zzd39k03D3XjRfdePR55HRXtZivc65X9f1536nWA3Xqtbl1Nt/6h06l3euJO
99np8zodVad36XQJXf64y/N1+Zgubt7FN7s4VBcv6Py6zv7u7KRuPuvGna59
eB3zVrj3afDv/r+uXXfjbmcXdHZr51d1fn8Xl+ripl1cv8s7dXnRLm/f6Uo6
3VOny+t0o1MdrWvudPfdupBu3VK3rq5b99mtS+7WzbudpXz9/VHl/vn3Eee6
nK9V/t+Er8bz/dFYfv+F8JXOT3X9r4SvxvPdNJbfbYSvxvP9merzrfDVeD4r
Dz+/FL4az3dvVZ8fhK/G8530yLt3wlfj+UE6+oPx1Xi+1zqk/ZXw1Xi+0TrO
zbXw1Xg+a/3xbHw1nj9o/4aHW+ErndPuaPf/Wce18L/UcxyN+P7rOj9V+ef/
f0w7KXxX40DaA9f5Wz2HdLhzjT95v4V/9Hvk+vVe8r4KP/i9cF/zX/im+AzP
1Md8Uh/zWePL/vM6X4/46ln9fqTy39T5qcpXPwqfhe+qv4RPrvNd1Vc6+rnG
9/BZ+MfiMXxy/eItfBZ+KB7DJ/ctHsNn4ZvibZb/PBdvD7L7PjIuw2eN4/sv
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
+C2+widH60O4DvPFVOXQt1hvQ3uXPmSP/kzzO/XcOR5CecU/M08730E9lS+m
nrHL4JPnVX+nnrTn8Im/VPZ/+ITf52P9sM/CC3xyHeyZqcqhb7HehvFX+pB9
3XeW/Uk98afCJ3o1xedtR4ZP6ik9A/WczSfPq/mIejLehk/aH/oO+IRfdKfw
WePm3voQ5eXCJ/oW6224juylfd13ln9EPZl/wyd6NeWP4uc4Xyz/I3yejOXD
J/WUPoR6Up/Ml7S/qXDGI/it50//obz1IYyn+IN1vdh/0tsw/u5lz8/ocOS/
U0/aQ/JaXF/5zfjh1jNQT/FJPWfNR6mn9CHUk/4SPml/6Dvgc6rzaofhk/LW
hzCeYh9OOkpvE721/M25ys+KL1FPxqvwWeUZ38In9TGf4Bo/qad1y6mn9CHU
k/E8fPJ8rC+AT/itdhg+KW99iPJs4ZH5Xv5RjoqHzOhwFP+knsynuZ7WsYVP
lQ+fim+FT+4re971DJ88l/Q25JOYf8Mn/FY7DJ+Utz6E8VT6EOI7O/nvjL97
xeui+1d8nnpi74VP7DDzSXnPR9RT9if1jF6F/6Oe0ocs/F74pP2xXgY+4bfa
YfjE/rY+hPFU+hDijzvFlxh/94on56j8UfKy5pN5zP0d/8r2EteRf0Q9o6eC
T+opfUjiMtLbkI9n/g2f8Mv8Cp/Y39aHMJ4qHkJ8fKf4J+Mv82Z4lH4mfHJf
93fsMM9H+Fe256mn/HfqGb2f4tTYIeFTeqTw+YNw+MS+kd4m+WnrQxhPFa8j
f7NTfJ7xFx7CJ/oZ5d93youHT+ope4l67uxvUk/pbahn9KjwSfmqR/jkvrRD
+KS+0ofEvpHeJvoJ60OUNwufzPfKHzH+0k/Dp9YrOw46216inrLnqefO8RDl
88Mnuh3pbTJPFK/hk/vSj4vPxXoe/FLapfy3g/Qt8Ue1bwp8kv/eab6k3nuN
R8m3iU/qOcue3ym/Dp/UM/Mg7VT7ucBn8vTS22SeqH4Pn9Qz8wx8Ui/pQ/L+
pbeJ/kzxZNpx8mBT1ZPrK/+e8dd8qnz45L7yN13P8Onf4VO6p/BJOY0rqWfN
S+FT9kX4ZD6WPmTxXuGT/qR8B+04ebCp6ql8Tvjk+urv0StoPqKes+Ihqafi
dRzdflNP6f6ic5LeJvNE2U3hk/LYv/BJ/aQPybgjvc1Cvwuf2kchfFLefHJ9
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
IY4r/yf2jfLZybt9NZZLvkzreJO/83cKuI7Wm+U6/k4BuPfVZ55xHKrwjfxV
8Af5V84zph2rfNoH5cVXnpv46TTifi5w3m/eO/6AdZfsY2V7lO8nSa+QdXbe
J4J52euftU4t74t4leLm8VcVVwX3fkvOm+S9aF3hwh+2Lkf1STvW+qbYJdTX
6xa0jizjqcpn/wjiZ3pP4M7PeZ9Yr8vy/OfrxI7WfTPfaL/che7K+Uj8JD1v
7i+dTeJm4mGh8z8d8bz3acSdl3J5+El5Pafrk3ik4pXwlrilvseaeGzz/Xb7
q7kv+Xj5OannNOJ+LvCN4uN5z44fcX3VJ+W1nxHP4f3DFnGe0xF3/ZNX9v7n
8OR8DPad9qPLvC+9furz7fi8uY7iCynPPKt4hdtbeFI7yfU032Uc1feMMi+D
y3+ftX4m467jRN6nyPo86Yoy3nhfDMorL575R/nRXMffm6Mfq/+Ae/zx/jbW
y9KuFvERPy/jpfadSXv0d6Ao7+85ar47yH9/cBxN82nsoanup36dfqB9bTKf
a97M+Co9gfcfmOW/75W/zH09Lk/jc3kd0exxQeXTrwr3fOr6WMe2Uz7J83v6
A+1O+/ssvkdwOuIZt89G3HaF8/gH+e+zx01dJ+Od78v7xX7xvgNa53u4/P3y
4dnrpqVPXdyXeV3zqdd1en+B6E+sM1De2tdf5PM8D9HuFB+PfWqdN/XUvnie
79KuND8udC3Ox0tfeJD/7u8bxK6ULjnzjOz2zAPej0n5I3+n1PX3eqhZ/rv7
e+wv5deDq9/FD9B8mnpq3Uiuo/k019F8Z/vB+W+/30Ue4WjEw7P23/X+x7Gz
ZFdkPtG608zvyqemPlqHk/Jf7P4PzyDvkg==
            "], {{
              {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], 
               Specularity[
                GrayLevel[1], 3], 
               StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNnHccT9X/xz+fz73nfM5HSbYKLZUo0VTS1BDapUUiFYm0VEKivVPR1N57
aZKRJO2pkpGRBtHev9fz+7rfx+/7x3mc5z2f+7n7nvMer3M37Dvk4MGVUqnU
OpZKmeoWKmUV2vZUOValt8qZeal0jOqaVjord1sd8WninuIo3l11r5LX20Xl
KJUjVc7QOkerTlpnZ9VHlPyf49S+neqftbPjc//2m7iveEfxL+KTxV3F/4pP
z729qrYzVHy4OIjXVb19ydvif4epHKoyWOvsz7loncmhVHpR2+iitpfEz4p3
F3+o+nmVF1TeV3lOZZLKy8H1HlrnHdVPqzyj8mJwvZva31L9pMpTKjtoP4eo
HMw1029bq16l9saqO6i05zrmrleyv+D/7aq2U3Mfb67jnKO2J4rt9lH7Nmr/
kX1o/XtVd1TbJeJDxWuJJ4hPE7cUXyo+XFxPfLn4SHF98YXiHuI1xFdzHVXO
ULkpuF5f7Q+Jrxe3F9+o+lyV4Sr3qv0K1W3V/oj4JvHW4sfFt4u3Ez8gvlbc
TnyF+GhxA3EzHfu2JZ/DeLUPVXsLtY8TnyReR/yk+E6un/gacT9xE/Grqu+p
+JwHaHlvbeNv8Ym5n7M/xVdr/eO4xmq7Stxb3Eh8nfgEcTPxDeKTxeuJrxQf
I26Y+5xOrfiYblT7ENXN1X6Zal4Ilq9X+wDV66p9fHE9zuN5UfvjqndR+9Pi
+8U7coziD/XyzNF93EP8lniWeE/xO+I3xHuJ3xe/Ke4iflc8W7yP+CPxW+J9
xZ+I3xZ3E88TvyfejmdP/JK4o/gF8WRxV/Fn4nfE+4m/EL8r7i6eL35fvLH4
GvGD4h7iheIPxJuIx4kfFm8qHi9+RLwV5yV+VjxD9QP8V2WmykOsr9IhuJ6k
ddoH//6c+E3Vj6s8odJa7TerfizzsU9QuUnlKZUby97fRlrnKvahdTYQXy6+
T9xSfJH4HvH64kvF94o3C97Go+LZuvaPVXw/dg0+vtfU3lw8RnyXuKGel61U
2ql8ovVe4v1WOUr3rLXalvEuqW6jsrnKGiqbqWyq8kpw37Cn1n1O/Ih4Z/Hr
qh+ueHmayn0VPweTtM6jqjtrnWfED4h3Er+m+kGVh1SeDa47qb1usU+OY2e1
T9UxT9MxH63f2qptudbrlfvYv6+4j15fpSV9XO76c7UfJt5APE+srry0kcqG
Kofnruervad4Y/FC8VyVV1QmV9zf0+83p+/WOluq/lbta6veouTjODL39Vii
9iPEm4i/EifVrUre7pTg67qXfp+kjd6icqvKbcHvzcZqv1V8jnij3NeYa71m
yfeCemnF+6ojXlzxOTIWfVbxeXP+ecnXpIHq7yq+t9zjRkUfS72i4uvK9V2r
OA/Op37J17ae6q8rPl/avqm4324i/qE4x5p4UcXPBdvgP1xn9v9FxdeYa11V
6Z97mWt7Qu5rwvVhXGJ8Wq/kca1Fcb8Y+9YR/1T0b22Kez0w97Fy/ek76UNZ
j3vHfhZUvG2ue60YWxhjOG7Gi6aqV2udk4rry7PNM6DLXvpS3C/3deQ5GZT7
2jEejRAfwPXVBe6juovKXirDctf0vdgCexa/Me53Knm8ZlzuLP694rGdcZxl
7IQ9VP9Vsf2wW9Fvf6H6VZWpXBcd2Gg9I3dmthN2VdsfFdsO2BAsY1PQ57Ot
U3KfM2PrINUHqhykMiT39cKWYPzHDthJ5Vy171fyg3Oiqm4q3VWG567Lah9Y
sp3A+Z+n9h4l2wyjcm8LG6N/yXYI27og9/FhzzB2dyzZVmH8xw5guW/JY9Y+
Kmfnrv/ROueI9y3ZnsGG4Rh/rXhcHaEyUuU5tU/hOmr794lv5/kVTxCPEbcU
38IYL95QPF58gbiF+HrxCJ458TjxcJ4f8a2MeeKNxA+qvlLlKpX7VC4reVvX
aZ2zeea0zm25f99YfBM2hHh98c3YGeINxPeovqTk5RvUPpL7qfZrxWeJm4pv
FJ8vbp7ZXrhAZYzKzbrvZ6negPMLPu9Wue2IMyv+7Ra1D1O9YW7b5OyK+45b
Vc5XGa1yN2ME77rWuVv1xSqXqNwR/Pumar9LPFbcWnxn8P43y213XFjx/yeq
fZTqTXI/37wDPO8vqUxUuYPzzP0M1dO5XC0+nXdP/ITq67kGKk8W9Y0qd+au
N9M6d4tvEm8ufk71zSq3qDzGdVcZxz5y15tybXP/3kb8CttSuUvl/tzHsqXa
n1d9q8ptKg/mvpdbqf3e3G1txXdhI4pbiy/K/VyuKX5a9fiSf3sq9zF1VPsV
4sHiBuKHVV+tcg3PitqHqm6k9mvEZ4qbiK8UnypuyP3NvW4r8UTupXgT8WO5
z3Nb9pv7uHcUf6Z6csnP+rO5r3Unrmfu49te/Eju49ia48n97HYQb6P79Zj6
jRfEb2ALlL28NWO06ufV/pA65+nij9RxPi6eJf5U/Ij4NfHH4kHibfmv+Arx
ZeLp4ifFs8Vzxc+I54g/E78o/kC8QHyP+BXsK/G94snYVOJnxW+LvxA/L35P
/KX4fvGr4g/Fg8XbYyeJrxdfh30oHiLeAdtJPFS8o/hJ8aXii8VTxZeJL8FO
EF8gPh+bUHyOeHdsMPEo8Qiuj/gs8S7iZ8QXiy8UTxGPFV8gfkU8QNwB20/c
R1xXfL/4RPFW2HvifuI22Gni48VbYBOKzxDvLH5aPFy8Jzah+Ebx9di64mvF
V4tfF68R/XwOFtein/NB4rWin+2h4pbiN+mPxc3Fb9CXi9eOfg9OF9ePfnbO
EK8jnklfKz5M3AK7Q9xTvL54ongH8b/0d+JG0ePPmeKm4hniYeJtxX/xrotv
Ej+JPS/eQvyz2i8SbyX+VXyx+Gbx09jt4oni57HDxXeJX8JuF18tvhK7VPyK
+GPxV+LbxM9h54tb8CzS/2hg35RnTNsfrbb1efbEI8Rbi/+gzxVvznbEY8Qb
8ryJR4pb8byJzxe3FX8qvlB8qLg59ph4pHg47wgGhcoB2L/a76Rkm/tVnnnx
OvjM4ueS7enJ4qfEv+g9fIpnO9len8EznzyWvyzur+3vWzwb88T1tf2/xIvE
TcT/iheIG4n/EX8qXlP8m/gz8VriP8Sfi+uJ/xS/lOyrzBZ/o/aOas/V9mKy
bzNL7U+Lf9exPSt+TDxPfA/vvng+/aP4UfEXjAnci2Sf4RPxy8k+1bviJ8Qr
tc5D9BXiz+hzxQ+JP6Vfpn8QrxY/Kv4w2f9cR/WDKh/T16v9AfFH4vHih8Vz
GevELyT7PDPFf+tcuutc6qrtW/FO4iBeIl4H21wceabFDcQ/q72LuCZuwrXG
LubaiwdiY4ub8d4ybnKvtP5e4jri38T7iNcQ/yjeA/tdHLT+Idj74or4IHE9
8Z9aZz/xmuIpPEu6p0v0+w/iXdVeVXtDLfcVtxAvU/t6+Cji+vQj4vXEa4uP
Fa8rflXrzNV2lqpttvgr8Urx6+IF4u/Er4m/FH8jnib+XPy1+ANxVdv5WfyR
uCb+RfyuOBf/SN+icpS4ifa1lriXuJl4hdbpjG8kniNeom2u0u/viCtqX01f
pHKEuJHWOVjt62qdm9meeCNsVPFx4s2LvrGu1l0lXq1ygu5nAy1/p3HnMPEP
avtcfHjw719kfpZ/FP+kcrbat+H5V/sw8dbivzPHaTpUvHym2tvx/GMbi7fk
vRAfiG+gsp1KN/wflfbYTMH1X1pn7Yr387PKOcHr/qv2xqp/V9sfZR/vL6p/
VTlI63yj+hOtE9S+vOzlg9X+LeOm2o8K/t8C8ZHi38TzOR7x14yn4kz/XVb2
cuJ6qP5epWfwsczTOoeKVzKeiutonRVlLx8SvO5ctR8gXszYLT4i+Bi/FB8X
vN1l4oPxr1R2UNlXZYuKr9EWxJSIMWidl1XfUfYy4/NdKner7KL1NuJ9Udlf
6y9iXNb6bcUTGXPFbYhxMRaLpxT/u0elndrvYzzN7K/fW/bylsG/P505NnNb
2f/fPNgPflztg8Ubcm/EI8W70Y/lrlvR/6ucGlz/onVOFq/LcybekfdMpWXF
7/TmKm1UTtc6bbmvWmfvoo3lAWpvqnql2k8KvvcrxIOCt7Fa3In+Aztc5TS1
t6YfJmaFjVzx8lC1b6r6V7WfErzuj+IhwdfvZ3Hf4Hv5deZ9/qnz/Uvl+OD3
5Bu1vxrsG+2kd2dWsG+3q7gj4yXPs967mcG+Y2e1TQ/2jzrxjgf7UHuJ3wq2
0fcUvx3sn3Zh7FO5iuvCGCq+hmsh3l58B++M+INgH24ftb0Z7FPuLs6jbfWT
GE9VLuf86XujbeSBauvCOKVzuoYxU9xUPEHcQ9xYfKP4GHErnhX6RfHehb10
rHgznhXxrvRj4qvEO9N3ia8U70RfJL5CvI94bfF14r0ZE8XXivcTNxBfL96d
PlB8tXhHcVl8uXgDlUvxfXT8m4vH8U6I24pv4B0RdxDfQl/DuBPsMx6utq/F
54oPFS8P9h8PEy8M9ncOFH8VbP8fJF4a7DMewlim5/h4jpP4m7ZN4Kascmxw
n7JE7ceI/9Y6i4hxBT8jCzM/4/+I/1XpFVx/pfZPg/3ybtgGwb5+D2yDYD9l
f/GXwT7IAeJfgv3RYxgjgn38rthvVce12+l824kn0G+Kt8EOo79lbNX6F2v9
o7FtdC7TxLvoGH4M9n+PUvvvwb5yb/GKYN+2p/ivYH+5j/ifYD+orziL9gdP
FJej/bv+jKHBPvsR4snJ8eLPq7ZfdtW5j6KvU71X2c/QxWofVfjXFxW+Nj7+
JeLRhX/9ObE+rTsE30c8vTj+C8XnlRwHuEw8tuQYwuXii0r264mLnKhyQsmx
kZMKP5d4yADx2pljJMRKBhT+IDEE4glvijPt99jM8Ra2sZZ4DnEntfcRvyWO
4uPEnxD7Ep8sfle8Bv2E+L3cfkd/1tE2flRZrfKh2hup/SS1vyOuI+4nfl38
J/dLPEv8N/ddPJsAndbpjW8o/keLvcQzxL9wzcWviX8THymeKf6d+yt+W5z0
377i6bn33zNzfOxkcf3McSDiQceX7PM+Uvin+OYvFz7sA7ljXDsXvvykwr++
s2R/nvWI7bxIf5g5xoD/yzI+PT4y/yGuQqyAuAHXG//3gZLjMw8VvjA+Oj4y
y/j+LxT+Nf/Dr3+25LgTx1u3iEXQtkPhpz8q3kY8VnxOyfGf0eIzSo5vjBEP
KzmeQ7yNuBvXYqTah5QcKzhffFrJ8YFRRayAmAAxBnz5p0qORTxTsl9PrOPx
kmMCxE6IobD83xgKy8RP+N92mWMkxBA4VuJVxDruVflIZZXKDyXHMd5XvXfm
vBLxbWLRjwXn+MjlPREc/ycPeF9wTJ74/MPBOT7ycY8G5wHJDxL//0h8UO4c
4sfig8VvBMfAd0geg4jfEsd9Lzh+3hE/IDgPuGPyPsk98H9ybeT4yB8RM/9U
fIj4/uCcAnkBjpfc5AcV55veVN09d+7yPfEBufMe5D/eqDj/QB5iasU5CNq6
5T4P8pr8h5wm2zswd26NHNuUinON5DL/m3ukZn9cD3Kfb1ecr6TukTsH+i52
E/GY4OMg3/GkyruM0ZmvPTkGzm1GcG5ie/wIrfMt4wXriL9mHBFPFn8jPjjz
e0OM+POSt/ddyf95S2V5yf+ZlvueH545Xsq6+2WOJxFXmqvyTO7nY1+1P577
/3sWcaTXxLuKHxXPEu+OLSdeKT4s8/hCPHen5Gdqhcr3Jccklqks5X3V+l+p
PkDrvyheJN5fvFuwX/NhYfMQ8yf2v3uw34FNy/4XqixQeSF33SNznz1f5UuV
2cV+ltBf5K4PzDw28Xt38STxPHG3zOexuORjejX38R6aOXfMc7F37rjx/SXH
CYnl8g61y9y/ti871rM0d2zqXLUvyx2DGi5er+zYFL8RS+hYLC/JHUM7J3O/
vl3Zy01Uti47rtRT5XSV01SijucMfCv8CNVnlr3cvuZ39RJd88Xa5jb4SVrn
q9zbGIZvEryNm8SLch/vWeKF4nZsS/yT+CDxJZnHw85lx6d+VPsBjKVq37js
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
cpyfsf+w5Bg74zjj+R/BcS1in+tGx/321jrV6HgssbpVwbHTPZLjxsRL9xR3
jkV8Iznmzxh/UHLMn3H9wGTtwcKSx21y/YzrPZLzBdhDh4i3i0WcIVnPgC1y
APHj6NjFocm5Ht4Z8oADg3OF5BnJ3/HskwNCa4bmjDg4+qubK9Z1o8u6rmIt
N7pNfu+QW5OFNoucClopcgfb5NZPoaMiv4IWizwOWm50VhMr1oej+UL7RZwd
LRbrbp9bf872tsyt20K/xf/RfZGz2Cq3zgu9F/tD/4UOjN/QpxPPJ59BbrSr
6pT7XMmPomnguSYvSM6bXCr9RC137pXf18ydGyXfXTd3LpGcIssjgvPI6OfR
fY8v9nducC4e7f1wcc+K9fbnBeeO1xaPCs47ozNH78oxoqtHk8Y12Da3vYMW
n3wVGn7qLXLnh8kTo4Egt0zuDG0EeVrytWgpyOuS32U98qq0fZs518z/yLWR
Y12j4nwc+Wi2sTxz7pc8INoLcrjU32fWmfMb+Vx06eRtyfmSe21YcV6bPC05
PvLu5GqpycOyLjlZcvPki6mXZtbRo6cnF0WOkvtQza3D516i67s2+B6ju2OO
wJUVzzVAk08Ork3u+Ab2BD4Xmn20+//5reJ8J/07OWdyz+TyyUejB1icOY9N
7ollctyx4jwUuU7GhJhb589zjD5wTnLO8ne0ANH5i57EeJPzqQhvD4m2G9GB
HB5tS6PrOCjazqQ/QUOFHYLm5OhouwjNSa9oewNdSu9oGwmblH1hT6Iz4V3G
RqXP6Rrt74xT+5rRWtAhVfc56AlPrrofw3ZFc5Ki4/70RftH+zLoT+hX8X1u
ELeJ9nfGVt2f/F30OTtU/S4TO9+u6vf3Up3vtGA9bd9ivBtZjH1zg/MB3auO
8aIH3hk9THA+ad+qY+DoafdD4xGs6d2l6n54aNEnM3agFz1Y7etX/cxcoP1u
XfW7TzywfdV91MXiLat+Hy8St666v7pQ3Kbq/oH4ep3oPMopatu46udqDBqi
qt+7seK60XmXU9VWLzo3c5o4ROctBhQ5XHzFI7T+CdExxiOT72Od4t6Ni47t
9FP7LdExHOI3t0bHZPqrfUJ0XOV4+udoH/Uo8cnRcc6jxadE2/DY8ndG++An
qv32aN/8BPG50e8C78TZ0bGpY9V+ZrT92hstUnQspa/41Gjf7xjx6dFxyF7J
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
k+dt4nvelTx3Dp/l22S9JrHEJcmaPGKti5O1esRa70ieB4h/dE3yXFn87qXJ
2j5izncnz6/Db1qQ/H0NtGrzk7+tgJ7t0+RvNNCff5+sJSWO/XeyRpO4KL45
38dAP8xEZDQ0+Mh/JmsoiVX+m6xJJX7yW7JOlDjnL8m6TGKY21Y9vx797a/J
2k3imf8k6z6JA/+VrBMltvl7sq6U2Cn+PvP+0TbPTf7WA2Pcl8nfE0Fv9kny
9yAYjz5L/p4Fz+fnyd+t4Pn8IvnbFjxj85K/bcEz+UeybpWY7U3J82PxZ8s1
a4OIA3yTrKkl3vtdsu6TfMF1yfOEiWlcmzw/mTjJomTdJLqyZjXnKhgvmtac
w2BMaVJzPoCxqW3NOkViF61rzpXS37apOVdBnGSLmrWDxDQa1aw/YyxrWLPO
gDGrcc36M8a+ejXrSIgtbF5zDI7+fO2adRX0+WvVrDsh5rBGzToP4hvVmnU/
xBzq1qwvIb5Rp2YdCTGHVLP+gxhCqFmrRMwh1qxPIkaxXs2xacaa+jVrFxhn
1605h8H49XHyN0EY69epOVfBOL4yWc9H/L95zTFZ7PmtatZuEiO6IXluKrGL
jWvObTM2bVRz3poxJa9ZX0VsZMOac9KMiVnNWjFiMtcnz4kl7jEheW4z8Y2v
kjWv5BHGJc8NJr5RqVlDRmxng5pjwYy569ccU2YMbVVz3p2x7KPk75hgI21Z
s56SWFa7mjWpxLg+SP6uCjbS+OT5t8RbNqs5p87YumnNuXPG1hY1x6bxdxrU
rBHBnmlZc5wan2iTmnP2jLk3Js9nJiazIlkTSV5jebK+nJzI7GQdP3bsG8nz
c7AtiWWRg2V+6A/JGlDyNVOSv3uCnfxu8jdrsBWxK/i2CfMi30me34KtOz35
uyfY0j8m67PJDc1I/r4JdvVVyd9HIGb1WvK3TpYX9hLfPGFe7czk755gMxPP
5HsUzPu4LzlPTxx1dbIWnJzUZcnfRCBuuSpZM0p+6v3kb+hgi16R/E0H4kI7
Vv3NDOaq3Js8b5k4KrYi32Bh/u/9yToAYq1Tk78Lg9/xU7LWnDzXZlV/O4T5
Ka8mfxcGf+S95O/4YOsyp5i5cswvnpU8Twl7+Odk7Tu5oWnJ347Bf3k9+dsu
2P9vJc9Jwwe5PPn7FMRd/w/qY0Dc
                   "]], 
                  Polygon3DBox[CompressedData["
1:eJwtnAf8V9Mbx+8+96cQ2TIiSVPZSZGkkFL2iJRklqRkVaQiREZGJCvZEYlk
y8qelREaSupvK/T/vPvc1+v3vH7nuc8593vHOc/8nFv/1P7dz02iKPogiyL9
RXumUfSU/t8qukcHdglR9Jg6TM2jqFlNFDUU/7D4KeKbim+kPleKv1t0j47V
l/wBte9Tu7Hku+t8j+lcN4ruVt89xE9T+xbRZPHT1P+oOIqOFJ1X6Pd0bDTn
Et2rc+yl/tPV9zbRvZI1FF0u2Z38puTzJf+fxtYWf5T4fcU/z2+JpqjvPuKf
VftO0f3iW4ufqfZdogfE19JvXq72BLXvLKNob8mfEX+H6D4d21k0UueeJJqs
8xfqf6lkN+n4Heq/ifgHxE8Vf7f4GvHDuT/xE8V/qfP9rOur0fgeGj9P/Crx
tcQfKf4v9T9V7RFq76DnVVv8FTx/jb9L45vr+Twl+cOSN5d8N/HPin9M/K7i
W4p/Rvyj4luIb61xU8W/JpquY79JXl/tX/W7b+t8v4rfXvx2og/0W7+L31Ht
HUQfi79Wff5Ru72u4R2N/0fyZuKbir6S/EbJt0n9zFZJ/mXpdzZK8nrqO0rt
rVI/o+WSXynaUsf6Sf6fxv+rPs3VXq0+czX2F/Hbit9G9L7kG4iu5H1rzCTJ
/5Z8F8n+Uv93xa8R30R8Y9F89W2p41PV/zrescbsKn6K2teIJopvkfr9jOWd
im8u/j61rxLdLn438Y+ofYNokvgGwc/vAV13Ez3P1cG/xTXM0++1Uv+H1fd6
5pD6fyn5Yr3PRaJpku+def6/LHqS9yt5I7V3Fn0h+Z/iG6r9h87zju5nT/HP
i39CfVvq9/4Qv5P4BqJP1b+R+jyo9j467zy1n5C8h36ru6i/5P9p3AVcj+QT
Sr+T07m/zO+qu37nR/HviWbrWFfx36k9R/S8+CPEL1H7XdEL4ruJ/0Htt0Sz
mP86x5TE98Ta3kjyMyXrKro08zXvmXn9cy+/pZ5L+4nO1bX0EL9Mfd8Xvah+
R4tfqfYnolfE1y+sb55Q+179VgP9H6axt4vu0vgu6v+N5K+JZkp2mPivGCt6
VvyR4n9S+0PRS+KPYr2p/bHoZfGHi1+o9hui58QfKHqOZyt6Qef/PfWzbifq
L/59yXvrWI2e7wG6tia6pkcla6Pj89VuLHoksQ5EFzYV/3hiHYmu/Fr9Bmr8
Thp/EvpM8ocSzynmVjPx03jfoibiHw9+l0eIzlX/DySvp3P0lzyTbHfxsxLP
EZ7vNHRiZv24d/A8Yj4dIBog2YesT8nPEx8k30P8bO616s8caZB6/jJ3Pi+t
U0dIvrnkb6p9ouT/SL67ruez6p1cJvkmzN3C+vQpHbtPskPVdwHPWjRDxw4R
P493LXpG/Ffi/9C9baTxx+j3/hYNkOxayW7W+D/En8t6FX+T+C0Lr69HxE/m
WRS2H49xz+I/Yz7rfJnO101jv+D9iw/iu4sfi85g/vHO0V+i89Uep/G3SPaq
aIHG/KIxswuvK9bXq6KnsB+Z3+0boqfFX63+f6rdWud4Vfxa0WD0hfrdKlmm
c1yMfRN/u/jLJN9Y7RM05n+SxaILJR+vY7eVnkfMpzdFz6jvNTq2mvmnPm+K
P1XyP3hXzGfxh6AzmM86PkV999f/p9HdouckPxgdLvlH6B3JD8hsDz5kzkje
PrO9+Fg0S/wuhe3j0zp+v/ofg/0U/xn3p2NdJF+t9qc8F8nbZbY/74lmanzX
wnPjM+yM5AdlnltfiF5kPul8y/VsC/FHiG+bea6/I3pW/H6Z18pbohniu+t8
a3W+L3T8IZ3vex07Xvzl4seL75B57n8mmi3ZUeqf6Pxf8p5Kz6H6qfU7c+tr
tf+SvK76Hys+lXwv1o5oicbOFH0k+UGSvYQ+FV2hMZ107LTCOhpd3VvyLaTb
nhH/vmQHin9RfbfT/6ewITo2VrJCx47jt0Q/o8tEcyVrr36z0R3i3xDfTvwL
4t8Q/434w8S/If4d8T+I7yr+LfEbis7Ruc4WJVpvdUrrApy0nPWp/gvVv4v6
z5FsA9FZkp2JEyf5JuIHqX2+qEZ8Kb6n2ifhA2jsq6IFGn+Ixr8u2UaiAYl1
DronlJ67x4tWqW8u/mh8K9Fy7k/nPFbjjxENEv8hfSQ7Obd/sUj87lyP+K31
/Kar//Hqe5xosGRfitaXvE9ue/6Z+PXEn5rbHi5Kfb5lsefP0+hXHZso/gr1
/Z/aW0m+Fv0q+eaSDxG/va7/Y7XfUp/vJDtcsjdZn6IjJe/BOSV7hneuc9yl
PleKf1LXd7TaV+vYk5JtKroA/0jn+0jtzUSDEx+rpb4/qF+q9tLY+gcd8rna
nXLrlpfFzxPfWfxr4uuKBibWyejmG3SOX/SqfhV1VN/x2MzIa5i1fBM6PfKa
Z+2jw3n+V1W6HZ8N362n+M30fL/X9UTit078PG5X//8irynW1jEak+t6eqnf
WrXXC56vY3Pf363i10Re06zte5kzse3fiYV9Quz5KTzrGj8jnhU++0DJtgz2
7W5EF0t2i/i/I+sQdAk2pa/k4ytbc7ToL8mO1zn+U3uy5AX6W3S8+k/TsVGS
dRF/pvhJkqfoe+ac+BniT1a7p+hi5o769+L68KnE15Runyz6nblW+vpOF/2L
7hN9orEddT0vS7ZxaVvJGih07lmSfyr5wZK/ItnX4jeWrG9uf7WWqHdinx3f
faGu9V/130L8Cepzp84Rx9ZR6CpsOPNvTO719R33LdmWOnaijk2UPIo95kj1
f1x9zlefncWfzHyV/CTehWio+G8lW6P2ZqxRja9d+vmeJlqDP6j+u6rdQvSt
+FWpr41r5Pd+Fr+p+NWxx38VrK/R2+i3BcFrDxv7dOG4gfihjegc9f9W8pWx
Y5rnJJ8f3Be7jL5bGBzfEOfwfOcFr5UloumszeB4jbht3fMVvyK2DX9W8uXB
98d9oh9/Dn5ePDfW8xqto3Gpn8lF6NLgayHOQp+PE0VqH4LNzB2zELucRhyi
+bsi+Fnw3tCf2JjNUvvQ2J7rxcfiD8MGiv8+2Ffgml/QubbQsUcknyD+UmxR
aduyVsfeZ6xoj8Q6EF3YXPyTiX2+psG+x68au4H4o3WuSPLdeD86/p7aa9Wn
lfiWou80/jrd7w6p45nV6v9jsH3DzqG/8Zm2Tx3P4EstQp/E/o0XNX5Z8Lv+
W/S6+J/E/xP7Gc8p/A7mVzEpc3+p5H/G9tleEb8kuI0fhz77Ifjc3Af6brH4
32P/5ktcr479p2s/mJyCrucMXf+/4g8iBhG/Klhfobewd2cyPzV2N9EP6ltP
xy6VfEe1P2XtSr6JZC2YAzq2TWlflD51da6nRSdIdi15C8m2Fl0i2cWijYgt
S8cT+LD4sluKLhK/g/hP1P4p9frmnvEXlqW2T7xz3s8S8WXiOUr8vji1b8Oa
wd9cLr5O4meAf7site/BOzpO/NLU9o01Q7z/Y+rYn+dNvuKX1Pq8NTZf/Fal
r51rrKPr30L8ULUvFG0gfgbzSWMma/wYPe/p+BjibxM/vPAz4Flgc4eIbyj+
fo29DxsZ7APvmDpexjdGR6ArTue3tT5WBttW1tzb2Fv0WeJ39q74GzQ+TR3/
fUHOonR+hDwJ+r9B6fwNOQFyA9uVji2GizYjF4G/lTiHs4X4b1LPzU0SP69h
Glc3dYzwtfjtS/clRsF+rJRs88RzGH27Y+ncAzmorYmdxY9JfA3biL8pd46K
a9xKfEvJZyT2kcmd7FY6HiQu/ErtCTp/f/wBYhaNPTs4F3Q7S1X3f1ZwLqpR
6vzPOeInim+cOt/TLzi3dTNqSP3PIOZSe+fU8cGZwbk1juWS9+Ua1W6YOj64
Vf/P029fI9pYv/+s+EfVflPUKve7vwddJGoqfqb4x3lXrCHxt4kfyHrABxY/
nXwIa1nUXPwz4h9CF4h2FT+D/Ae6QNQSf0v8g2q/ypqrfN37WduiZuQWgu+N
a050/YODY/H9Uue/zgvOvU0SrS/5QPGT1W6WOp9Djo9c3+/kG2ts/3cQX5/1
UvkfDdTekfdb2OZh+1arf1D/e4JlA3gupfUm+vNw0RBiPcnvifybG2ps/+Bc
X5PU+b3/UuvmrqwpYs/g3CDvcD31P1vUFf2p30v1ewOC76Vp6nzcGZIfhj2Q
PJH8IfJwxLKJ43nsAPbgCNFQyQYFx8KzRRtr7O2i9zR+d2x3jW0GY7AZiwvb
PGwfOptYoVeVoyBH90nhmIDYYLSO76zxhwfHz+eIFujYEcG2bJDoO+Kr4HgV
G4etw8cmZ0COCd/7ctEd+q2t1LfU+SZKNkT8eHwM/Enxg9QexxoV/6DO11Ht
g0S9NbZHcHw7RLQI/0f9h0p2k2jz3DnJ3ciVVuvtcY35XrL9JdtEsjvUf7D4
G0Sb6thoye9Wexu1ayR/LPX1PSNqlDvGIdYZpXbDGscQ5AbJsRFb/JPadh4m
Gqw+01Kf73lRE/FT8FnU3lftjTT+EXwq8W3F162xDWZOYYO/l+xOYhzJ95R8
fd63+K/F70ecz3wkRyJ+H/Ebir+PGFJ8a/F1xE/Chxa/l/gNahzL3ImvI9pF
x7oF5ycGir4lvg7Wff1FX+WOVSbha4kai+8dnKskh0Mu55XgWPRedJZ+67Tg
XPt4USS+T3B7p9T5ijWp9f0hxDT4wMFj0SlXqf9LwW30DLbmmtSxG3OgUP+x
qWM/dExOTBIc//AMeBYj8b3UPg0bQkwWHA99Kbq/cKzdWe0+on+JsYJlPDOe
3WfB8S3vhHdDTE1sfYl+a9sa2zbsPXMm6Njl4g9W+1TRP6xD8WeqfaVoQ8nf
C473eYe8y5skP0Ptkfhg+OTB/v67Oj5L9/t+cHzAO+Pd3ajjp6t9uWh9Ypjg
+PLj1PH83OD8AGuatf1pcHzPHGGurOYdYO+wVTWOqYmtLxW/nfh+uecsPvvC
wj48vvwVOt6gxjEMscxw8fVrHMMTyw/DNtY4piG2GSl+pxr7NfgO6KOJuXPS
5KYPUHtTya9KrX+xcWnuWI74F5uTib8ytX7jntdmjsUOj/3MIsk/Cc4fsIZY
S6NT60ueeSz5+NTvfriotvgxqXObZ4sSYv7g/Mi7otuwBeIv0qmHipbgf6d+
l5eK1hN/XWr9j04qyaEEx+6soZEa/5b4x2LbyJvEvyP+idg28RbxbwbbN+zc
c+Rfgu0fdnBm6ToE9YjOokHYt8Lzd5XuPdbzmqP+D8cec4NkbwefG7v7fOkc
COvhT/XP1f/FYN8MnYMue1X8A7Ft6DXiXxc/NbaNHSd+dvD6Zp2Tm/g7dbxy
sOh8cgjB9hs7/mzpHArr8S/9XqHf+zN1vqq96Dz1nxX8bNAz5E76FF4fP1Pc
q3HsROyMjq7Bfwj2HW8VDVPfW1K/q9GiOpI/J/ntsX1MfE1yQOSCLpKsns73
bHAsdIvoMuLr4FwNOhvbQo1q98z1OmpX5MYbMh9FP5GnTp0r31+0XPw54rdF
n4qWiD9b/NboX9HizLFxI7UPFK0Qf6747dHnoqWZbQG1mg6igbrGG1LrmmGi
Wrn9BvyHtqJl5NlT+x5tRD+KPzU4Nz5O9K/6nxgcW40hJyP+BPGj1R4l+k38
r/qdVmpvLjpF438n9lN7S1GvKod6hn5j09j5kJXE5pJtIuqJzxyc/8MmYhvn
VnOSmhu5h/9hN7HfopMz+zDrfJnItcvlxJVqbyQ6scpZkbsiB0iu5yv93y5y
bfeoKmdLzLV57HwPOfIdJDstc+6cHPPpxESx808rNL4ZvovopMw5cM7XO3Nu
/EfJG+NriU6ocnDk4siZ1Q7OQZKLvBo/HP2NHsucs1s/2OfF98VmkSt/JDj3
gw7C18LHxtfGZ6b2ig+NL42PTe79SvX/Qu3P8cHFXyL+HbXfFm1TOMYk1iSm
IdeKDcQWYkPJ5fOsyO1dL7pN/MMaf2hsHYAuIGYhdrlBsl1q7AOu8wUj12rx
afFt8XmpXeID4wu/HLk2TIyJTiaG21Dnmk9c4nAqOhJ7JdoldUwRCscQxBLE
HNSSLw6+l/ap6x/fEMdZFUdHa+wi8Tvhu4qOyxyTMf/6Z47ViKGJpYmJN9a5
Mp2nR+T6woDMOQ7m1zmZcx+55EdFrneclzmGZ36dmTm2J6fC/D07c67lc/0/
q4rhuxXO4bNmt4qdf9y1dL2CusWC0jl71vg2sfNjj5Rew9vFzu+hcwenjvd5
/sSUxJbEjOQaV6Bvie91HduobwvJpyeuUVArJyZgjRNTkE8ssG+63n3xsYgh
xB8buT50vvgydb2B+ssg8euJPyly/Xtw5hr4zmr3y1wbn6Lf2CW2DjqlcM2l
LzmA2PnbhYnXE2mOYzTme3IPVr3RsZlrPPB9M9d+avBnxO8vuoCaTHDuDx3Z
U+erjT2MnE+5kJpbsL5Ebz6m8RtgbyPnuy6SfMPU9V/yVxeLryO+n9pdRJdQ
Iwq+dvQoucYlie+vtuh4yWvp+CmR8zVDxK8vvrfanbDR4ltpzMzENSX0+UXB
teI3RVvrei8NriWzBrcVf21w7pYc7r7ixwbnOsl57l147myp9u6iRTyT4Nwp
ffYpjHloSa2ter8XBK+tl0R1C9tQbGl9Pdf11PfYYGzCCNHK3HOfXBHj78RH
yryeiUcmiR8VnHsnB99M5xoSXGt+FZ0r/urgXDo59T0L5wzJHZJ/oBZDTozc
GPkfcv/XBeeyyWm3LbxmWbs8I2qZxwTjQ4aJVuDTZtaP13GNuX0YfJkGatfS
/ZwSnKu5VrRGx3oF2yZyOORyDs2dQyHf9Bq2ObgeiU+1VLKTxF8dOUdIrrBn
cK2MY39JfnJwbpEaGrU06hTUK64VTcid68Q3eIo5Kf74YHzGSNEv4h8K9ufx
66mlTQ2upeFz4HscF4xnATMCHoGcJblL8m3Uoo4OxopcIlqWu+a7f+p6PbVg
6lLk5seKbsnth+CPPC3aWfzQYCwDYxg7Orh2Qg2lucY/Jr5bbB+V2P5Jna9j
arxAA/HDg9sf8EzFjwjGDnwk2qlwjfvg1Meofd8sed3YNhJbSb0GW7mRqHPh
mmrn1PVUaq03BsvQEegKbB+5vBuZg7r+kcG2izGMvTD43l8XbVHYlmIrx4tu
J94Jxk5wTVzbZcHYjrm8Y+ZOsL+O304t5Yrga/lU1EjyYcFYjA6p8RbUn9Bd
G4o6Fa7f4KuQcz2scL1qA7XXFx1UuL6EbmfNHlFUmKLUmCJqgZyTc3NNYDvG
BdeSqCntL/6q4FoTNafdxD+s+2uXes1tLn5McO2IGlLLwvWRerF9wB74A8Ft
bAy2hnoLtoQ+1E8miN8sts+F70V9C1+HY4dLfluwrcIHwhe6K9jfxCZhm6g3
YYs4dnThmgO1B2oG1Bavl7w2viQ+KPY+2P/EhmHLwEhQH7o+d76Z9XhyZJ36
Y24bTL1qXG7bfLGok/gyc3xIfQnfn2N/F65fkcvokhg/Rb3rILU7iv4Uf1Hp
dsiMH7ukdCxTkzl+pD5ErH8oOVP0c+n2epnjxW+TdSWIaMfKXpE/Jb9EDXrb
4Pwq+RZqzOC7vintczTEx8qd2++odq/KXvwgvlZkOf7Id4l9k50q+0dtAFvS
u7JnYFkmJ87hgve7rHQur3bm/A71bXJ13USxfr8FPqPaj+T2J8DfsJZuwg8N
rp+Te+suStFVpddOi8z4RfA7+Ho3YPeC8TjEyrckrs9wDNmDufE+/Uvn+8n7
U/8cVvpa1s+cfyOmnpM6/0qsPby0f1Ins79LPZ78xXGVP74D+lbt+3PjucDj
gWXJq/VDPZL4ipovtV/q/9SuqSFSS6QeTf7ghMq/Bl+E7RiHHxiM3TtQz7Zn
5b+ALcG3OKHyb4ixibVHqr2YuRTsW/AO35esrfi2kTE0xAMHiu8Q+ZzvSn5A
sG90QPX+O4jeTp1foX7XIdh3YMxcydoF+1acc474/YJ9rzbouNw5LnJdlzFX
9Hutg33TvUQvS9Y++Le5L/wvag/dxJ8VGX9GjpNc5wjmXmmsDr4ePh/+Kzk1
cmvD8cWwLcHPg+eC/0XOktzlFfjS4odyz5IVmfMtPAeu/bjI/iL1DPIz1Fyp
bVOfIR/Ts/LvwVOCRaJmRL6Wegf5mX6V/7pW/zvrXH0qf+qvxM/imMj+6ZrE
z/bEyP7giNL5o80zxx/Ut6hv96r8efCQGyauQS3Q7yXkazT2jMrfo55E/ogx
1MOobeIL9qv8Q2qlh+pf38j+I3hHapOcE3wl9TZq3eg0dNvI0nOtWWb8L/VN
1s4Ejkk+qnQbnw3fjXrB0MofoR7SKTPWCswV+NTO4l9PjJEDb4UPgC9wJXO1
tI+ErzRa/FJ0o/6/khiTCF6ro/iXEte4wFv+WhqTBkZw18L1CHwVfBbiM/L9
+Ib4iMTP1Gu4Nnwm4knqB8T2xPh1CuNTk8SYj/fE7y7+LrUfz10vOkS/Pycx
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
7WWNgy0g50hu6a0qF8n+ue6Rf3O+5P8HJz/HDw==
                   "]], 
                  Polygon3DBox[CompressedData["
1:eJwt1nuUz2UeB/BfU+FUkiZhMC5lt7N2y1HI/S6Xsm1KJLcxGNcRkSKXMWhK
hGrbdk+2VnJPbU67jq09HSUaclfkzCqttYmI3Nba13P288f3fOf7+r4/z/PM
9/c8z/dbN6/wgTFZmUxmmeNqx6wKmcxyf7S6KpNZ7cZt5TOZRY6drntfmcn8
JNO1XCbzd5Yrt4TNuSKTKWFHWFf2OTvAPmLF2nuLtVC/Qnv1ZQ45OrNSuT1y
G+QeYEUyFVhffRx2v4x1cv6M7ZJbL/cJq8eWsflsAevH5qq9kRWqPef+RlbH
eSmbKzdP7gBrzz5l29g61o2NVnvS2Bqp3ev+Y8Y8xPm8XAP+lVy+3AK5quwJ
uQzbx9rIfcw2aW8NG6d2GLvIbldbxlrLDVF7yPUtSje535YNZd+kZ8I2s4Os
g/Nmtdu1977aPqxErhIrkDvp/gD2PMtmj7ELbAur77ySvaj2ZbVD2UK5auxJ
uSzWnhWwI+m3ZaVqtrO7nT+QW6/2dblP2S1sOVvAFrEubJTaE2obqt3t/mD2
ArtZbiK7zOZ4Bqud2/F1KSszPM0j19XlpqS5pr2jrFvqnx3Ux0ZWonYt6yi7
Xm1jmWfYGtaevZ9+J3bY0YVtU/uF2g/VrmPnZaaxtmwSu5cVsjOpLf1+qeZr
do/zVrm9cn+Tm62PlayN7Luyv5J51/GT6ylyLeTGy7Vkg9lBmTra26hmEJvP
qsg9zi6xzmwE+y61xXaw1ewUmyR3p/ZGau9O/b7tXmO+OP7fXmy36wK5bLnu
ci/xXawPO5f5vw2Ra5J++5gvf2Ar5E7ITUjzjw1lRXJL5O7mb+qjtsxkVsRu
ZoPZ+TRfWNNYbzvVvsYKWPN4zvvYn9gw1iye356YL1PYTFZVe/nau8Cm6Wet
6yZy7xlzPTZY7la5v7BVMa/y2V2xLreyV1Itm8NqqB+pvSu01TaZ6xpyU7V3
zP0i/mfWjP2V/Vxt07QG2UV1bWNt3c8+YwPksvTRPM0N9gl7JJ5pQ9adfRzP
+Sy7gz3Itqf/i12jtj3rybaxPFaetUl7GNvKBrGrWSv2G1bKBrKrWEs2iU0z
pmz+qDGeYk1YvutzrlvEvCr2v61jLdRuYL+Qe0puhntVUj+yZ9mTbDq7ifVn
p9lUNpvlsOHsMmvDZsUanKy9o2mNsmdYTTadHWejWTvnPeywMa9N+xD7Qa6Y
dY151Y+dZc+xXrE+RrBWanfEml7ORrLWbCcrYytZb3ZcbRHrzPLYI+wkm8W6
swLWl/3I5rAesWb6s3NsLuvNJrBH2RlWwnqysWwUa6vf3ezr2J/zWF22jr0V
74VBrBZ7hy1ms1lzNjXeKWM8lwPpHZaeM7sp9t0y1poVxx47if2TDWct4j24
X3tL077LnpXLZTNjH3861TpX40P9Rv+Ra8CWsdvZwnj/3sc2ue6r9oLaRnId
2HOsNpvFflTTjI1hWey+eJcNZDnOa9irxjJDbau0VuNdNjHetS3TvIo9bDw7
lPYLNpJdNo4usYcNYBfYvPSejj12BlvgXv2098pWMeZfsy1pPspdVttUrgfb
zPqxS6wxy2UvxD6UH7VLHWWuh8hV1MdAuZpy82Pe58lly/zOsTetoWjvfrk6
cgvjmQ6TqyZz1pHH/iV3Ldsn9wb7KtZvBX30ZcdZj5gv37AtrJ72FrHqsY5y
ZE47BrBv5cqxnXLnWT77N7ue7Wfj1Y5g/037PTvMbmNvsgbaez59D6gbywaz
s3I/i/Et4QfT3hx7Tj9WOa1Vuev5Q3LlZLJZCavEHmYV2HeOe2O9/UPtJrUb
WA32OitixewDVpO9wYpj3n+f5hvbFWtmc1q/7EXt58S+W55VSfNPrnLaP/V7
rcxvHXtinl6U6yFXVW6u3I2x11WUuZW9FHv7KFaLPc6eiv/tQXZUbXU2L/a1
AewGufWO6myxPqbFfP4j2x97bNp3e7Mf0hyMPexbVsrGsldiDRYbX0XWSR8r
WGv2EauSvnPYO6wT+zzeW2NYf+2dYrnGso1NZFPYDfHsv2dPsKfjufRhJ1jH
tKZdt1T7ofYqs4fYjpjj1xlfR9aQrVLbiL8a303T077Bctm4+H27sY3xPX5G
e79U+zA7wApZnXgGhWyg2tOsbszTruw9uS5sd7wvC9Nvx2rF3nRd+t/YcnZH
2ifjuWTUDtfeCVYt5vNrcl/Ge/VK/fZiE+Qmx5zsJXeMXUrfu+xY+qaJ7+Lf
sy9ij8io7cmy0p4jd5LVkDuS3m9yq+QapW8G0Rx2T/puYh1YKavNJsutYXex
t1kt1jl9i7J26Rs9aselvSP2ztmsEhvNXo734Ax2DZupdqmxNOfLYq3+D6Ff
peU=
                   "]]}],
                Lighting->{{"Ambient", 
                   RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
                  "Directional", 
                   RGBColor[
                   0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                   ImageScaled[{0, 2, 2}]}, {"Directional", 
                   RGBColor[
                   0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                   ImageScaled[{2, 2, 2}]}, {"Directional", 
                   RGBColor[
                   0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                   ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
              {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0klPE2EAx+GXIoqAVAoiYDVwFMKV5S61rkD7AUC9CtzReKV8ACAcWT4A
GK8iuLO4AQolhhhjKiHGGJZ49Zl4+OX5z2Xm7XSa7g5lBotCCFOKKdpJLZWE
0M6MvtoD/MscZ5Q4GcIC82q1j5hm3A2adc/uYr8e6JHrcc5r0l7jE/5kzIM/
2BfZoX07y5JTIQxyVI32LJ9pUakTzsjnumq/YJov+UrX7Nd8o+v2W97gMld0
017lmt7pluv30Tl02/7Ibn7iunrsDW6q1/7MDL9wS1l7m3ktqNN5Z5jTJXuA
xcywXXt+Y5JF0fPtgvfwmKuc04Q9xmH16aHrK7ysO3YlUzz03rfVYj/ltM7a
Izz2f91nr3bsNl5Qg448t551OrDP8w9reU6/7RpW65ed4D6rovtrz46zUmdU
cF3Bcv2wy/idp1mqb7afHxwt7Eb/bfRd0WsLxdH5Yv+/v39kkVB+
                "]]}, 
              {GrayLevel[0.2], 
               Line3DBox[{1473, 1850, 1472, 1122, 1474, 1851, 1475, 2186, 
                1852, 1476, 2102, 2270, 1477, 1853, 1478, 2187, 1854, 1479, 
                1855, 1480, 2188, 1856, 1481, 2103, 2271, 1482, 1857, 1483, 
                2189, 1858, 1484, 1859, 1485, 1860, 1486, 1129, 1487, 1861, 
                1488, 2190, 1862, 1489, 2104, 2272, 1490, 1863, 1491, 2191, 
                1864, 1492, 1865, 1493, 2192, 1866, 1494, 2105, 2273, 1495, 
                1867, 1496, 2193, 1868, 1497, 1869, 1498}], 
               Line3DBox[{1500, 1870, 1499, 2106, 2274, 1501, 1871, 1502, 
                1151, 1503, 2107, 2275, 1504, 1872, 1505, 2108, 2276, 1506, 
                1873, 1507, 2194, 1874, 1508, 2109, 2277, 1509, 1875, 1510, 
                2110, 2278, 1511, 1876, 1512, 1877, 1513, 2111, 2279, 1514, 
                1878, 1515, 1158, 1516, 2112, 2280, 1517, 1879, 1518, 2113, 
                2281, 1519, 1880, 1520, 2195, 1881, 1521, 2114, 2282, 1522, 
                1882, 1523, 2115, 2283, 1524, 1883, 1525}], 
               Line3DBox[{1527, 1884, 1526, 2196, 1885, 1528, 1886, 1529, 
                2197, 1887, 1530, 1166, 1531, 1888, 1532, 2198, 1889, 1533, 
                1890, 1534, 2199, 1891, 1535, 2200, 1892, 1536, 1893, 1537, 
                2201, 1894, 1538, 1895, 1539, 1896, 1540, 2202, 1897, 1541, 
                1898, 1542, 2203, 1899, 1543, 1173, 1544, 1900, 1545, 2204, 
                1901, 1546, 1902, 1547, 2205, 1903, 1548, 2206, 1904, 1549, 
                1905, 1550, 2207, 1906, 1551, 1907, 1552}], 
               Line3DBox[{1554, 1908, 1553, 2116, 2284, 1555, 1909, 1556, 
                2208, 1910, 1557, 2117, 2285, 1558, 1911, 1559, 1195, 1560, 
                1912, 1561, 2209, 1913, 1562, 2118, 2286, 1563, 1914, 1564, 
                2210, 1915, 1565, 1916, 1566, 1917, 1567, 2119, 2287, 1568, 
                1918, 1569, 2211, 1919, 1570, 2120, 2288, 1571, 1920, 1572, 
                1202, 1573, 1921, 1574, 2212, 1922, 1575, 2121, 2289, 1576, 
                1923, 1577, 2213, 1924, 1578, 1925, 1579}], 
               Line3DBox[{1581, 1926, 1580, 2122, 2290, 1582, 1927, 1583, 
                2123, 2291, 1584, 2124, 2292, 1585, 1928, 1586, 2125, 2293, 
                1587, 1929, 1588, 1224, 1589, 2126, 2294, 1590, 1930, 1591, 
                2127, 2295, 1592, 1931, 1593, 1932, 1594, 2128, 2296, 1595, 
                1933, 1596, 2129, 2297, 1597, 2130, 2298, 1598, 1934, 1599, 
                2131, 2299, 1600, 1935, 1601, 1231, 1602, 2132, 2300, 1603, 
                1936, 1604, 2133, 2301, 1605, 1937, 1606}], 
               Line3DBox[{1608, 1938, 1607, 2214, 1939, 1609, 1940, 1610, 
                2215, 1941, 1611, 2134, 2302, 1612, 1942, 1613, 2216, 1943, 
                1614, 1944, 1615, 2217, 1945, 1616, 1239, 1617, 1946, 1618, 
                2218, 1947, 1619, 1948, 1620, 1949, 1621, 2219, 1950, 1622, 
                1951, 1623, 2220, 1952, 1624, 2135, 2303, 1625, 1953, 1626, 
                2221, 1954, 1627, 1955, 1628, 2222, 1956, 1629, 1246, 1630, 
                1957, 1631, 2223, 1958, 1632, 1959, 1633}], 
               Line3DBox[{1635, 1960, 1634, 2136, 2304, 1636, 1961, 1637, 
                2224, 1962, 1638, 2137, 2305, 1639, 1963, 1640, 2138, 2306, 
                1641, 1964, 1642, 2225, 1965, 1643, 2139, 2307, 1644, 1966, 
                1645, 1268, 1646, 1967, 1647, 1968, 1648, 2140, 2308, 1649, 
                1969, 1650, 2226, 1970, 1651, 2141, 2309, 1652, 1971, 1653, 
                2142, 2310, 1654, 1972, 1655, 2227, 1973, 1656, 2143, 2311, 
                1657, 1974, 1658, 1275, 1659, 1975, 1660}], 
               Line3DBox[{352, 353, 912, 354, 355, 913, 356, 914, 357, 358, 
                915, 359, 360, 916, 361, 917, 362, 363, 918, 364, 365, 366, 
                919, 367, 368, 920, 369, 921, 370, 371, 922, 372, 373, 923, 
                374, 924, 375, 376, 925, 377, 378}], 
               Line3DBox[{1662, 1976, 1661, 1304, 1663, 1977, 1664, 2228, 
                1978, 1665, 2144, 2312, 1666, 1979, 1667, 2229, 1980, 1668, 
                1981, 1669, 2230, 1982, 1670, 2145, 2313, 1671, 1983, 1672, 
                2231, 1984, 1673, 1985, 1674, 1986, 1675, 1311, 1676, 1987, 
                1677, 2232, 1988, 1678, 2146, 2314, 1679, 1989, 1680, 2233, 
                1990, 1681, 1991, 1682, 2234, 1992, 1683, 2147, 2315, 1684, 
                1993, 1685, 2235, 1994, 1686, 1995, 1687}], 
               Line3DBox[{1689, 1996, 1688, 2148, 2316, 1690, 1997, 1691, 
                1333, 1692, 2149, 2317, 1693, 1998, 1694, 2150, 2318, 1695, 
                1999, 1696, 2236, 2000, 1697, 2151, 2319, 1698, 2001, 1699, 
                2152, 2320, 1700, 2002, 1701, 2003, 1702, 2153, 2321, 1703, 
                2004, 1704, 1340, 1705, 2154, 2322, 1706, 2005, 1707, 2155, 
                2323, 1708, 2006, 1709, 2237, 2007, 1710, 2156, 2324, 1711, 
                2008, 1712, 2157, 2325, 1713, 2009, 1714}], 
               Line3DBox[{1716, 2010, 1715, 2238, 2011, 1717, 2012, 1718, 
                2239, 2013, 1719, 1348, 1720, 2014, 1721, 2240, 2015, 1722, 
                2016, 1723, 2241, 2017, 1724, 2242, 2018, 1725, 2019, 1726, 
                2243, 2020, 1727, 2021, 1728, 2022, 1729, 2244, 2023, 1730, 
                2024, 1731, 2245, 2025, 1732, 1355, 1733, 2026, 1734, 2246, 
                2027, 1735, 2028, 1736, 2247, 2029, 1737, 2248, 2030, 1738, 
                2031, 1739, 2249, 2032, 1740, 2033, 1741}], 
               Line3DBox[{1743, 2034, 1742, 2158, 2326, 1744, 2035, 1745, 
                2250, 2036, 1746, 2159, 2327, 1747, 2037, 1748, 1377, 1749, 
                2038, 1750, 2251, 2039, 1751, 2160, 2328, 1752, 2040, 1753, 
                2252, 2041, 1754, 2042, 1755, 2043, 1756, 2161, 2329, 1757, 
                2044, 1758, 2253, 2045, 1759, 2162, 2330, 1760, 2046, 1761, 
                1384, 1762, 2047, 1763, 2254, 2048, 1764, 2163, 2331, 1765, 
                2049, 1766, 2255, 2050, 1767, 2051, 1768}], 
               Line3DBox[{1770, 2052, 1769, 2164, 2332, 1771, 2053, 1772, 
                2165, 2333, 1773, 2166, 2334, 1774, 2054, 1775, 2167, 2335, 
                1776, 2055, 1777, 1406, 1778, 2168, 2336, 1779, 2056, 1780, 
                2169, 2337, 1781, 2057, 1782, 2058, 1783, 2170, 2338, 1784, 
                2059, 1785, 2171, 2339, 1786, 2172, 2340, 1787, 2060, 1788, 
                2173, 2341, 1789, 2061, 1790, 1413, 1791, 2174, 2342, 1792, 
                2062, 1793, 2175, 2343, 1794, 2063, 1795}], 
               Line3DBox[{1797, 2064, 1796, 2256, 2065, 1798, 2066, 1799, 
                2257, 2067, 1800, 2176, 2344, 1801, 2068, 1802, 2258, 2069, 
                1803, 2070, 1804, 2259, 2071, 1805, 1421, 1806, 2072, 1807, 
                2260, 2073, 1808, 2074, 1809, 2075, 1810, 2261, 2076, 1811, 
                2077, 1812, 2262, 2078, 1813, 2177, 2345, 1814, 2079, 1815, 
                2263, 2080, 1816, 2081, 1817, 2264, 2082, 1818, 1428, 1819, 
                2083, 1820, 2265, 2084, 1821, 2085, 1822}], 
               Line3DBox[{1824, 2086, 1823, 2178, 2346, 1825, 2087, 1826, 
                2266, 2088, 1827, 2179, 2347, 1828, 2089, 1829, 2180, 2348, 
                1830, 2090, 1831, 2267, 2091, 1832, 2181, 2349, 1833, 2092, 
                1834, 1450, 1835, 2093, 1836, 2094, 1837, 2182, 2350, 1838, 
                2095, 1839, 2268, 2096, 1840, 2183, 2351, 1841, 2097, 1842, 
                2184, 2352, 1843, 2098, 1844, 2269, 2099, 1845, 2185, 2353, 
                1846, 2100, 1847, 1457, 1848, 2101, 1849}]}, 
              {GrayLevel[0.2], 
               Line3DBox[{730, 1108, 731, 1122, 758, 1136, 772, 2274, 1150, 
                786, 1164, 2196, 800, 1178, 814, 2284, 1192, 828, 1206, 842, 
                2290, 1220, 856, 1234, 2214, 870, 1248, 884, 2304, 1262, 898, 
                1276, 912, 1290, 926, 1304, 940, 1318, 954, 2316, 1332, 968, 
                1346, 2238, 982, 1360, 996, 2326, 1374, 1010, 1388, 1024, 
                2332, 1402, 1038, 1416, 2256, 1052, 1430, 1066, 2346, 1444, 
                1080, 1458, 1094}], 
               Line3DBox[{732, 1109, 733, 1123, 2186, 759, 1137, 773, 1151, 
                787, 1165, 2197, 801, 1179, 815, 1193, 2208, 829, 1207, 843, 
                2291, 1221, 857, 1235, 2215, 871, 1249, 885, 1263, 2224, 899, 
                1277, 913, 1291, 927, 1305, 2228, 941, 1319, 955, 1333, 969, 
                1347, 2239, 983, 1361, 997, 1375, 2250, 1011, 1389, 1025, 
                2333, 1403, 1039, 1417, 2257, 1053, 1431, 1067, 1445, 2266, 
                1081, 1459, 1095}], 
               Line3DBox[{734, 1110, 735, 2270, 1124, 760, 1138, 774, 2275, 
                1152, 788, 1166, 802, 1180, 816, 2285, 1194, 830, 1208, 844, 
                2292, 1222, 858, 2302, 1236, 872, 1250, 886, 2305, 1264, 900, 
                1278, 914, 1292, 928, 2312, 1306, 942, 1320, 956, 2317, 1334, 
                970, 1348, 984, 1362, 998, 2327, 1376, 1012, 1390, 1026, 2334,
                 1404, 1040, 2344, 1418, 1054, 1432, 1068, 2347, 1446, 1082, 
                1460, 1096}], 
               Line3DBox[{736, 1111, 737, 1125, 2187, 761, 1139, 775, 2276, 
                1153, 789, 1167, 2198, 803, 1181, 817, 1195, 831, 1209, 845, 
                2293, 1223, 859, 1237, 2216, 873, 1251, 887, 2306, 1265, 901, 
                1279, 915, 1293, 929, 1307, 2229, 943, 1321, 957, 2318, 1335, 
                971, 1349, 2240, 985, 1363, 999, 1377, 1013, 1391, 1027, 2335,
                 1405, 1041, 1419, 2258, 1055, 1433, 1069, 2348, 1447, 1083, 
                1461, 1097}], 
               Line3DBox[{738, 1112, 739, 1126, 2188, 762, 1140, 776, 1154, 
                2194, 790, 1168, 2199, 804, 1182, 818, 1196, 2209, 832, 1210, 
                846, 1224, 860, 1238, 2217, 874, 1252, 888, 1266, 2225, 902, 
                1280, 916, 1294, 930, 1308, 2230, 944, 1322, 958, 1336, 2236, 
                972, 1350, 2241, 986, 1364, 1000, 1378, 2251, 1014, 1392, 
                1028, 1406, 1042, 1420, 2259, 1056, 1434, 1070, 1448, 2267, 
                1084, 1462, 1098}], 
               Line3DBox[{740, 1113, 741, 2271, 1127, 763, 1141, 777, 2277, 
                1155, 791, 1169, 2200, 805, 1183, 819, 2286, 1197, 833, 1211, 
                847, 2294, 1225, 861, 1239, 875, 1253, 889, 2307, 1267, 903, 
                1281, 917, 1295, 931, 2313, 1309, 945, 1323, 959, 2319, 1337, 
                973, 1351, 2242, 987, 1365, 1001, 2328, 1379, 1015, 1393, 
                1029, 2336, 1407, 1043, 1421, 1057, 1435, 1071, 2349, 1449, 
                1085, 1463, 1099}], 
               Line3DBox[{742, 1114, 743, 1128, 2189, 764, 1142, 778, 2278, 
                1156, 792, 1170, 2201, 806, 1184, 820, 1198, 2210, 834, 1212, 
                848, 2295, 1226, 862, 1240, 2218, 876, 1254, 890, 1268, 904, 
                1282, 918, 1296, 932, 1310, 2231, 946, 1324, 960, 2320, 1338, 
                974, 1352, 2243, 988, 1366, 1002, 1380, 2252, 1016, 1394, 
                1030, 2337, 1408, 1044, 1422, 2260, 1058, 1436, 1072, 1450, 
                1086, 1464, 1100}], 
               Line3DBox[{14, 41, 1485, 68, 95, 1512, 122, 1539, 149, 176, 
                1566, 203, 230, 1593, 257, 1620, 284, 311, 1647, 338, 365, 
                392, 1674, 419, 446, 1701, 473, 1728, 500, 527, 1755, 554, 
                581, 1782, 608, 1809, 635, 662, 1836, 689, 716}], 
               Line3DBox[{744, 1115, 745, 1129, 765, 1143, 779, 2279, 1157, 
                793, 1171, 2202, 807, 1185, 821, 2287, 1199, 835, 1213, 849, 
                2296, 1227, 863, 1241, 2219, 877, 1255, 891, 2308, 1269, 905, 
                1283, 919, 1297, 933, 1311, 947, 1325, 961, 2321, 1339, 975, 
                1353, 2244, 989, 1367, 1003, 2329, 1381, 1017, 1395, 1031, 
                2338, 1409, 1045, 1423, 2261, 1059, 1437, 1073, 2350, 1451, 
                1087, 1465, 1101}], 
               Line3DBox[{746, 1116, 747, 1130, 2190, 766, 1144, 780, 1158, 
                794, 1172, 2203, 808, 1186, 822, 1200, 2211, 836, 1214, 850, 
                2297, 1228, 864, 1242, 2220, 878, 1256, 892, 1270, 2226, 906, 
                1284, 920, 1298, 934, 1312, 2232, 948, 1326, 962, 1340, 976, 
                1354, 2245, 990, 1368, 1004, 1382, 2253, 1018, 1396, 1032, 
                2339, 1410, 1046, 1424, 2262, 1060, 1438, 1074, 1452, 2268, 
                1088, 1466, 1102}], 
               Line3DBox[{748, 1117, 749, 2272, 1131, 767, 1145, 781, 2280, 
                1159, 795, 1173, 809, 1187, 823, 2288, 1201, 837, 1215, 851, 
                2298, 1229, 865, 2303, 1243, 879, 1257, 893, 2309, 1271, 907, 
                1285, 921, 1299, 935, 2314, 1313, 949, 1327, 963, 2322, 1341, 
                977, 1355, 991, 1369, 1005, 2330, 1383, 1019, 1397, 1033, 
                2340, 1411, 1047, 2345, 1425, 1061, 1439, 1075, 2351, 1453, 
                1089, 1467, 1103}], 
               Line3DBox[{750, 1118, 751, 1132, 2191, 768, 1146, 782, 2281, 
                1160, 796, 1174, 2204, 810, 1188, 824, 1202, 838, 1216, 852, 
                2299, 1230, 866, 1244, 2221, 880, 1258, 894, 2310, 1272, 908, 
                1286, 922, 1300, 936, 1314, 2233, 950, 1328, 964, 2323, 1342, 
                978, 1356, 2246, 992, 1370, 1006, 1384, 1020, 1398, 1034, 
                2341, 1412, 1048, 1426, 2263, 1062, 1440, 1076, 2352, 1454, 
                1090, 1468, 1104}], 
               Line3DBox[{752, 1119, 753, 1133, 2192, 769, 1147, 783, 1161, 
                2195, 797, 1175, 2205, 811, 1189, 825, 1203, 2212, 839, 1217, 
                853, 1231, 867, 1245, 2222, 881, 1259, 895, 1273, 2227, 909, 
                1287, 923, 1301, 937, 1315, 2234, 951, 1329, 965, 1343, 2237, 
                979, 1357, 2247, 993, 1371, 1007, 1385, 2254, 1021, 1399, 
                1035, 1413, 1049, 1427, 2264, 1063, 1441, 1077, 1455, 2269, 
                1091, 1469, 1105}], 
               Line3DBox[{754, 1120, 755, 2273, 1134, 770, 1148, 784, 2282, 
                1162, 798, 1176, 2206, 812, 1190, 826, 2289, 1204, 840, 1218, 
                854, 2300, 1232, 868, 1246, 882, 1260, 896, 2311, 1274, 910, 
                1288, 924, 1302, 938, 2315, 1316, 952, 1330, 966, 2324, 1344, 
                980, 1358, 2248, 994, 1372, 1008, 2331, 1386, 1022, 1400, 
                1036, 2342, 1414, 1050, 1428, 1064, 1442, 1078, 2353, 1456, 
                1092, 1470, 1106}], 
               Line3DBox[{756, 1121, 757, 1135, 2193, 771, 1149, 785, 2283, 
                1163, 799, 1177, 2207, 813, 1191, 827, 1205, 2213, 841, 1219, 
                855, 2301, 1233, 869, 1247, 2223, 883, 1261, 897, 1275, 911, 
                1289, 925, 1303, 939, 1317, 2235, 953, 1331, 967, 2325, 1345, 
                981, 1359, 2249, 995, 1373, 1009, 1387, 2255, 1023, 1401, 
                1037, 2343, 1415, 1051, 1429, 2265, 1065, 1443, 1079, 1457, 
                1093, 1471, 1107}]}, {}, {}}},
            VertexNormals->CompressedData["
1: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
             
             "]], {}, {{}, {}}},
          Axes->True,
          AxesLabel->{None, None, None},
          BoxRatios->{1, 1, 0.4},
          DisplayFunction->Identity,
          FaceGridsStyle->Automatic,
          Method->{"DefaultBoundaryStyle" -> Directive[
              GrayLevel[0.3]], 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "RotationControl" -> "Globe"},
          PlotRange->{Full, Full, All},
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}},
          Ticks->{Automatic, Automatic, Automatic}], 
         Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyF3c2OZMedHfB2j2XPaGxJJWtESkPRpcsuqtlsdn1/ZOVi6hn8BAUDXvsV
6lH4KPkIXHJZCy244MIgCEIgBMKL/p+jub9UYnJzUaci40acjBvx/zgR94//
+//+r//z8sWLF+f/9OLFP7zI5//92/raz8Pf//8/gqfcrx7+frnfgKfch+Ap
9xF4yh2Dp9wCnnKvwFPuU/CUew2ecm/AU+4teMq9A0+5M/CUOwdPuQvwlLsE
T7kr8JS7Bk+5G/CUuwVPuTvwlNuAp9w9eMptwS3nuMvfvc7nH8EdX37vN/yd
738Inu9/BJ7vH4Pn+wt4vv8KPN//FDzffw2e778Bz/ffguf778Dz/TPwfP8c
PN+/AM/3L8Hz/SvwfP8aPN+/Ac/3b8Hz/TvwfH8Dnu/fg+f7W3DHsePLcWO5
lp/Prw6U/43l5/oheK4f8XfqPQZPvQt46n0Fnno/BU+9r8FT7xvw1PsWPPW+
A0+9Z+Cp9xw89V6Ap95L8NR7BZ56r8FT7w146r0FT7134Kl3A55678FT7xbc
edZx5DzluHQd/pXl5/ObA+U/tPxcPwJ3vHifhb9zv1fgud+n4Lnfa/Dc7w14
7vcWPPd7B577nYHnfufgud8FeO53CZ77XYHnftfgud8NeO53C5773YHnfhvw
3O8ePPfbgmsHOF5cF523XG8dB9bb8vP58ED5jyw/12Nw5y3b/wo810/5O+14
DZ52vAFPO96Cpx3vwNOOM/C04xw87bgATzsuwdOOK/C04xo87bgBTztuwdOO
O/C0YwOedtyDpx1bcO1Ux4Xrp/OT66rzjuNYv+RDy8/nowPljy0/1+VAe16B
Oz/Z39fgub7h77TvLXja9w487TsDT/vOwdO+C/C07xI87bsCT/uuwdO+G/C0
7xY87bsDT/s24GnfPXjatwXXj/L3d510HnL9dJ1z3tT/8He1HS0/n+MD5ZcD
9b8C146z/a/BnYfk5y14ru/4O+0+A0+7z8HT7gvwtPsSPO2+Ak+7r8HT7hvw
tPsWPO2+A0+7N+Bp9z142r0F18/3d3Y9dL5xndSucp3Wz3Aecdwbpzm2/HyW
A+Vfgevv2p7X4Npr9vctuPONfJ6B53rO38tcL8DTn0vw9OcKPP25Bk9/bsDT
n1vw9OcOPP3ZgKc/9+DpzxbcONTC/133nFeCu+4F1y5bKOe65Twb3OchuO1u
+fm8AjcuaP2vwfVrg+s3BNcuC+66F9x5Jbi/28L1kr/Tzyvw9PMaPP28AU8/
b8HTzzvw9HMDnn7eg6efW3DjpP5urm/OH657+gfaX/oN2kmu68ZdnBd8Toxb
v7L8fD49UP615ef6Btz4iu1/B65/ID/n4K5v8n8Jvsz1CjzXa/5O/2/A0/9b
8PT/Djz934Cn//fg6f8W3Di+v4/r2DJX7SzXMe0v/UP9AP1X7SHXe+N/C7jP
j/mTTy0/n9cHyr+x/Fzfghvns/1n4Pqp8nMBrp0l/1fgy1yvwcPLDXiut/wd
Xu7Aw8sGPLzcg4eXLbh5Jn8H1yvnA9cx7X3tKf0A/UD9FuMo2j3aAcahfc59
rszjvbb8fN4cKP/W8nN9B2682fafgxsvkZ9LcO19+b8GX+Z6Ax6+bsHD1x14
rhv+Dl/34OFrC24eVL5dl3zuXa+065e56ndq1+uP6u/pzxjPW8C1D8yH+Dz7
vJlPfmP5+bw9UP6d5ed6Bm7ew/ZfgBu3k58r8PB4DR4eb8CXud6Ch8c78PC4
AQ+P9+C5bvnbPL28uv74fLsuab9rH2nXG//QvzQuol+nn2NcWTtGu8G8nM+t
z+Ehvlp+Pu8OlD+z/FzPwc2/2f5LcOPH8nMNHj5vwMPvLfgy1zvw8LsBD7/3
4OF3C37oOZYnn2/tINcZ7SP9SO10/UvjWcY5jM8t4Po/5je0V7QnzA+ro/H5
dF15Z/n5nB0of275uV6Amwe2/Vfg5jHk5wY8fN6Ch/c78GWuG/Dwfg8e3rfg
2jvy5Hri8+o6oz2uvaOdbjxDf9E4h3Er4zjGifXT9IvMs6lH0M5Qp6Cey+dW
+/vM8vM5P1D+wvJzvQRXj2D7r8HNp8nPLXj4vAMP/xvwZa734Pk9tuD6hfLh
uuFz6Xqi3a1doz1u3EK/0HiGcdKFq/Fg4wL64ebT1B1o16pHULflOqGe6wxc
3lt+PhcHyl9afq5X4OpibP8NePp7Cx5+7sDD5wY8/N+DL3Pdghs/s9+uDz5/
rhva19ov2t3GJ/T/jFsY3zV+ZtzX/JhxH/Nm6gv0o9QdqM/SLlG3dQbuc248
98Ly87k8UP7K8nO9BlefZftvwdPfO/DwswEPn/fg4X8LvtAP++c64HPm+qAd
rZ2ifW0cQj/P+IRxXONkxnfNg6WceVrjQeZv1bnoX6l/USeovaJ+UJ21z795
r0vLz+fqQPlry8/1BlydoO2/A09/N+Dh5x48fG7BzcfaD+d7nyfXAe1l7RHt
aOMN+nPGIYzXGg8zjmu+y7i2eTD1AsaJ1BGot9LvUod1Bq4do45Vvb/zgvqA
K8vP5/pA+RvLz/UWXL2q7d+Ap7/34OFnC65uxfY6r/vcON9rF2t3aC8bV9Bv
M95gXNa4l/Fa81rmDcx3qQtIvepWjB+pZ1H3pz+mHlDdtPaNemr3nThfqKO6
tvx8bg6Uv7X8XO/A054NeNp/D57+bsHV99ku52+fD+d17V/tC+1i4wf6Z8YV
jL8a3zIua/7K/IB5LfP/xsHVBaifMq6krkr9qX6aulT1+9o96vqvwJ1H1Jve
WH4+twfK31l+rhvwtOcePO3fgquD9v7O0z4Hzt/audoR2r/GCfTDjB8YZzWO
ZfzVPJV5APNX5vnNu5j/VyeVdqjjM96kvk8dtP6b+mj3kWgPub/EfXjOL+ry
by0/n7sD5TeWn+s9eNqzBU/7He/W53OgveB8rB2hv6U9qx9mvMp4gHGsBdx4
qnkA86Xmo8yjqjcxH6MORb1e2qee1DiUOlP1+Pp16vSvwLWT3OfkflDnHfcv
3Vl+PpsD5e8tP9cteNrjuPZ7jnftAudd7QX9Ku1W/S3jUvr9xqsWcOOmxvvN
i5p3Ml+qrsT8n3oTdXnG09XrqWs2PqXe2X0h+nvuF3FfnfaT++3cl+x85D7P
jeXnc3+g/Nby/N/vOb86fp13tU9d/7Vb9e/1n/T7jY8afzJuan7J+L15J/Pz
5j/N26tvMi+o7kl9qHF2daPq641bqbt3f5J+oPuW3N+pXeW+zztw5yn3w99b
fj7bA+Udp97H8es67zrg+q+fpJ2u/2ScyTiK8acF3Di38XvznOYhzX+qE1Hf
oH5EnZ35QvV36pSNv6tfdp+H8Sz3f7hPTv/Q/XPuM9becv+x5zQ4f3l+w9by
8/kZ5X78tzWeev88+BHlf/6wxlP+5fvr0wfr8k//AzzlfznXj6n/9+Ap/9v3
14dlXf7hGHzKP83v8nRCez4BT/k/vr/uyMPvPgWf8rsZPw+ntOcL8Cn/8Plc
yds9nIGnPTO+n8mjPJ+DT/nnqeeJuOHTJXjqn+8f4ycfX4NP+eP5/g6/ZXcD
Hn6mnkfW6cc78Cn/mO9nHGbcf804DP799O8D8P8614/Bf/3+2nEy+NM8px0P
Kf8/px/oznbz/f6+gz98NlfyP08zfz0Tj9/N95+ISz3N94/xz47nd9xhL+/m
+4+sG4/5fvjM/PIDfAb/Cj6D/zTlPwb/b++v5XPwp5nfymfK/+u0F53ULs/v
6Rp/+NNcyVc8zfz/TPx4N8/dE3GUp3kujvEnjuf7O+y73fD8iF37mPk9fGYe
/4e5HoF/A5/Bv4XP4P/5/bV8hsf044TyU2/5TPk/TD2na/xhvv9AfP1pvv9M
vHM381X5zH2n3mPs3+Opd4c9spt6H/EfHlNv+Mx6+c9zPQL/K3wG38Fn8L/M
/LqA/9P06wR81qnymXnhd++v5XPwh1lHHogHP8168Ux8bjfzQ/nMfWfcHmOv
Hc+4LZ+pZ+73iJ/2GHslfGb9C49Ha/zFf5n/fwD+HXwGf4bP4P9p6jkB/8W0
F93E07+8v5bPwR9m/X0gfvk06+wz8aTdzA9P+lUzbstn6p/1tHymnuH5EX/4
MfcLn8fr9pfP2IXT3/IZfPgpn8HlM/jwXz6Dz+9VPtOeaUf5DD73eyDe9jT3
eyb+sZv7PekHzLgtn5mvZ10rn6l/2vFI3OEx7Qif0448X+Vz8BfajcHn+S2f
wX3ec93BZ/CZT8pn8Jl/ymfaOXbpA/Ghp+nfM/76LnameesZt+Vz8IdZ18pn
6p/54ZH4zmP8nPA5z0nm//IZP2d4LJ8pn/X5Y8q7HgX/Fj6DfwOfwWd9LJ+5
b+x54xnT/mf8y93MD+Uz5acd5TN2+bSjfOa+Mz88EkfbxZ8Mn7H78xwcrfHY
M+Vz8Ng/5TPltZeC/wSfwb+Cz+Bjv5XP3Df2rf73PF/lM+XHvi2fKT/jtnwO
/hA+yOs8zfzwSLxyF789fOb3WObvozUee7t8Dh77vHymvPZ88LH/y2fw7+Ez
16/hM/h/n/rVp878Xz7TzowH9S4zbsvn4A8Zd+TPnmZ+KJ/hLXGP8Jn5Is/B
0RqPP1s+g2ed/HiN7/nXwcdPL5/BX879zav8GT5pd/kMPu0un2ln5it1RdPu
8vlm3e7ymXqm3eUzvKXd4TPrWZ6DozXeuMEHazzxh/KZcZ/1YqGerGsnlP85
7Qr+I3yKq7eeesqn91W/Ne0sn/SrfMJD+ZS38Bl7K/05WuPpf/kcvHx9vMbz
d/+fejJOTih/xP2Z38tn8D/DZ/CX76/lM3ieC3Vy8xyVz7Qz9iZ59zyn5TO8
5bkOn/EHeG6CZ94on4krpZ6P13jmpfKZejKPnVB+5r3yGTzz5Cn41/AZfObh
8hk887Z6xJnny2faGX9IfcOsI+UzvC3zd/iMv5rn4GiNZ10rn4NnHSyf6V/8
wWWNd509ofysy+Uz5bOunVL+B/jM9Sv4DB67Qt3n2CHlM/eNv66OZMZD+Qxv
mffCZ+IpPH/BY3eVz8Fjp5XP9CPxioX6s66dUH7sxvKZ+2ZdO6V87FL17d/A
Z67fwmfwsZPLZ+6beJJ6nel/+Uz52O3hM3GojOujNR6/oHwO/sA62TxG4mnL
Gq+fcrLG49eUz+BZ107XeP0mddp/hc/gO/gMPn5c+Qw+fl/5DD7rWvlMO+NX
hs/ESdO+ozUev7V8Dh4/t3ymvYn3Lmu8fvTJGo/fXT6DZ107BY9fr9544gDl
M/h38JnrM3wGn7hE+Qw+cYzymfYk7hE+E99PO47WeOIq5XPwB9bz5s2SH1mo
J+vayRpPXKh8pv6sa6eUT9xJ3ez0t3wGT1xLfax8Bh/+y2fw+b3KZ9oTvsLn
1Nc43tEaT9yvfA6eOGH5TLuSh1qoJ+vayRp/Ms81eOOcp5RPXFT95zyP5TN4
4q7qPH3ec93BZ/CZT8pn8MSNw+d8r3HmozWeuHT5HDxx7PKZ+0//y2fqybp2
ssYTVy+fgzcOf0r5xO3VMU77ymfKJy+gXtH1KPi38JnrN/AZPHmN8Jm8Xcb1
0RpP3qR8Dp48S/kcPHmZ8pl6sq6dUF6/bfDmiU7XePNK6vHGnimfqT/5EHV3
2kvBf4LP4F/BZ/Dk3cLn/L95uqM1nrxe+Rw8ecDyOXjyhuUz9WRdO6F8/Db0
ac1jnq7x5j3VlY19Wz5Tf/Ih6se054OP/V8+g38Pn7l+DZ+jg2ge+WiNJx9d
PgdPXrt8Dp78ePkcvHn2E8rr7w7evP/pGq9+AH1U/MHyGTz5EHVQ+pvBxz8t
n8Ffvr+Wz+B/hs/RjSRfXz4HT96/fA4e/UD5HDw6hPI5ePQM5XPw6CLKZ3D1
FWlP4pTofBKvKJ+pJ/kK9TzGQ1JP8oPqdibeUj6Dq6vJ39G5hM8Z383/h8/k
3Y3Pz3rZPOQyePJ26Vf4nPWyeYnwmfkovIXPtDNxoPCZds7vUj7TzvyO4TPt
nN+9fKadse/CZ9oZOyh8pp0Zhz/jmk/4fBl82hM+owuJviN8znrZPPkyfydv
p45o7LkX+kdZL9UFEa8tn2mnOp+0Uz1P2qluJ+1Un5N2qsNJO9XbTBxnb3z+
fI2Xz+i3os8Kn7NeVsexzN/J26m3Gfu7+djwGXtuvl8+087E0cNn2qneJu1M
vC18pp3qbdJO9TZpp3qbtBO9TeI45cc8/Hwav5z5pfyHz9QTndEy5TMvqLdJ
PYmPJa9Avjp8tp3On+QTwmfbmXhw+Ew96G3aTvU2qQe9zRN+ZPmcda7Pb8rF
L2V8/k1vOJ/wmXqiy1umfPJ26m3Q75TP3Df6gvCZ+l3fUx69zV5+Jnymnhm3
5ZP9nzv8hPBcPnNf9DaJ43R9CZ+JmzB/Ji68Nz5/v8bLZ/J2WdfCZ+pJfCx8
5r5Z18Jn6p96y2fKo7dpO1Nv+p16ZtyWT/bZls/Ug96m7URvkzhOdVLhM3E9
1vfEhffmz+pe57/LlOcc+fKZeqIHTL9z36xr4RMdSvlMefQ2bWfyvdrLM27L
J/uZy2fqQW/TdqK3SRynOqnhM3HJPqfRwaW863twxmfzdpk3ErdL+ehY48dz
3/DZdmYeiB3EeVjhs+2MHiF8Bp/7hc+2E71N2zk8h8+2E71N4jjVSYXPaV/X
kfCZ8tqfwZk//6a/fv8pnykfvbA6gKxr4TPlMw+Ez5RHb9N2zv/LZ/AZt+Uz
9aC3aTuH50f83uaXwqf6rPDJuX7lU/1m+ER3XD45/6h8Vrf+/lM+Oc+6fHLf
8sn5buWTfpVP9D7lk3MQyid6gfLpvsrwOXGc6qTCJ+d/lc+UVx8SHPuzeTvm
z+RN98Yn56CVT+sPn5yjVz5TXv+d/pZPzpsonyk/7Suf7l8NnxPHeYE+JHHJ
/r7hM+XVhwTHP2rejvU9edO9+bP7J+a/4TPlM/7DJ7rm8pnyxpeCT7/KJ3q0
8pnyw1/5VM8SPj9fly+fnCdSPlNefUhw/Pfm7bA/kzd1fa8OwPGZ8pkHwif1
l8+UN/4ZfMZD+aS/5TPlh+fy6X7s8PkFePjk3IHymfJz3/IZPOvv/L95O/yj
5E21P6sDcP5M+fAcPjl/s3xSf/kMHn13+OScmvJJf8un+97Vs6APSVyy9lv4
RI9ZPtERl0/OgSqf7DMon5wLWT67L+r9p3xyzmn5ZJ9N+eS+5ZPzgMon/Sqf
ni8wfH6Z9R59SOKS9S+Sn3H/7fCZPEf9l7k2b0d8KXlT/ffqALA/207G5wN4
+Gw7sw4mz0D94fPY9iTvRfvD5yP9LZ/qqsxvo/tLXLjzQ/hEL1w+1bmHT/YT
lE/2wZTP4Myff9uf9/5TPoPHTgufwbN/K3xy3/LJPpLySb/Kp/qp8Knuz/wh
+pDkORr/Waad6NnLp/sGwif7Xcon+97Kp/sawyfnSZZP9juWT/eBkd/tfqPw
6bkk4dPzG8Mn5zSWT89pDJ+cx1g+OXexfLK/unxybkX55Lyq8sk5gOWTcw7L
J3j55Ly28sl9y6fnv4RPdVLhE31f+VRHGT7R/5ZPdOvlk/0B5ZN9LeWT/W3l
k32Z5dN9tFfraz7lk/Llk/rLp/vtwqfn6YVPzs0rn56bFz45H698cg5e+eQc
vPLJeXflk/MvyifnCpVPzsMqn5wvVz7ByyfnvpVPzzMKn+qhwqc6vvDp+W/h
E51v+USfXj7ZB1A+3b8SPt3HFj7Zf1k+2edaPt3PfbO+5lM+2RdePj03Knyq
ewqf6PXKp7rI8Imet3yqQw+f6P3LJ/tUyif71con+yzLJ/tZy2dw1/fgjs/g
8ymfxecaPj2nK3xyHlf59Dyu8Mm5W+WT87XKJ+drlU/O0SqfnItVPjn/qnxy
/lX55HyT8sm5UeWT86nKp+dWhU/1TeFTXV749Fyp8Ilut3yiNy+f6vqJ33Rd
C5/sSyuf7Kcsn+xbLZ/sty6fnBNQPj2PYbO+9hM+PTcpfHI+Uvn0fKTwyTlI
5ZPzjson5x2VT841Kp+cU1Q+OY+ofHIeUfnk3KHyyflC5ZPzhcqn5wLx3FeH
w/itLoN5tzoo1rfqJrAjmv/HXmseG7vYvHHx5BUX8OTH8Keb5yFu0XwF8aHG
3YnDNX5MvLNxUOLKe/tVgvv+huCemx/c88oHr79LfrV+G3ns+h/oBWpHo8uo
PYj+pXbNBlwdWHB1S8E9l08dzSE9iHn47xmHwb9iHAb/Zq1jKh4dEHmqF+hu
ikeXsYBHX+D+SPbrFidvXDx5S+Nqyb8RH2oeiTjH3n6q4Inr43c2Po3/1Dgr
fkDjhdizjXthlzV+g33ROATrZP1p5vv6hRtwdYrBPScrOPbpns5IfUd+X3Vz
0U+RH65OjTxnz2MhX9dzRcg77ensgkeHtYBHT0Q8u7oY4rLVdxBfrE7B/bGc
bx+8eWPiFnv7/YJzXl9x3kdS3H1BwTl/vzjnnhfnvOngjTvegqPnLq7+ODjn
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
Mz96Tm3mN89bzfzpuaGZJz3/cn7H2PN7uHnSqedL86HTntjzvj/wS/Kh6Vfs
eXmIPS+fsed9H9SX5D37HH2/zmP2uRt7vnh+d8+lzu/reVfTntjzxfM8mmfM
emc+MfOe+cT8juYNsw6aB8zva74v48R8X/xK83oZh+Tvuk79tM7HdV0be754
eP4leOwNz/mOfeL5ynnuPCc485Tn3WY+/wR82h97/pl4Tez54llHPgPPvPo5
eNapL8Az356CJ39pPi55UPNxyYOadwtu3i31mHfLfc27JW9K3q15U/JuzZuS
d2velLxb7Zm/rPNotRvHni+ecfVr8Iyr34Pn+fU9b5nvPwHP/OB7IJe5+r7N
tN/3msYe8/2xed7Nc+V5N88Vu8h8Vuwr81bBzVvF7jI/lfuan0r8wfxU7Mnv
1vmm+mVjz/uejdjzxTN/kSeqfoK8T+NO5HcavyK/0/wTeZzmsczLJE9m/iV5
NfMpycOZN4ldnfdAJh6d/+d9m+5r/gV4+PZ86DwX/wqOzsL3F/U95MEz334C
nvn2T+CZbz8Dzzr4OXj80C/Al8FPwTPfmu/IfGu+I/OteY3Mq+Y1Ysea10j8
x7xG7FjzF8HNX6Qe8xeJM/ywzkc0rjj2vO+diD2/936P34Gn/+QXmh9awMMv
eYT6KeQL6teQL2gegrxA7XDyAs1/+B7s5FE8Tzp+gXH+5G+M5yffY9w+82Hy
6onrxo46AZ929nwZdKvd5x88z+/LuRLvrV7M+PAfwDPPu68w64X7B2NP+l6s
zJPs7+u8yj6+zsPsy6uejP137W/0Dsa1fgseHk7A81ycgqdf7sfJPON+maz7
kz83bpM8vHGe5O2NCz25DyX2s/tKYm+7fyTjyvcOZt1h30fXKfZ9VCfB/o7q
IdivUX0D+zLKT/b1GT9R5x97ZvJm+tHJy+mPJ7+n/75Tf555Un14nmv03p0f
0HV3PkGn3XEy41B/cO89OfFD1fdOe/K866e/eDl41t08h74PKu36A3j4VI8a
PtWdZtyqI834VBea8an+M+NTPWfiCeo209953msH5vn8LXh4OAHPvHYKnn6p
44q9qs4q88Y877W7Er9D19S4NLqmxrHRLzX/hR6p+TJ0Rx1X6IgaN0Yv1Dgz
eqHqsdQFxc5U5xO7VD1P+JnnvXZIniv1IZm353n3fU153ouH5z+Ap150C41z
oitoXA6dQON76AEaDzS/7/kCnmtB3jzxhc6PKT9+o/tVYh/3eRj8Qb9u8Gd/
79Sj3ZPzH9SpHa3b2XqO1vW33uTFyEMXhwfxvf2KU4/v0e17atg//oL4ZsvD
W88HRVfa/dpfrPtbHH/AcxyrC8l9zWfn909cbwH/kTh7eMo4Ib+WfvV3SRz3
i3V7gu/9Xll/PN876y/5SPf39fcKTvvFH8ib2C/v29+FfZf9XQbXf2i/kr8k
H2HernwTb20/GP/Fk3+d+vf2rRBX975dx3nei9Me9xOFn/JKO60//LR8nou0
J/dRL5vfJzq9zC9Z59FzFCd/3P0F5Eereyefp+49/DRex/NeHN6Kw5t4+ms9
ed7dvxA+bU+fo/w+7ruO/Ugeq+XdR5R5fdrT8R/8x7U/3+eG3yv9OEZP0/mM
PH1w21888RR0p/19iavYr677PO/qKo+Nh9Bf8fQr/zcv3ueAvEVxxn/n0axH
WW9+Bo7/nnqe8d9dR4IfqyfLupFx+8Hfx7t+BLc9wbUrMm+xf7Ljgv0/La+9
Edx+5TnQ3hh8r7+sd+0v62P75XqK/77Hf8Y1+umWRy/Y9Znn2vMW9s6dif3z
MTjtF9/pv9Mv29P5enD723aSV+hzDA+tB/uhOLou1/Fn/PfaFZl/WDdrh2U8
Ym+4/na9Z3935xnW8Wf9d+cZ7IHOX5nPOLfIdbP9ZP191n9nHdEe6HjL74ne
rvOldgX7E9ue2HnaFazjbUfK/7jOm4o/6b/bL+77iP9uf7sOY5f3Puhvuq6h
P3C9e9Z/z/Ol/57nNPNv1lXs9toFtLP2EXq44rS/6xjrfu9Lv2rX87y7/+VZ
/z3zv/47PIg/6r+z3tUOwq4qr9gbXZ/xo2qnYG/UnsIf6DhCF9J6yKN3neF5
b3nyWP9OP///AX2Ylws=
            "], {{
              {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], 
               Specularity[
                GrayLevel[1], 3], 
               StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNnHccT9X/xz+fz73nfM5HSbYKLZUo0VTS1BDapUUiFYm0VEKivVPR1N57
aZKRJO2pkpGRBtHev9fz+7rfx+/7x3mc5z2f+7n7nvMer3M37Dvk4MGVUqnU
OpZKmeoWKmUV2vZUOValt8qZeal0jOqaVjord1sd8WninuIo3l11r5LX20Xl
KJUjVc7QOkerTlpnZ9VHlPyf49S+neqftbPjc//2m7iveEfxL+KTxV3F/4pP
z729qrYzVHy4OIjXVb19ydvif4epHKoyWOvsz7loncmhVHpR2+iitpfEz4p3
F3+o+nmVF1TeV3lOZZLKy8H1HlrnHdVPqzyj8mJwvZva31L9pMpTKjtoP4eo
HMw1029bq16l9saqO6i05zrmrleyv+D/7aq2U3Mfb67jnKO2J4rt9lH7Nmr/
kX1o/XtVd1TbJeJDxWuJJ4hPE7cUXyo+XFxPfLn4SHF98YXiHuI1xFdzHVXO
ULkpuF5f7Q+Jrxe3F9+o+lyV4Sr3qv0K1W3V/oj4JvHW4sfFt4u3Ez8gvlbc
TnyF+GhxA3EzHfu2JZ/DeLUPVXsLtY8TnyReR/yk+E6un/gacT9xE/Grqu+p
+JwHaHlvbeNv8Ym5n7M/xVdr/eO4xmq7Stxb3Eh8nfgEcTPxDeKTxeuJrxQf
I26Y+5xOrfiYblT7ENXN1X6Zal4Ilq9X+wDV66p9fHE9zuN5UfvjqndR+9Pi
+8U7coziD/XyzNF93EP8lniWeE/xO+I3xHuJ3xe/Ke4iflc8W7yP+CPxW+J9
xZ+I3xZ3E88TvyfejmdP/JK4o/gF8WRxV/Fn4nfE+4m/EL8r7i6eL35fvLH4
GvGD4h7iheIPxJuIx4kfFm8qHi9+RLwV5yV+VjxD9QP8V2WmykOsr9IhuJ6k
ddoH//6c+E3Vj6s8odJa7TerfizzsU9QuUnlKZUby97fRlrnKvahdTYQXy6+
T9xSfJH4HvH64kvF94o3C97Go+LZuvaPVXw/dg0+vtfU3lw8RnyXuKGel61U
2ql8ovVe4v1WOUr3rLXalvEuqW6jsrnKGiqbqWyq8kpw37Cn1n1O/Ih4Z/Hr
qh+ueHmayn0VPweTtM6jqjtrnWfED4h3Er+m+kGVh1SeDa47qb1usU+OY2e1
T9UxT9MxH63f2qptudbrlfvYv6+4j15fpSV9XO76c7UfJt5APE+srry0kcqG
Kofnruervad4Y/FC8VyVV1QmV9zf0+83p+/WOluq/lbta6veouTjODL39Vii
9iPEm4i/EifVrUre7pTg67qXfp+kjd6icqvKbcHvzcZqv1V8jnij3NeYa71m
yfeCemnF+6ojXlzxOTIWfVbxeXP+ecnXpIHq7yq+t9zjRkUfS72i4uvK9V2r
OA/Op37J17ae6q8rPl/avqm4324i/qE4x5p4UcXPBdvgP1xn9v9FxdeYa11V
6Z97mWt7Qu5rwvVhXGJ8Wq/kca1Fcb8Y+9YR/1T0b22Kez0w97Fy/ek76UNZ
j3vHfhZUvG2ue60YWxhjOG7Gi6aqV2udk4rry7PNM6DLXvpS3C/3deQ5GZT7
2jEejRAfwPXVBe6juovKXirDctf0vdgCexa/Me53Knm8ZlzuLP694rGdcZxl
7IQ9VP9Vsf2wW9Fvf6H6VZWpXBcd2Gg9I3dmthN2VdsfFdsO2BAsY1PQ57Ot
U3KfM2PrINUHqhykMiT39cKWYPzHDthJ5Vy171fyg3Oiqm4q3VWG567Lah9Y
sp3A+Z+n9h4l2wyjcm8LG6N/yXYI27og9/FhzzB2dyzZVmH8xw5guW/JY9Y+
Kmfnrv/ROueI9y3ZnsGG4Rh/rXhcHaEyUuU5tU/hOmr794lv5/kVTxCPEbcU
38IYL95QPF58gbiF+HrxCJ458TjxcJ4f8a2MeeKNxA+qvlLlKpX7VC4reVvX
aZ2zeea0zm25f99YfBM2hHh98c3YGeINxPeovqTk5RvUPpL7qfZrxWeJm4pv
FJ8vbp7ZXrhAZYzKzbrvZ6negPMLPu9Wue2IMyv+7Ra1D1O9YW7b5OyK+45b
Vc5XGa1yN2ME77rWuVv1xSqXqNwR/Pumar9LPFbcWnxn8P43y213XFjx/yeq
fZTqTXI/37wDPO8vqUxUuYPzzP0M1dO5XC0+nXdP/ITq67kGKk8W9Y0qd+au
N9M6d4tvEm8ufk71zSq3qDzGdVcZxz5y15tybXP/3kb8CttSuUvl/tzHsqXa
n1d9q8ptKg/mvpdbqf3e3G1txXdhI4pbiy/K/VyuKX5a9fiSf3sq9zF1VPsV
4sHiBuKHVV+tcg3PitqHqm6k9mvEZ4qbiK8UnypuyP3NvW4r8UTupXgT8WO5
z3Nb9pv7uHcUf6Z6csnP+rO5r3Unrmfu49te/Eju49ia48n97HYQb6P79Zj6
jRfEb2ALlL28NWO06ufV/pA65+nij9RxPi6eJf5U/Ij4NfHH4kHibfmv+Arx
ZeLp4ifFs8Vzxc+I54g/E78o/kC8QHyP+BXsK/G94snYVOJnxW+LvxA/L35P
/KX4fvGr4g/Fg8XbYyeJrxdfh30oHiLeAdtJPFS8o/hJ8aXii8VTxZeJL8FO
EF8gPh+bUHyOeHdsMPEo8Qiuj/gs8S7iZ8QXiy8UTxGPFV8gfkU8QNwB20/c
R1xXfL/4RPFW2HvifuI22Gni48VbYBOKzxDvLH5aPFy8Jzah+Ebx9di64mvF
V4tfF68R/XwOFtein/NB4rWin+2h4pbiN+mPxc3Fb9CXi9eOfg9OF9ePfnbO
EK8jnklfKz5M3AK7Q9xTvL54ongH8b/0d+JG0ePPmeKm4hniYeJtxX/xrotv
Ej+JPS/eQvyz2i8SbyX+VXyx+Gbx09jt4oni57HDxXeJX8JuF18tvhK7VPyK
+GPxV+LbxM9h54tb8CzS/2hg35RnTNsfrbb1efbEI8Rbi/+gzxVvznbEY8Qb
8ryJR4pb8byJzxe3FX8qvlB8qLg59ph4pHg47wgGhcoB2L/a76Rkm/tVnnnx
OvjM4ueS7enJ4qfEv+g9fIpnO9len8EznzyWvyzur+3vWzwb88T1tf2/xIvE
TcT/iheIG4n/EX8qXlP8m/gz8VriP8Sfi+uJ/xS/lOyrzBZ/o/aOas/V9mKy
bzNL7U+Lf9exPSt+TDxPfA/vvng+/aP4UfEXjAnci2Sf4RPxy8k+1bviJ8Qr
tc5D9BXiz+hzxQ+JP6Vfpn8QrxY/Kv4w2f9cR/WDKh/T16v9AfFH4vHih8Vz
GevELyT7PDPFf+tcuutc6qrtW/FO4iBeIl4H21wceabFDcQ/q72LuCZuwrXG
LubaiwdiY4ub8d4ybnKvtP5e4jri38T7iNcQ/yjeA/tdHLT+Idj74or4IHE9
8Z9aZz/xmuIpPEu6p0v0+w/iXdVeVXtDLfcVtxAvU/t6+Cji+vQj4vXEa4uP
Fa8rflXrzNV2lqpttvgr8Urx6+IF4u/Er4m/FH8jnib+XPy1+ANxVdv5WfyR
uCb+RfyuOBf/SN+icpS4ifa1lriXuJl4hdbpjG8kniNeom2u0u/viCtqX01f
pHKEuJHWOVjt62qdm9meeCNsVPFx4s2LvrGu1l0lXq1ygu5nAy1/p3HnMPEP
avtcfHjw719kfpZ/FP+kcrbat+H5V/sw8dbivzPHaTpUvHym2tvx/GMbi7fk
vRAfiG+gsp1KN/wflfbYTMH1X1pn7Yr387PKOcHr/qv2xqp/V9sfZR/vL6p/
VTlI63yj+hOtE9S+vOzlg9X+LeOm2o8K/t8C8ZHi38TzOR7x14yn4kz/XVb2
cuJ6qP5epWfwsczTOoeKVzKeiutonRVlLx8SvO5ctR8gXszYLT4i+Bi/FB8X
vN1l4oPxr1R2UNlXZYuKr9EWxJSIMWidl1XfUfYy4/NdKner7KL1NuJ9Udlf
6y9iXNb6bcUTGXPFbYhxMRaLpxT/u0elndrvYzzN7K/fW/bylsG/P505NnNb
2f/fPNgPflztg8Ubcm/EI8W70Y/lrlvR/6ucGlz/onVOFq/LcybekfdMpWXF
7/TmKm1UTtc6bbmvWmfvoo3lAWpvqnql2k8KvvcrxIOCt7Fa3In+Aztc5TS1
t6YfJmaFjVzx8lC1b6r6V7WfErzuj+IhwdfvZ3Hf4Hv5deZ9/qnz/Uvl+OD3
5Bu1vxrsG+2kd2dWsG+3q7gj4yXPs967mcG+Y2e1TQ/2jzrxjgf7UHuJ3wq2
0fcUvx3sn3Zh7FO5iuvCGCq+hmsh3l58B++M+INgH24ftb0Z7FPuLs6jbfWT
GE9VLuf86XujbeSBauvCOKVzuoYxU9xUPEHcQ9xYfKP4GHErnhX6RfHehb10
rHgznhXxrvRj4qvEO9N3ia8U70RfJL5CvI94bfF14r0ZE8XXivcTNxBfL96d
PlB8tXhHcVl8uXgDlUvxfXT8m4vH8U6I24pv4B0RdxDfQl/DuBPsMx6utq/F
54oPFS8P9h8PEy8M9ncOFH8VbP8fJF4a7DMewlim5/h4jpP4m7ZN4Kascmxw
n7JE7ceI/9Y6i4hxBT8jCzM/4/+I/1XpFVx/pfZPg/3ybtgGwb5+D2yDYD9l
f/GXwT7IAeJfgv3RYxgjgn38rthvVce12+l824kn0G+Kt8EOo79lbNX6F2v9
o7FtdC7TxLvoGH4M9n+PUvvvwb5yb/GKYN+2p/ivYH+5j/ifYD+orziL9gdP
FJej/bv+jKHBPvsR4snJ8eLPq7ZfdtW5j6KvU71X2c/QxWofVfjXFxW+Nj7+
JeLRhX/9ObE+rTsE30c8vTj+C8XnlRwHuEw8tuQYwuXii0r264mLnKhyQsmx
kZMKP5d4yADx2pljJMRKBhT+IDEE4glvijPt99jM8Ra2sZZ4DnEntfcRvyWO
4uPEnxD7Ep8sfle8Bv2E+L3cfkd/1tE2flRZrfKh2hup/SS1vyOuI+4nfl38
J/dLPEv8N/ddPJsAndbpjW8o/keLvcQzxL9wzcWviX8THymeKf6d+yt+W5z0
377i6bn33zNzfOxkcf3McSDiQceX7PM+Uvin+OYvFz7sA7ljXDsXvvykwr++
s2R/nvWI7bxIf5g5xoD/yzI+PT4y/yGuQqyAuAHXG//3gZLjMw8VvjA+Oj4y
y/j+LxT+Nf/Dr3+25LgTx1u3iEXQtkPhpz8q3kY8VnxOyfGf0eIzSo5vjBEP
KzmeQ7yNuBvXYqTah5QcKzhffFrJ8YFRRayAmAAxBnz5p0qORTxTsl9PrOPx
kmMCxE6IobD83xgKy8RP+N92mWMkxBA4VuJVxDruVflIZZXKDyXHMd5XvXfm
vBLxbWLRjwXn+MjlPREc/ycPeF9wTJ74/MPBOT7ycY8G5wHJDxL//0h8UO4c
4sfig8VvBMfAd0geg4jfEsd9Lzh+3hE/IDgPuGPyPsk98H9ybeT4yB8RM/9U
fIj4/uCcAnkBjpfc5AcV55veVN09d+7yPfEBufMe5D/eqDj/QB5iasU5CNq6
5T4P8pr8h5wm2zswd26NHNuUinON5DL/m3ukZn9cD3Kfb1ecr6TukTsH+i52
E/GY4OMg3/GkyruM0ZmvPTkGzm1GcG5ie/wIrfMt4wXriL9mHBFPFn8jPjjz
e0OM+POSt/ddyf95S2V5yf+ZlvueH545Xsq6+2WOJxFXmqvyTO7nY1+1P577
/3sWcaTXxLuKHxXPEu+OLSdeKT4s8/hCPHen5Gdqhcr3Jccklqks5X3V+l+p
PkDrvyheJN5fvFuwX/NhYfMQ8yf2v3uw34FNy/4XqixQeSF33SNznz1f5UuV
2cV+ltBf5K4PzDw28Xt38STxPHG3zOexuORjejX38R6aOXfMc7F37rjx/SXH
CYnl8g61y9y/ti871rM0d2zqXLUvyx2DGi5er+zYFL8RS+hYLC/JHUM7J3O/
vl3Zy01Uti47rtRT5XSV01SijucMfCv8CNVnlr3cvuZ39RJd88Xa5jb4SVrn
q9zbGIZvEryNm8SLch/vWeKF4nZsS/yT+CDxJZnHw85lx6d+VPsBjKVq37js
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
cpyfsf+w5Bg74zjj+R/BcS1in+tGx/321jrV6HgssbpVwbHTPZLjxsRL9xR3
jkV8Iznmzxh/UHLMn3H9wGTtwcKSx21y/YzrPZLzBdhDh4i3i0WcIVnPgC1y
APHj6NjFocm5Ht4Z8oADg3OF5BnJ3/HskwNCa4bmjDg4+qubK9Z1o8u6rmIt
N7pNfu+QW5OFNoucClopcgfb5NZPoaMiv4IWizwOWm50VhMr1oej+UL7RZwd
LRbrbp9bf872tsyt20K/xf/RfZGz2Cq3zgu9F/tD/4UOjN/QpxPPJ59BbrSr
6pT7XMmPomnguSYvSM6bXCr9RC137pXf18ydGyXfXTd3LpGcIssjgvPI6OfR
fY8v9nducC4e7f1wcc+K9fbnBeeO1xaPCs47ozNH78oxoqtHk8Y12Da3vYMW
n3wVGn7qLXLnh8kTo4Egt0zuDG0EeVrytWgpyOuS32U98qq0fZs518z/yLWR
Y12j4nwc+Wi2sTxz7pc8INoLcrjU32fWmfMb+Vx06eRtyfmSe21YcV6bPC05
PvLu5GqpycOyLjlZcvPki6mXZtbRo6cnF0WOkvtQza3D516i67s2+B6ju2OO
wJUVzzVAk08Ork3u+Ab2BD4Xmn20+//5reJ8J/07OWdyz+TyyUejB1icOY9N
7ollctyx4jwUuU7GhJhb589zjD5wTnLO8ne0ANH5i57EeJPzqQhvD4m2G9GB
HB5tS6PrOCjazqQ/QUOFHYLm5OhouwjNSa9oewNdSu9oGwmblH1hT6Iz4V3G
RqXP6Rrt74xT+5rRWtAhVfc56AlPrrofw3ZFc5Ki4/70RftH+zLoT+hX8X1u
ELeJ9nfGVt2f/F30OTtU/S4TO9+u6vf3Up3vtGA9bd9ivBtZjH1zg/MB3auO
8aIH3hk9THA+ad+qY+DoafdD4xGs6d2l6n54aNEnM3agFz1Y7etX/cxcoP1u
XfW7TzywfdV91MXiLat+Hy8St666v7pQ3Kbq/oH4ep3oPMopatu46udqDBqi
qt+7seK60XmXU9VWLzo3c5o4ROctBhQ5XHzFI7T+CdExxiOT72Od4t6Ni47t
9FP7LdExHOI3t0bHZPqrfUJ0XOV4+udoH/Uo8cnRcc6jxadE2/DY8ndG++An
qv32aN/8BPG50e8C78TZ0bGpY9V+ZrT92hstUnQspa/41Gjf7xjx6dFxyF7J
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
k+dt4nvelTx3Dp/l22S9JrHEJcmaPGKti5O1esRa70ieB4h/dE3yXFn87qXJ
2j5izncnz6/Db1qQ/H0NtGrzk7+tgJ7t0+RvNNCff5+sJSWO/XeyRpO4KL45
38dAP8xEZDQ0+Mh/JmsoiVX+m6xJJX7yW7JOlDjnL8m6TGKY21Y9vx797a/J
2k3imf8k6z6JA/+VrBMltvl7sq6U2Cn+PvP+0TbPTf7WA2Pcl8nfE0Fv9kny
9yAYjz5L/p4Fz+fnyd+t4Pn8IvnbFjxj85K/bcEz+UeybpWY7U3J82PxZ8s1
a4OIA3yTrKkl3vtdsu6TfMF1yfOEiWlcmzw/mTjJomTdJLqyZjXnKhgvmtac
w2BMaVJzPoCxqW3NOkViF61rzpXS37apOVdBnGSLmrWDxDQa1aw/YyxrWLPO
gDGrcc36M8a+ejXrSIgtbF5zDI7+fO2adRX0+WvVrDsh5rBGzToP4hvVmnU/
xBzq1qwvIb5Rp2YdCTGHVLP+gxhCqFmrRMwh1qxPIkaxXs2xacaa+jVrFxhn
1605h8H49XHyN0EY69epOVfBOL4yWc9H/L95zTFZ7PmtatZuEiO6IXluKrGL
jWvObTM2bVRz3poxJa9ZX0VsZMOac9KMiVnNWjFiMtcnz4kl7jEheW4z8Y2v
kjWv5BHGJc8NJr5RqVlDRmxng5pjwYy569ccU2YMbVVz3p2x7KPk75hgI21Z
s56SWFa7mjWpxLg+SP6uCjbS+OT5t8RbNqs5p87YumnNuXPG1hY1x6bxdxrU
rBHBnmlZc5wan2iTmnP2jLk3Js9nJiazIlkTSV5jebK+nJzI7GQdP3bsG8nz
c7AtiWWRg2V+6A/JGlDyNVOSv3uCnfxu8jdrsBWxK/i2CfMi30me34KtOz35
uyfY0j8m67PJDc1I/r4JdvVVyd9HIGb1WvK3TpYX9hLfPGFe7czk755gMxPP
5HsUzPu4LzlPTxx1dbIWnJzUZcnfRCBuuSpZM0p+6v3kb+hgi16R/E0H4kI7
Vv3NDOaq3Js8b5k4KrYi32Bh/u/9yToAYq1Tk78Lg9/xU7LWnDzXZlV/O4T5
Ka8mfxcGf+S95O/4YOsyp5i5cswvnpU8Twl7+Odk7Tu5oWnJ347Bf3k9+dsu
2P9vJc9Jwwe5PPn7FMRd/w/qY0Dc
                   "]], 
                  Polygon3DBox[CompressedData["
1:eJwtnAf8V9Mbx+8+96cQ2TIiSVPZSZGkkFL2iJRklqRkVaQiREZGJCvZEYlk
y8qelREaSupvK/T/vPvc1+v3vH7nuc8593vHOc/8nFv/1P7dz02iKPogiyL9
RXumUfSU/t8qukcHdglR9Jg6TM2jqFlNFDUU/7D4KeKbim+kPleKv1t0j47V
l/wBte9Tu7Hku+t8j+lcN4ruVt89xE9T+xbRZPHT1P+oOIqOFJ1X6Pd0bDTn
Et2rc+yl/tPV9zbRvZI1FF0u2Z38puTzJf+fxtYWf5T4fcU/z2+JpqjvPuKf
VftO0f3iW4ufqfZdogfE19JvXq72BLXvLKNob8mfEX+H6D4d21k0UueeJJqs
8xfqf6lkN+n4Heq/ifgHxE8Vf7f4GvHDuT/xE8V/qfP9rOur0fgeGj9P/Crx
tcQfKf4v9T9V7RFq76DnVVv8FTx/jb9L45vr+Twl+cOSN5d8N/HPin9M/K7i
W4p/Rvyj4luIb61xU8W/JpquY79JXl/tX/W7b+t8v4rfXvx2og/0W7+L31Ht
HUQfi79Wff5Ru72u4R2N/0fyZuKbir6S/EbJt0n9zFZJ/mXpdzZK8nrqO0rt
rVI/o+WSXynaUsf6Sf6fxv+rPs3VXq0+czX2F/Hbit9G9L7kG4iu5H1rzCTJ
/5Z8F8n+Uv93xa8R30R8Y9F89W2p41PV/zrescbsKn6K2teIJopvkfr9jOWd
im8u/j61rxLdLn438Y+ofYNokvgGwc/vAV13Ez3P1cG/xTXM0++1Uv+H1fd6
5pD6fyn5Yr3PRaJpku+def6/LHqS9yt5I7V3Fn0h+Z/iG6r9h87zju5nT/HP
i39CfVvq9/4Qv5P4BqJP1b+R+jyo9j467zy1n5C8h36ru6i/5P9p3AVcj+QT
Sr+T07m/zO+qu37nR/HviWbrWFfx36k9R/S8+CPEL1H7XdEL4ruJ/0Htt0Sz
mP86x5TE98Ta3kjyMyXrKro08zXvmXn9cy+/pZ5L+4nO1bX0EL9Mfd8Xvah+
R4tfqfYnolfE1y+sb55Q+179VgP9H6axt4vu0vgu6v+N5K+JZkp2mPivGCt6
VvyR4n9S+0PRS+KPYr2p/bHoZfGHi1+o9hui58QfKHqOZyt6Qef/PfWzbifq
L/59yXvrWI2e7wG6tia6pkcla6Pj89VuLHoksQ5EFzYV/3hiHYmu/Fr9Bmr8
Thp/EvpM8ocSzynmVjPx03jfoibiHw9+l0eIzlX/DySvp3P0lzyTbHfxsxLP
EZ7vNHRiZv24d/A8Yj4dIBog2YesT8nPEx8k30P8bO616s8caZB6/jJ3Pi+t
U0dIvrnkb6p9ouT/SL67ruez6p1cJvkmzN3C+vQpHbtPskPVdwHPWjRDxw4R
P493LXpG/Ffi/9C9baTxx+j3/hYNkOxayW7W+D/En8t6FX+T+C0Lr69HxE/m
WRS2H49xz+I/Yz7rfJnO101jv+D9iw/iu4sfi85g/vHO0V+i89Uep/G3SPaq
aIHG/KIxswuvK9bXq6KnsB+Z3+0boqfFX63+f6rdWud4Vfxa0WD0hfrdKlmm
c1yMfRN/u/jLJN9Y7RM05n+SxaILJR+vY7eVnkfMpzdFz6jvNTq2mvmnPm+K
P1XyP3hXzGfxh6AzmM86PkV999f/p9HdouckPxgdLvlH6B3JD8hsDz5kzkje
PrO9+Fg0S/wuhe3j0zp+v/ofg/0U/xn3p2NdJF+t9qc8F8nbZbY/74lmanzX
wnPjM+yM5AdlnltfiF5kPul8y/VsC/FHiG+bea6/I3pW/H6Z18pbohniu+t8
a3W+L3T8IZ3vex07Xvzl4seL75B57n8mmi3ZUeqf6Pxf8p5Kz6H6qfU7c+tr
tf+SvK76Hys+lXwv1o5oicbOFH0k+UGSvYQ+FV2hMZ107LTCOhpd3VvyLaTb
nhH/vmQHin9RfbfT/6ewITo2VrJCx47jt0Q/o8tEcyVrr36z0R3i3xDfTvwL
4t8Q/434w8S/If4d8T+I7yr+LfEbis7Ruc4WJVpvdUrrApy0nPWp/gvVv4v6
z5FsA9FZkp2JEyf5JuIHqX2+qEZ8Kb6n2ifhA2jsq6IFGn+Ixr8u2UaiAYl1
DronlJ67x4tWqW8u/mh8K9Fy7k/nPFbjjxENEv8hfSQ7Obd/sUj87lyP+K31
/Kar//Hqe5xosGRfitaXvE9ue/6Z+PXEn5rbHi5Kfb5lsefP0+hXHZso/gr1
/Z/aW0m+Fv0q+eaSDxG/va7/Y7XfUp/vJDtcsjdZn6IjJe/BOSV7hneuc9yl
PleKf1LXd7TaV+vYk5JtKroA/0jn+0jtzUSDEx+rpb4/qF+q9tLY+gcd8rna
nXLrlpfFzxPfWfxr4uuKBibWyejmG3SOX/SqfhV1VN/x2MzIa5i1fBM6PfKa
Z+2jw3n+V1W6HZ8N362n+M30fL/X9UTit078PG5X//8irynW1jEak+t6eqnf
WrXXC56vY3Pf363i10Re06zte5kzse3fiYV9Quz5KTzrGj8jnhU++0DJtgz2
7W5EF0t2i/i/I+sQdAk2pa/k4ytbc7ToL8mO1zn+U3uy5AX6W3S8+k/TsVGS
dRF/pvhJkqfoe+ac+BniT1a7p+hi5o769+L68KnE15Runyz6nblW+vpOF/2L
7hN9orEddT0vS7ZxaVvJGih07lmSfyr5wZK/ItnX4jeWrG9uf7WWqHdinx3f
faGu9V/130L8Cepzp84Rx9ZR6CpsOPNvTO719R33LdmWOnaijk2UPIo95kj1
f1x9zlefncWfzHyV/CTehWio+G8lW6P2ZqxRja9d+vmeJlqDP6j+u6rdQvSt
+FWpr41r5Pd+Fr+p+NWxx38VrK/R2+i3BcFrDxv7dOG4gfihjegc9f9W8pWx
Y5rnJJ8f3Be7jL5bGBzfEOfwfOcFr5UloumszeB4jbht3fMVvyK2DX9W8uXB
98d9oh9/Dn5ePDfW8xqto3Gpn8lF6NLgayHOQp+PE0VqH4LNzB2zELucRhyi
+bsi+Fnw3tCf2JjNUvvQ2J7rxcfiD8MGiv8+2Ffgml/QubbQsUcknyD+UmxR
aduyVsfeZ6xoj8Q6EF3YXPyTiX2+psG+x68au4H4o3WuSPLdeD86/p7aa9Wn
lfiWou80/jrd7w6p45nV6v9jsH3DzqG/8Zm2Tx3P4EstQp/E/o0XNX5Z8Lv+
W/S6+J/E/xP7Gc8p/A7mVzEpc3+p5H/G9tleEb8kuI0fhz77Ifjc3Af6brH4
32P/5ktcr479p2s/mJyCrucMXf+/4g8iBhG/Klhfobewd2cyPzV2N9EP6ltP
xy6VfEe1P2XtSr6JZC2YAzq2TWlflD51da6nRSdIdi15C8m2Fl0i2cWijYgt
S8cT+LD4sluKLhK/g/hP1P4p9frmnvEXlqW2T7xz3s8S8WXiOUr8vji1b8Oa
wd9cLr5O4meAf7site/BOzpO/NLU9o01Q7z/Y+rYn+dNvuKX1Pq8NTZf/Fal
r51rrKPr30L8ULUvFG0gfgbzSWMma/wYPe/p+BjibxM/vPAz4Flgc4eIbyj+
fo29DxsZ7APvmDpexjdGR6ArTue3tT5WBttW1tzb2Fv0WeJ39q74GzQ+TR3/
fUHOonR+hDwJ+r9B6fwNOQFyA9uVji2GizYjF4G/lTiHs4X4b1LPzU0SP69h
Glc3dYzwtfjtS/clRsF+rJRs88RzGH27Y+ncAzmorYmdxY9JfA3biL8pd46K
a9xKfEvJZyT2kcmd7FY6HiQu/ErtCTp/f/wBYhaNPTs4F3Q7S1X3f1ZwLqpR
6vzPOeInim+cOt/TLzi3dTNqSP3PIOZSe+fU8cGZwbk1juWS9+Ua1W6YOj64
Vf/P029fI9pYv/+s+EfVflPUKve7vwddJGoqfqb4x3lXrCHxt4kfyHrABxY/
nXwIa1nUXPwz4h9CF4h2FT+D/Ae6QNQSf0v8g2q/ypqrfN37WduiZuQWgu+N
a050/YODY/H9Uue/zgvOvU0SrS/5QPGT1W6WOp9Djo9c3+/kG2ts/3cQX5/1
UvkfDdTekfdb2OZh+1arf1D/e4JlA3gupfUm+vNw0RBiPcnvifybG2ps/+Bc
X5PU+b3/UuvmrqwpYs/g3CDvcD31P1vUFf2p30v1ewOC76Vp6nzcGZIfhj2Q
PJH8IfJwxLKJ43nsAPbgCNFQyQYFx8KzRRtr7O2i9zR+d2x3jW0GY7AZiwvb
PGwfOptYoVeVoyBH90nhmIDYYLSO76zxhwfHz+eIFujYEcG2bJDoO+Kr4HgV
G4etw8cmZ0COCd/7ctEd+q2t1LfU+SZKNkT8eHwM/Enxg9QexxoV/6DO11Ht
g0S9NbZHcHw7RLQI/0f9h0p2k2jz3DnJ3ciVVuvtcY35XrL9JdtEsjvUf7D4
G0Sb6thoye9Wexu1ayR/LPX1PSNqlDvGIdYZpXbDGscQ5AbJsRFb/JPadh4m
Gqw+01Kf73lRE/FT8FnU3lftjTT+EXwq8W3F162xDWZOYYO/l+xOYhzJ95R8
fd63+K/F70ecz3wkRyJ+H/Ebir+PGFJ8a/F1xE/Chxa/l/gNahzL3ImvI9pF
x7oF5ycGir4lvg7Wff1FX+WOVSbha4kai+8dnKskh0Mu55XgWPRedJZ+67Tg
XPt4USS+T3B7p9T5ijWp9f0hxDT4wMFj0SlXqf9LwW30DLbmmtSxG3OgUP+x
qWM/dExOTBIc//AMeBYj8b3UPg0bQkwWHA99Kbq/cKzdWe0+on+JsYJlPDOe
3WfB8S3vhHdDTE1sfYl+a9sa2zbsPXMm6Njl4g9W+1TRP6xD8WeqfaVoQ8nf
C473eYe8y5skP0Ptkfhg+OTB/v67Oj5L9/t+cHzAO+Pd3ajjp6t9uWh9Ypjg
+PLj1PH83OD8AGuatf1pcHzPHGGurOYdYO+wVTWOqYmtLxW/nfh+uecsPvvC
wj48vvwVOt6gxjEMscxw8fVrHMMTyw/DNtY4piG2GSl+pxr7NfgO6KOJuXPS
5KYPUHtTya9KrX+xcWnuWI74F5uTib8ytX7jntdmjsUOj/3MIsk/Cc4fsIZY
S6NT60ueeSz5+NTvfriotvgxqXObZ4sSYv7g/Mi7otuwBeIv0qmHipbgf6d+
l5eK1hN/XWr9j04qyaEEx+6soZEa/5b4x2LbyJvEvyP+idg28RbxbwbbN+zc
c+Rfgu0fdnBm6ToE9YjOokHYt8Lzd5XuPdbzmqP+D8cec4NkbwefG7v7fOkc
COvhT/XP1f/FYN8MnYMue1X8A7Ft6DXiXxc/NbaNHSd+dvD6Zp2Tm/g7dbxy
sOh8cgjB9hs7/mzpHArr8S/9XqHf+zN1vqq96Dz1nxX8bNAz5E76FF4fP1Pc
q3HsROyMjq7Bfwj2HW8VDVPfW1K/q9GiOpI/J/ntsX1MfE1yQOSCLpKsns73
bHAsdIvoMuLr4FwNOhvbQo1q98z1OmpX5MYbMh9FP5GnTp0r31+0XPw54rdF
n4qWiD9b/NboX9HizLFxI7UPFK0Qf6747dHnoqWZbQG1mg6igbrGG1LrmmGi
Wrn9BvyHtqJl5NlT+x5tRD+KPzU4Nz5O9K/6nxgcW40hJyP+BPGj1R4l+k38
r/qdVmpvLjpF438n9lN7S1GvKod6hn5j09j5kJXE5pJtIuqJzxyc/8MmYhvn
VnOSmhu5h/9hN7HfopMz+zDrfJnItcvlxJVqbyQ6scpZkbsiB0iu5yv93y5y
bfeoKmdLzLV57HwPOfIdJDstc+6cHPPpxESx808rNL4ZvovopMw5cM7XO3Nu
/EfJG+NriU6ocnDk4siZ1Q7OQZKLvBo/HP2NHsucs1s/2OfF98VmkSt/JDj3
gw7C18LHxtfGZ6b2ig+NL42PTe79SvX/Qu3P8cHFXyL+HbXfFm1TOMYk1iSm
IdeKDcQWYkPJ5fOsyO1dL7pN/MMaf2hsHYAuIGYhdrlBsl1q7AOu8wUj12rx
afFt8XmpXeID4wu/HLk2TIyJTiaG21Dnmk9c4nAqOhJ7JdoldUwRCscQxBLE
HNSSLw6+l/ap6x/fEMdZFUdHa+wi8Tvhu4qOyxyTMf/6Z47ViKGJpYmJN9a5
Mp2nR+T6woDMOQ7m1zmZcx+55EdFrneclzmGZ36dmTm2J6fC/D07c67lc/0/
q4rhuxXO4bNmt4qdf9y1dL2CusWC0jl71vg2sfNjj5Rew9vFzu+hcwenjvd5
/sSUxJbEjOQaV6Bvie91HduobwvJpyeuUVArJyZgjRNTkE8ssG+63n3xsYgh
xB8buT50vvgydb2B+ssg8euJPyly/Xtw5hr4zmr3y1wbn6Lf2CW2DjqlcM2l
LzmA2PnbhYnXE2mOYzTme3IPVr3RsZlrPPB9M9d+avBnxO8vuoCaTHDuDx3Z
U+erjT2MnE+5kJpbsL5Ebz6m8RtgbyPnuy6SfMPU9V/yVxeLryO+n9pdRJdQ
Iwq+dvQoucYlie+vtuh4yWvp+CmR8zVDxK8vvrfanbDR4ltpzMzENSX0+UXB
teI3RVvrei8NriWzBrcVf21w7pYc7r7ixwbnOsl57l147myp9u6iRTyT4Nwp
ffYpjHloSa2ter8XBK+tl0R1C9tQbGl9Pdf11PfYYGzCCNHK3HOfXBHj78RH
yryeiUcmiR8VnHsnB99M5xoSXGt+FZ0r/urgXDo59T0L5wzJHZJ/oBZDTozc
GPkfcv/XBeeyyWm3LbxmWbs8I2qZxwTjQ4aJVuDTZtaP13GNuX0YfJkGatfS
/ZwSnKu5VrRGx3oF2yZyOORyDs2dQyHf9Bq2ObgeiU+1VLKTxF8dOUdIrrBn
cK2MY39JfnJwbpEaGrU06hTUK64VTcid68Q3eIo5Kf74YHzGSNEv4h8K9ufx
66mlTQ2upeFz4HscF4xnATMCHoGcJblL8m3Uoo4OxopcIlqWu+a7f+p6PbVg
6lLk5seKbsnth+CPPC3aWfzQYCwDYxg7Orh2Qg2lucY/Jr5bbB+V2P5Jna9j
arxAA/HDg9sf8EzFjwjGDnwk2qlwjfvg1Meofd8sed3YNhJbSb0GW7mRqHPh
mmrn1PVUaq03BsvQEegKbB+5vBuZg7r+kcG2izGMvTD43l8XbVHYlmIrx4tu
J94Jxk5wTVzbZcHYjrm8Y+ZOsL+O304t5Yrga/lU1EjyYcFYjA6p8RbUn9Bd
G4o6Fa7f4KuQcz2scL1qA7XXFx1UuL6EbmfNHlFUmKLUmCJqgZyTc3NNYDvG
BdeSqCntL/6q4FoTNafdxD+s+2uXes1tLn5McO2IGlLLwvWRerF9wB74A8Ft
bAy2hnoLtoQ+1E8miN8sts+F70V9C1+HY4dLfluwrcIHwhe6K9jfxCZhm6g3
YYs4dnThmgO1B2oG1Bavl7w2viQ+KPY+2P/EhmHLwEhQH7o+d76Z9XhyZJ36
Y24bTL1qXG7bfLGok/gyc3xIfQnfn2N/F65fkcvokhg/Rb3rILU7iv4Uf1Hp
dsiMH7ukdCxTkzl+pD5ErH8oOVP0c+n2epnjxW+TdSWIaMfKXpE/Jb9EDXrb
4Pwq+RZqzOC7vintczTEx8qd2++odq/KXvwgvlZkOf7Id4l9k50q+0dtAFvS
u7JnYFkmJ87hgve7rHQur3bm/A71bXJ13USxfr8FPqPaj+T2J8DfsJZuwg8N
rp+Te+suStFVpddOi8z4RfA7+Ho3YPeC8TjEyrckrs9wDNmDufE+/Uvn+8n7
U/8cVvpa1s+cfyOmnpM6/0qsPby0f1Ins79LPZ78xXGVP74D+lbt+3PjucDj
gWXJq/VDPZL4ipovtV/q/9SuqSFSS6QeTf7ghMq/Bl+E7RiHHxiM3TtQz7Zn
5b+ALcG3OKHyb4ixibVHqr2YuRTsW/AO35esrfi2kTE0xAMHiu8Q+ZzvSn5A
sG90QPX+O4jeTp1foX7XIdh3YMxcydoF+1acc474/YJ9rzbouNw5LnJdlzFX
9Hutg33TvUQvS9Y++Le5L/wvag/dxJ8VGX9GjpNc5wjmXmmsDr4ePh/+Kzk1
cmvD8cWwLcHPg+eC/0XOktzlFfjS4odyz5IVmfMtPAeu/bjI/iL1DPIz1Fyp
bVOfIR/Ts/LvwVOCRaJmRL6Wegf5mX6V/7pW/zvrXH0qf+qvxM/imMj+6ZrE
z/bEyP7giNL5o80zxx/Ut6hv96r8efCQGyauQS3Q7yXkazT2jMrfo55E/ogx
1MOobeIL9qv8Q2qlh+pf38j+I3hHapOcE3wl9TZq3eg0dNvI0nOtWWb8L/VN
1s4Ejkk+qnQbnw3fjXrB0MofoR7SKTPWCswV+NTO4l9PjJEDb4UPgC9wJXO1
tI+ErzRa/FJ0o/6/khiTCF6ro/iXEte4wFv+WhqTBkZw18L1CHwVfBbiM/L9
+Ib4iMTP1Gu4Nnwm4knqB8T2xPh1CuNTk8SYj/fE7y7+LrUfz10vOkS/Pycx
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
7WWNgy0g50hu6a0qF8n+ue6Rf3O+5P8HJz/HDw==
                   "]], 
                  Polygon3DBox[CompressedData["
1:eJwt1nuUz2UeB/BfU+FUkiZhMC5lt7N2y1HI/S6Xsm1KJLcxGNcRkSKXMWhK
hGrbdk+2VnJPbU67jq09HSUaclfkzCqttYmI3Nba13P288f3fOf7+r4/z/PM
9/c8z/dbN6/wgTFZmUxmmeNqx6wKmcxyf7S6KpNZ7cZt5TOZRY6drntfmcn8
JNO1XCbzd5Yrt4TNuSKTKWFHWFf2OTvAPmLF2nuLtVC/Qnv1ZQ45OrNSuT1y
G+QeYEUyFVhffRx2v4x1cv6M7ZJbL/cJq8eWsflsAevH5qq9kRWqPef+RlbH
eSmbKzdP7gBrzz5l29g61o2NVnvS2Bqp3ev+Y8Y8xPm8XAP+lVy+3AK5quwJ
uQzbx9rIfcw2aW8NG6d2GLvIbldbxlrLDVF7yPUtSje535YNZd+kZ8I2s4Os
g/Nmtdu1977aPqxErhIrkDvp/gD2PMtmj7ELbAur77ySvaj2ZbVD2UK5auxJ
uSzWnhWwI+m3ZaVqtrO7nT+QW6/2dblP2S1sOVvAFrEubJTaE2obqt3t/mD2
ArtZbiK7zOZ4Bqud2/F1KSszPM0j19XlpqS5pr2jrFvqnx3Ux0ZWonYt6yi7
Xm1jmWfYGtaevZ9+J3bY0YVtU/uF2g/VrmPnZaaxtmwSu5cVsjOpLf1+qeZr
do/zVrm9cn+Tm62PlayN7Luyv5J51/GT6ylyLeTGy7Vkg9lBmTra26hmEJvP
qsg9zi6xzmwE+y61xXaw1ewUmyR3p/ZGau9O/b7tXmO+OP7fXmy36wK5bLnu
ci/xXawPO5f5vw2Ra5J++5gvf2Ar5E7ITUjzjw1lRXJL5O7mb+qjtsxkVsRu
ZoPZ+TRfWNNYbzvVvsYKWPN4zvvYn9gw1iye356YL1PYTFZVe/nau8Cm6Wet
6yZy7xlzPTZY7la5v7BVMa/y2V2xLreyV1Itm8NqqB+pvSu01TaZ6xpyU7V3
zP0i/mfWjP2V/Vxt07QG2UV1bWNt3c8+YwPksvTRPM0N9gl7JJ5pQ9adfRzP
+Sy7gz3Itqf/i12jtj3rybaxPFaetUl7GNvKBrGrWSv2G1bKBrKrWEs2iU0z
pmz+qDGeYk1YvutzrlvEvCr2v61jLdRuYL+Qe0puhntVUj+yZ9mTbDq7ifVn
p9lUNpvlsOHsMmvDZsUanKy9o2mNsmdYTTadHWejWTvnPeywMa9N+xD7Qa6Y
dY151Y+dZc+xXrE+RrBWanfEml7ORrLWbCcrYytZb3ZcbRHrzPLYI+wkm8W6
swLWl/3I5rAesWb6s3NsLuvNJrBH2RlWwnqysWwUa6vf3ezr2J/zWF22jr0V
74VBrBZ7hy1ms1lzNjXeKWM8lwPpHZaeM7sp9t0y1poVxx47if2TDWct4j24
X3tL077LnpXLZTNjH3861TpX40P9Rv+Ra8CWsdvZwnj/3sc2ue6r9oLaRnId
2HOsNpvFflTTjI1hWey+eJcNZDnOa9irxjJDbau0VuNdNjHetS3TvIo9bDw7
lPYLNpJdNo4usYcNYBfYvPSejj12BlvgXv2098pWMeZfsy1pPspdVttUrgfb
zPqxS6wxy2UvxD6UH7VLHWWuh8hV1MdAuZpy82Pe58lly/zOsTetoWjvfrk6
cgvjmQ6TqyZz1pHH/iV3Ldsn9wb7KtZvBX30ZcdZj5gv37AtrJ72FrHqsY5y
ZE47BrBv5cqxnXLnWT77N7ue7Wfj1Y5g/037PTvMbmNvsgbaez59D6gbywaz
s3I/i/Et4QfT3hx7Tj9WOa1Vuev5Q3LlZLJZCavEHmYV2HeOe2O9/UPtJrUb
WA32OitixewDVpO9wYpj3n+f5hvbFWtmc1q/7EXt58S+W55VSfNPrnLaP/V7
rcxvHXtinl6U6yFXVW6u3I2x11WUuZW9FHv7KFaLPc6eiv/tQXZUbXU2L/a1
AewGufWO6myxPqbFfP4j2x97bNp3e7Mf0hyMPexbVsrGsldiDRYbX0XWSR8r
WGv2EauSvnPYO6wT+zzeW2NYf+2dYrnGso1NZFPYDfHsv2dPsKfjufRhJ1jH
tKZdt1T7ofYqs4fYjpjj1xlfR9aQrVLbiL8a303T077Bctm4+H27sY3xPX5G
e79U+zA7wApZnXgGhWyg2tOsbszTruw9uS5sd7wvC9Nvx2rF3nRd+t/YcnZH
2ifjuWTUDtfeCVYt5vNrcl/Ge/VK/fZiE+Qmx5zsJXeMXUrfu+xY+qaJ7+Lf
sy9ij8io7cmy0p4jd5LVkDuS3m9yq+QapW8G0Rx2T/puYh1YKavNJsutYXex
t1kt1jl9i7J26Rs9aselvSP2ztmsEhvNXo734Ax2DZupdqmxNOfLYq3+D6Ff
peU=
                   "]]}],
                Lighting->{{"Ambient", 
                   RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
                  "Directional", 
                   RGBColor[
                   0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                   ImageScaled[{0, 2, 2}]}, {"Directional", 
                   RGBColor[
                   0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                   ImageScaled[{2, 2, 2}]}, {"Directional", 
                   RGBColor[
                   0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                   ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
              {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0klPE2EAx+GXIoqAVAoiYDVwFMKV5S61rkD7AUC9CtzReKV8ACAcWT4A
GK8iuLO4AQolhhhjKiHGGJZ49Zl4+OX5z2Xm7XSa7g5lBotCCFOKKdpJLZWE
0M6MvtoD/MscZ5Q4GcIC82q1j5hm3A2adc/uYr8e6JHrcc5r0l7jE/5kzIM/
2BfZoX07y5JTIQxyVI32LJ9pUakTzsjnumq/YJov+UrX7Nd8o+v2W97gMld0
017lmt7pluv30Tl02/7Ibn7iunrsDW6q1/7MDL9wS1l7m3ktqNN5Z5jTJXuA
xcywXXt+Y5JF0fPtgvfwmKuc04Q9xmH16aHrK7ysO3YlUzz03rfVYj/ltM7a
Izz2f91nr3bsNl5Qg448t551OrDP8w9reU6/7RpW65ed4D6rovtrz46zUmdU
cF3Bcv2wy/idp1mqb7afHxwt7Eb/bfRd0WsLxdH5Yv+/v39kkVB+
                "]]}, 
              {GrayLevel[0.2], 
               Line3DBox[{1473, 1850, 1472, 1122, 1474, 1851, 1475, 2186, 
                1852, 1476, 2102, 2270, 1477, 1853, 1478, 2187, 1854, 1479, 
                1855, 1480, 2188, 1856, 1481, 2103, 2271, 1482, 1857, 1483, 
                2189, 1858, 1484, 1859, 1485, 1860, 1486, 1129, 1487, 1861, 
                1488, 2190, 1862, 1489, 2104, 2272, 1490, 1863, 1491, 2191, 
                1864, 1492, 1865, 1493, 2192, 1866, 1494, 2105, 2273, 1495, 
                1867, 1496, 2193, 1868, 1497, 1869, 1498}], 
               Line3DBox[{1500, 1870, 1499, 2106, 2274, 1501, 1871, 1502, 
                1151, 1503, 2107, 2275, 1504, 1872, 1505, 2108, 2276, 1506, 
                1873, 1507, 2194, 1874, 1508, 2109, 2277, 1509, 1875, 1510, 
                2110, 2278, 1511, 1876, 1512, 1877, 1513, 2111, 2279, 1514, 
                1878, 1515, 1158, 1516, 2112, 2280, 1517, 1879, 1518, 2113, 
                2281, 1519, 1880, 1520, 2195, 1881, 1521, 2114, 2282, 1522, 
                1882, 1523, 2115, 2283, 1524, 1883, 1525}], 
               Line3DBox[{1527, 1884, 1526, 2196, 1885, 1528, 1886, 1529, 
                2197, 1887, 1530, 1166, 1531, 1888, 1532, 2198, 1889, 1533, 
                1890, 1534, 2199, 1891, 1535, 2200, 1892, 1536, 1893, 1537, 
                2201, 1894, 1538, 1895, 1539, 1896, 1540, 2202, 1897, 1541, 
                1898, 1542, 2203, 1899, 1543, 1173, 1544, 1900, 1545, 2204, 
                1901, 1546, 1902, 1547, 2205, 1903, 1548, 2206, 1904, 1549, 
                1905, 1550, 2207, 1906, 1551, 1907, 1552}], 
               Line3DBox[{1554, 1908, 1553, 2116, 2284, 1555, 1909, 1556, 
                2208, 1910, 1557, 2117, 2285, 1558, 1911, 1559, 1195, 1560, 
                1912, 1561, 2209, 1913, 1562, 2118, 2286, 1563, 1914, 1564, 
                2210, 1915, 1565, 1916, 1566, 1917, 1567, 2119, 2287, 1568, 
                1918, 1569, 2211, 1919, 1570, 2120, 2288, 1571, 1920, 1572, 
                1202, 1573, 1921, 1574, 2212, 1922, 1575, 2121, 2289, 1576, 
                1923, 1577, 2213, 1924, 1578, 1925, 1579}], 
               Line3DBox[{1581, 1926, 1580, 2122, 2290, 1582, 1927, 1583, 
                2123, 2291, 1584, 2124, 2292, 1585, 1928, 1586, 2125, 2293, 
                1587, 1929, 1588, 1224, 1589, 2126, 2294, 1590, 1930, 1591, 
                2127, 2295, 1592, 1931, 1593, 1932, 1594, 2128, 2296, 1595, 
                1933, 1596, 2129, 2297, 1597, 2130, 2298, 1598, 1934, 1599, 
                2131, 2299, 1600, 1935, 1601, 1231, 1602, 2132, 2300, 1603, 
                1936, 1604, 2133, 2301, 1605, 1937, 1606}], 
               Line3DBox[{1608, 1938, 1607, 2214, 1939, 1609, 1940, 1610, 
                2215, 1941, 1611, 2134, 2302, 1612, 1942, 1613, 2216, 1943, 
                1614, 1944, 1615, 2217, 1945, 1616, 1239, 1617, 1946, 1618, 
                2218, 1947, 1619, 1948, 1620, 1949, 1621, 2219, 1950, 1622, 
                1951, 1623, 2220, 1952, 1624, 2135, 2303, 1625, 1953, 1626, 
                2221, 1954, 1627, 1955, 1628, 2222, 1956, 1629, 1246, 1630, 
                1957, 1631, 2223, 1958, 1632, 1959, 1633}], 
               Line3DBox[{1635, 1960, 1634, 2136, 2304, 1636, 1961, 1637, 
                2224, 1962, 1638, 2137, 2305, 1639, 1963, 1640, 2138, 2306, 
                1641, 1964, 1642, 2225, 1965, 1643, 2139, 2307, 1644, 1966, 
                1645, 1268, 1646, 1967, 1647, 1968, 1648, 2140, 2308, 1649, 
                1969, 1650, 2226, 1970, 1651, 2141, 2309, 1652, 1971, 1653, 
                2142, 2310, 1654, 1972, 1655, 2227, 1973, 1656, 2143, 2311, 
                1657, 1974, 1658, 1275, 1659, 1975, 1660}], 
               Line3DBox[{352, 353, 912, 354, 355, 913, 356, 914, 357, 358, 
                915, 359, 360, 916, 361, 917, 362, 363, 918, 364, 365, 366, 
                919, 367, 368, 920, 369, 921, 370, 371, 922, 372, 373, 923, 
                374, 924, 375, 376, 925, 377, 378}], 
               Line3DBox[{1662, 1976, 1661, 1304, 1663, 1977, 1664, 2228, 
                1978, 1665, 2144, 2312, 1666, 1979, 1667, 2229, 1980, 1668, 
                1981, 1669, 2230, 1982, 1670, 2145, 2313, 1671, 1983, 1672, 
                2231, 1984, 1673, 1985, 1674, 1986, 1675, 1311, 1676, 1987, 
                1677, 2232, 1988, 1678, 2146, 2314, 1679, 1989, 1680, 2233, 
                1990, 1681, 1991, 1682, 2234, 1992, 1683, 2147, 2315, 1684, 
                1993, 1685, 2235, 1994, 1686, 1995, 1687}], 
               Line3DBox[{1689, 1996, 1688, 2148, 2316, 1690, 1997, 1691, 
                1333, 1692, 2149, 2317, 1693, 1998, 1694, 2150, 2318, 1695, 
                1999, 1696, 2236, 2000, 1697, 2151, 2319, 1698, 2001, 1699, 
                2152, 2320, 1700, 2002, 1701, 2003, 1702, 2153, 2321, 1703, 
                2004, 1704, 1340, 1705, 2154, 2322, 1706, 2005, 1707, 2155, 
                2323, 1708, 2006, 1709, 2237, 2007, 1710, 2156, 2324, 1711, 
                2008, 1712, 2157, 2325, 1713, 2009, 1714}], 
               Line3DBox[{1716, 2010, 1715, 2238, 2011, 1717, 2012, 1718, 
                2239, 2013, 1719, 1348, 1720, 2014, 1721, 2240, 2015, 1722, 
                2016, 1723, 2241, 2017, 1724, 2242, 2018, 1725, 2019, 1726, 
                2243, 2020, 1727, 2021, 1728, 2022, 1729, 2244, 2023, 1730, 
                2024, 1731, 2245, 2025, 1732, 1355, 1733, 2026, 1734, 2246, 
                2027, 1735, 2028, 1736, 2247, 2029, 1737, 2248, 2030, 1738, 
                2031, 1739, 2249, 2032, 1740, 2033, 1741}], 
               Line3DBox[{1743, 2034, 1742, 2158, 2326, 1744, 2035, 1745, 
                2250, 2036, 1746, 2159, 2327, 1747, 2037, 1748, 1377, 1749, 
                2038, 1750, 2251, 2039, 1751, 2160, 2328, 1752, 2040, 1753, 
                2252, 2041, 1754, 2042, 1755, 2043, 1756, 2161, 2329, 1757, 
                2044, 1758, 2253, 2045, 1759, 2162, 2330, 1760, 2046, 1761, 
                1384, 1762, 2047, 1763, 2254, 2048, 1764, 2163, 2331, 1765, 
                2049, 1766, 2255, 2050, 1767, 2051, 1768}], 
               Line3DBox[{1770, 2052, 1769, 2164, 2332, 1771, 2053, 1772, 
                2165, 2333, 1773, 2166, 2334, 1774, 2054, 1775, 2167, 2335, 
                1776, 2055, 1777, 1406, 1778, 2168, 2336, 1779, 2056, 1780, 
                2169, 2337, 1781, 2057, 1782, 2058, 1783, 2170, 2338, 1784, 
                2059, 1785, 2171, 2339, 1786, 2172, 2340, 1787, 2060, 1788, 
                2173, 2341, 1789, 2061, 1790, 1413, 1791, 2174, 2342, 1792, 
                2062, 1793, 2175, 2343, 1794, 2063, 1795}], 
               Line3DBox[{1797, 2064, 1796, 2256, 2065, 1798, 2066, 1799, 
                2257, 2067, 1800, 2176, 2344, 1801, 2068, 1802, 2258, 2069, 
                1803, 2070, 1804, 2259, 2071, 1805, 1421, 1806, 2072, 1807, 
                2260, 2073, 1808, 2074, 1809, 2075, 1810, 2261, 2076, 1811, 
                2077, 1812, 2262, 2078, 1813, 2177, 2345, 1814, 2079, 1815, 
                2263, 2080, 1816, 2081, 1817, 2264, 2082, 1818, 1428, 1819, 
                2083, 1820, 2265, 2084, 1821, 2085, 1822}], 
               Line3DBox[{1824, 2086, 1823, 2178, 2346, 1825, 2087, 1826, 
                2266, 2088, 1827, 2179, 2347, 1828, 2089, 1829, 2180, 2348, 
                1830, 2090, 1831, 2267, 2091, 1832, 2181, 2349, 1833, 2092, 
                1834, 1450, 1835, 2093, 1836, 2094, 1837, 2182, 2350, 1838, 
                2095, 1839, 2268, 2096, 1840, 2183, 2351, 1841, 2097, 1842, 
                2184, 2352, 1843, 2098, 1844, 2269, 2099, 1845, 2185, 2353, 
                1846, 2100, 1847, 1457, 1848, 2101, 1849}]}, 
              {GrayLevel[0.2], 
               Line3DBox[{730, 1108, 731, 1122, 758, 1136, 772, 2274, 1150, 
                786, 1164, 2196, 800, 1178, 814, 2284, 1192, 828, 1206, 842, 
                2290, 1220, 856, 1234, 2214, 870, 1248, 884, 2304, 1262, 898, 
                1276, 912, 1290, 926, 1304, 940, 1318, 954, 2316, 1332, 968, 
                1346, 2238, 982, 1360, 996, 2326, 1374, 1010, 1388, 1024, 
                2332, 1402, 1038, 1416, 2256, 1052, 1430, 1066, 2346, 1444, 
                1080, 1458, 1094}], 
               Line3DBox[{732, 1109, 733, 1123, 2186, 759, 1137, 773, 1151, 
                787, 1165, 2197, 801, 1179, 815, 1193, 2208, 829, 1207, 843, 
                2291, 1221, 857, 1235, 2215, 871, 1249, 885, 1263, 2224, 899, 
                1277, 913, 1291, 927, 1305, 2228, 941, 1319, 955, 1333, 969, 
                1347, 2239, 983, 1361, 997, 1375, 2250, 1011, 1389, 1025, 
                2333, 1403, 1039, 1417, 2257, 1053, 1431, 1067, 1445, 2266, 
                1081, 1459, 1095}], 
               Line3DBox[{734, 1110, 735, 2270, 1124, 760, 1138, 774, 2275, 
                1152, 788, 1166, 802, 1180, 816, 2285, 1194, 830, 1208, 844, 
                2292, 1222, 858, 2302, 1236, 872, 1250, 886, 2305, 1264, 900, 
                1278, 914, 1292, 928, 2312, 1306, 942, 1320, 956, 2317, 1334, 
                970, 1348, 984, 1362, 998, 2327, 1376, 1012, 1390, 1026, 2334,
                 1404, 1040, 2344, 1418, 1054, 1432, 1068, 2347, 1446, 1082, 
                1460, 1096}], 
               Line3DBox[{736, 1111, 737, 1125, 2187, 761, 1139, 775, 2276, 
                1153, 789, 1167, 2198, 803, 1181, 817, 1195, 831, 1209, 845, 
                2293, 1223, 859, 1237, 2216, 873, 1251, 887, 2306, 1265, 901, 
                1279, 915, 1293, 929, 1307, 2229, 943, 1321, 957, 2318, 1335, 
                971, 1349, 2240, 985, 1363, 999, 1377, 1013, 1391, 1027, 2335,
                 1405, 1041, 1419, 2258, 1055, 1433, 1069, 2348, 1447, 1083, 
                1461, 1097}], 
               Line3DBox[{738, 1112, 739, 1126, 2188, 762, 1140, 776, 1154, 
                2194, 790, 1168, 2199, 804, 1182, 818, 1196, 2209, 832, 1210, 
                846, 1224, 860, 1238, 2217, 874, 1252, 888, 1266, 2225, 902, 
                1280, 916, 1294, 930, 1308, 2230, 944, 1322, 958, 1336, 2236, 
                972, 1350, 2241, 986, 1364, 1000, 1378, 2251, 1014, 1392, 
                1028, 1406, 1042, 1420, 2259, 1056, 1434, 1070, 1448, 2267, 
                1084, 1462, 1098}], 
               Line3DBox[{740, 1113, 741, 2271, 1127, 763, 1141, 777, 2277, 
                1155, 791, 1169, 2200, 805, 1183, 819, 2286, 1197, 833, 1211, 
                847, 2294, 1225, 861, 1239, 875, 1253, 889, 2307, 1267, 903, 
                1281, 917, 1295, 931, 2313, 1309, 945, 1323, 959, 2319, 1337, 
                973, 1351, 2242, 987, 1365, 1001, 2328, 1379, 1015, 1393, 
                1029, 2336, 1407, 1043, 1421, 1057, 1435, 1071, 2349, 1449, 
                1085, 1463, 1099}], 
               Line3DBox[{742, 1114, 743, 1128, 2189, 764, 1142, 778, 2278, 
                1156, 792, 1170, 2201, 806, 1184, 820, 1198, 2210, 834, 1212, 
                848, 2295, 1226, 862, 1240, 2218, 876, 1254, 890, 1268, 904, 
                1282, 918, 1296, 932, 1310, 2231, 946, 1324, 960, 2320, 1338, 
                974, 1352, 2243, 988, 1366, 1002, 1380, 2252, 1016, 1394, 
                1030, 2337, 1408, 1044, 1422, 2260, 1058, 1436, 1072, 1450, 
                1086, 1464, 1100}], 
               Line3DBox[{14, 41, 1485, 68, 95, 1512, 122, 1539, 149, 176, 
                1566, 203, 230, 1593, 257, 1620, 284, 311, 1647, 338, 365, 
                392, 1674, 419, 446, 1701, 473, 1728, 500, 527, 1755, 554, 
                581, 1782, 608, 1809, 635, 662, 1836, 689, 716}], 
               Line3DBox[{744, 1115, 745, 1129, 765, 1143, 779, 2279, 1157, 
                793, 1171, 2202, 807, 1185, 821, 2287, 1199, 835, 1213, 849, 
                2296, 1227, 863, 1241, 2219, 877, 1255, 891, 2308, 1269, 905, 
                1283, 919, 1297, 933, 1311, 947, 1325, 961, 2321, 1339, 975, 
                1353, 2244, 989, 1367, 1003, 2329, 1381, 1017, 1395, 1031, 
                2338, 1409, 1045, 1423, 2261, 1059, 1437, 1073, 2350, 1451, 
                1087, 1465, 1101}], 
               Line3DBox[{746, 1116, 747, 1130, 2190, 766, 1144, 780, 1158, 
                794, 1172, 2203, 808, 1186, 822, 1200, 2211, 836, 1214, 850, 
                2297, 1228, 864, 1242, 2220, 878, 1256, 892, 1270, 2226, 906, 
                1284, 920, 1298, 934, 1312, 2232, 948, 1326, 962, 1340, 976, 
                1354, 2245, 990, 1368, 1004, 1382, 2253, 1018, 1396, 1032, 
                2339, 1410, 1046, 1424, 2262, 1060, 1438, 1074, 1452, 2268, 
                1088, 1466, 1102}], 
               Line3DBox[{748, 1117, 749, 2272, 1131, 767, 1145, 781, 2280, 
                1159, 795, 1173, 809, 1187, 823, 2288, 1201, 837, 1215, 851, 
                2298, 1229, 865, 2303, 1243, 879, 1257, 893, 2309, 1271, 907, 
                1285, 921, 1299, 935, 2314, 1313, 949, 1327, 963, 2322, 1341, 
                977, 1355, 991, 1369, 1005, 2330, 1383, 1019, 1397, 1033, 
                2340, 1411, 1047, 2345, 1425, 1061, 1439, 1075, 2351, 1453, 
                1089, 1467, 1103}], 
               Line3DBox[{750, 1118, 751, 1132, 2191, 768, 1146, 782, 2281, 
                1160, 796, 1174, 2204, 810, 1188, 824, 1202, 838, 1216, 852, 
                2299, 1230, 866, 1244, 2221, 880, 1258, 894, 2310, 1272, 908, 
                1286, 922, 1300, 936, 1314, 2233, 950, 1328, 964, 2323, 1342, 
                978, 1356, 2246, 992, 1370, 1006, 1384, 1020, 1398, 1034, 
                2341, 1412, 1048, 1426, 2263, 1062, 1440, 1076, 2352, 1454, 
                1090, 1468, 1104}], 
               Line3DBox[{752, 1119, 753, 1133, 2192, 769, 1147, 783, 1161, 
                2195, 797, 1175, 2205, 811, 1189, 825, 1203, 2212, 839, 1217, 
                853, 1231, 867, 1245, 2222, 881, 1259, 895, 1273, 2227, 909, 
                1287, 923, 1301, 937, 1315, 2234, 951, 1329, 965, 1343, 2237, 
                979, 1357, 2247, 993, 1371, 1007, 1385, 2254, 1021, 1399, 
                1035, 1413, 1049, 1427, 2264, 1063, 1441, 1077, 1455, 2269, 
                1091, 1469, 1105}], 
               Line3DBox[{754, 1120, 755, 2273, 1134, 770, 1148, 784, 2282, 
                1162, 798, 1176, 2206, 812, 1190, 826, 2289, 1204, 840, 1218, 
                854, 2300, 1232, 868, 1246, 882, 1260, 896, 2311, 1274, 910, 
                1288, 924, 1302, 938, 2315, 1316, 952, 1330, 966, 2324, 1344, 
                980, 1358, 2248, 994, 1372, 1008, 2331, 1386, 1022, 1400, 
                1036, 2342, 1414, 1050, 1428, 1064, 1442, 1078, 2353, 1456, 
                1092, 1470, 1106}], 
               Line3DBox[{756, 1121, 757, 1135, 2193, 771, 1149, 785, 2283, 
                1163, 799, 1177, 2207, 813, 1191, 827, 1205, 2213, 841, 1219, 
                855, 2301, 1233, 869, 1247, 2223, 883, 1261, 897, 1275, 911, 
                1289, 925, 1303, 939, 1317, 2235, 953, 1331, 967, 2325, 1345, 
                981, 1359, 2249, 995, 1373, 1009, 1387, 2255, 1023, 1401, 
                1037, 2343, 1415, 1051, 1429, 2265, 1065, 1443, 1079, 1457, 
                1093, 1471, 1107}]}, {}, {}}},
            VertexNormals->CompressedData["
1:eJztnL1rFFEUxRdTqK3dEoJfhUJsVNRGHNAIwm40bOEf4EeVhaxNxCrY2AWM
rQQsBLGxsRJDBlZBUfxCEVYkiCKCiorNLkRQkPtSzLLs7mTe3HPfHJuHvyU5
9553Mrt7mTfbz8zUzm8olUp7N5dKI6Ve/35FY/uvHr916WMsa5RYycl98K7X
R/+v1w7LusR8kmvkkPkkR84h80mOnEPmkxw5h8wnOXIOmU9y5Bwyn4Xm2vrM
JzmCPvNJjqDPfJIj6Ktz5hOCa+vDcuaTOUTmzCdziMyZT+YQmTOfzCEyZz6h
9MmZTwR9cuYTQZ+c+UTQJ2c+EfTJmU8of8gLnU8YH8gxeU75hOmX3BbPOJ8w
fZGHwVPmE6Z+8rD5sM8PefB24ey2J61Y1uhgZ9PqjcpXmH7Ii8Fr109MzP9+
7tZ4fmFXJdryA65OY7zr9dHFxzff7XwYyxr9uXyhsrjvp3adVnjX67e/7Wk/
OrDi1vj+kdPvG6+/RNMjy0d3dD7EskYT7fqhjeOftetH4wP/3JXdrca9c3fd
GrdffFppvWRus/59k3+f1pafvYlljWbujL8qT3/X7susnyfFR1lj+ulH56Jc
F2SNOsW4PnjTqcv7lqzxMXn/cu9z7n3Pvd+B+gPjZy++VT6HyRqvhvV5TFt/
jZ+S7xWyRka/X2jrr3E3L3DzA6NzA239QTlKHeb9NDbv0tbvy43NbbT1U3PQ
uY22fmoOOreB8Scrrjy3gfHBN89pbgPTr2+e09wGpl8tnvHcBqYvLZ7x3Aam
LzSecm4DU78V3mduA1OnFd5nbgNTZyAcpQ7zHPTch3XO3Hr2k7n1kk/67NlP
Xh/y8ZO5zVUHrV+zfhY0t7nrB+6ztn5o1wdt/dByq60fWm619eknrwOm/TSW
W2390HKrrR+azzA+BHJ9QOvXem5h+g0kt2h9Wc8tTF9onM8JyZXTz3xyC1On
dd6U+3CaA96HU5X7oKq2z6+RY/L1/z65H3IscT9k8r7TpbDOC5Oj5bAHd+d5
3Pked65nVu4/ny3WcwPIlXI4LHfneSYT51Cq8n9Zo0axnysSKtfWT83n5Ho6
lzj3586l1PlcLEtcWz9znjz/6z6XluXzaxnrnDU5hr46n5Lv/1OJ5y24OULT
xnMtrHNt/WB4rzkY513MITTnvAtJnzzBCzrv0tYnXycPZN6lrU+eMwedd8H4
Q67LleddMD6Q2+IZz7t6va7eJ3kmfNifQ6sfjfvWQeuXnPkpMud+6fpD/21x
bf2i77u2PgpHqYP7i71f2vpF5yh1MD/F2HdtfXSf0eon1/37QusrVK5VB1o9
Wv1q+RBqrrTyad1P3/Vo7ye6n777QvMfbX/R6kfzxzqnP+n8Qasn1Pz7rt+6
n8Pqau+nVT+16kfz37cPaP77/nu0zq34byU/aPm07qfverT3E91P332h+Y+2
v2j1e+P/ABAyZkQ=
             "]], {}, {{}, {}}},
          Axes->True,
          AxesLabel->{None, None, None},
          BoxRatios->{1, 1, 0.4},
          DisplayFunction->Identity,
          FaceGridsStyle->Automatic,
          Method->{"DefaultBoundaryStyle" -> Directive[
              GrayLevel[0.3]], 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "RotationControl" -> "Globe"},
          PlotRange->{Full, Full, All},
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}},
          Ticks->{Automatic, Automatic, Automatic}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.903798936740499*^9, 3.903798952486642*^9}, {
   3.903799010603795*^9, 3.903799057119176*^9}, 3.906186931165696*^9, 
   3.9061905179286537`*^9, {3.906206450301235*^9, 3.906206460447736*^9}, {
   3.906206600446797*^9, 3.906206619377111*^9}, 3.90620817231888*^9, {
   3.906299173624639*^9, 3.906299180578866*^9}, {3.906308287038014*^9, 
   3.906308295845356*^9}, 3.906314001953555*^9, 3.907215784991907*^9, 
   3.907219792605057*^9, 3.907220606534666*^9, {3.9072206936398287`*^9, 
   3.907220703923234*^9}, 3.907221372056891*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"8239e021-501a-4405-b4ec-a66eacd9946b"]
}, Open  ]],

Cell["Uncomment lines to view figures of grids and matrices.", "Text",
 CellChangeTimes->{{3.903765580867065*^9, 3.90376559986344*^9}, {
  3.903768416706356*^9, 
  3.903768418783839*^9}},ExpressionUUID->"838ed675-18b6-471f-87c6-\
8e111749f395"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Initial", " ", "boundary", " ", "grid", " ", "with", " ", "empty", " ", 
    "interior"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"3", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "k"}], " ", "-", " ", "1"}], ")"}]}], ",", " ", 
       RowBox[{"ArrayPlot", "[", 
        RowBox[{"initialGridBorder", "[", 
         RowBox[{"3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "k"}], " ", "-", " ", "1"}], ")"}]}], "]"}], "]"}]}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "30", ",", "1"}], "}"}]}], "]"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"(*", " ", 
     RowBox[{"MaxHeightGrid", " ", "matrix"}], " ", "*)"}], "\n", 
    RowBox[{
     RowBox[{"MatrixForm", "[", 
      RowBox[{
       RowBox[{"generateMaxHeightGrid", "[", "7", "]"}], ",", " ", "7"}], 
      "]"}], "\n", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
      "MaxHeightGrid", " ", "array", " ", "height", " ", "function", " ", 
       RowBox[{"(", 
        RowBox[{"black", " ", "and", " ", "white", " ", "gradient"}], ")"}]}],
       " ", "*)"}], "\n", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"ArrayPlot", "[", 
        RowBox[{"generateMaxHeightGrid", "[", 
         RowBox[{"3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "k"}], " ", "-", " ", "1"}], ")"}]}], "]"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "10", ",", "1"}], "}"}]}], "]"}], "\n", 
     "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"MaxHeightGrid", " ", "array", " ", "3"}], "-", 
       RowBox[{"colouring", " ", 
        RowBox[{"(", 
         RowBox[{"candy", " ", "colours"}], ")"}]}]}], " ", "*)"}], "\n", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"ArrayPlot", "[", 
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"generateMaxHeightGrid", "[", 
            RowBox[{"3", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "k"}], " ", "-", " ", "1"}], ")"}]}], "]"}], ",", 
           " ", "3"}], "]"}], ",", "  ", 
         RowBox[{"ColorFunction", "->", "fancyColourRules"}]}], "]"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "10", ",", "1"}], "}"}]}], "]"}], "\n", 
     "\n", 
     RowBox[{"(*", " ", 
      RowBox[{"MinHeightGrid", " ", "matrix"}], " ", "*)"}], "\n", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{
       RowBox[{"generateMinHeightGrid", "[", "7", "]"}], ",", " ", "7"}], 
      "]"}], "\n", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
      "MinHeightGrid", " ", "array", " ", "height", " ", "function", " ", 
       RowBox[{"(", 
        RowBox[{"black", " ", "and", " ", "white", " ", "gradient"}], ")"}]}],
       " ", "*)"}], "\n", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"ArrayPlot", "[", 
        RowBox[{"generateMinHeightGrid", "[", 
         RowBox[{"3", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "k"}], " ", "-", " ", "1"}], ")"}]}], "]"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "10", ",", "1"}], "}"}]}], "]"}], "\n", 
     "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"MinHeightGrid", " ", "array", " ", "3"}], "-", 
       RowBox[{"colouring", " ", 
        RowBox[{"(", 
         RowBox[{"candy", " ", "colours"}], ")"}]}]}], " ", "*)"}], "\n", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"ArrayPlot", "[", 
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"generateMinHeightGrid", "[", 
            RowBox[{"3", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "k"}], " ", "-", " ", "1"}], ")"}]}], "]"}], ",", 
           " ", "3"}], "]"}], ",", "  ", 
         RowBox[{"ColorFunction", "->", "fancyColourRules"}]}], "]"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "10", ",", "1"}], "}"}]}], "]"}]}], "\n", 
    "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"displayHeightGrids", "[", 
        RowBox[{
         RowBox[{"generateMinHeightGrid", "[", 
          RowBox[{"3", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", "k"}], " ", "-", " ", "1"}], ")"}]}], "]"}], 
         ",", " ", 
         RowBox[{"generateMaxHeightGrid", "[", 
          RowBox[{"3", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", "k"}], " ", "-", " ", "1"}], ")"}]}], "]"}]}], 
        "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"k", ",", " ", "1", ",", " ", "20", ",", " ", "1"}], "}"}]}], 
      "]"}], "\n", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"displayColouringGrids", "[", 
        RowBox[{
         RowBox[{"generateMinHeightGrid", "[", 
          RowBox[{"3", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", "k"}], " ", "-", " ", "1"}], ")"}]}], "]"}], 
         ",", " ", 
         RowBox[{"generateMaxHeightGrid", "[", 
          RowBox[{"3", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", "k"}], " ", "-", " ", "1"}], ")"}]}], "]"}], 
         ",", " ", "blueColourRules"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"k", ",", " ", "1", ",", " ", "20", ",", " ", "1"}], "}"}]}], 
      "]"}], "\n", 
     RowBox[{"Print", "[", "\"\<break\>\"", "]"}]}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"displayHeightGrids", "[", 
      RowBox[{
       RowBox[{"generateMinHeightGrid", "[", "273", "]"}], ",", " ", 
       RowBox[{"generateMaxHeightGrid", "[", "273", "]"}]}], "]"}], "\n", 
     RowBox[{"ArrayPlot", "[", 
      RowBox[{"initialGridBorder", "[", "273", "]"}], "]"}]}], 
    "*)"}]}]}]], "Code",
 CellChangeTimes->{{3.9037650943267393`*^9, 3.90376509476593*^9}, {
   3.90376518295197*^9, 3.90376531769063*^9}, {3.903765371399041*^9, 
   3.903765543205573*^9}, {3.903772909449581*^9, 3.903772936503148*^9}, {
   3.903794920162465*^9, 3.903794925874155*^9}, 3.903795039517763*^9, {
   3.903795107878927*^9, 3.903795127150072*^9}, 3.9037972430692577`*^9, {
   3.903798508198407*^9, 3.903798591742508*^9}, {3.903798643446265*^9, 
   3.9037987452423763`*^9}, {3.903798966587002*^9, 3.90379897697252*^9}, {
   3.903799070543694*^9, 3.903799115313739*^9}, {3.903799149500753*^9, 
   3.9037991656927843`*^9}, {3.9037992189510593`*^9, 3.90379923736915*^9}, {
   3.9037992902419252`*^9, 3.903799309482121*^9}, {3.9037993484211082`*^9, 
   3.9037993904426394`*^9}, {3.903799440074171*^9, 3.903799440229965*^9}, {
   3.9037994987976027`*^9, 3.903799529950083*^9}, {3.9037995993919563`*^9, 
   3.903799600594777*^9}, {3.903799788109899*^9, 3.90379979230243*^9}, {
   3.9037998428664913`*^9, 3.903799856147246*^9}, {3.906187808731694*^9, 
   3.9061878154711733`*^9}, {3.906189578151297*^9, 3.906189613919229*^9}, {
   3.906308189298504*^9, 3.906308199472516*^9}, {3.906308255718733*^9, 
   3.9063082569390993`*^9}, {3.9063140141028347`*^9, 3.906314025192099*^9}, {
   3.906314120299027*^9, 3.906314125146563*^9}, {3.906314171190589*^9, 
   3.906314175164701*^9}, {3.9063145139062443`*^9, 3.9063145240788927`*^9}, {
   3.906314584772127*^9, 3.906314660608754*^9}, {3.9063148567799892`*^9, 
   3.9063148806352262`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"6c781b18-8496-4136-8407-0bc2cea9ec39"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = 4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`k$$], 1, 30, 1}}, Typeset`size$$ = {
    245.71484375000003`, {96., 101.68496000000007`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`k$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {3 (2 $CellContext`k$$ - 1), 
        ArrayPlot[
         $CellContext`initialGridBorder[3 (2 $CellContext`k$$ - 1)]]}, 
      "Specifications" :> {{$CellContext`k$$, 1, 30, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{296., {145.359375, 151.640625}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.906190519445208*^9, 3.906208175483161*^9, 3.906299449475665*^9, {
   3.906308199929038*^9, 3.906308203976141*^9}, {3.90630825757125*^9, 
   3.906308270510262*^9}, 3.906314005502269*^9, 3.9063140594151697`*^9, 
   3.906314176532784*^9, 3.9063145287772284`*^9, 3.9063145856460867`*^9, {
   3.9063146431844797`*^9, 3.906314661062237*^9}, 3.906314872606661*^9, 
   3.906314906117033*^9, 3.907215785536344*^9, 3.9072206119428673`*^9, 
   3.907220683251437*^9, 3.907221374919779*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"e825614a-ffca-4189-bdf2-c437b95f6cbd"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"selectRandomSite", "[", "]"}], " ", ":=", " ", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"2", ",", " ", 
        RowBox[{"dim", " ", "-", " ", "1"}]}], "]"}], ",", " ", "2"}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"coinFlip", "[", "]"}], " ", ":=", " ", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"{", 
    RowBox[{"checkPopUp", ",", " ", "checkPopDown"}], "}"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"changeVal", "[", 
    RowBox[{"grid_", ",", " ", "pos_", ",", " ", "newVal_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{"grid", ",", " ", 
     RowBox[{"pos", " ", "->", " ", "newVal"}]}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Check", " ", "if", " ", "you", " ", "can", " ", "pop", " ", "up", " ", 
     "a", " ", "cell", " ", "at", " ", "pos", " ", "in", " ", 
     RowBox[{"grid", ".", " ", "Works"}], " ", "on", " ", "both", " ", 
     "height", " ", "values", " ", "and", " ", "3"}], "-", "colourings"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkPopUp", "[", 
    RowBox[{"grid_", ",", " ", "pos_"}], "]"}], " ", ":=", " ", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], " ", "~", " ", 
      "Join", " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}]}], "]"}], "]"}]}], 
     ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"grid", "[", 
           RowBox[{"[", 
            RowBox[{"Sequence", " ", "@@", " ", "pos"}], "]"}], "]"}], " ", 
          "-", " ", "#"}], ",", " ", "3"}], "]"}], " ", "==", " ", "2"}], " ",
       "&"}]}], "]"}]}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Check", " ", "if", " ", "you", " ", "can", " ", "pop", " ", "down", " ", 
     "a", " ", "cell", " ", "at", " ", "pos", " ", "in", " ", 
     RowBox[{"grid", ".", " ", "Works"}], " ", "on", " ", "both", " ", 
     "height", " ", "values", " ", "and", " ", "3"}], "-", "colourings"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkPopDown", "[", 
    RowBox[{"grid_", ",", " ", "pos_"}], "]"}], " ", ":=", " ", 
   RowBox[{"AllTrue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], ",", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], " ", "~", " ", 
      "Join", " ", "~", " ", 
      RowBox[{"grid", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}]}], "]"}], "]"}]}], 
     ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"grid", "[", 
           RowBox[{"[", 
            RowBox[{"Sequence", " ", "@@", " ", "pos"}], "]"}], "]"}], " ", 
          "-", " ", "#"}], ",", " ", "3"}], "]"}], " ", "==", " ", "1"}], " ",
       "&"}]}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"If", " ", "heads"}], ",", " ", 
    RowBox[{
     RowBox[{
     "check", " ", "if", " ", "site", " ", "can", " ", "be", " ", "popped", 
      " ", "up"}], ";", " ", "otherwise"}], ",", " ", 
    RowBox[{
    "check", " ", "if", " ", "site", " ", "can", " ", "be", " ", "popped", 
     " ", 
     RowBox[{"down", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"coinFunctionAssociation", " ", "=", " ", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"checkPopUp", " ", "->", " ", "True"}], ",", " ", 
     RowBox[{"checkPopDown", " ", "->", " ", "False"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"coinSignAssociation", " ", "=", " ", 
    RowBox[{"Association", "[", 
     RowBox[{
      RowBox[{"checkPopUp", " ", "->", " ", "Plus"}], ",", " ", 
      RowBox[{"checkPopDown", " ", "->", " ", "Subtract"}]}], "]"}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"coinTosses", ":", " ", 
     RowBox[{
     "list", " ", "of", " ", "random", " ", "coin", " ", "flips", " ", "in", 
      " ", "the", " ", "form", " ", "of", " ", "a", " ", "list", " ", 
      "checkPopUp"}]}], ",", " ", 
    RowBox[{"checkPopDown", " ", "functions"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"sites", ":", " ", 
    RowBox[{"list", " ", "of", " ", "random", " ", "sites"}]}], " ", "*)"}], 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "generates", " ", "numSteps", " ", "new", " ", "coin", " ", "tosses", " ", 
    "and", " ", "sites", " ", "and", " ", "adds", " ", "them", " ", "to", " ",
     "the", " ", "the", " ", "beginning", " ", "of", " ", "existing", " ", 
    "lists"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extendRandomLists", "[", "numSteps_", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\n", "\t", 
    RowBox[{
     RowBox[{"coinTosses", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"coinFlip", "[", "]"}], ",", " ", "numSteps"}], "]"}], ",", 
        " ", "coinTosses"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"sites", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"selectRandomSite", "[", "]"}], ",", " ", "numSteps"}], 
         "]"}], ",", " ", "sites"}], "]"}]}], ";"}], "\n", ")"}]}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Execute", " ", "one", " ", "step", " ", "of", " ", "the", " ", "Markov", 
    " ", "chain", " ", "on", " ", "grid"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"OPTIMISATION", ":", " ", 
    RowBox[{
    "maybe", " ", "put", " ", "this", " ", "in", " ", "the", " ", "function", 
     " ", "that", " ", "performs", " ", "multiple", " ", "steps", " ", 
     "instead", " ", "of", " ", "calling", " ", "it", " ", "over", " ", "and",
      " ", 
     RowBox[{"over", "?"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneStep", "[", 
    RowBox[{"coin_", ",", " ", "site_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"initialGrids", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}]}], ",", " ", 
       RowBox[{"outGrids", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}]}]}], "}"}], ",", 
     "\n", "   ", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"coin", "[", 
            RowBox[{
             RowBox[{"initialGrids", "[", 
              RowBox[{"[", "#", "]"}], "]"}], ",", " ", "site"}], "]"}], ",", 
           " ", "\n", "   ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"outGrids", "[", 
               RowBox[{"[", "#", "]"}], "]"}], " ", "=", " ", 
              RowBox[{"changeVal", "[", 
               RowBox[{
                RowBox[{"initialGrids", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], ",", " ", "site", ",", " ", 
                RowBox[{
                 RowBox[{"coinSignAssociation", "[", "coin", "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"initialGrids", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"Sequence", " ", "@@", " ", "site"}], "]"}], 
                   "]"}], ",", " ", "2"}], "]"}]}], "]"}]}], ";"}], ")"}]}], 
          "]"}], " ", "&"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "2"}], "}"}]}], "]"}], ";", "\n", "   ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}], " ", "=", " ", 
       "outGrids"}], ";"}]}], "\n", "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Executes", " ", "the", " ", "algorithm", " ", "for", " ", "numSteps"}], 
    " ", "=", " ", 
    RowBox[{"len", 
     RowBox[{"(", "coinTosses", ")"}], " ", "steps"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Additionally", ":", " ", 
     RowBox[{"logs", " ", "files", " ", "every", " ", 
      RowBox[{"numSteps", "/", "100"}], " ", "or", " ", "10", " ", "million", 
      " ", "steps"}]}], ",", " ", 
    RowBox[{"whichever", " ", "is", " ", "lower"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Returns", " ", "1", " ", "if", " ", "the", " ", "grids", " ", 
     "converged"}], ",", " ", 
    RowBox[{"0", " ", "if", " ", "not"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nStepsMarkovChain", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"numSteps", " ", "=", " ", 
        RowBox[{"Length", "[", "coinTosses", "]"}]}], ",", "\n", 
       "\t\t\t\t\t\t\t", 
       RowBox[{"logInterval", " ", "=", " ", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"10", "^", "7"}], ",", " ", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Length", "[", "coinTosses", "]"}], " ", "/", " ", 
              "100"}], "]"}], ",", " ", "20000"}], "]"}]}], "]"}]}], ",", 
       "\n", "\t\t\t\t\t\t\t", 
       RowBox[{"finalOutDir", " ", "=", " ", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"logDir", ",", " ", "\"\<coupling_\>\"", ",", " ", 
          RowBox[{"ToString", "[", "dim", "]"}], ",", " ", "\"\</\>\""}], 
         "]"}]}], ",", "\n", "\t\t\t\t\t\t\t", 
       RowBox[{"outDir", " ", "=", " ", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"logDir", ",", " ", "\"\<coupling_\>\"", ",", " ", 
          RowBox[{"ToString", "[", "dim", "]"}], ",", " ", "\"\<log_\>\""}], 
         "]"}]}], ",", "\n", "\t\t\t\t\t\t\t", "i", ",", " ", "tempMinGrid", 
       ",", " ", "tempMaxGrid", ",", " ", "tempHeightDifference", ",", " ", 
       "tempStepNumber"}], "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Running for \>\"", ",", " ", "numSteps", ",", " ", 
        "\"\< steps...\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Logging every \>\"", ",", " ", "logInterval", ",", " ", 
        "\"\< steps\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"Catch", "[", 
       RowBox[{
        RowBox[{"Monitor", "[", "\n", "    ", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", " ", "=", " ", "0"}], ",", " ", 
            RowBox[{"i", " ", "<", " ", "numSteps"}], ",", " ", 
            RowBox[{"i", "++"}], ",", " ", 
            RowBox[{"(", "\n", "      ", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"i", ",", " ", "logInterval"}], "]"}], " ", "==", 
                 " ", "0"}], ",", " ", "\n", "       ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Export", "[", 
                   RowBox[{
                    RowBox[{"StringJoin", "[", 
                    RowBox[{"outDir", ",", " ", 
                    RowBox[{"ToString", "[", "i", "]"}], ",", " ", 
                    "\"\<.mx\>\""}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}]}], "]"}], 
                  ";", "\n", "        ", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"tempMinGrid", ",", " ", "tempMaxGrid"}], "}"}], 
                   " ", "=", " ", 
                   RowBox[{"{", 
                    RowBox[{"minGrid", ",", " ", "maxGrid"}], "}"}]}], ";", 
                  "\n", "        ", 
                  RowBox[{"tempHeightDifference", " ", "=", " ", 
                   RowBox[{"checkHeightDifference", "[", 
                    RowBox[{"tempMinGrid", ",", " ", "tempMaxGrid"}], "]"}]}],
                   ";", "\n", "        ", 
                  RowBox[{"tempStepNumber", " ", "=", " ", "i"}], ";"}], "\n",
                  "        ", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "WHAT", " ", "IS", " ", "THIS", " ", "LINE", " ", "DOING", 
                   " ", 
                   RowBox[{"HERE", "?"}]}], " ", "*)"}], "\n", "        ", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"displayGrids", "[", 
                    RowBox[{
                    "tempMaxGrid", ",", " ", "tempMinGrid", ",", " ", 
                    "blueColourRules"}], "]"}], ";"}], "*)"}], "\n", 
                 "        ", ")"}]}], "\n", "      ", "]"}], ";", "\n", 
              "      ", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{"OPTIMISATION", ":", " ", 
                 RowBox[{
                  RowBox[{"don", "'"}], "t", " ", "need", " ", "to", " ", 
                  "check", " ", "height", " ", "difference", " ", "each", " ", 
                  RowBox[{"time", ".", " ", "If"}], " ", "difference", " ", 
                  "is", " ", "1000"}]}], ",", " ", 
                RowBox[{
                "only", " ", "need", " ", "to", " ", "check", " ", "again", 
                 " ", "after", " ", "500", " ", "steps"}]}], "*)"}], "\n", 
              "      ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"checkHeightDifference", "[", 
                  RowBox[{"maxGrid", ",", " ", "minGrid"}], "]"}], " ", "==", 
                 " ", "0"}], ",", " ", 
                RowBox[{"(", "\n", "         ", 
                 RowBox[{
                  RowBox[{"tempHeightDifference", " ", "=", " ", "0"}], ";", 
                  "\n", "         ", 
                  RowBox[{"Export", "[", 
                   RowBox[{
                    RowBox[{"StringJoin", "[", 
                    RowBox[{
                    "outDir", ",", " ", "\"\</../final_\>\"", ",", " ", 
                    RowBox[{"ToString", "[", "dim", "]"}], ",", " ", 
                    "\"\<.mx\>\""}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}]}], "]"}], 
                  ";", "\n", "         ", 
                  RowBox[{"Throw", "[", "1", "]"}]}], ")"}]}], "]"}], ";", 
              "\n", "      ", "\n", "      ", 
              RowBox[{"oneStep", "[", 
               RowBox[{
                RowBox[{"coinTosses", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
                RowBox[{"sites", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}], ")"}]}], 
           "\n", "    ", "]"}], ",", " ", "\n", "    ", 
          RowBox[{"Grid", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<Current step: \>\"", ",", " ", 
                RowBox[{"ToString", "[", "tempStepNumber", "]"}]}], "]"}], 
              "}"}], ",", " ", "\n", "          ", 
             RowBox[{"{", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<Height difference: \>\"", ",", " ", 
                RowBox[{"ToString", "[", "tempHeightDifference", "]"}]}], 
               "]"}], "}"}], ",", " ", "\n", "          ", 
             RowBox[{"{", 
              RowBox[{"displayGrids", "[", 
               RowBox[{
               "tempMaxGrid", ",", " ", "tempMinGrid", ",", " ", 
                "blueColourRules"}], "]"}], "}"}]}], "}"}], "\n", "    ", 
           "]"}]}], "\n", "  ", "]"}], ";"}], "]"}], ";", "\n", "  ", "\n", 
      "  ", "\n", "  ", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<-- The height difference after \>\"", ",", " ", "i", ",", " ", 
        "\"\< steps was \>\"", ",", " ", "tempHeightDifference", ",", " ", 
        "\"\<.\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"tempHeightDifference", " ", "==", " ", "0"}], ",", " ", 
        RowBox[{"Return", "[", "1", "]"}]}], "]"}], ";", "\n", "  ", 
      RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\n", "]"}]}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"startChain", "[", 
   RowBox[{"dimension_", ",", " ", "t_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"coins", ",", " ", 
      RowBox[{"dirName", " ", "=", " ", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"logDir", ",", " ", "\"\<coupling_\>\"", ",", " ", 
         RowBox[{"ToString", "[", "dimension", "]"}], ",", " ", "\"\</\>\""}],
         "]"}]}], ",", " ", 
      RowBox[{"steps", " ", "=", " ", "t"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"dim", " ", "=", " ", "dimension"}], ";", "\n", "\t", 
     RowBox[{"sites", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "\t", 
     RowBox[{"coinTosses", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "\t", 
     RowBox[{"converged", " ", "=", " ", "0"}], ";", "\t", "\n", "\t", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"converged", " ", "==", " ", "0"}], ",", " ", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"Reset", " ", "stuff"}], " ", "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}], " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"generateMaxHeightGrid", "[", "dim", "]"}], ",", " ", 
            RowBox[{"generateMinHeightGrid", "[", "dim", "]"}]}], "}"}]}], 
         ";", "\n", "\t\t", 
         RowBox[{"Quiet", " ", "@", " ", 
          RowBox[{"DeleteDirectory", "[", 
           RowBox[{"dirName", ",", " ", 
            RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}]}], ";", 
         "\n", "\t    ", 
         RowBox[{"CreateDirectory", "[", "dirName", "]"}], ";", "\n", 
         "\t    ", "\n", "\t    ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "Generate", " ", "new", " ", "coin", " ", "tosses", " ", "and", 
            " ", "sites"}], ",", " ", 
           RowBox[{"and", " ", "log", " ", "them"}]}], "*)"}], "\t\t", "\n", 
         "\t\t", 
         RowBox[{"extendRandomLists", "[", "steps", "]"}], ";", "\n", "\t\t", 
         
         RowBox[{"steps", " ", "=", " ", 
          RowBox[{"Length", "[", "coinTosses", "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"dirName", ",", " ", "\"\<sites.csv\>\""}], "]"}], ",", 
           " ", "sites", ",", " ", "\"\<CSV\>\""}], "]"}], ";", "\n", "\t\t", 
         
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"dirName", ",", " ", "\"\<coin_tosses.csv\>\""}], "]"}], 
           ",", " ", "coinTosses", ",", " ", "\"\<CSV\>\""}], "]"}], ";", 
         "\n", "\t\t", "\n", "\t    ", 
         RowBox[{"converged", " ", "=", " ", 
          RowBox[{"nStepsMarkovChain", "[", "]"}]}], ";", "\n", "\t    ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"converged", " ", "==", " ", "1"}], ",", " ", "Break"}], 
          "]"}]}], "\n", "\t", ")"}]}], "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"DeleteDirectory", "[", 
      RowBox[{"dirName", ",", " ", 
       RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}], ";", "\n", 
     "\t", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<The chain took \>\"", ",", " ", "steps", ",", " ", 
       "\"\< steps to converge. Here are the results:\>\""}], "]"}], ";", 
     "\n", "\t", 
     RowBox[{"displayGrids", "[", 
      RowBox[{"minGrid", ",", " ", "maxGrid", ",", " ", "blueColourRules"}], 
      "]"}]}]}], "\n", "]"}]}]}], "Code",
 CellChangeTimes->{{3.9037667684416113`*^9, 3.9037670901824827`*^9}, {
   3.903767140965131*^9, 3.9037671668013287`*^9}, {3.9037672077352962`*^9, 
   3.903767211923624*^9}, {3.903767278621717*^9, 3.903767341613262*^9}, {
   3.903767526181682*^9, 3.903767547369351*^9}, {3.9037682379367647`*^9, 
   3.903768324812935*^9}, 3.903769645525242*^9, {3.9037725092586527`*^9, 
   3.903772509719742*^9}, {3.903772556626198*^9, 3.903772580043935*^9}, 
   3.903772650802457*^9, {3.903773136829752*^9, 3.903773137456259*^9}, {
   3.903773176808435*^9, 3.903773179100971*^9}, 3.9037733565948677`*^9, {
   3.90377348427279*^9, 3.903773484586975*^9}, {3.9037740844912977`*^9, 
   3.903774244997634*^9}, {3.903774281644429*^9, 3.9037742817355843`*^9}, {
   3.903797941450836*^9, 3.903797947330106*^9}, {3.90618956440047*^9, 
   3.906189569324757*^9}, {3.906189667434514*^9, 3.906189681272373*^9}, 
   3.9061897240183897`*^9, {3.906190118415061*^9, 3.906190125042882*^9}, {
   3.906190571458465*^9, 3.906190597659699*^9}, {3.906190671658216*^9, 
   3.906190672910125*^9}, {3.906191308840784*^9, 3.906191378681234*^9}, {
   3.9061920426437817`*^9, 3.906192054141694*^9}, {3.906192136724126*^9, 
   3.9061921578752613`*^9}, {3.906299437058775*^9, 3.906299438252564*^9}, {
   3.906311381337179*^9, 3.906311460671969*^9}, {3.906317930947174*^9, 
   3.906317941125695*^9}, {3.906317973024664*^9, 3.906317974459536*^9}, 
   3.906318203086138*^9, {3.906319442817689*^9, 3.9063194448961782`*^9}, {
   3.9063196209470377`*^9, 3.906319624896571*^9}, {3.907205715830508*^9, 
   3.9072057162326927`*^9}, {3.9072057667396517`*^9, 3.907205841154921*^9}, {
   3.907205997512734*^9, 3.9072060554519243`*^9}, {3.9072063634023523`*^9, 
   3.907206393825747*^9}, {3.90721591205389*^9, 3.9072159189389343`*^9}, {
   3.907215965679907*^9, 3.907215966004209*^9}, {3.9072204380001698`*^9, 
   3.907220473315723*^9}, 3.90722407160929*^9, {3.907224437230711*^9, 
   3.907224451539872*^9}, {3.907224573530612*^9, 3.907224579507307*^9}, {
   3.907224701219678*^9, 3.907224724665305*^9}, {3.90722494170328*^9, 
   3.9072249747133017`*^9}, {3.907225739381671*^9, 3.9072259351403837`*^9}, {
   3.90722610383753*^9, 3.907226117157135*^9}, {3.907226152139142*^9, 
   3.9072261796919823`*^9}, {3.907257391766201*^9, 3.907257417670137*^9}, {
   3.907257474110709*^9, 3.907257479946103*^9}, {3.9072575373235083`*^9, 
   3.907257583582417*^9}, {3.907257630643292*^9, 3.907257643185264*^9}, {
   3.907257762712192*^9, 3.907257864131488*^9}, {3.9072580458095007`*^9, 
   3.907258072513542*^9}, {3.9072584188940153`*^9, 3.907258437712471*^9}, {
   3.9072587185861197`*^9, 3.907258721134453*^9}, {3.9072588603752613`*^9, 
   3.907258938648402*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"26a7099b-d8c0-45e4-aea9-5dfb5beb1f6b"],

Cell["\<\
Global Variables:
- maxGrid, minGrid
- coinTosses
- sites
- dim\
\>", "Text",
 CellChangeTimes->{{3.906190303747559*^9, 
  3.906190329718379*^9}},ExpressionUUID->"9bee187d-e51f-4545-9b66-\
7d53566249a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"testing", " ", "oneStep"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"dim", " ", "=", " ", "9"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"maxGrid", " ", "=", " ", 
     RowBox[{"generateMaxHeightGrid", "[", "dim", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"minGrid", " ", "=", " ", 
     RowBox[{"generateMinHeightGrid", "[", "dim", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"maxGrid3", " ", "=", " ", 
     RowBox[{"to3Colouring", "[", "maxGrid", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"minGrid3", " ", "=", " ", 
     RowBox[{"to3Colouring", "[", "minGrid", "]"}]}], ";"}], "\n", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"MatrixForm", "[", "#", "]"}], " ", "&"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}]}], "]"}], "\n", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"MatrixForm", "[", "#", "]"}], " ", "&"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"maxGrid3", ",", " ", "minGrid3"}], "}"}]}], "]"}], "\n", 
   RowBox[{"oneStep", "[", 
    RowBox[{"checkPopDown", ",", " ", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}]}], "]"}], "\n", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"MatrixForm", "[", "#", "]"}], " ", "&"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}]}], "]"}], "\n", 
   RowBox[{"oneStep", "[", 
    RowBox[{"checkPopDown", ",", " ", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "]"}], "\n", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"MatrixForm", "[", "#", "]"}], " ", "&"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"maxGrid", ",", " ", "minGrid"}], "}"}]}], "]"}], "\n", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"MatrixForm", "[", "#", "]"}], " ", "&"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"to3Colouring", "[", 
         RowBox[{"generateMaxHeightGrid", "[", "dim", "]"}], "]"}], " ", "-", 
        " ", "maxGrid"}], ",", " ", 
       RowBox[{
        RowBox[{"to3Colouring", "[", 
         RowBox[{"generateMinHeightGrid", "[", "dim", "]"}], "]"}], " ", "-", 
        " ", "minGrid"}]}], "}"}]}], "]"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"conclusion", ":", " ", 
     RowBox[{"oneStep", " ", 
      RowBox[{"works", "!"}]}]}], "*)"}]}]}]], "Code",
 CellChangeTimes->{{3.903773032830875*^9, 3.903773103418932*^9}, {
  3.903797815804288*^9, 3.903797816132864*^9}, {3.903797858468678*^9, 
  3.903797860299242*^9}, {3.903797957382017*^9, 3.903797969041992*^9}, {
  3.906190400609909*^9, 3.90619041629311*^9}, {3.906190679111279*^9, 
  3.906190707419547*^9}, {3.906192177176334*^9, 3.90619221319493*^9}, {
  3.9061922658112087`*^9, 3.906192282740011*^9}, {3.90722048166759*^9, 
  3.907220488199712*^9}, {3.907220537374104*^9, 3.90722054005098*^9}, {
  3.9072213911314096`*^9, 3.907221466780225*^9}, {3.9072214981062202`*^9, 
  3.907221522967667*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"1853123a-5fe1-4d29-8057-a868494262bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"testing", " ", "extendRandomLists"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"arr1", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"arr2", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"sites", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"coinTosses", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"+", "\n", 
     RowBox[{"extendRandomLists", "[", "10", "]"}]}], ";"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<first:\>\"", ",", " ", "sites", ",", " ", "coinTosses"}], 
    "]"}], "\n", 
   RowBox[{
    RowBox[{"extendRandomLists", "[", "10", "]"}], ";"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<second:\>\"", ",", " ", "sites", ",", " ", "coinTosses"}], 
    "]"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"conclusion", ":", " ", 
     RowBox[{"extendedRandomLists", " ", 
      RowBox[{"works", "!"}]}]}], " ", "*)"}]}]}]], "Code",
 CellChangeTimes->{{3.903773261573515*^9, 3.903773362908002*^9}, {
   3.90377340957085*^9, 3.90377342235384*^9}, {3.9037734602123413`*^9, 
   3.903773462700212*^9}, {3.903774254253016*^9, 3.9037742695394697`*^9}, 
   3.907230336398053*^9},ExpressionUUID->"cbcb5368-faac-41c4-95b2-\
57026a030aec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"displayGrids", "[", 
  RowBox[{
   RowBox[{"Sequence", " ", "@@", " ", 
    RowBox[{"Import", "[", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"logDir", ",", " ", "\"\<coupling_11/log_73966.mx\>\""}], "]"}],
      "]"}]}], ",", " ", "blueColourRules"}], "]"}]], "Code",
 CellChangeTimes->{{3.9062992060925503`*^9, 3.906299304841091*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"1c8eeaa0-0eff-4a55-8570-87f764c53467"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDghmIQu+rhudaJcW/tHbzDN/RWvLVX8Vh646LFG/vpq7Yc
Nd33yv5csGyR8Z1X9lvYoxoVX7+031I8i/WW7Av76JjHxjftX9g7H+fTKpz7
3D514dzLOgFP7Kckb9rx/8QT+90bFxhoTH5iL3F+wcL6pgf257MabdWCHtqb
zDEyv9/x0D58U7KygP5te759BjO1JO7aH8uQDfUVuGdfd6yVWTHyqn39srjt
HD3X7VVmXrW+w3fTXqiN0Xvdo4v2T4Tc5TrWXLav9vhx777CVXuf7l8q5TfO
2E/+F8fFP+u8/eXvUk2PjS7a86x5/GPhpSP2G55OfZ1rfMzeKq7xhefM4/az
ZoLATgwal39HWvjgcv9A+XegwgeX+6nlX1qrp1b4DDb3D1T6GSj3DDb/0jp8
qGU+rdMbrvwyUOE5UOUPrvKTWuFDrfiiln9xlf+46tOBCh9a+xdXewBX+2qo
hA+p/sXVPgQABotzig==
           "], {{0, 0}, {11, 11}}, {0, 1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic}], 
         GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDghmIQu+rhudaJcW/tHbzDN/RWvLVX8Vh646LFG/vpq7Yc
Nd33yv5csGyR8Z1X9lvYoxoVX7+031I8i/WW7Av76JjHxjftX9g7H+fTKpz7
3D514dzLOgFP7Kckb9rx/8QT+90bFxhoTH5iL3F+wcL6pgf257MabdWCHtqb
zDEyv9/x0D58U7KygP5te759BjO1JO7aH8uQDfUVuGdfd6yVWTHyqn39srjt
HD3X7VVmXrW+w3fTXqiN0Xvdo4v2T4Tc5TrWXLav9vhx777CVXuf7l8q5TfO
2E/+F8fFP+u8/eXvUk2PjS7a86x5/GPhpSP2G55OfZ1rfMzeKq7xhefM4/az
ZoLATgwal39HWvjgcv9A+XegwgeX+6nlX1qrp1b4DDb3D1T6GSj3DDb/0jp8
qGU+rdMbrvwyUOE5UOUPrvKTWuFDrfiiln9xlf+46tOBCh9a+xdXewBX+2qo
hA+p/sXVPgQABotzig==
           "], {{0, 0}, {11, 11}}, {0, 1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDghmIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtkrvA/V
Fq47as8ABSJbTj6c7HfZfme3gevOLS/sb7gvX1cz7a39yYjcf/Ff39sPdXNw
iQ91f5FqDi71A+XOoRI+pNpLa/WDLV8MVHoYbPlisKmnVjofbOFP6/RGqr2D
zb/UUk8td9I6/dPav4MtfAYqfodK+qG1OQDRaEyc
           "], {{0, 0}, {11, 11}}, {
           0, 1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic}], 
         GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDghmIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtkrvA/V
Fq47as8ABSJbTj6c7HfZfme3gevOLS/sb7gvX1cz7a39yYjcf/Ff39sPdXNw
iQ91f5FqDi71A+XOoRI+pNpLa/WDLV8MVHoYbPlisKmnVjofbOFP6/RGqr2D
zb/UUk8td9I6/dPav4MtfAYqfodK+qG1OQDRaEyc
           "], {{0, 0}, {11, 11}}, {
           0, 1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
L0/WeZX23Er6bON7srf1e+qrZF7sZvL/BwDt3ec=
            "], {{
              {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], 
               Specularity[
                GrayLevel[1], 3], 
               StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
                   
                   "]], Polygon3DBox[CompressedData["
1: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
10Jqstqsp1mrhIZ+lPxn/Q1KPptNHNyEB5f/PieOaKIe5bdPiMOa0NDPku+s
Tz3sbK65qApvq4YtSD7r6/eswyuriWrjtyWunZ3+8sR8f/lCfn42+U8N2gX8
YwmPOobrf2PscvWTfE/OncHYacRI+4hzlzH2D6JjHZpzTgnNUXvWJa5sYo3i
WkWPemqJNYxrmZ3A55a4x9qpR95bjVfr1/Adm/B8ej/XBCczfol6WYcnGJ7v
u3oda2DreUViyeRL17aXpt65ph1RQqO9n55N7dZDtMz76y3UVP12zyq09nry
RevQXPH5+fx66KGpl9ar+qm+6Tn0HnoAvcDU1EvXzHrRseTtidWIC5pYo7j2
06Pr1fXwevk+VczzhU283y7gk+QP8uXq8Izy8Yz8/Q7gM0t4TufbNYte9LY6
7uf8Hwn+hbiX/Dl1q4ke7JN6ZG/qAb8FD6/CG/7cxPpvOXu2hIYtXodHG5D9
8mwVnkXv4p7AMnV4bt/3rBLPdUUT9WBYG32rGHuIvEMdNWAtuGehV1Of9AOu
yb5JPtgy69+1XFvwJtmP84hh+XwnOP/Zz71LeOivkj/01l1LeFK9qP12dRPr
QT2oXvT6JvjlQPClzncTexWuafRL47O/W+X91ie6lFgn26/ueXTL36sj7pm4
d3IQeHSJNYlrEz2xz+Ez2PuPV/FsxxHHllj3WR/2gL0wgfFTSqxZ5CM9uHsJ
7tm4XpuU9e419smo/O15xKpZH0NKcGyv9C9yr2sa+W4p57iEh/kt+XEn8Ajw
rNR/9URPq7cdUcVawnv6re+q479eL7Gfo+aoPc6h33pSHXP7Von9lC2y/t4s
MTfOket351gueKaOud+0CS+mB9ALdGjiXax5e2dCiW8th+t9JpZ4djlOrptU
QovUJL3VKk1ogZqg92rTRG/ao3rbaSXW1+5f3NSEv/W/fYb7StTIzn6vOmrn
pcTtki+dM3XLfSDnchhRkT/JYfcSHrVJPtirhCf/Q/KL+uM5edx9Ha/VM/mt
ptThpabkfMrJcrO95Xw8UkePvViCW+UouWrdJrhRDpFLOhK7V8GhculUru9X
BYfL5a/m/MuZcqe1JDeOq6Om1NSe6T/UWmtULnMOrF3nzLnTz+nH5mX/6On0
dvo39wt71OF/PvQbJJ+eXWLPYZXkw9NLrAnb5f3PS/6zHs8AL5B0Fgmv4p6h
e4e/J3+cDv6+xB6Uz+M3df3imuqFrHf5Sk1072VkFVrpGrJ98q36+Vv+/5gq
tNGatXbHVcGleiLXA/q9B1Mv3Ntxj+cH8Lol+tS9PvV+duqb+qUf+zj1Uv10
L+NdcCtwb/CwEj1hbwzMcb1ul9R3Pa9z2CPf77rUn/eTX1wL3wjeso6euzL1
x32kE0voibl7S9tWcc49qeVT/+Qh95DkZ/Vf/7pyfiO/jX7APZxOyZ9XlNhj
WrqOPTj1zD2zJepYj6lH7pH8sY41s/rrHtSyqWfq6f/nqIr1p3Onf59FPpM4
sIk18KvJf+3y/9UyNc29JffY3ki9kpfdM9QP6Xf13WuW4Dn3Nbyfe3SuF/Rz
nXw3zverw6Oqh/r3dVKv5DL3qLumHtxcgvP1ao9VoQX+3vWdeyIPl9ijlgvl
xBtL7KHJ//p99dVnmJl64rP9Dw4i99E=
                   "]], 
                  Polygon3DBox[CompressedData["
1:eJwtlmd0FkUYhffbSUKXIiUKooAkgFSpAqEpCBZUuiBRqgekCKG3hAiIIMWI
VImhVxEQEaQJGIoBIr2EJiVI0dAOooD43PPuj+fMvXdm99tvZ+adLdG5b4s+
vud5UyEcpmG+hKOwK+R5c53nzUfPg3rodLIFtI/w4bAH3Ya2LZRFL6A/DzwB
R/Ae5KTvF9oWtC2hOHo8/am0u2A3LCZfBPXRh+hbRHsA/z36DDoR/QnEKCdr
Ao1hPv4VyEC3hTawDP8fYyPgB3R12hrQCH2C/lbQEpbi15G/h97Lo4ZBCXxN
8p1kdaA2zMGXIY+GHOjuZB/QVoON6CpQGWbgfcjPuFO0I2hHwkPw9V/IqtC+
CGNhjDTZeq6dTvuC3gM6H+SHo/iX4SS6NQzi+VbrncNSfAG9J7J++P2wGp/B
+FHoeHgVnUl2HVYzbgXZU2Sj8Vtpt8HPgjyBbAu6ia6D9dCF7BaM4Noz+B0w
Dr+TcW+j34GZMANeIttDXzKtg0JkJ2iH0A6F3VpD9OeCGO7XC79dc4rfzrg3
0G9qvuB9snTGREApzZ2ekawW1ITZ+K/J58BxSCNLIUtGz4U66H1k82gbwjF0
CxjA/VbRfwi24mtALNkkfIhxeWjzkjUg66v1D8n47FoLZD3xG3yb/1WML42O
gk3Qi2wtWSV0ZdgIPfTeNa/o8vCbb3N9jmwc+lN4rDUFl7h/MWiAPg9T0KPh
PONHMr4ADEZfILsIG/EREEt2AL8fOuJ/4tqPyNagK6ArQgp8A3XJ9gd7Ziu+
P3o9uia6FhyELWTR2h/Be3mg9as5g25ky/BZyrUvoRDZWXwGDENPgE7k/3Df
NLJV6JPoYejhcARSyTKd1RnVm72wjOwYWX90HLSGVqobMIG+4fS9hW4ORZ2t
wyG0qfipwRzV5rdj8a9rDdJm4q/AJnxBPQNjbuvdBe9ZdegzshB4MAxfEpLQ
OSEHxONLwBR0NoiAUfhzXD+ZyxLgHFmcs/2gfbFTc0s2lOw5mIQOh8WaI/rS
tc7xZ53VgLHBnF8ie0x2B33Xt9+4qHF6Dq69jS9Mfzz+b/w96I+vpRpKVh/q
BTW7OmxGV4OqMBMfDXM1Z1AQErVPVafQd7nXHdUSZ/tfdSAyqBUDaZ+H6UFd
V31PcFbLVdOfCeq53t+7+Ha63tn/0dotAynoSCgCY1TTfDtLbunMQC9UvfBt
3/7pbL1q3WZDd9ba4NmOerauskNXstP4DHiArwo/klWCFWT3ufaYbzXpGn2z
0LOhPboY7RXaP+AqhEEk2Q1n9UN1JCbYK3/RZsFNOOXb2XQHvUQ1GA5rjZJV
hHb8bhI+P/0DtM+1f2GDzj7I69ua0to6LA/9QvYf9F+0F5sxpikUcVaTB9Cu
xK+lf41n9TzEQdWVvAvkcrbfuzmrO6o/m6E32YfOauc2dFkoB5ec1QTVhtzO
6lZ3Z2foKXRTaAb38RcYczlYU1pbOiDbkhcmL42PUj1ydq4eD9l5rHP5ns45
WIcuDs8Ga13n6g50eagAl1Wj4NtgXUQGtUJ78Av0Q37ykWob/qLmjKwhNAKf
Zwkn74Dew5jd0AFfjXFVVcfgY/p6kLWGJ33bu9rDh/Dl8GUhp7M63Vlnmt6n
b7VANSFd7xZ6BnOletmLNgpmoh2EwcFg/S1XfdQ3BNl5fD6IQ18nKwl1ufdp
1UH0RM/O13+d1UXVx33wHdkU7Tt0gs4SZ99ASUG974hO49p9Os+dvYP2ZKn4
XbDc2TeHvj0qOfsmmEpbCqahc4fs/O2kOSSbEbIzb5OeR7UTXoOnnZ3Ng5x9
MyTqWbX/PKsH01S/g3lWLftKdQ4+D+ZUdX8y7WDuNQh+hZVkE53tj4Ha59zr
BvQJauzkkN1fv5Pm7PtqA1lJKAW/OzsHh6BvMiZL57Sz76YlwTrTehsf7Iue
ITsXdT6uCeZtVsi+rfSNNdpZfdF5laV7wkpn37EL0cWgKIzDN9dY/sNV7nUN
Njs7M3V2NtZeYVxv2v8Bl+poUg==
                   "]]}],
                Lighting->{{"Ambient", 
                   RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
                  "Directional", 
                   RGBColor[
                   0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                   ImageScaled[{0, 2, 2}]}, {"Directional", 
                   RGBColor[
                   0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                   ImageScaled[{2, 2, 2}]}, {"Directional", 
                   RGBColor[
                   0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                   ImageScaled[{2, 0, 2}]}}]}, {}, 
              {GrayLevel[1], EdgeForm[None], 
               StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtz7tKQ0EURuHJsfDyAJZCwDK9YiWmUUSJdqkCYiRV1OgTaKOd9xuCeKns
xdJnCNpYWKQQYmEh0SKd3zCnWKz9731mzp7iyvpyMwshjGEA95jAA6YMivzC
9UIII+oP/PrwVZ7mgtmT3pL8qF4NqR/nG+p57mBY/Y5DLGI3v6dnNsd7cgsn
qMlf+rN8IJexgze943iO93kLp/iTz7gdsx2q3OHtLJ2Nd/yob/K3NDCp/uRL
HsJVSHtec5fPeRAX+T7x/c9Z2mFTb4H78lH+rzXMqL+ztFPcreKbcXk0pLO3
XMId/gHvGDKH
                   "]], Polygon3DBox[CompressedData["
1:eJwtkblOgkEQgGc3JigPYGlCb0+ojR3BowM7QwyV4MELeNtJIocQjdd78AxG
EhI7ChBFCxLwSgx8k9niy3y7/+zOzvyxzfz6theRBZiBLydSI0bgGX5Y14mz
0IYOyWniEfziXTjAlyCH98lv4HOaiy+zt4jfwTv+QozCNfzxvcjePlyw7hE3
II4/wIe3M7d4TOyuc0jhJXjFk9xRwE/gH/921oO+vQUpfId4ChP8jTM3+Dwk
8Ka3u7XG0Nud2pv2qLXaoZdGmMVTmE0Vxs5q6GyuxGp/cuZRrIctbzUv8d3w
lj57x3gWKvgae3taCxzrFWe5ZyCsR87erj208FVnOfqtHGY0gEyYnc7wUGxG
xfDtXuwfaM4UuX5Fpw==
                   "]], 
                  Polygon3DBox[{{695, 22, 158, 489, 863}, {840, 157, 10, 357, 
                   863}, {695, 357, 221, 11, 548}, {662, 661, 737, 146, 
                   744}, {832, 467, 331, 111, 682}, {506, 156, 481, 217, 
                   218}, {333, 332, 509, 147, 468}, {703, 159, 745, 569, 
                   570}, {841, 134, 112, 467, 1012}, {832, 100, 133, 499, 
                   1012}}]}],
                Lighting->{{"Ambient", 
                   GrayLevel[0.8]}}]}, {}, {}}, {
              {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0bkuhFEAhuFjLJVeKTQ07sAFUEwztmk0VJqZSGxj15BYE/dgXwbjDoRE
SNyEirHvRsRzEsWb5ytOck7+v64nm8qUhRD6dKK4axMhVLOBjaqxm1nPFraq
ye7mOt+5wU192Fvc1qe9w3vu8pt7/HFJyd63b+w8f3nAWx7ySEW7wGPd2QNM
cZBtbNeQ3cFhdrJLI3aaORbck4lvi29Ur73KNOc4q6TdzzW+cYYrerVfNG0v
69me4jWX+MhJltz1YE/EM/YivzjOJy5wLJ6P5zRvj8bvYlfxSpW61IUqdK5y
nelUif//8wf5+0AM
                "]], 
               Line3DBox[{209, 150, 501, 151, 152, 502, 503, 153, 154, 504, 
                155, 488, 156, 506, 157, 840, 489, 158, 745, 159, 753, 160, 
                746, 161, 162, 747, 748, 163, 164, 749, 66, 614, 55, 603, 602,
                 44, 581, 33, 570, 569, 22, 548, 11, 221, 10, 218, 217, 9, 
                215, 8, 212, 211, 7, 209}], 
               Line3DBox[{616, 67, 628, 629, 78, 649, 89, 661, 662, 100, 682, 
                111, 331, 112, 332, 333, 113, 334, 114, 335, 336, 115, 337, 
                181, 513, 137, 149, 512, 136, 148, 511, 135, 500, 147, 509, 
                134, 841, 499, 133, 744, 146, 761, 132, 743, 145, 131, 742, 
                144, 130, 741, 56, 616}], 
               Line3DBox[{700, 17, 842, 514, 764, 182, 515, 843, 516, 183, 
                844, 517, 765, 53, 799, 394, 708, 41, 380, 789, 379, 29, 781, 
                365, 700}], 
               Line3DBox[{701, 19, 845, 518, 766, 184, 519, 846, 520, 43, 383,
                 790, 382, 31, 782, 368, 701}], 
               Line3DBox[{377, 27, 521, 767, 185, 847, 522, 768, 186, 523, 
                848, 524, 187, 525, 769, 75, 810, 421, 63, 406, 804, 405, 51, 
                796, 391, 707, 39, 787, 377}], 
               Line3DBox[{709, 47, 849, 526, 188, 527, 850, 528, 189, 851, 
                529, 770, 190, 852, 530, 95, 446, 722, 83, 814, 431, 716, 71, 
                416, 808, 415, 59, 400, 709}], 
               Line3DBox[{412, 57, 531, 853, 532, 191, 854, 533, 771, 192, 
                534, 855, 535, 193, 856, 536, 772, 105, 826, 459, 727, 93, 
                444, 821, 443, 81, 812, 428, 714, 69, 413, 807, 412}], 
               Line3DBox[{418, 61, 537, 194, 538, 539, 85, 434, 433, 73, 
                418}], Line3DBox[{725, 90, 857, 540, 858, 541, 102, 455, 824, 
                454, 725}]}, 
              {GrayLevel[0.2], 
               Line3DBox[{543, 345, 542, 859, 773, 938, 544, 860, 692, 545, 
                861, 774, 939, 546, 862, 693, 547, 352, 731, 1017, 775, 940, 
                732, 1018, 694, 733, 1019, 776, 941, 734, 751}], 
               Line3DBox[{552, 864, 696, 550, 865, 360, 554, 866, 697, 556, 
                868, 869, 698, 558, 870, 699, 560, 871, 781}], 
               Line3DBox[{572, 784, 951, 571, 878, 785, 952, 573, 374, 574, 
                879, 786, 953, 575, 880, 787}], 
               Line3DBox[{585, 884, 704, 583, 885, 793, 960, 587, 886, 705, 
                589, 887, 389, 591, 888, 706, 593, 889, 796}], 
               Line3DBox[{166, 261, 57, 262, 263, 58, 264, 59}], 
               Line3DBox[{605, 800, 970, 604, 894, 801, 971, 606, 709}], 
               Line3DBox[{165, 274, 65, 273, 272, 64, 271, 187}], 
               Line3DBox[{625, 712, 905, 624, 981, 811, 904, 623, 769}], 
               Line3DBox[{646, 991, 818, 644, 990, 817, 915, 642, 989, 816, 
                640, 988, 538}], 
               Line3DBox[{658, 723, 924, 657, 997, 823, 923, 656, 449, 655, 
                996, 822, 922, 654, 995, 852}], 
               Line3DBox[{679, 1011, 831, 677, 1010, 464, 675, 1009, 830, 673,
                 1007, 1006, 828, 671, 1005, 827, 669, 1004, 856}], 
               Line3DBox[{691, 476, 690, 1016, 836, 937, 689, 1015, 835, 688, 
                1014, 834, 936, 687, 1013, 833, 686, 469, 685, 1026, 739, 935,
                 684, 1025, 839, 683, 1024, 738, 934, 681, 763}], 
               Line3DBox[{700, 559, 946, 780, 557, 945, 779, 867, 555, 944, 
                778, 553, 943, 359, 549, 942, 777, 551}], 
               Line3DBox[{701, 563, 948, 366, 561, 947, 842}], 
               Line3DBox[{707, 592, 963, 795, 590, 962, 388, 588, 961, 794, 
                586, 959, 958, 792, 582, 957, 791, 584}], 
               Line3DBox[{708, 596, 966, 965, 797, 594, 964, 847}], 
               Line3DBox[{267, 61, 268, 62, 269, 270, 63}], 
               Line3DBox[{418, 620, 711, 901, 619, 979, 850}], 
               Line3DBox[{714, 630, 983, 426, 626, 982, 168}], 
               Line3DBox[{716, 634, 985, 813, 908, 632, 984, 854}], 
               Line3DBox[{433, 638, 987, 815, 636, 986, 851}], 
               Line3DBox[{722, 653, 721, 921, 652, 994, 855}], 
               Line3DBox[{725, 659, 998, 750}], 
               Line3DBox[{727, 667, 1003, 457, 665, 1002, 825, 663, 1000, 999,
                 857}], Line3DBox[{740, 877, 568, 702, 876, 875, 566, 766}], 
               Line3DBox[{752, 1022, 837, 567, 950, 783, 874, 565, 949, 845}],
                Line3DBox[{754, 735, 883, 580, 956, 846}], 
               Line3DBox[{755, 1023, 838, 600, 969, 395, 598, 968, 844}], 
               Line3DBox[{757, 410, 613, 977, 806, 897, 612, 976, 805, 611, 
                975, 848}], Line3DBox[{758, 411, 615, 898, 807}], 
               Line3DBox[{759, 1020, 713, 627, 906, 427, 631, 907, 812}], 
               Line3DBox[{760, 819, 992, 648, 919, 820, 993, 650, 442, 651, 
                920, 821}], Line3DBox[{762, 1021, 724, 660, 925, 824}], 
               Line3DBox[{764, 562, 872, 367, 564, 873, 782}], 
               Line3DBox[{765, 599, 892, 396, 601, 893, 736, 756}], 
               Line3DBox[{767, 576, 788, 954, 577, 881, 789}], 
               Line3DBox[{768, 595, 890, 798, 967, 597, 891, 799}], 
               Line3DBox[{188, 265, 266, 60, 267}], 
               Line3DBox[{770, 637, 912, 717, 639, 913, 434}], 
               Line3DBox[{771, 633, 909, 910, 715, 635, 911, 814}], 
               Line3DBox[{772, 670, 929, 728, 672, 930, 829, 1008, 674, 931, 
                729, 676, 932, 465, 678, 933, 730, 680}], 
               Line3DBox[{537, 621, 902, 809, 980, 622, 903, 810}], 
               Line3DBox[{539, 641, 914, 718, 643, 916, 917, 719, 645, 918, 
                720, 647}], Line3DBox[{790, 882, 579, 381, 578, 955, 843}], 
               Line3DBox[{804, 896, 610, 974, 803, 609, 403, 608, 973, 802, 
                895, 607, 972, 849}], 
               Line3DBox[{808, 900, 618, 710, 899, 617, 978, 853}], 
               Line3DBox[{826, 928, 668, 458, 927, 666, 726, 926, 664, 1001, 
                858}]}, 
              {GrayLevel[0.2], 
               Line3DBox[{195, 345, 196, 942, 358, 864, 222, 951, 371, 235, 
                957, 384, 884, 248, 970, 397, 261, 411, 275, 982, 425, 1020, 
                289, 992, 439, 303, 998, 453, 1021, 317, 508}], 
               Line3DBox[{197, 346, 859, 199, 359, 865, 223, 372, 878, 236, 
                958, 385, 885, 249, 398, 894, 262, 531}], 
               Line3DBox[{201, 348, 860, 202, 944, 361, 866, 225, 374, 238, 
                961, 387, 886, 251, 972, 526}], 
               Line3DBox[{203, 349, 861, 205, 362, 867, 868, 226, 375, 879, 
                239, 388, 887, 252, 401, 895, 265, 527}], 
               Line3DBox[{207, 351, 862, 208, 946, 364, 870, 228, 521}], 
               Line3DBox[{338, 470, 1013, 324, 929, 460, 1005, 310, 446}], 
               Line3DBox[{340, 472, 1014, 326, 462, 1008, 1007, 312, 448, 996,
                 298, 434}], 
               Line3DBox[{341, 473, 1015, 327, 931, 463, 1009, 313, 449, 299, 
                914, 435, 989, 285, 903, 421}], 
               Line3DBox[{343, 475, 1016, 329, 465, 1010, 315, 451, 997, 301, 
                917, 437, 990, 287, 423, 981, 273, 409, 977, 260, 396, 969, 
                247, 383}], 
               Line3DBox[{344, 476, 330, 933, 466, 1011, 316, 924, 452, 302, 
                918, 438, 991, 288, 905, 424, 274, 410, 480, 893, 484, 1023, 
                479, 883, 483, 478, 877, 482, 1022, 477, 507}], 
               Line3DBox[{559, 17, 547, 6}], 
               Line3DBox[{377, 880, 241, 963, 390, 888, 254, 403, 267, 417, 
                901, 281, 986, 529}], 
               Line3DBox[{379, 881, 243, 965, 392, 890, 256, 523}], 
               Line3DBox[{382, 882, 246, 395, 892, 259, 408, 897, 272, 422, 
                904, 286, 436, 915, 916, 300, 450, 923, 314, 464, 932, 328, 
                474, 937, 342}], 
               Line3DBox[{39, 592, 593, 50, 609, 61, 620, 72, 636, 637, 190}],
                Line3DBox[{405, 896, 269, 419, 902, 283, 538}], 
               Line3DBox[{412, 898, 276, 426, 906, 290, 440, 919, 304, 999, 
                540}], Line3DBox[{415, 900, 279, 429, 908, 909, 293, 534}], 
               Line3DBox[{418, 282, 987, 432, 912, 296, 995, 530}], 
               Line3DBox[{433, 913, 297, 447, 922, 311, 1006, 461, 930, 325, 
                471, 936, 339}], 
               Line3DBox[{443, 920, 307, 457, 927, 321, 487, 935, 492}], 
               Line3DBox[{83, 653, 94, 669, 670, 105, 686, 116}], 
               Line3DBox[{490, 934, 485, 318, 925, 454}], 
               Line3DBox[{491, 486, 1025, 320, 926, 456, 1002, 306, 442, 292, 
                907, 428}], Line3DBox[{179, 1026, 322, 458, 1003, 308, 444}], 
               Line3DBox[{493, 469, 323, 928, 459}], 
               Line3DBox[{494, 352, 210, 947, 514}], 
               Line3DBox[{495, 353, 1017, 213, 366, 872, 230, 515}], 
               Line3DBox[{497, 355, 1018, 216, 949, 518}], 
               Line3DBox[{498, 941, 356, 220, 950, 370, 876, 234, 956, 520}], 
               Line3DBox[{505, 1019, 219, 369, 874, 875, 233, 519}], 
               Line3DBox[{510, 1024, 319, 455}], 
               Line3DBox[{516, 955, 231, 367, 948, 214, 354, 940, 496}], 
               Line3DBox[{185, 576, 28, 560, 559}], 
               Line3DBox[{524, 975, 257, 393, 967, 966, 244, 380}], 
               Line3DBox[{528, 979, 266, 402, 973, 253, 389, 962, 240, 376, 
                953, 227, 869, 363, 945, 206, 350, 939, 204}], 
               Line3DBox[{532, 978, 263, 399, 971, 250, 386, 960, 959, 237, 
                373, 952, 224, 360, 943, 200, 347, 938, 198}], 
               Line3DBox[{535, 994, 294, 910, 430, 985, 280, 416}], 
               Line3DBox[{537, 268, 404, 974, 255, 889, 391}], 
               Line3DBox[{539, 988, 284, 420, 980, 270, 406}], 
               Line3DBox[{541, 1001, 1000, 305, 441, 993, 291, 427, 983, 277, 
                413}], Line3DBox[{365, 871, 229, 954, 378, 242, 964, 522}], 
               Line3DBox[{368, 873, 232, 381, 245, 968, 517}], 
               Line3DBox[{394, 891, 258, 976, 407, 271, 525}], 
               Line3DBox[{400, 264, 414, 899, 278, 984, 533}], 
               Line3DBox[{431, 911, 295, 445, 921, 309, 1004, 536}]}, {}, {}}},
            VertexNormals->CompressedData["
1:eJztvHk0ld/7Ny5FM6UylDI1KIrQQMNVKhJpUpEGRSJKo0oiUdKgaEbJVBEh
89RlJvM8j+c4jnM451CIDD3n83bf/danzzq/79Naz3c9z7PW0z+vtXd397n3
3ve+9vW6Xq87mRM2e0/y8/Hx8U/g4xvPx+tPN7i2cYINfb4giet1no8I3OMA
KE47lyJdh2PIJNs8+2Vkit/MLXgFHloSToYUFggMTaXLVlTB4q2ph9X8c1F5
f/fFtDw22QZez/Pf3e/CY7y3iPa9P/p53Wd+JWufaXU1Ki9qi4u4SYWF257l
LTnZDklJS4TVbdNRLvummH0WAyoEEtepmlOgusDP+4BwNQyoGtcVm7aBit5w
pHohDXTEjlwq3ZaDKxI7/O+vYAK3we1pBR3ji1vHb86AX0XUR4LT6eBleGB3
ZwgNlrpITpSMqkFX4a5rm0uYZBvudl4ovt1Hw1tjCIGG0aFbW4t4Pv8f64fk
OvK6fshoqa5bXwEOEwhhFwOP7GEDddB0q35YMU5foJ/B512BOz/PCFy0kQWX
BQ9q+l/L+Y26D1kewXQ22BJt2z/6P60py/yyvx1aE/N2tnW0YqWW5c3qFw0w
T/XxtvfXPJMJXP97/v9pU0hEsk3MCyoS87KEwL+dB3JdyXUm11eYGCedGDc5
XvL5yOcl7+/8skP8SVM8iUiVDZq99zMH9v/zh0YijmEluDrMtDhxLhXuEBhl
rTcXr3B4jtdt7Dq8TyB5fe/kC79U99BR2OLBbIeYMmz0YikmlFJ5zgO5b8l9
TO5f8j1OJN5r8n3mtb6PiHESCOR4ieeE+3+Mq29HjG3mYDoM7Xa52nTaC9RS
bQwT/HnPD6/xPl9bf91uTymSqP1QpdjqMQt6XZ7a6lV34TibnXYH1W6Cnc2+
RZ3x9X8dNwaJfUvu45XE/v3b97mFGCc5bnK8vOZz7PffEu/T29/vP6/5ETRy
WSl8rgwPeW2ou9OYjWnFMQ7Dc9nAmBhtoTHcji/EFBQ+p5TgrbWrRE382v56
Hsj9sp7YLwTy3o9/+T7/7Xzymh9iHpFE8j4vDb/LibM7MLxjVCq9Mw8u5k15
o99OgaYjy9S9XFh4YNBAptQ7Bu5JVXYHzecdN7qWBOxbNcqE9oHJexLsU/E1
w1XAOLyF57j+dv8S4yTHjVXEeM06Lzpq9tkm//k8vNad1n019WRJyW8Up16S
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
N2Ob3cWbztLw1uWNzYLzKPCtcR2LL6cJdMfqAFg2VgeAOUQdIJCo/+cR9X9b
ov7v4xTsYNDQhu2e1rL83i1w4WF3e2pkKywKzjzk+7oadeNszRxpETjaUvko
LIT11/mACw+/wU0e/gRSJyZ1Y1IvJusIZF2BzFtaCJ2P1P1IvW+A0LF+61qE
nsVrH/2tn6GS8EmQvgnSL0H6JEjfBOmX+Fu9W4HQdxUJvZfUeW8Q+u4SQu9d
T+i8MgS/JfkuyXNJXZPku6S+WULoeaS+p0HoehWEnkfqe6Su1zozuKX0QBlO
m5l3+VN6B9RLXfwuO5sCAl3md1aKtKLJ6+A2xUgq3PKKfOHjQYH+0/VGR4u+
gDV10dy8cxSYBkE2gk0MSOuNH3ds3jPo1/oSy9qaALZ9iZEbqziwqHTWV1m5
BkysGD0rPoNBtmFPvJ/uiupWPO9asaTjE5VsQ4n2txfrrtJRdb3p58giKghr
+qk4DZVCQd/XvssnmXhdWv6iv0E99DWs2pEYXf3XcZX0o5D+FLK+zet7E9KX
cJvwKZD+hHyi7jfxj7rfUkJX7iR0ZlJfJnVTsg5BxjFS/3Ml9EA5QgckfQak
74D0G2QTOvopQlcn9fTkk/sla2lM9GlXt/geGwzpq/e9CtXkvS9IPw3pryF9
NaSfxoDw15C+GtKvQ/p3SN8O6dch/Tukb2cX4duwInwcpH9DivBtnCF8HKR/
g9U85lcgEEjfQjfhVyAQSN+CJqHT+xC6vSqh12sROv1WQrcn9XpSnyb1alKn
JvXpMkKvJnVqcUJ/JfVYUocl9VdSjyV1WFJfJPVGUmc0IfTFKkJvJHXGnzFH
+7ekp+MwgTci1khL6XPg8ZGwM9pqRUhi2Ke+G2bL2PCwJmvFq9UdOHFIcMWh
CyXYp7JEhrKeCqY/Xq5Z0dCJArmepnceR2Lxdnb/6uXNf70vSF+UFOGTIvUj
0kfFd2XMV9VB6CC8/DZHCB8JgZBK+En0CZ/EAsI3QfolyLrPbaIORNZ/Ljut
v+s/u4VErNZn9+g4t//WZUmdltRnfe7PH8hMK8XYRQ9OyW0uQvc1HfPsClgw
RUpt4ySZTjz5QBz3asfjgvH7dR9+buE5DxZjuhoIj+lsmEvoa7yuJ/V1sl5F
1qlI38xFwkdDPmcc4QshfSKkP4TX9zXk+Mn5qCLmYaHFnA39uuUkoobkW+Oe
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
NetsDYthdOM1z6eDbFiw3uDukHwj/Nyhed/8QDFGzdo7IGTaCfSrp55dm5mK
JtA/yzOlCjL2rtQVDmSBPqEv6/+hLwv/sn844XYe6K+OEehwr0fNw8fCVSS7
wOXQz1/RoeVYWDqilX0/DVkas4x/ybDhyhzbc2fTmaghtGlTuOBjvLx1ir/N
vVZoThV5vuQiAxLLAn2+LihDq7S0cJklvH3Ol1J2fQibdBkeaqeMSvdnwok2
SSs9Dw5Y8HUmJeo3YW0k38rNu5pgYm+GtGUGHdJdU5M1zmehf9TiwVmWJ9HI
JLxz1QMOBOma2M8ZLAJOqaCx3NJGPNPnN/udZSdIhNboMxTT0enBuUBpm0IY
dPI0WFzMBrVHgbTMJz7QMr/nNHtZGjqr7Dydwc1vdyj2C6a1v4DL46K3Zq6P
hIeXlzIVOjlgez5GUOJQLmYOIZU2KRylVorOnGzMgZ5V19b9jE+EEwX24xYs
KoJp49357nSyQUZpfF/rxSZ8wvzId6GlHL69zfUU2s8EXbeBp8sm0XEuiE3b
kVcNdW1xapBBgf4FzUsddGmgqqfyaaZOICjPUA+WqqPznDe5pDfLVl0qxpE5
C3ICmkLRu63b+cgPNhzKNNXeMOsxBpn1XuK/9Q5X2kuzZ/7gwMeb7Zkv8rIh
hMCTn+4OCwywQUvs88FJr9pQ8PWh6gm1VRAW+FDleDANPOyGuyefpIKIE/78
rkHBn5ybDYoZrbB+x45q7wMBaJy69tbcqjb8dqlNMmZzByi916CpyJfB3fnd
OicvMFBJ0bcvc1Er7Ba9GvleIwfGW2JF1e0OXECnDTjFU8F9/cYvWfkzcYmE
0oZnnjT8OMfY+rU/HcyXVuxdL5IKWxlbtQKkabi0a4anxGc6tOZ8i98gnwaH
74cuD41NQ/6mc5NdzTkQJxXvkDHhPUQRWBlxrN6am/8s4FUH83NpctpbC42T
LcWMuruw3van5ZobmXDncGzY0KFgkNEImJE0k41FTlKN1OBKkEvNUk69m8vl
95ZrpmYxEe9M7flg3QKTl++X1e9OA9m+t+sW7y5ES1f376u551ryl6P5FWVp
KO1yMed9VQGsFnnId76eDcbmIlPin+bi/vEb3zAymbDIQ/RImlULHNM254tl
v4UTEo836WAXPHcRfZc0qQE+WtMMDZOqMDnAR9P+Egsyguzebm/KhLkE35b6
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
PwBKhAyw
             "]], {}, {{}, {}}},
          Axes->True,
          AxesLabel->{None, None, None},
          BoxRatios->{1, 1, 0.4},
          DisplayFunction->Identity,
          FaceGridsStyle->Automatic,
          ImageSize->{180., 173.835125167882},
          Method->{"DefaultBoundaryStyle" -> Directive[
              GrayLevel[0.3]], 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "RotationControl" -> "Globe"},
          PlotRange->{Full, Full, All},
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}},
          SphericalRegion->True,
          Ticks->{Automatic, Automatic, Automatic},
          ViewAngle->0.42769327351158737`,
          
          ViewPoint->{-0.4850826766408355, -0.04859105863435784, 
           3.348482298869701},
          
          ViewVertical->{0.9846394505169656, 0.09863199734340782, 
           0.14407248726144184`}], 
         Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
L0/WeZX23Er6bON7srf1e+qrZF7sZvL/BwDt3ec=
            "], {{
              {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], 
               Specularity[
                GrayLevel[1], 3], 
               StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
                   
                   "]], Polygon3DBox[CompressedData["
1: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
10Jqstqsp1mrhIZ+lPxn/Q1KPptNHNyEB5f/PieOaKIe5bdPiMOa0NDPku+s
Tz3sbK65qApvq4YtSD7r6/eswyuriWrjtyWunZ3+8sR8f/lCfn42+U8N2gX8
YwmPOobrf2PscvWTfE/OncHYacRI+4hzlzH2D6JjHZpzTgnNUXvWJa5sYo3i
WkWPemqJNYxrmZ3A55a4x9qpR95bjVfr1/Adm/B8ej/XBCczfol6WYcnGJ7v
u3oda2DreUViyeRL17aXpt65ph1RQqO9n55N7dZDtMz76y3UVP12zyq09nry
RevQXPH5+fx66KGpl9ar+qm+6Tn0HnoAvcDU1EvXzHrRseTtidWIC5pYo7j2
06Pr1fXwevk+VczzhU283y7gk+QP8uXq8Izy8Yz8/Q7gM0t4TufbNYte9LY6
7uf8Hwn+hbiX/Dl1q4ke7JN6ZG/qAb8FD6/CG/7cxPpvOXu2hIYtXodHG5D9
8mwVnkXv4p7AMnV4bt/3rBLPdUUT9WBYG32rGHuIvEMdNWAtuGehV1Of9AOu
yb5JPtgy69+1XFvwJtmP84hh+XwnOP/Zz71LeOivkj/01l1LeFK9qP12dRPr
QT2oXvT6JvjlQPClzncTexWuafRL47O/W+X91ie6lFgn26/ueXTL36sj7pm4
d3IQeHSJNYlrEz2xz+Ez2PuPV/FsxxHHllj3WR/2gL0wgfFTSqxZ5CM9uHsJ
7tm4XpuU9e419smo/O15xKpZH0NKcGyv9C9yr2sa+W4p57iEh/kt+XEn8Ajw
rNR/9URPq7cdUcVawnv6re+q479eL7Gfo+aoPc6h33pSHXP7Von9lC2y/t4s
MTfOket351gueKaOud+0CS+mB9ALdGjiXax5e2dCiW8th+t9JpZ4djlOrptU
QovUJL3VKk1ogZqg92rTRG/ao3rbaSXW1+5f3NSEv/W/fYb7StTIzn6vOmrn
pcTtki+dM3XLfSDnchhRkT/JYfcSHrVJPtirhCf/Q/KL+uM5edx9Ha/VM/mt
ptThpabkfMrJcrO95Xw8UkePvViCW+UouWrdJrhRDpFLOhK7V8GhculUru9X
BYfL5a/m/MuZcqe1JDeOq6Om1NSe6T/UWmtULnMOrF3nzLnTz+nH5mX/6On0
dvo39wt71OF/PvQbJJ+eXWLPYZXkw9NLrAnb5f3PS/6zHs8AL5B0Fgmv4p6h
e4e/J3+cDv6+xB6Uz+M3df3imuqFrHf5Sk1072VkFVrpGrJ98q36+Vv+/5gq
tNGatXbHVcGleiLXA/q9B1Mv3Ntxj+cH8Lol+tS9PvV+duqb+qUf+zj1Uv10
L+NdcCtwb/CwEj1hbwzMcb1ul9R3Pa9z2CPf77rUn/eTX1wL3wjeso6euzL1
x32kE0voibl7S9tWcc49qeVT/+Qh95DkZ/Vf/7pyfiO/jX7APZxOyZ9XlNhj
WrqOPTj1zD2zJepYj6lH7pH8sY41s/rrHtSyqWfq6f/nqIr1p3Onf59FPpM4
sIk18KvJf+3y/9UyNc29JffY3ki9kpfdM9QP6Xf13WuW4Dn3Nbyfe3SuF/Rz
nXw3zverw6Oqh/r3dVKv5DL3qLumHtxcgvP1ao9VoQX+3vWdeyIPl9ijlgvl
xBtL7KHJ//p99dVnmJl64rP9Dw4i99E=
                   "]], 
                  Polygon3DBox[CompressedData["
1:eJwtlmd0FkUYhffbSUKXIiUKooAkgFSpAqEpCBZUuiBRqgekCKG3hAiIIMWI
VImhVxEQEaQJGIoBIr2EJiVI0dAOooD43PPuj+fMvXdm99tvZ+adLdG5b4s+
vud5UyEcpmG+hKOwK+R5c53nzUfPg3rodLIFtI/w4bAH3Ya2LZRFL6A/DzwB
R/Ae5KTvF9oWtC2hOHo8/am0u2A3LCZfBPXRh+hbRHsA/z36DDoR/QnEKCdr
Ao1hPv4VyEC3hTawDP8fYyPgB3R12hrQCH2C/lbQEpbi15G/h97Lo4ZBCXxN
8p1kdaA2zMGXIY+GHOjuZB/QVoON6CpQGWbgfcjPuFO0I2hHwkPw9V/IqtC+
CGNhjDTZeq6dTvuC3gM6H+SHo/iX4SS6NQzi+VbrncNSfAG9J7J++P2wGp/B
+FHoeHgVnUl2HVYzbgXZU2Sj8Vtpt8HPgjyBbAu6ia6D9dCF7BaM4Noz+B0w
Dr+TcW+j34GZMANeIttDXzKtg0JkJ2iH0A6F3VpD9OeCGO7XC79dc4rfzrg3
0G9qvuB9snTGREApzZ2ekawW1ITZ+K/J58BxSCNLIUtGz4U66H1k82gbwjF0
CxjA/VbRfwi24mtALNkkfIhxeWjzkjUg66v1D8n47FoLZD3xG3yb/1WML42O
gk3Qi2wtWSV0ZdgIPfTeNa/o8vCbb3N9jmwc+lN4rDUFl7h/MWiAPg9T0KPh
PONHMr4ADEZfILsIG/EREEt2AL8fOuJ/4tqPyNagK6ArQgp8A3XJ9gd7Ziu+
P3o9uia6FhyELWTR2h/Be3mg9as5g25ky/BZyrUvoRDZWXwGDENPgE7k/3Df
NLJV6JPoYejhcARSyTKd1RnVm72wjOwYWX90HLSGVqobMIG+4fS9hW4ORZ2t
wyG0qfipwRzV5rdj8a9rDdJm4q/AJnxBPQNjbuvdBe9ZdegzshB4MAxfEpLQ
OSEHxONLwBR0NoiAUfhzXD+ZyxLgHFmcs/2gfbFTc0s2lOw5mIQOh8WaI/rS
tc7xZ53VgLHBnF8ie0x2B33Xt9+4qHF6Dq69jS9Mfzz+b/w96I+vpRpKVh/q
BTW7OmxGV4OqMBMfDXM1Z1AQErVPVafQd7nXHdUSZ/tfdSAyqBUDaZ+H6UFd
V31PcFbLVdOfCeq53t+7+Ha63tn/0dotAynoSCgCY1TTfDtLbunMQC9UvfBt
3/7pbL1q3WZDd9ba4NmOerauskNXstP4DHiArwo/klWCFWT3ufaYbzXpGn2z
0LOhPboY7RXaP+AqhEEk2Q1n9UN1JCbYK3/RZsFNOOXb2XQHvUQ1GA5rjZJV
hHb8bhI+P/0DtM+1f2GDzj7I69ua0to6LA/9QvYf9F+0F5sxpikUcVaTB9Cu
xK+lf41n9TzEQdWVvAvkcrbfuzmrO6o/m6E32YfOauc2dFkoB5ec1QTVhtzO
6lZ3Z2foKXRTaAb38RcYczlYU1pbOiDbkhcmL42PUj1ydq4eD9l5rHP5ns45
WIcuDs8Ga13n6g50eagAl1Wj4NtgXUQGtUJ78Av0Q37ykWob/qLmjKwhNAKf
Zwkn74Dew5jd0AFfjXFVVcfgY/p6kLWGJ33bu9rDh/Dl8GUhp7M63Vlnmt6n
b7VANSFd7xZ6BnOletmLNgpmoh2EwcFg/S1XfdQ3BNl5fD6IQ18nKwl1ufdp
1UH0RM/O13+d1UXVx33wHdkU7Tt0gs4SZ99ASUG974hO49p9Os+dvYP2ZKn4
XbDc2TeHvj0qOfsmmEpbCqahc4fs/O2kOSSbEbIzb5OeR7UTXoOnnZ3Ng5x9
MyTqWbX/PKsH01S/g3lWLftKdQ4+D+ZUdX8y7WDuNQh+hZVkE53tj4Ha59zr
BvQJauzkkN1fv5Pm7PtqA1lJKAW/OzsHh6BvMiZL57Sz76YlwTrTehsf7Iue
ITsXdT6uCeZtVsi+rfSNNdpZfdF5laV7wkpn37EL0cWgKIzDN9dY/sNV7nUN
Njs7M3V2NtZeYVxv2v8Bl+poUg==
                   "]]}],
                Lighting->{{"Ambient", 
                   RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
                  "Directional", 
                   RGBColor[
                   0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                   ImageScaled[{0, 2, 2}]}, {"Directional", 
                   RGBColor[
                   0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                   ImageScaled[{2, 2, 2}]}, {"Directional", 
                   RGBColor[
                   0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                   ImageScaled[{2, 0, 2}]}}]}, {}, 
              {GrayLevel[1], EdgeForm[None], 
               StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtz7tKQ0EURuHJsfDyAJZCwDK9YiWmUUSJdqkCYiRV1OgTaKOd9xuCeKns
xdJnCNpYWKQQYmEh0SKd3zCnWKz9731mzp7iyvpyMwshjGEA95jAA6YMivzC
9UIII+oP/PrwVZ7mgtmT3pL8qF4NqR/nG+p57mBY/Y5DLGI3v6dnNsd7cgsn
qMlf+rN8IJexgze943iO93kLp/iTz7gdsx2q3OHtLJ2Nd/yob/K3NDCp/uRL
HsJVSHtec5fPeRAX+T7x/c9Z2mFTb4H78lH+rzXMqL+ztFPcreKbcXk0pLO3
XMId/gHvGDKH
                   "]], Polygon3DBox[CompressedData["
1:eJwtkblOgkEQgGc3JigPYGlCb0+ojR3BowM7QwyV4MELeNtJIocQjdd78AxG
EhI7ChBFCxLwSgx8k9niy3y7/+zOzvyxzfz6theRBZiBLydSI0bgGX5Y14mz
0IYOyWniEfziXTjAlyCH98lv4HOaiy+zt4jfwTv+QozCNfzxvcjePlyw7hE3
II4/wIe3M7d4TOyuc0jhJXjFk9xRwE/gH/921oO+vQUpfId4ChP8jTM3+Dwk
8Ka3u7XG0Nud2pv2qLXaoZdGmMVTmE0Vxs5q6GyuxGp/cuZRrIctbzUv8d3w
lj57x3gWKvgae3taCxzrFWe5ZyCsR87erj208FVnOfqtHGY0gEyYnc7wUGxG
xfDtXuwfaM4UuX5Fpw==
                   "]], 
                  Polygon3DBox[{{695, 22, 158, 489, 863}, {840, 157, 10, 357, 
                   863}, {695, 357, 221, 11, 548}, {662, 661, 737, 146, 
                   744}, {832, 467, 331, 111, 682}, {506, 156, 481, 217, 
                   218}, {333, 332, 509, 147, 468}, {703, 159, 745, 569, 
                   570}, {841, 134, 112, 467, 1012}, {832, 100, 133, 499, 
                   1012}}]}],
                Lighting->{{"Ambient", 
                   GrayLevel[0.8]}}]}, {}, {}}, {
              {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0bkuhFEAhuFjLJVeKTQ07sAFUEwztmk0VJqZSGxj15BYE/dgXwbjDoRE
SNyEirHvRsRzEsWb5ytOck7+v64nm8qUhRD6dKK4axMhVLOBjaqxm1nPFraq
ye7mOt+5wU192Fvc1qe9w3vu8pt7/HFJyd63b+w8f3nAWx7ySEW7wGPd2QNM
cZBtbNeQ3cFhdrJLI3aaORbck4lvi29Ur73KNOc4q6TdzzW+cYYrerVfNG0v
69me4jWX+MhJltz1YE/EM/YivzjOJy5wLJ6P5zRvj8bvYlfxSpW61IUqdK5y
nelUif//8wf5+0AM
                "]], 
               Line3DBox[{209, 150, 501, 151, 152, 502, 503, 153, 154, 504, 
                155, 488, 156, 506, 157, 840, 489, 158, 745, 159, 753, 160, 
                746, 161, 162, 747, 748, 163, 164, 749, 66, 614, 55, 603, 602,
                 44, 581, 33, 570, 569, 22, 548, 11, 221, 10, 218, 217, 9, 
                215, 8, 212, 211, 7, 209}], 
               Line3DBox[{616, 67, 628, 629, 78, 649, 89, 661, 662, 100, 682, 
                111, 331, 112, 332, 333, 113, 334, 114, 335, 336, 115, 337, 
                181, 513, 137, 149, 512, 136, 148, 511, 135, 500, 147, 509, 
                134, 841, 499, 133, 744, 146, 761, 132, 743, 145, 131, 742, 
                144, 130, 741, 56, 616}], 
               Line3DBox[{700, 17, 842, 514, 764, 182, 515, 843, 516, 183, 
                844, 517, 765, 53, 799, 394, 708, 41, 380, 789, 379, 29, 781, 
                365, 700}], 
               Line3DBox[{701, 19, 845, 518, 766, 184, 519, 846, 520, 43, 383,
                 790, 382, 31, 782, 368, 701}], 
               Line3DBox[{377, 27, 521, 767, 185, 847, 522, 768, 186, 523, 
                848, 524, 187, 525, 769, 75, 810, 421, 63, 406, 804, 405, 51, 
                796, 391, 707, 39, 787, 377}], 
               Line3DBox[{709, 47, 849, 526, 188, 527, 850, 528, 189, 851, 
                529, 770, 190, 852, 530, 95, 446, 722, 83, 814, 431, 716, 71, 
                416, 808, 415, 59, 400, 709}], 
               Line3DBox[{412, 57, 531, 853, 532, 191, 854, 533, 771, 192, 
                534, 855, 535, 193, 856, 536, 772, 105, 826, 459, 727, 93, 
                444, 821, 443, 81, 812, 428, 714, 69, 413, 807, 412}], 
               Line3DBox[{418, 61, 537, 194, 538, 539, 85, 434, 433, 73, 
                418}], Line3DBox[{725, 90, 857, 540, 858, 541, 102, 455, 824, 
                454, 725}]}, 
              {GrayLevel[0.2], 
               Line3DBox[{543, 345, 542, 859, 773, 938, 544, 860, 692, 545, 
                861, 774, 939, 546, 862, 693, 547, 352, 731, 1017, 775, 940, 
                732, 1018, 694, 733, 1019, 776, 941, 734, 751}], 
               Line3DBox[{552, 864, 696, 550, 865, 360, 554, 866, 697, 556, 
                868, 869, 698, 558, 870, 699, 560, 871, 781}], 
               Line3DBox[{572, 784, 951, 571, 878, 785, 952, 573, 374, 574, 
                879, 786, 953, 575, 880, 787}], 
               Line3DBox[{585, 884, 704, 583, 885, 793, 960, 587, 886, 705, 
                589, 887, 389, 591, 888, 706, 593, 889, 796}], 
               Line3DBox[{166, 261, 57, 262, 263, 58, 264, 59}], 
               Line3DBox[{605, 800, 970, 604, 894, 801, 971, 606, 709}], 
               Line3DBox[{165, 274, 65, 273, 272, 64, 271, 187}], 
               Line3DBox[{625, 712, 905, 624, 981, 811, 904, 623, 769}], 
               Line3DBox[{646, 991, 818, 644, 990, 817, 915, 642, 989, 816, 
                640, 988, 538}], 
               Line3DBox[{658, 723, 924, 657, 997, 823, 923, 656, 449, 655, 
                996, 822, 922, 654, 995, 852}], 
               Line3DBox[{679, 1011, 831, 677, 1010, 464, 675, 1009, 830, 673,
                 1007, 1006, 828, 671, 1005, 827, 669, 1004, 856}], 
               Line3DBox[{691, 476, 690, 1016, 836, 937, 689, 1015, 835, 688, 
                1014, 834, 936, 687, 1013, 833, 686, 469, 685, 1026, 739, 935,
                 684, 1025, 839, 683, 1024, 738, 934, 681, 763}], 
               Line3DBox[{700, 559, 946, 780, 557, 945, 779, 867, 555, 944, 
                778, 553, 943, 359, 549, 942, 777, 551}], 
               Line3DBox[{701, 563, 948, 366, 561, 947, 842}], 
               Line3DBox[{707, 592, 963, 795, 590, 962, 388, 588, 961, 794, 
                586, 959, 958, 792, 582, 957, 791, 584}], 
               Line3DBox[{708, 596, 966, 965, 797, 594, 964, 847}], 
               Line3DBox[{267, 61, 268, 62, 269, 270, 63}], 
               Line3DBox[{418, 620, 711, 901, 619, 979, 850}], 
               Line3DBox[{714, 630, 983, 426, 626, 982, 168}], 
               Line3DBox[{716, 634, 985, 813, 908, 632, 984, 854}], 
               Line3DBox[{433, 638, 987, 815, 636, 986, 851}], 
               Line3DBox[{722, 653, 721, 921, 652, 994, 855}], 
               Line3DBox[{725, 659, 998, 750}], 
               Line3DBox[{727, 667, 1003, 457, 665, 1002, 825, 663, 1000, 999,
                 857}], Line3DBox[{740, 877, 568, 702, 876, 875, 566, 766}], 
               Line3DBox[{752, 1022, 837, 567, 950, 783, 874, 565, 949, 845}],
                Line3DBox[{754, 735, 883, 580, 956, 846}], 
               Line3DBox[{755, 1023, 838, 600, 969, 395, 598, 968, 844}], 
               Line3DBox[{757, 410, 613, 977, 806, 897, 612, 976, 805, 611, 
                975, 848}], Line3DBox[{758, 411, 615, 898, 807}], 
               Line3DBox[{759, 1020, 713, 627, 906, 427, 631, 907, 812}], 
               Line3DBox[{760, 819, 992, 648, 919, 820, 993, 650, 442, 651, 
                920, 821}], Line3DBox[{762, 1021, 724, 660, 925, 824}], 
               Line3DBox[{764, 562, 872, 367, 564, 873, 782}], 
               Line3DBox[{765, 599, 892, 396, 601, 893, 736, 756}], 
               Line3DBox[{767, 576, 788, 954, 577, 881, 789}], 
               Line3DBox[{768, 595, 890, 798, 967, 597, 891, 799}], 
               Line3DBox[{188, 265, 266, 60, 267}], 
               Line3DBox[{770, 637, 912, 717, 639, 913, 434}], 
               Line3DBox[{771, 633, 909, 910, 715, 635, 911, 814}], 
               Line3DBox[{772, 670, 929, 728, 672, 930, 829, 1008, 674, 931, 
                729, 676, 932, 465, 678, 933, 730, 680}], 
               Line3DBox[{537, 621, 902, 809, 980, 622, 903, 810}], 
               Line3DBox[{539, 641, 914, 718, 643, 916, 917, 719, 645, 918, 
                720, 647}], Line3DBox[{790, 882, 579, 381, 578, 955, 843}], 
               Line3DBox[{804, 896, 610, 974, 803, 609, 403, 608, 973, 802, 
                895, 607, 972, 849}], 
               Line3DBox[{808, 900, 618, 710, 899, 617, 978, 853}], 
               Line3DBox[{826, 928, 668, 458, 927, 666, 726, 926, 664, 1001, 
                858}]}, 
              {GrayLevel[0.2], 
               Line3DBox[{195, 345, 196, 942, 358, 864, 222, 951, 371, 235, 
                957, 384, 884, 248, 970, 397, 261, 411, 275, 982, 425, 1020, 
                289, 992, 439, 303, 998, 453, 1021, 317, 508}], 
               Line3DBox[{197, 346, 859, 199, 359, 865, 223, 372, 878, 236, 
                958, 385, 885, 249, 398, 894, 262, 531}], 
               Line3DBox[{201, 348, 860, 202, 944, 361, 866, 225, 374, 238, 
                961, 387, 886, 251, 972, 526}], 
               Line3DBox[{203, 349, 861, 205, 362, 867, 868, 226, 375, 879, 
                239, 388, 887, 252, 401, 895, 265, 527}], 
               Line3DBox[{207, 351, 862, 208, 946, 364, 870, 228, 521}], 
               Line3DBox[{338, 470, 1013, 324, 929, 460, 1005, 310, 446}], 
               Line3DBox[{340, 472, 1014, 326, 462, 1008, 1007, 312, 448, 996,
                 298, 434}], 
               Line3DBox[{341, 473, 1015, 327, 931, 463, 1009, 313, 449, 299, 
                914, 435, 989, 285, 903, 421}], 
               Line3DBox[{343, 475, 1016, 329, 465, 1010, 315, 451, 997, 301, 
                917, 437, 990, 287, 423, 981, 273, 409, 977, 260, 396, 969, 
                247, 383}], 
               Line3DBox[{344, 476, 330, 933, 466, 1011, 316, 924, 452, 302, 
                918, 438, 991, 288, 905, 424, 274, 410, 480, 893, 484, 1023, 
                479, 883, 483, 478, 877, 482, 1022, 477, 507}], 
               Line3DBox[{559, 17, 547, 6}], 
               Line3DBox[{377, 880, 241, 963, 390, 888, 254, 403, 267, 417, 
                901, 281, 986, 529}], 
               Line3DBox[{379, 881, 243, 965, 392, 890, 256, 523}], 
               Line3DBox[{382, 882, 246, 395, 892, 259, 408, 897, 272, 422, 
                904, 286, 436, 915, 916, 300, 450, 923, 314, 464, 932, 328, 
                474, 937, 342}], 
               Line3DBox[{39, 592, 593, 50, 609, 61, 620, 72, 636, 637, 190}],
                Line3DBox[{405, 896, 269, 419, 902, 283, 538}], 
               Line3DBox[{412, 898, 276, 426, 906, 290, 440, 919, 304, 999, 
                540}], Line3DBox[{415, 900, 279, 429, 908, 909, 293, 534}], 
               Line3DBox[{418, 282, 987, 432, 912, 296, 995, 530}], 
               Line3DBox[{433, 913, 297, 447, 922, 311, 1006, 461, 930, 325, 
                471, 936, 339}], 
               Line3DBox[{443, 920, 307, 457, 927, 321, 487, 935, 492}], 
               Line3DBox[{83, 653, 94, 669, 670, 105, 686, 116}], 
               Line3DBox[{490, 934, 485, 318, 925, 454}], 
               Line3DBox[{491, 486, 1025, 320, 926, 456, 1002, 306, 442, 292, 
                907, 428}], Line3DBox[{179, 1026, 322, 458, 1003, 308, 444}], 
               Line3DBox[{493, 469, 323, 928, 459}], 
               Line3DBox[{494, 352, 210, 947, 514}], 
               Line3DBox[{495, 353, 1017, 213, 366, 872, 230, 515}], 
               Line3DBox[{497, 355, 1018, 216, 949, 518}], 
               Line3DBox[{498, 941, 356, 220, 950, 370, 876, 234, 956, 520}], 
               Line3DBox[{505, 1019, 219, 369, 874, 875, 233, 519}], 
               Line3DBox[{510, 1024, 319, 455}], 
               Line3DBox[{516, 955, 231, 367, 948, 214, 354, 940, 496}], 
               Line3DBox[{185, 576, 28, 560, 559}], 
               Line3DBox[{524, 975, 257, 393, 967, 966, 244, 380}], 
               Line3DBox[{528, 979, 266, 402, 973, 253, 389, 962, 240, 376, 
                953, 227, 869, 363, 945, 206, 350, 939, 204}], 
               Line3DBox[{532, 978, 263, 399, 971, 250, 386, 960, 959, 237, 
                373, 952, 224, 360, 943, 200, 347, 938, 198}], 
               Line3DBox[{535, 994, 294, 910, 430, 985, 280, 416}], 
               Line3DBox[{537, 268, 404, 974, 255, 889, 391}], 
               Line3DBox[{539, 988, 284, 420, 980, 270, 406}], 
               Line3DBox[{541, 1001, 1000, 305, 441, 993, 291, 427, 983, 277, 
                413}], Line3DBox[{365, 871, 229, 954, 378, 242, 964, 522}], 
               Line3DBox[{368, 873, 232, 381, 245, 968, 517}], 
               Line3DBox[{394, 891, 258, 976, 407, 271, 525}], 
               Line3DBox[{400, 264, 414, 899, 278, 984, 533}], 
               Line3DBox[{431, 911, 295, 445, 921, 309, 1004, 536}]}, {}, {}}},
            VertexNormals->CompressedData["
1:eJztvHk0ld/7Ny5FM6UylDI1KIrQQMNVKhJpUpEGRSJKo0oiUdKgaEbJVBEh
89RlJvM8j+c4jnM451CIDD3n83bf/danzzq/79Naz3c9z7PW0z+vtXd397n3
3ve+9vW6Xq87mRM2e0/y8/Hx8U/g4xvPx+tPN7i2cYINfb4giet1no8I3OMA
KE47lyJdh2PIJNs8+2Vkit/MLXgFHloSToYUFggMTaXLVlTB4q2ph9X8c1F5
f/fFtDw22QZez/Pf3e/CY7y3iPa9P/p53Wd+JWufaXU1Ki9qi4u4SYWF257l
LTnZDklJS4TVbdNRLvummH0WAyoEEtepmlOgusDP+4BwNQyoGtcVm7aBit5w
pHohDXTEjlwq3ZaDKxI7/O+vYAK3we1pBR3ji1vHb86AX0XUR4LT6eBleGB3
ZwgNlrpITpSMqkFX4a5rm0uYZBvudl4ovt1Hw1tjCIGG0aFbW4t4Pv8f64fk
OvK6fshoqa5bXwEOEwhhFwOP7GEDddB0q35YMU5foJ/B512BOz/PCFy0kQWX
BQ9q+l/L+Y26D1kewXQ22BJt2z/6P60py/yyvx1aE/N2tnW0YqWW5c3qFw0w
T/XxtvfXPJMJXP97/v9pU0hEsk3MCyoS87KEwL+dB3JdyXUm11eYGCedGDc5
XvL5yOcl7+/8skP8SVM8iUiVDZq99zMH9v/zh0YijmEluDrMtDhxLhXuEBhl
rTcXr3B4jtdt7Dq8TyB5fe/kC79U99BR2OLBbIeYMmz0YikmlFJ5zgO5b8l9
TO5f8j1OJN5r8n3mtb6PiHESCOR4ieeE+3+Mq29HjG3mYDoM7Xa52nTaC9RS
bQwT/HnPD6/xPl9bf91uTymSqP1QpdjqMQt6XZ7a6lV34TibnXYH1W6Cnc2+
RZ3x9X8dNwaJfUvu45XE/v3b97mFGCc5bnK8vOZz7PffEu/T29/vP6/5ETRy
WSl8rgwPeW2ou9OYjWnFMQ7Dc9nAmBhtoTHcji/EFBQ+p5TgrbWrRE382v56
Hsj9sp7YLwTy3o9/+T7/7Xzymh9iHpFE8j4vDb/LibM7MLxjVCq9Mw8u5k15
o99OgaYjy9S9XFh4YNBAptQ7Bu5JVXYHzecdN7qWBOxbNcqE9oHJexLsU/E1
w1XAOLyF57j+dv8S4yTHjVXEeM06Lzpq9tkm//k8vNad1n019WRJyW8Up16S
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
N2Ob3cWbztLw1uWNzYLzKPCtcR2LL6cJdMfqAFg2VgeAOUQdIJCo/+cR9X9b
ov7v4xTsYNDQhu2e1rL83i1w4WF3e2pkKywKzjzk+7oadeNszRxpETjaUvko
LIT11/mACw+/wU0e/gRSJyZ1Y1IvJusIZF2BzFtaCJ2P1P1IvW+A0LF+61qE
nsVrH/2tn6GS8EmQvgnSL0H6JEjfBOmX+Fu9W4HQdxUJvZfUeW8Q+u4SQu9d
T+i8MgS/JfkuyXNJXZPku6S+WULoeaS+p0HoehWEnkfqe6Su1zozuKX0QBlO
m5l3+VN6B9RLXfwuO5sCAl3md1aKtKLJ6+A2xUgq3PKKfOHjQYH+0/VGR4u+
gDV10dy8cxSYBkE2gk0MSOuNH3ds3jPo1/oSy9qaALZ9iZEbqziwqHTWV1m5
BkysGD0rPoNBtmFPvJ/uiupWPO9asaTjE5VsQ4n2txfrrtJRdb3p58giKghr
+qk4DZVCQd/XvssnmXhdWv6iv0E99DWs2pEYXf3XcZX0o5D+FLK+zet7E9KX
cJvwKZD+hHyi7jfxj7rfUkJX7iR0ZlJfJnVTsg5BxjFS/3Ml9EA5QgckfQak
74D0G2QTOvopQlcn9fTkk/sla2lM9GlXt/geGwzpq/e9CtXkvS9IPw3pryF9
NaSfxoDw15C+GtKvQ/p3SN8O6dch/Tukb2cX4duwInwcpH9DivBtnCF8HKR/
g9U85lcgEEjfQjfhVyAQSN+CJqHT+xC6vSqh12sROv1WQrcn9XpSnyb1alKn
JvXpMkKvJnVqcUJ/JfVYUocl9VdSjyV1WFJfJPVGUmc0IfTFKkJvJHXGnzFH
+7ekp+MwgTci1khL6XPg8ZGwM9pqRUhi2Ke+G2bL2PCwJmvFq9UdOHFIcMWh
CyXYp7JEhrKeCqY/Xq5Z0dCJArmepnceR2Lxdnb/6uXNf70vSF+UFOGTIvUj
0kfFd2XMV9VB6CC8/DZHCB8JgZBK+En0CZ/EAsI3QfolyLrPbaIORNZ/Ljut
v+s/u4VErNZn9+g4t//WZUmdltRnfe7PH8hMK8XYRQ9OyW0uQvc1HfPsClgw
RUpt4ySZTjz5QBz3asfjgvH7dR9+buE5DxZjuhoIj+lsmEvoa7yuJ/V1sl5F
1qlI38xFwkdDPmcc4QshfSKkP4TX9zXk+Mn5qCLmYaHFnA39uuUkoobkW+Oe
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
NetsDYthdOM1z6eDbFiw3uDukHwj/Nyhed/8QDFGzdo7IGTaCfSrp55dm5mK
JtA/yzOlCjL2rtQVDmSBPqEv6/+hLwv/sn844XYe6K+OEehwr0fNw8fCVSS7
wOXQz1/RoeVYWDqilX0/DVkas4x/ybDhyhzbc2fTmaghtGlTuOBjvLx1ir/N
vVZoThV5vuQiAxLLAn2+LihDq7S0cJklvH3Ol1J2fQibdBkeaqeMSvdnwok2
SSs9Dw5Y8HUmJeo3YW0k38rNu5pgYm+GtGUGHdJdU5M1zmehf9TiwVmWJ9HI
JLxz1QMOBOma2M8ZLAJOqaCx3NJGPNPnN/udZSdIhNboMxTT0enBuUBpm0IY
dPI0WFzMBrVHgbTMJz7QMr/nNHtZGjqr7Dydwc1vdyj2C6a1v4DL46K3Zq6P
hIeXlzIVOjlgez5GUOJQLmYOIZU2KRylVorOnGzMgZ5V19b9jE+EEwX24xYs
KoJp49357nSyQUZpfF/rxSZ8wvzId6GlHL69zfUU2s8EXbeBp8sm0XEuiE3b
kVcNdW1xapBBgf4FzUsddGmgqqfyaaZOICjPUA+WqqPznDe5pDfLVl0qxpE5
C3ICmkLRu63b+cgPNhzKNNXeMOsxBpn1XuK/9Q5X2kuzZ/7gwMeb7Zkv8rIh
hMCTn+4OCwywQUvs88FJr9pQ8PWh6gm1VRAW+FDleDANPOyGuyefpIKIE/78
rkHBn5ybDYoZrbB+x45q7wMBaJy69tbcqjb8dqlNMmZzByi916CpyJfB3fnd
OicvMFBJ0bcvc1Er7Ba9GvleIwfGW2JF1e0OXECnDTjFU8F9/cYvWfkzcYmE
0oZnnjT8OMfY+rU/HcyXVuxdL5IKWxlbtQKkabi0a4anxGc6tOZ8i98gnwaH
74cuD41NQ/6mc5NdzTkQJxXvkDHhPUQRWBlxrN6am/8s4FUH83NpctpbC42T
LcWMuruw3van5ZobmXDncGzY0KFgkNEImJE0k41FTlKN1OBKkEvNUk69m8vl
95ZrpmYxEe9M7flg3QKTl++X1e9OA9m+t+sW7y5ES1f376u551ryl6P5FWVp
KO1yMed9VQGsFnnId76eDcbmIlPin+bi/vEb3zAymbDIQ/RImlULHNM254tl
v4UTEo836WAXPHcRfZc0qQE+WtMMDZOqMDnAR9P+Egsyguzebm/KhLkE35b6
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
PwBKhAyw
             "]], {}, {{}, {}}},
          Axes->True,
          AxesLabel->{None, None, None},
          BoxRatios->{1, 1, 0.4},
          DisplayFunction->Identity,
          FaceGridsStyle->Automatic,
          ImageSize->{180., 173.835125167882},
          Method->{"DefaultBoundaryStyle" -> Directive[
              GrayLevel[0.3]], 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "RotationControl" -> "Globe"},
          PlotRange->{Full, Full, All},
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}},
          SphericalRegion->True,
          Ticks->{Automatic, Automatic, Automatic},
          ViewAngle->0.42769327351158737`,
          
          ViewPoint->{1.4906133634770704`, -0.4396176692630523, 
           3.005795752458129},
          
          ViewVertical->{-0.8520123936748782, 0.2512789109959894, 
           0.45927528772303206`}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.9062993060964127`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"b9ecfc89-edf8-42c1-811e-685fa8af3856"]
}, Open  ]],

Cell["\<\
Remember: 
- ClearAll before starting over
- log coins and sites lists each time!!\[LineSeparator]\[LineSeparator]- \
starts with t steps!\
\>", "Text",
 CellChangeTimes->{{3.906194232466401*^9, 3.906194259627555*^9}, {
  3.906196982977228*^9, 3.906196983307802*^9}, {3.906209274523299*^9, 
  3.906209280097521*^9}, {3.9063079893055563`*^9, 3.906308000138447*^9}, {
  3.906313125988235*^9, 3.906313134014065*^9}, {3.906315457852294*^9, 
  3.9063154582923803`*^9}},ExpressionUUID->"46a3a831-0d98-43c5-ad74-\
c16d7ad6fa55"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"startChain", "[", 
  RowBox[{"21", ",", " ", "500000"}], "]"}]], "Code",
 CellChangeTimes->{{3.9063159738417673`*^9, 3.906315998212283*^9}, 
   3.907215853740334*^9, {3.907225950604105*^9, 3.907225951993981*^9}, {
   3.9072260151679783`*^9, 3.907226015402697*^9}, {3.907257505608597*^9, 
   3.907257507620446*^9}, {3.907257913059774*^9, 3.907257915322873*^9}, {
   3.90725846296768*^9, 3.907258465289344*^9}},
 CellLabel->
  "In[308]:=",ExpressionUUID->"0b6cc787-dcb9-4e33-a5db-df9d319ab59d"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Running for \"\>", "\[InvisibleSpace]", "500000", 
   "\[InvisibleSpace]", "\<\" steps...\"\>"}],
  SequenceForm["Running for ", 500000, " steps..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.907258500813828*^9},
 CellLabel->
  "During evaluation of \
In[308]:=",ExpressionUUID->"daa01159-4c4b-456e-8793-91134bdd765a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Logging every \"\>", "\[InvisibleSpace]", "20000", 
   "\[InvisibleSpace]", "\<\" steps\"\>"}],
  SequenceForm["Logging every ", 20000, " steps"],
  Editable->False]], "Print",
 CellChangeTimes->{3.907258500815646*^9},
 CellLabel->
  "During evaluation of \
In[308]:=",ExpressionUUID->"245fb182-8c01-4ae6-82f3-49b76497b599"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "CreateDirectory", "eexist", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"/home/nupurj/Documents/Dimer \
Models/code/output files/coupling_21/\\\\\\\"\\\"}]\\) already exists.\"", 2, 
   308, 94, 24090854558324277753, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9072586652379923`*^9},
 CellLabel->
  "During evaluation of \
In[308]:=",ExpressionUUID->"e522afd6-2ad2-4c87-9828-46646dd4f003"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"-- The height difference after \"\>", "\[InvisibleSpace]", 
   "328794", "\[InvisibleSpace]", "\<\" steps was \"\>", "\[InvisibleSpace]", 
   "0", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "-- The height difference after ", 328794, " steps was ", 0, "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.907258665286923*^9},
 CellLabel->
  "During evaluation of \
In[308]:=",ExpressionUUID->"c6336191-d2ac-4db9-8e8d-9e3b3b53bd00"],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.907258665296146*^9},
 CellLabel->
  "During evaluation of \
In[308]:=",ExpressionUUID->"dc0cabec-20e7-4b14-a4b6-994d897d2de2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The chain took \"\>", "\[InvisibleSpace]", "500000", 
   "\[InvisibleSpace]", "\<\" steps to converge. Here are the results:\"\>"}],
  
  SequenceForm[
  "The chain took ", 500000, " steps to converge. Here are the results:"],
  Editable->False]], "Print",
 CellChangeTimes->{3.907258665298711*^9},
 CellLabel->
  "During evaluation of \
In[308]:=",ExpressionUUID->"b8b5b1a0-5681-4c8a-b04f-dbd7a63dc997"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         GraphicsBox[RasterBox[CompressedData["
1:eJztmmtIU3EYxhejFMtlkjiNRZJlSZC5QtHqCRScaRQTMy+MUOwiWmRipZCX
Uqy8YBqhKOkHN4kVXgYWimXYtBDXHMPb2pzTeU+/RMsgQ+xb/IOBx3PO3IHD
OR/eT+f5vc//Pe/7eiXeFCdzORyO29979T3L2F9QLlnAmYiYppK7C/AWNQyp
A+fhqOxqSOLNo/B8UPll33nMyVbkP3fN4flLxccTnbPojxKkC3WzUDjE5XnN
zeBAmWzS4cYMdl/iRG0rnUH2VUV0ePc0FLert44IphGfYBIOYxohPTzfW7VT
KHGqSeUGmGExnM1MfWhGTkfMq0i+Gcn1tZojFyZQmdTyZqV3Au3NdX6HKiaA
wBdBF6+Pw3/K49dTZxMs0plWLs8EvqquPid/DKqUvFMHxUYcr/EPMBQZEdoo
bnXw1GPwk8fjYL0BkY1jS/miMcS0JO13OToKXqdflS//K5TXBNHnXPRI6cio
4IcOIawlrNFDPILvufd6K8tGcV9ZwPWK1SJHKmlzLB6Ed5U2WMcbhkgaIpuq
1aBZN5AiqtFCtXTFWe8+CNfCLRGvx9WYcA3bWyTXIFtk0Rv2aaFLfvctw+cL
3MPb1T0davjUPWoyHtYg8smy952hPlT8ljjtrFZB88Mz3+SvhnzPYmmxthde
6ctZnebPWJTGZxat9GGH3GSpH+hG0+SzuTShEkGSvOnwqh6knRxKbFO9x+nY
YwmC3C48cJPFbRd+QHXV6vX2n6dd3/XVly08bDZ97Tys8cA0fanmwe4PazxQ
rS9d+U6Kt58XazzQlb92Hv7PA9X1JF35yzQ/p1pfquOt5YEuvaiOZ0u+01V/
Mk0vuup5uvyBLv9hmn8y7Xvaqv/Yajzb9bLV84hp+cs03qiur6iuP+nibbPx
YG28tf+PTPMHpvkn0/Ql+YO1/aL16j/QVd+yxZ+p7o+R+jnrxYNd343pZ5Li
Sf1YUv+WaTywpf5fL32t7Z+T4knzF9K8xlZ5YIu+1s7LSPGkeStpPst2Huj6
P6KLB5K+pP0K0j6GnYeNOa+p1pe0T0Xav7LzwK78JelL2p/8A6e2DeI=
           "], {{0, 
           0}, {21, 21}}, {0, 1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic}], 
         GraphicsBox[RasterBox[CompressedData["
1:eJztmmtIU3EYxhejFMtlkjiNRZJlSZC5QtHqCRScaRQTMy+MUOwiWmRipZCX
Uqy8YBqhKOkHN4kVXgYWimXYtBDXHMPb2pzTeU+/RMsgQ+xb/IOBx3PO3IHD
OR/eT+f5vc//Pe/7eiXeFCdzORyO29979T3L2F9QLlnAmYiYppK7C/AWNQyp
A+fhqOxqSOLNo/B8UPll33nMyVbkP3fN4flLxccTnbPojxKkC3WzUDjE5XnN
zeBAmWzS4cYMdl/iRG0rnUH2VUV0ePc0FLert44IphGfYBIOYxohPTzfW7VT
KHGqSeUGmGExnM1MfWhGTkfMq0i+Gcn1tZojFyZQmdTyZqV3Au3NdX6HKiaA
wBdBF6+Pw3/K49dTZxMs0plWLs8EvqquPid/DKqUvFMHxUYcr/EPMBQZEdoo
bnXw1GPwk8fjYL0BkY1jS/miMcS0JO13OToKXqdflS//K5TXBNHnXPRI6cio
4IcOIawlrNFDPILvufd6K8tGcV9ZwPWK1SJHKmlzLB6Ed5U2WMcbhkgaIpuq
1aBZN5AiqtFCtXTFWe8+CNfCLRGvx9WYcA3bWyTXIFtk0Rv2aaFLfvctw+cL
3MPb1T0davjUPWoyHtYg8smy952hPlT8ljjtrFZB88Mz3+SvhnzPYmmxthde
6ctZnebPWJTGZxat9GGH3GSpH+hG0+SzuTShEkGSvOnwqh6knRxKbFO9x+nY
YwmC3C48cJPFbRd+QHXV6vX2n6dd3/XVly08bDZ97Tys8cA0fanmwe4PazxQ
rS9d+U6Kt58XazzQlb92Hv7PA9X1JF35yzQ/p1pfquOt5YEuvaiOZ0u+01V/
Mk0vuup5uvyBLv9hmn8y7Xvaqv/Yajzb9bLV84hp+cs03qiur6iuP+nibbPx
YG28tf+PTPMHpvkn0/Ql+YO1/aL16j/QVd+yxZ+p7o+R+jnrxYNd343pZ5Li
Sf1YUv+WaTywpf5fL32t7Z+T4knzF9K8xlZ5YIu+1s7LSPGkeStpPst2Huj6
P6KLB5K+pP0K0j6GnYeNOa+p1pe0T0Xav7LzwK78JelL2p/8A6e2DeI=
           "], {{0, 
           0}, {21, 21}}, {0, 1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGAQhWIQe2e3gevOLS/sb7gvX1cz7a39yYjcf/Ff39tble+O
m6V0zn6O8aIt5j+u2L9YpPg4cNUre4X3odrCdUftGaBAZMvJh5P9LtuPmjO0
zBnq7h9s5gx19w9Xc0aavbjMGWnxMtL8O9LCGZf60XJpYN0/mh4GNr8MlHsG
W7jROpxprZ7W4T/Uw2Gw5fehUs4PNvUDVe8MNvcMtnJ+qIfncC1/hqv6oR5f
w7U+Gmz5d7ClN1rX+0PFnaPpgT7xMtjSw0irr0daOA/X/DjY6sGBKh9G43do
5a+BMmeotP+Hir0jLT0MlfgdLecHZzgPNneOmjO08t2o+0fNoac5AL1Qpvg=

           "], {{0, 0}, {21, 21}}, {0, 1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic}], 
         GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGAQhWIQe2e3gevOLS/sb7gvX1cz7a39yYjcf/Ff39tble+O
m6V0zn6O8aIt5j+u2L9YpPg4cNUre4X3odrCdUftGaBAZMvJh5P9LtuPmjO0
zBnq7h9s5gx19w9Xc0aavbjMGWnxMtL8O9LCGZf60XJpYN0/mh4GNr8MlHsG
W7jROpxprZ7W4T/Uw2Gw5fehUs4PNvUDVe8MNvcMtnJ+qIfncC1/hqv6oR5f
w7U+Gmz5d7ClN1rX+0PFnaPpgT7xMtjSw0irr0daOA/X/DjY6sGBKh9G43do
5a+BMmeotP+Hir0jLT0MlfgdLecHZzgPNneOmjO08t2o+0fNoac5AL1Qpvg=

           "], {{0, 0}, {21, 21}}, {0, 1}],
          Frame->Automatic,
          FrameLabel->{None, None},
          FrameTicks->{{None, None}, {None, None}},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
4phf4fv8Ai99jPMEv+FH/Kbc70mfQn3CT7udWpn6s/0kT3I/F/DzPTcD/G6J
d+0nfNvPPbzvS7zTJ3zbT3DbT+KYX/6OqZX5fO5rvcQ7fcK3/YjfLfGu/YRv
+wEvfRLH/Arf/id47ltfzPYTvu0n/Vd0XS/x/J7SJ/zgNwP8bol3+nxbXpc+
/p7vS7zrn8Nv91X6gJc+xCl9/N6plXn+Rbf1Ek+c0if84DcD/G6Jd/kV/txK
1jG69mOcJ/jtvkof8NKHOKUPv2c1tTLjp/y+9RKvedYF/Oh5M8DvlnjV+1f4
5n1wn1+Joz7hz3+UpQ946ZM47XeUPuGnH55amfF3dF0v8fp9F/BzPzfgtp/E
sf2Eb/8DXt+fOPbP4bf7Kn3AS5/Eab+v9Ame+5la2eZjNW5cL/Gu/YQf/GaA
3y3xrv2Eb/sJbvtJHNtP+PMfZekTfvt9pU/wNu4tfYJnHjG1Mr5Avm+9xLv2
E37wG3DbT+LYfsK3/YDX9yeO7Sd820/Kdr+lT/A2ryx9gmceOrWyfa7mresl
nnlc6RN+8vEG3PaTOLaf8G0/W3jfl3j5XU/g7XeUPsGbz1D6pGy+ROkTPD7G
1Mr2//I91ks8PkDp0/DMi0uf4LafxLH9hD+3kvWaGs9/X+LJi9IneGsnpU/w
5lOVPsGbr1X6pIwPNrWy+bLlm62XePy30ie4/Vlw2098X9tP+Laf8DP//Q7e
8qL0Cd7aSekTvP3u0id4u8/SJ/hE2Xzp+I2lT8PjW5Y+DT/S/xU/93O3xMt3
/QpfXze47SdxbD/BbT/Bm+9d+gRv/nnpE1wfPte/tTL65Dp+ZPT5veHxXaNP
4sRPy/0lTp6z0SdxHD8njs+vxMk4N/okTusPS5/EyfMt+iRO45U+iRPeROl6
RK7jR0afP7cyvqvjBdcREmduvzP6JI7Pr8RxXeBPS7z0+fMSL30SR381cfTt
E8fP68tbxo+MPlmnSTuJPolzR4lfUvokjv1P4ujPMy8sfT4s+aVP4jTeyf6j
6Vb6JI7+fJ5nyZc11/EjLyjTTqJP4sytjD6Jo2+hnxR9Esf2kzjprxx32H4S
x/bzlyVe+jA/WE2tzHgo+bLmOn5kPp91Hf3DxNFfTZy5/c7o83HJL30SR381
cWw/iWP7SRz9+Z+X+BvjgJqfTa3MeDr5suZafbKuk3lc9Ekc56eJY/tJnLnh
0SdxbD+JY/v5tOQfGTev9Od/WeKlz6clvppamftLvqy5jg7RJ+MS2w8+Yv0/
cfTPviz53XzX9mOc6PNliZc++lLR5/MSL32+LPHV1D7n+cPoo3+ccVZw/MOK
E779NO3nhL9Y6wz45yvHU4mTfhf8yHxspT+Gb/fmeB3/sPyglNEHH730EY8+
uVYX/WZ9RNpPxXF+Kj/6fF3yS5/Esf3gX5Y+4Kup4eZD9Mnvy/dEn+D5XPTx
HFTiwS99gtt+3G8XfYwTfYLjP1cc20/46kOc1dRwffg1vHxP9AmO/1xx1Dv8
ufGiD/FLH/chRZ+/L/HSB7z00c/HRwi/9PG+puXvKjz6ZHyW74k+wfGfXX8o
fcK3/QSfl593naf04feUPsHNL9dDog9xSp/gaSdTw/Xho4/rBtHH9Zbo43k0
55c8v06sa5U+nuf6Tml+0T+VPpz/Kn2IU/r4HJgarg8ffVgfKH1YVyl9PCeV
73GdSv/P/gc/v+7H9cCnZZnvK304J1X6sO5a+gTP839quOeVos8P8OgjHn08
3xR9wlef4LYfzytFH/nRJ/j8R1n6cJ6o9PmxxEuf4Bk/Ti2e53qaPuWLoU/5
jPjPR/38+KCcx4k+b+IZ/+Ln53sqDvpUHNpPxcm+jPi24NGn4mT+MS3j1bws
+nheJvp4Xkbfl/ZTcdTHdXLnB4x/Ks7crqNP8M/Lz3f7gKIPeOkTPPPXqcVx
3SP6uF4UfVxniz4+H6IP696lD+O10sdxXPRhf0rpw7yq9AEvfdhHVvrof0wt
jusb0cd1oegzWE+rOLYf1/9dt7T9BOf5V3GSL+6Pa3jpE7zlS+nDfsPSJ3j8
s6nF8VxD9PFcQ/TxXEP08ZxC9OGcQunDOYXSx3MH0YdzBKUP5whKn+AtX0of
zguUPsHjv7r/O2X2N+c6Pu4ZvPhz5+DxpS7B48dcgceHuAZnX1rwbh4cPNfs
v3CeUbjnv4J73jN4+g38oRp3Pw/4+JE1zsLH7dbzgue5ulvi9Txh3aX60QO4
57z0iVPv+utn8NI/n4PnuXYJnvHAFXjGUdfg7jsc+QHi7j9i/trNC91vkvpy
HBf+ZoDz3F5Z784nXCe03h0/7gY463A17jiAe65Tnzv17vqA607xR11viS/o
OkP8MPz18oHwTd1XWvjcrucB3/l9eM5rPQcU3HO++gSbAZ9xh/s/Cvf8cHDP
kQb3PKF812U9j9TwGp96rsZzOPrTZ0te9bfnS9x9+R3/Cnxu1+zn7uo9uP6W
Ppb+VnjOy613/R7nYda7v+d5wHe/TvqB1wF/O+DvBvz9gH8A9zySfmjqXX/9
bMA/H+CXXKcerwb4Nbj9vPwZXF9TXF8BH7Hz8x4H/A04++E6PvPDiv86wPXJ
gztutt7FD+BpD55z430+3frA2fF93PNF0YFzOJV3nieh3rv4twP+DD7yp/WP
5bs/mHP93e/fgLsP0vgv4NR74bx3oOPj/1de7wf8AzjvYet8+tS7/vTZ8X38
HJz3s3X8qwHf8y28r6njz+DtuvO3Ui/6gta78R8HfPYfO57v+C/g7neUvwW3
3uXvwd3PFNxzsK4zpJ/XXz87vo+fgyfO5QC/GuDXA/x2gM/g9vOuv+lr2s8b
/3HA3wxw91Wz37dbL3UfLfs7u/i7AX8P7v4217GT766TJN9dHzg7vo+fgycO
5xVP1HvHvx7w8cOqH5jBGdd164euCzGu6+I/Dvgb8PY7Kt+D896ebj38dcDf
gif+bsDfL/Fuv2PwjM9bvXc+fc6N60+fwed9Td160SU45z8Lp967dTn2a1vv
3Tqw+wuo98KZv3d89iF63qNwzj+UX515q+fvM8/V3069bAf8HXjm0Xtw978G
z3w8+e46Q/Jdf/1syS/f4Bzcc872W/j3K/Nd3PUi189d53d90uf7YF9Ax3cf
E+d/uv077puLT+V+1eC+XyG4vn18sB14fLM9uPuh3Qea9zK4TpL3OLg+oO/L
+5q69TrWGTzX3a0Ps651ot67/QgzOPXe7X9x3b59vtsPwnt73pg3d/v7kqfu
i0yeut82fPcpx8f2/RnxvV2PiE++B59aeQCP3+4+8fj2nl9Je/PcT9aVPI+Y
/SSe48z5AveHpj91X236U/f9u8/b94W4j9v3ZHi+332XqXf3G86tdJ8L51m7
86nuawjueaD0L/q66V/0ddO/4NPWeDH73dPvp3/IPu/g0cX360SXj+Dp9z6B
u2/S/cmeg+dcdYd7bjX9teft0l97zix8zw8lnz03k3z2eZl8xkdduX4WPHGT
X+kvomfyy/cQ+b6iuf1+fMiV8/LgyTvP/bgvIXj2M+P71XzmN3y85EXyS/xn
8Pb7u/MiwT0nEdzz2bl/z3Xl/j3PFPzH+/hJPy3tRz8tfP2x5O/vS7+rdGj5
1e0j/QDOPvVuveETeOJ8eT9O9z6qtAfPvXFev9un6jkn9pN1/B/gObeOf1XP
XcfNee56LjHvT8Cnqvr9dek7Fd7yq8P/Ch5dRu+H8FxXrj3/nH2D+DY138Bv
qXr/Df8k/09+if88wH8Bz/1+HvDdd2x+GcdzNuYX7xc56WME18eIzvoSyaPf
lz5D9UvJryc+9+H4Pv8jeO7nE3j0+QKeevdcrPnl/kDfA8Hzq4vj+9vYh+f7
Wt7wDWp87Hns8PEN6vy7/kDa06/L+X4911p+Ha1Pzy+O3uvAez4KZ3xYePZ9
OV+OL+A8N+Oc35bz1hoXtfzqzruzD6jaD/unqp18HuDupya/Ru+J6d6v8wM8
82Hnj5k/O38M7nww4+Tfl/O7Gle3/OrOtX8Aj24fweP/fAKPnl/A8Zu798H4
no+54b4fJfnpe3dST74PLPXqe+YyL3W+lvPsztdyjtv5Ws4vOy9Lv+8574zf
PR+f/Ve+tyP3O4On3/AcVdqZ58/cdxg8+eZ80jzzfXKek0g79/0QqXf3n6Rd
RR/3af0Envr1PJzvVfI9Ur5fIfnpewXST7GeXuNnfYH0A9Fn8B6vbrxKv1y/
03Xb8Js+3TjnJ/D0R6yL+T6twnPNelbp6ft0cu5mO8BZh6rxR/RxXMG+1679
OH5wvaP9/ujj+3KiT/ec8v0ftJ/uvV+eR0/e4QPXvm792+zX1b/NOI99l77X
p3uOeI45zwt9QvdTJu8y/+c9iDXuYT9bt587uO+fzLzYfXvBnffqJ+AbdO/j
Ct/xK/upOh9cvcL39+f+7V+Cq0+u/V7wxD95n+slbv/VzQeZ9zmf6eaVzONS
dusZjFc63Sfi+T4x8PpccPVxftnid+N52pn9ePHxC1zvK30Yn68Yh3f60E+f
GFeXzzUt/6//cqK/rDL4zPemneLDll9NHgb3e2scgm9ScZj3+v7L7r2qvNel
ex+t46L0M5wz6PzH4O4Da3jnd4Tvun741nf4jr8bfnT8lzj2I7mP+AuMfyof
Gf90+q6X31txk0/6qo6LOO/e+T74h55/qnp3ndh5C+c1u3UR/VnGqfZ33fw5
OOs3Xf+JjvrIo/Ok9otdv4Y+7i+qPB+cD5X/5viH/cT2hye/P7/v6X38jfHP
iedIt85+scTdD+J6t/2f/pHn0fM7i896revab45/2OdduqqHzyWf58w/C/9w
/H/O5TW9
            "], {{
              {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], 
               Specularity[
                GrayLevel[1], 3], 
               StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmgf41tP7x5/nc86JSBRpIEW2SFSoSGWVEEKiNJCRbAlJCWWv7JmEMpKS
XfbIlj1+9t57/19v79v1v67Odb+e0+d5vp/n85xzj/d92g4bvcuhVa1W+1+q
1fhXa86oMzR3EROn8eJSXlwInwpfAk+FT4cvg8+BT4QvgE+HD4fPhCfDR8Bn
wWfDJ8DnwxfAE+GL4XPhcfCF8PnwBHgq/DSjG3//TV4/B/eC34Wfh3vrXuFT
uX4UdgpzDZhbmbES4wzmj2H+HObPg0+GL4LnM1rx/w/yehHcHX5L98o1x2LP
Ze4S+Ez4Cvga+HL4evh2fde6X09n/jrsTczfpmcT/3cp82dhr2T+Mvg8+Cr4
Bn123a/r8XxXZMzj/1pg72XyLrglfD88l3E14xrGnfqMeH0dn3kl9gaunZb8
/zPga+ErdF9wiWeg73k3c9N0/xpccy32Rq65HD5fnwk/w9iCa9/m9Uvw9vAH
8CPwhvDL8MPwBvBL8CTeewh2MnMPMdoz/yKvH4c3gV+Fn4C7wK/Bj8Id4cXw
nrx3FezezA2EW8P7wHvAreBB8FbY9RjrM4Ywvw52OPN7wavCg+Hd4Gb6PHhX
eAV4D/gxxsb8rVd4vTvzLbF7MTcAbgEPhF9kbMc17/N6Bey6jHUYSzHaMFbV
c+OaVbALueYpeDP4DXg57JqMNfQ3mN8R+zHzr8G7wJ/Cr+ue4M/gxXA/+CN4
2XhfO60/5tfCPsP8k/Cm8OvwvZX//qPwPXBr+GF4aWzbuL/7mF8N+zjz98Or
w0/CCyt/jxfgBfDa8HPwA5X/5tNwz3iu7bW+eSYXaI3x/1fDl2itVH5vU65/
tu77bAIvis9fHn6+7memZ9es5jXQPNawvp++53/PSVbvfy32svba7/Cx8N/w
N/B+8A/wV/BQ+Dv4a3gY/D18HHY4Y4T+j/kDsD8x/xk8CP4qvmNj+Cl4bFyr
z/2W+f2xPzL/Jbyv5uK5LQM/EftOPu++utdGx1g/L8Abxbp9Fe4avuhluHOs
7edi/WtfPAuvH3thcax//aZtYm3pN9Tv2xD7SN2/p+YahR+Qr72n7r2rPfyf
P5NdItak7IJYG0vq2dft0zL8QOy1lWPdap3osx+Db5Z/lQ9kfMH8Psx/Ax+N
HVLzc/lE+xD7BfMfw7vDn8OfwnvCX8LvwTvEen5DexV+B34T7hn++X9wX/hD
+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
6ybbzZlfR3mc1iTcLvl9m8AbJ9cCveDV4MW6F3h1+BWtAbhDcn3Ro/J9qY7Q
e7pHDFXM1d9RHfFz/P1f43Xn5LltuKYL/FvN8fpj7J81+9ZNmf8dux3zXVPt
X9FO8V3P5of4e5sw/2PNdWgn+Cd4a3jL5Nx+p8q1asOI71vBS0VM75lcj+wC
L2BNT+H1vtgtsCVygM0jr1BO0i25Ztmh8nP6tw6K5/11vN6Qa77Abhm5hPQ0
aV99k+s7aWvbJddu0s2kuXWIXGj9iI3/aW9bRd4wNOKOYpnyHGlu0tmUn0iL
k3a3Y3KOKl1O9e/Jco2V69wJWrKKjVzzAryR9j72ZcZLNecw7SKPGhaxUjFO
+p7uQ7Vq/+RcV/mYatgekdsol9s6YutGEc8Vo3tFXqQcqX3y79pd3xH+CO4G
rwd/CHetfF+f1Hxdb+aXjZxK9/dZzbXrM4wPYh09k6wbd+f32jq55h1QWZ/s
FPmnctE+kRvsF3mCcowRkW8of+gQ96vvIJ1zy8jflH8qD1curdxTOajyadXs
yvGU904qzkEbYR9K1qykXT2crH92LY4RineKU4q/4+N3+SviVz380tTwe6rz
5oYvbRH+Sn5J/kfxUTFOcVsxULFQ9Zzq2cbhuxS/FJs6x77WHtceeSf8T6fw
RdrvulYxTzG4dfhwxSnVoDPDT8pXK/YpjqvuVF3TpvI6Xxx+QPWrcstW4Z9n
hz9Xf0GavPTMs5LzWGny0uelh0u3l+YvrV46v3oQ0sekhUobvxGeWVnDnwHf
XFm/l44/ve7ehzR56fCKbcpLpI+pJlYeu0rlWDw9/H/j8OGKC6pZLwt/rlpZ
9bvikera2yMuqP6+PmJBk4hZil+6R2l5N9Xty96LNfl9+Gz5J/nqx2qOU/Lz
j8rvVl6/WsfP1uzDH8GuU7lulqaxeuxT5Q/Ko1Rz31NzLqG98xzcIfbU87GX
tW+0f16s2Z8/hW0fcedJeP3Kv79izJPh/5+uObb+F2+eCH8gvyA9RXtT97hh
5e+2KO77h/h++jzFBV27ZuU9+lJ8xq/xPPRdFe8UmzqFn/8g9vvX4Tf1fx0j
lnWOuKOYqBgnf/pqXLdp+Ar5DcUXvV8xdLPwJ/It/8U/xUPFqQX6HSKuLaw5
f1BM1D12jPilWKZ493q8T7/Hn+GH9Fzl//XdFEO1ZtXLmV9370l2buWezl3w
nfCNyb2kjuz9KjsP2ba4Rlb9qxq/nr0OtR4bZK8rra9G2bnK9lz/V3IutE1x
ja++mPpo4+ExdffIxiXrHmfDpyVrVurlqR+nvp76dycn6yHnyQ8la1BnwGPh
Q+vu2S2dvUe0V05kHFl3r1D1vvqG6iFKc1B/UL3FJbJzue24t1+Sc+Ct4abZ
/kp+q3m2H5A/+D459+4l7Srbz8jfqM5Vz0K9i8eTtXpp9m2z17/2wXfJdUTP
4rpVPkt+7ufkPLw3858mx7gt4U+SY98WxVrf+Jr97hfhP+VHv0yuF3rIP4fv
lQ/+NnydfN5XyXXEVlxzSrIGpd6odAD1OtV3U76gWl69V/X+7oBnV+4PzoHv
qOyf1DvUa/Vh1atVD1dxSfWttCfVsLITKuebQ+P/1BuSj5lVue84Nz5L/dDZ
2Nsr9x/n6fMr6/a3wLdW1upnwbdU1u9nhs9Sj+lW7G2VdaFhdWtH6puqt/pf
H1VW16k2H4w9ubJONRw+pbIuJX1KOqa0DmllJ1TOC6R36LXqbmllJzE/Jlm7
O71yHT0QHldZM9kNPr5yzb5n3RqLcp894rOeSO7NdSvWnXatW1NSfJY2pns5
lvkD69bEpDtJH5NWJt1J9zipsm6wT936lWK+NAjpCtLN9BnSphTjpVn1j5xA
/6/vMKG4b7oEdmFxPBuKPb5YY/o5tE1pnk1C85Su8g62RXaN8540hOy+fNPQ
DFUvSVeUTq78Sfr/wGxdrkFo+8oLpfNLq5H+LH1mYvYZAOmrE0I7Wim0U2lK
0kKXya6/pD8fyxhbt+a8HHxTzZr58tm1j7TZI0J3lRZ6ZHbvXhrp6dm9Iemx
47L7+C1Dg5VmKz12t+weh3oQg7M1Q2mhKbsuk/45MjRbaaovJ8drxe1Xk/ss
92bXueqL3Qe/mNwLuyu7hlX/a352Xaz+ozTtO5P7qjNC+1LvU5rYB8l6gWrn
15M1EdXOfyfXbtK73kvuSz4Mv5OsO6imVh9hWs39hQOz++zShKXlStuXrrtk
du2pXsOwbL1WOvDwbJ1WOvNbyb3UB7Nr9mE16/P6W+pZq9+helz9sjvhu5N7
x9Kg1BORnqY+yGfJtaT6Dptka4/qy+yc3Zf/B9s3O4dXLr9Ndl2g+qB/dr9J
zczts7VT9WvUb1Luq/pDvSTl+cr3d8/WZqX/bwo3qbv31Cdba/0Tu1e2hqy9
sG+25two9HDtSeXOzbJjqdb/kGx9WL0G9U3Uq1LfZ8vs8wDqoWyWrQOr5zUo
W0NeMrR35fPK6wdka7aJ+X7wmnX3udSHkvauvpL6OOo3qaezbrb2q17Vhtka
r/pc6nmp16M+V7tszVl9MfW21NP5ItaPzg+oZ6S+j2p89YB2zNah1YP7OFnv
US/p62RNSX2fMdlnbNR3WD07L1Ov7Q+uubBmDVZ9IulJ6hn9kKxBqbfVO/ts
hvpQ6sGpv6a+m/pf0qWk2aq/plxMvbaW2bmbfEur7Pzuff3+2fmbenC/JmtZ
6jvcB69Xs+YpfbhNzbrxbclnHqbH8181nrn8lfykcoH9s331Hnyv/bL98O7w
wdn+fGDxfpHfVpwcX3zmQ7+X1lWrWG8HZfv5PWO/yN/KZ+8ba3ifiO/TI9Yr
X1JOrh7TSdnxVzmOYrfqFPWzlGvNjpxKudOsiOnyY4qnyqFGZ/v/vfi7h2XH
tUHFOcY1EfcnZ+daZ8beaRb7QutHua+0hPWzNZl+vLdHttahWn+rbN1gV9Wk
2ZqD9mDXbA1BtXu3XPtXx9iFay7LzgdUx1ydXQepNjo3O9dSPTQlO99TrNEe
bBx7/JTs3Gxy7HdpGrtxTadsLWVneKNsPWSnYv+gmnoA3CFbM9kRXi9bj9qh
eL8or1Z+vVa2jtG32Ocop1dNr/3yWeTFa2brS324pnO2VtMfnpSdQ0pLGZ+d
Zw4pzrsujxxMOqd0SOmf0h57wjOzNcleNeuQ6kFIh1e/QzH08cgnlVuqtlL/
Ufmkahn1RpWXzotceqXsOkh9UtXm6u/fCq+YXYupZ6qcU+coZmfX7NJXVb9L
/1QtL21TOoM0WOmlM5LPi6kvo5ykX+SryvnbRx57c/KZL/VHHkw+u6U+gnRa
5bfSZtVD0fkS9U0UB3vX3GfRmtFZrN+y4/JDkUs3ya5l1CN+MvkclPosynWn
Rn6rnoX6MupTqBejHtCc8A9zwieMzc6LlMsflZ377a0cJjt3GgwfnZ3j7VNc
m0iLUB9Zuf3CmnvT6neor6QeyiPJ583U+9AZgEWR26uWUQ6vmkL1hWpY9bLb
ZNew6hErz1cNq56yev3qoahf/2zyWTj1jF6Ae9TcS1Ic17k4nQfQGQbVvG1j
37WKPXhRdu0j7eGm4p6E6qkpxWcfV8feWqwDav1rr+n8VTt4erFmrVrm9mId
aufwdSPDR80rzjXl967MPvun/t0NxTqy6rXbirVF7bv5xbWWfN2I4nNLWm93
FefE8qWzQ8PS3jkn+0yg7vPu4ppNflV98AvDJ5xZfJ5yreLvqzNjaxf/vjr/
2VzzxWcBpf/PLNYutZfVc1Qtof7j3GJdTz7hlmLNVD7t0uxzjOsVn4W4NJ7n
rGJtdIdYM+NiLe1ffA5JeZr6+Ko31K8/q/gsqe7t7OJzq/rMU4v72bpP+Uad
G9QZg07h3+Rn9is+76W8aFqx1q/68fTis62rYK/NPlOp3mi38NXysRcUn5tU
n2J48Rky7f3zis+VdtB9FZ+nVJ0+rPjcmPzPhcXnF9X7mFx8hrVN+LGJEXcO
KD5rpVz0quzznBvqtys+p7t+cd92Wvhz9XyvCj9/Vvb5U515OLf43JXee31x
r6J3+GTFlO4RF3TGVfd8R7F2rNgxsvjslHLmDhFrFJsUU3Q2VfdwVMQyxb4z
is8Ha50fVHw+THmp+s6q/XTW5ZLsc7XqQSsO6vytvvulxedT1bdaM2KZ/P+B
xWenlKufWNwXV354ZfH5S2mzNxb3wKQVKO6PitxAcVPnQlU3nVDcg5ffO634
bGsr7Jxi3VzxdErER8Xle4u1D8XuccVnCJQD31+sd8h33VOsZSjWX1J8zlg9
NeUPOtuszz+k+Iya8v+rYfV1pCFcUXyuVPXmjOIelTScm4v7EIp31xX3tKRL
nFR8/lU59gPFeoF86cXF51bV17uquL8lXeLBYr1GMfHy4vO+0oovyD5fpzMw
U4vPpKqvd2H2eTzt9/uKNSD57UmRP0yOfEDnw7Uv7izuBygfuKz4rLZ6fGdy
zTl1n40ZHfmD8rpri/tn0jquKe6fSRv5Pxtzp5Y=
                   "]], 
                  Polygon3DBox[CompressedData["
1:eJw1mgn8V8P3xu+dO5OlsiSVlDYikUqRLJEtoSwVQhtl+ZE9JJIk2ZWULNkT
lWSJUMm+7yFbqez7li3+z7tn/r1e59U5d+be7/3MnXPOc54zzQadcsjQUOhf
VRRR/70v48uyKA6W/oqutZX9hvSVkm1kb5SK4iyNnyk5TTe8q/GV0g/Q+PMa
Hya7u+z+ktNln6M5x0m/SPoluvdN6Vtp7kaSpzR3veTxIZJjNfczXftZ+iCN
f6x72st+V/rXkjay62r+sNLvcLrmj5CMlH6xxuZr7GTN7yy7p+QEXXuW+6W3
0/0zZA/WnC9kHyT7ZdkbyD5J9v8kx+tZjWRfIn0M7yz7cslV0q/U3Kc01kBy
Yem/yd8+XvZ30o/U8xZrzqf6ez/IPpq1lD1V9gTZ90hulF1P80dIP09yru5f
P/lvnyg5TvYQ2V9L76P739D842R/I/sw2W/Jbix7rOzJeu6l0jeRjCr9Tufr
/oayL5I+UeNjpdeXnC97fPD6b5r82y6WjNL8Y2WvkL6/nv+cnn+b5k2SPUNy
s+zbZU+WPlNyi+wTNP976Udp/nuyb9H4eNnTJFNkH6PxZdL34fvKfkvjn8ne
V/Yi2XU0fprsUyUn6+9vLHs4ayEZJvsSyTjpl2nuwuR35F3Hyl4g+yM971vZ
h+t5b+vahsnPOkVykuaeKPtH6QM0/qHGb9X862RPl9wk+w7ZN0ifJZkq+yzZ
+0nvx36WPUb2MdJ7sMdkb6bnXVb6nXi3NyST9ewbJP9V/mZ8u3Okz+VdZJ/B
t5A9T/YDet4D/G3Jbbo2U/Z90q/P6ztH9hx0ye2yH5L9CHMld8p+W8+7WX/r
FkmU/k60PlWSpL8nuUP6nZJ1pT9R2o83kcwNXlPWdpSe9WSyz+K7F8h+XPY2
yX/7Ls29Wnrr5He9U/ZV0reVTOXbs3917/3Be2FyXr/HdK2v/tYRkndkzwre
O5Pyfumm+2/TWD1dv0f6Ys2/vfA7ryP90ehvyR5nr58l+xz2s+59QvbWkhvZ
WzxTY/vyfsQPPW8avqNrQzU2XPMfJb5Ef5spxDTpE6L941qNX6Hxe3Xf3dh5
v+6ja5M0dQOuS3+B/SZ7DO+k8edljy587WvZuxMfpNfQ/FulXxftb+M1dqXs
q6P97WrZl8u+L9g3xmf//1rj/+r+1ZItpH8smSl9lqSu9E+i9fslG0fvafb2
eay1nref5G6+r547Xfq8ck3oLhpIHtG1DzR/mvR7JOtJf1jX5rK3+Maa+KDs
h6XfKrlD9ozg2DQh+8dnuudB3fuQpKH0ZZI5ha9tIn2JZLr0eyXrSz9b9x9I
vJacofvbJD+bPXOTxmdrfHbpb3irxi8K9rX9cn4YLXsg+SPff4rsLtJ7EZNl
/6hn1JZeS7K99G8kQXpJHpH+rP7fjL0keVz3viq7pfQNJQtkvyy7BWshmS/7
RdnNpdeWPCn74uB35zecyffW/800VkvyhMa+199YW9fWkrRhr+nabtIPJWaT
34JjxTH5/gui88mYyvH3delb6ll1JAs190xJN/IDMZDfHx0PL60cz8/Q+N6y
+xLTdO1bjVelf3Mr5mp8T+If8VPjp8veS/oRkqGyv4t+1xqSbaW3Tf7292je
tdKflt5Y77K2ZJ6uPS67vvSQ98+o4HfrluPhucG59NgcD5vqGVfwPXV9nPSt
kmMBeYL9P0R/8wTZZ2vuI7JbJfsuMfd6jbWTfSd7j/0g+8rofHiV5l+mse2S
Y980Pe8a6c3wqdI5mFz8lP5vpHddS/KY5jRP9uVrmKPxzZP3MnkX/7s0Gi9c
Xvl9F5SOjcTIRzXnydK+U+V4+UP0XqspaS+9ie65vHQOGCt7C9kTS+eUa2Vv
mRzryJvEl1P1/+6ye0tO0kNbJsd67hmv+S2SYwF5k9/7P/3fKe+/4zS/s+yl
YBPJ1rJrac5OPEvXx0j/Wc/YSHYdSWfpn+IDmtuKvaXx5bJfAqsR+5P9+UXZ
L2T/XSp5jmdr/Kxk/2bseWKI9F8l9fXsepJdwXfEEI011fxTk30O39tF73Yf
WEr26xrfTuPnJOcrYgUxo5L+ueQ16a9KNpO+Ivq3bav5Zyfnr8f4FjkfvC+Z
J72Fxk/T+J+yN9PfO0r2CNlr6e/WD853v1XOJ9w7lz3N9+DDav7OGrs3OZ4+
o0tP5/hKvEVfRA6R/oukrub30TOHa/7K6Hd9RdJY+g66/qH0HyXt9cyVsn/j
W8n+TPZL0bmYnPxDZXxA/Cam/ys7kEM1fxtihsbeIibybD3nFI3V1JxNwQS6
9o/016P1hro2VOOvRsdyYvof+LuutdTYghx/z5C9peyFxDzWOjo2E6P/rpwP
78/5Bbxysub/qncZInuZ7D803hifkuzJt8l4ghz9i8ZfzHgDDPK97N9kNyi9
R3Yj1ul5v0gfrPGlGv8XTC+ZKHul7BKMFpyPyaf8Jn4b7/hX5Xw7JeMp8uvv
sjchnmnOecn5lzEw11cafyX62/OOv8ruqHlLWHtJO9kfESMKrwlrA156KOcv
8NMB+LCef7DmPoxvZX/7TdJR177iG0l/U9JceieNf8rfknTQ+D/4sO7vr+vn
6/7non/rdZLPqRFkHyv9GMknYNjoWuYn8pnm/y27OTmGGAuekTSV3gPsp/FF
0WvJMz7N8WCZ9N8lO4A3ZbctnSOOkb2z7BUa+1Oyo+xBsluVzlH9ZO8SXLv9
JekEPpe9dekc21/2sbJbl45ZA2QPkb1d6ZwySPbxsrfP+eBY2bvK/py9JdmJ
ekB2h5zPB1NfyW5TOkcNBLPr9wwsjMnB5vOjsXl/yRIwabTeT/KB7A66/z3p
30rasn+SfYd3PERzo67VDfa5Hwnayb+H3zVS+pfR9Sp167my/5W9FTlY0lP6
h9G+gg/hS+ClJ8n1YIKMb/Ct+ZINpP8XvZ6s6wWa/yz5TWPHS5ZXzlPkKzA7
eAocDZ4G04P3H4+ulagRqRXnRdeKYOZ3Nd5V9qYa2x9spvEnomtHaixqrT/B
CYXv+UrP3lHyEftJsr3ueSY6FuHT+Pb2Gl+MrxGTNb5a4y1L73n2/l/Re489
x957OjoW4MP4cpH9sXbl+PQHzy2M0b/Usxvo+lbBPlYn+n2Ij+SULSvHS/yR
nNRSdg09o72e0Q7Mkv3pk8I5aSuNdwmu7d/N75uS57LHD9P8PcBg7I3s3+to
fAeNdSQngM2S9x/7cDT1bc5XjSvnl67BsWFJjt8NczxoVDk/rpW8v9nnFyXz
De8U3gPNK68n78aeaUE+BpdIP494HbxfWW/WY/PKmJ14u0nlfEx84t3JQVvo
WpOc75pUzpdNc75rWnm/3h1caz1Yuh4kZhA78KGPZK8LzpB+Nj4NFgzOTR/m
/bCu5u9Yeo2O1rOnB2OtR0vjf2Iu8WrdHItf0Pj7zNe1ByrjRPAiNQP1Z81k
fAJOuTg55xC76+VclHL+26AyPlikeW+R73Tt7so1KfF6o8r5fBA5WeN76Nrj
1FPBe3Vx9vfXibca7yr7Sdkvs7/I57IfyfGHeIaPb1s5fhOfwTytZO8m+6vC
37BNjo/LC2OQ1jkeEi/BLPBZ9XI+blgZD8Xk+EccHCW9NrhZ4yMkq6XX1rWd
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
6g==
                   "]], Polygon3DBox[CompressedData["
1:eJwt1XlMl3UcB/CfgLd5oGDiAaZlm1ameRTeJ4EgoCAKCrbVOpa2jul0mpmG
F+KFeHX9UatZLrt02bV0WU07QAUVVNSCtvqj2mxtNno96/vHl8/zfn0/3+fh
9/y+z/Mb+NDS/CVxsViszGhrZPszMT4Wmw3btonFhiXEYg1Gb9aXvaMnUc7R
N5nlsY76hrPZbArLZ53YvawzK2albBArZblsGpvLurJRbCjbxfawcraXDWNV
bC/bwPaxWWwCy2EJbCi7k+1gu9mLrIoNYdtZFVvLdrE8Np0VsG5sNJvPVrLN
bAl7gg1mlWwnW822sSK2gm1iT7LHWRnbxPaF/289m8G6sH7hXv3ruAObry5k
qfqK9Q1ne9gBVsFeZQmskC1gKayQtWdFrIQNYAtYF1bCythgVsYeZEnsdnbM
dbuwRWwd2xU+x0p2D6tm+9kW9gqbybqxVHbY2jhWyJaxcvaovodZMVvNtrJn
2FOshK1h29gy9iwrZeWsOnwfa9hC9gLbzpaz59g8tpxtYI+xR9hiVsFeDvdl
E1vAVrEK9jRbyuJZAZvP+rAC1mrks0LWi+XK/fVtYFvC2nXsoPG9XCPf5fN+
Zv5GdA/V7LCvJsnTre3I+rA39f3t+DA/I9frGcNOsiPsArvEprAadpRdZJfZ
VFbLJjtfvNqTH2C/O57AWqP9aOxmzazF2jR1cPguB8p/RXuLZbJWli5/aNTJ
F11jHDtlfpLzxamJfD/7zfEgtlXdwVbprbRuHDsn/yJn6/vG/BWeog4I+6C3
3GykRudgn7A0eby15+Vfrc1np81PYx3UW/kb7Ibjf6LnVc0N74jpcrq+Wvma
nKHvuPkprK2axF9jfzi+Gb1P1DnhHZEpXzb6sP7sPX3J8iHjJ/msnhHsK/PX
WD81jX/E+spTXaMdS2avsz8dX4/2hzqQfcz6yceMRrnJ+WayOvP3Wfs1Oxeu
8S6r0XeL2iPc5zbyHH1ZrDg8v5PZXJbDFoVnfwa7n52WG+Xx1h41n8LWqxvD
++V5fWPZKbkhfL9Honcry1CLeFLk0V5hm1lleAY3skyWzrLCfrmDfWFcka/r
mcUaonehvjx1cXiXZOkZzb6Vz4c9/r75Mew7doGNZR+wL/U2sZ/DHmpkI/Qd
Z7Xh2XqLndB3nbWE/XKV9da3Vn0pvF9W6HmA/ShfCc/M5+Z/4J3UruH5uBn/
/w/VHHVeuAd5eiZGP16sO6t22BJ9djZOnRX9wOkbEj2TRnJ0v9lB3EOuN3pG
/1PYu53l48Y1uTk6P2syP8r5TrI6NpIdYp/qu8Suhv1cz86y7mqvsJ/bySOt
PSGf0Xc3e9t8BktUbwv7r72+/wApwdm4
                   "]]}],
                Lighting->{{"Ambient", 
                   RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
                  "Directional", 
                   RGBColor[
                   0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                   ImageScaled[{0, 2, 2}]}, {"Directional", 
                   RGBColor[
                   0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                   ImageScaled[{2, 2, 2}]}, {"Directional", 
                   RGBColor[
                   0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                   ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
              {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ckqhWEAx+HPPM/DXkJxA0JxAzLEDQjFgqVQZC8UN6BwjuGY55AkSTLe
gnALQnneLH495/8uvvMNFT3DnUNJURRNKVnhd7liKVFUxzO28JndHNSk3u0F
fnOVhalRdMFXfarK/mUDi120jTVsUod67X6OcpwznOOyVrTmZmJcZ5wbXA3n
4UwJe4ObTHCLm0Fth+wd7nCXu9zjvg60Zx+GzaNwxmOeaEmL7meW0xzjCPvY
rkb12NVsZRHr+eN5P/SiSvuc+Yzzy3ua54QG9GZ38ZHNPGUty1SqJ9cs4QOL
ec+i8J5VoDs7n7fM4w1zmaNsXdtZvGImL5nBdKXpwk4N35cp4f+T/r//H6DV
Qbw=
                "]]}, 
              {GrayLevel[0.2], 
               Line3DBox[{935, 1186, 934, 706, 936, 1330, 1426, 937, 1331, 
                1427, 938, 1187, 939, 1188, 940, 709, 941, 1332, 1428, 942, 
                1333, 1429, 943, 1189, 944, 1190, 945, 712, 946, 1334, 1430, 
                947, 1335, 1431, 948, 1191, 949, 1192, 950, 715, 951, 1336, 
                1432, 952, 1337, 1433, 953, 1193, 954}], 
               Line3DBox[{956, 1194, 955, 1378, 1195, 957, 719, 958, 1338, 
                1434, 959, 1196, 960, 1197, 961, 1379, 1198, 962, 722, 963, 
                1339, 1435, 964, 1199, 965, 1200, 966, 1380, 1201, 967, 725, 
                968, 1340, 1436, 969, 1202, 970, 1203, 971, 1381, 1204, 972, 
                728, 973, 1341, 1437, 974, 1205, 975}], 
               Line3DBox[{977, 1206, 976, 1382, 1207, 978, 1383, 1208, 979, 
                732, 980, 1209, 981, 1210, 982, 1384, 1211, 983, 1385, 1212, 
                984, 735, 985, 1213, 986, 1214, 987, 1386, 1215, 988, 1387, 
                1216, 989, 738, 990, 1217, 991, 1218, 992, 1388, 1219, 993, 
                1389, 1220, 994, 741, 995, 1221, 996}], 
               Line3DBox[{106, 107, 502, 108, 503, 109, 504, 110, 111, 112, 
                505, 113, 506, 114, 507, 115, 116, 117, 508, 118, 509, 119, 
                510, 120, 121, 122, 511, 123, 512, 124, 513, 125, 126}], 
               Line3DBox[{998, 1222, 997, 766, 999, 1342, 1438, 1000, 1343, 
                1439, 1001, 1223, 1002, 1224, 1003, 769, 1004, 1344, 1440, 
                1005, 1345, 1441, 1006, 1225, 1007, 1226, 1008, 772, 1009, 
                1346, 1442, 1010, 1347, 1443, 1011, 1227, 1012, 1228, 1013, 
                775, 1014, 1348, 1444, 1015, 1349, 1445, 1016, 1229, 1017}], 
               Line3DBox[{1019, 1230, 1018, 1390, 1231, 1020, 779, 1021, 1350,
                 1446, 1022, 1232, 1023, 1233, 1024, 1391, 1234, 1025, 782, 
                1026, 1351, 1447, 1027, 1235, 1028, 1236, 1029, 1392, 1237, 
                1030, 785, 1031, 1352, 1448, 1032, 1238, 1033, 1239, 1034, 
                1393, 1240, 1035, 788, 1036, 1353, 1449, 1037, 1241, 1038}], 
               Line3DBox[{1040, 1242, 1039, 1394, 1243, 1041, 1395, 1244, 
                1042, 792, 1043, 1245, 1044, 1246, 1045, 1396, 1247, 1046, 
                1397, 1248, 1047, 795, 1048, 1249, 1049, 1250, 1050, 1398, 
                1251, 1051, 1399, 1252, 1052, 798, 1053, 1253, 1054, 1254, 
                1055, 1400, 1255, 1056, 1401, 1256, 1057, 801, 1058, 1257, 
                1059}], 
               Line3DBox[{211, 212, 562, 213, 563, 214, 564, 215, 216, 217, 
                565, 218, 566, 219, 567, 220, 221, 222, 568, 223, 569, 224, 
                570, 225, 226, 227, 571, 228, 572, 229, 573, 230, 231}], 
               Line3DBox[{1061, 1258, 1060, 826, 1062, 1354, 1450, 1063, 1355,
                 1451, 1064, 1259, 1065, 1260, 1066, 829, 1067, 1356, 1452, 
                1068, 1357, 1453, 1069, 1261, 1070, 1262, 1071, 832, 1072, 
                1358, 1454, 1073, 1359, 1455, 1074, 1263, 1075, 1264, 1076, 
                835, 1077, 1360, 1456, 1078, 1361, 1457, 1079, 1265, 1080}], 
               Line3DBox[{1082, 1266, 1081, 1402, 1267, 1083, 839, 1084, 1362,
                 1458, 1085, 1268, 1086, 1269, 1087, 1403, 1270, 1088, 842, 
                1089, 1363, 1459, 1090, 1271, 1091, 1272, 1092, 1404, 1273, 
                1093, 845, 1094, 1364, 1460, 1095, 1274, 1096, 1275, 1097, 
                1405, 1276, 1098, 848, 1099, 1365, 1461, 1100, 1277, 1101}], 
               Line3DBox[{1103, 1278, 1102, 1406, 1279, 1104, 1407, 1280, 
                1105, 852, 1106, 1281, 1107, 1282, 1108, 1408, 1283, 1109, 
                1409, 1284, 1110, 855, 1111, 1285, 1112, 1286, 1113, 1410, 
                1287, 1114, 1411, 1288, 1115, 858, 1116, 1289, 1117, 1290, 
                1118, 1412, 1291, 1119, 1413, 1292, 1120, 861, 1121, 1293, 
                1122}], 
               Line3DBox[{316, 317, 622, 318, 623, 319, 624, 320, 321, 322, 
                625, 323, 626, 324, 627, 325, 326, 327, 628, 328, 629, 329, 
                630, 330, 331, 332, 631, 333, 632, 334, 633, 335, 336}], 
               Line3DBox[{1124, 1294, 1123, 886, 1125, 1366, 1462, 1126, 1367,
                 1463, 1127, 1295, 1128, 1296, 1129, 889, 1130, 1368, 1464, 
                1131, 1369, 1465, 1132, 1297, 1133, 1298, 1134, 892, 1135, 
                1370, 1466, 1136, 1371, 1467, 1137, 1299, 1138, 1300, 1139, 
                895, 1140, 1372, 1468, 1141, 1373, 1469, 1142, 1301, 1143}], 
               Line3DBox[{1145, 1302, 1144, 1414, 1303, 1146, 899, 1147, 1374,
                 1470, 1148, 1304, 1149, 1305, 1150, 1415, 1306, 1151, 902, 
                1152, 1375, 1471, 1153, 1307, 1154, 1308, 1155, 1416, 1309, 
                1156, 905, 1157, 1376, 1472, 1158, 1310, 1159, 1311, 1160, 
                1417, 1312, 1161, 908, 1162, 1377, 1473, 1163, 1313, 1164}], 
               Line3DBox[{1166, 1314, 1165, 1418, 1315, 1167, 1419, 1316, 
                1168, 912, 1169, 1317, 1170, 1318, 1171, 1420, 1319, 1172, 
                1421, 1320, 1173, 915, 1174, 1321, 1175, 1322, 1176, 1422, 
                1323, 1177, 1423, 1324, 1178, 918, 1179, 1325, 1180, 1326, 
                1181, 1424, 1327, 1182, 1425, 1328, 1183, 921, 1184, 1329, 
                1185}]}, 
              {GrayLevel[0.2], 
               Line3DBox[{442, 694, 443, 706, 466, 718, 1378, 478, 730, 1382, 
                490, 742, 502, 754, 514, 766, 526, 778, 1390, 538, 790, 1394, 
                550, 802, 562, 814, 574, 826, 586, 838, 1402, 598, 850, 1406, 
                610, 862, 622, 874, 634, 886, 646, 898, 1414, 658, 910, 1418, 
                670, 922, 682}], 
               Line3DBox[{444, 695, 445, 1426, 707, 467, 719, 479, 731, 1383, 
                491, 743, 503, 755, 515, 1438, 767, 527, 779, 539, 791, 1395, 
                551, 803, 563, 815, 575, 1450, 827, 587, 839, 599, 851, 1407, 
                611, 863, 623, 875, 635, 1462, 887, 647, 899, 659, 911, 1419, 
                671, 923, 683}], 
               Line3DBox[{446, 696, 447, 1427, 708, 468, 1434, 720, 480, 732, 
                492, 744, 504, 756, 516, 1439, 768, 528, 1446, 780, 540, 792, 
                552, 804, 564, 816, 576, 1451, 828, 588, 1458, 840, 600, 852, 
                612, 864, 624, 876, 636, 1463, 888, 648, 1470, 900, 660, 912, 
                672, 924, 684}], 
               Line3DBox[{6, 27, 939, 48, 960, 69, 981, 90, 111, 132, 1002, 
                153, 1023, 174, 1044, 195, 216, 237, 1065, 258, 1086, 279, 
                1107, 300, 321, 342, 1128, 363, 1149, 384, 1170, 405, 426}], 
               Line3DBox[{448, 697, 449, 709, 469, 721, 1379, 481, 733, 1384, 
                493, 745, 505, 757, 517, 769, 529, 781, 1391, 541, 793, 1396, 
                553, 805, 565, 817, 577, 829, 589, 841, 1403, 601, 853, 1408, 
                613, 865, 625, 877, 637, 889, 649, 901, 1415, 661, 913, 1420, 
                673, 925, 685}], 
               Line3DBox[{450, 698, 451, 1428, 710, 470, 722, 482, 734, 1385, 
                494, 746, 506, 758, 518, 1440, 770, 530, 782, 542, 794, 1397, 
                554, 806, 566, 818, 578, 1452, 830, 590, 842, 602, 854, 1409, 
                614, 866, 626, 878, 638, 1464, 890, 650, 902, 662, 914, 1421, 
                674, 926, 686}], 
               Line3DBox[{452, 699, 453, 1429, 711, 471, 1435, 723, 483, 735, 
                495, 747, 507, 759, 519, 1441, 771, 531, 1447, 783, 543, 795, 
                555, 807, 567, 819, 579, 1453, 831, 591, 1459, 843, 603, 855, 
                615, 867, 627, 879, 639, 1465, 891, 651, 1471, 903, 663, 915, 
                675, 927, 687}], 
               Line3DBox[{11, 32, 944, 53, 965, 74, 986, 95, 116, 137, 1007, 
                158, 1028, 179, 1049, 200, 221, 242, 1070, 263, 1091, 284, 
                1112, 305, 326, 347, 1133, 368, 1154, 389, 1175, 410, 431}], 
               Line3DBox[{454, 700, 455, 712, 472, 724, 1380, 484, 736, 1386, 
                496, 748, 508, 760, 520, 772, 532, 784, 1392, 544, 796, 1398, 
                556, 808, 568, 820, 580, 832, 592, 844, 1404, 604, 856, 1410, 
                616, 868, 628, 880, 640, 892, 652, 904, 1416, 664, 916, 1422, 
                676, 928, 688}], 
               Line3DBox[{456, 701, 457, 1430, 713, 473, 725, 485, 737, 1387, 
                497, 749, 509, 761, 521, 1442, 773, 533, 785, 545, 797, 1399, 
                557, 809, 569, 821, 581, 1454, 833, 593, 845, 605, 857, 1411, 
                617, 869, 629, 881, 641, 1466, 893, 653, 905, 665, 917, 1423, 
                677, 929, 689}], 
               Line3DBox[{458, 702, 459, 1431, 714, 474, 1436, 726, 486, 738, 
                498, 750, 510, 762, 522, 1443, 774, 534, 1448, 786, 546, 798, 
                558, 810, 570, 822, 582, 1455, 834, 594, 1460, 846, 606, 858, 
                618, 870, 630, 882, 642, 1467, 894, 654, 1472, 906, 666, 918, 
                678, 930, 690}], 
               Line3DBox[{16, 37, 949, 58, 970, 79, 991, 100, 121, 142, 1012, 
                163, 1033, 184, 1054, 205, 226, 247, 1075, 268, 1096, 289, 
                1117, 310, 331, 352, 1138, 373, 1159, 394, 1180, 415, 436}], 
               Line3DBox[{460, 703, 461, 715, 475, 727, 1381, 487, 739, 1388, 
                499, 751, 511, 763, 523, 775, 535, 787, 1393, 547, 799, 1400, 
                559, 811, 571, 823, 583, 835, 595, 847, 1405, 607, 859, 1412, 
                619, 871, 631, 883, 643, 895, 655, 907, 1417, 667, 919, 1424, 
                679, 931, 691}], 
               Line3DBox[{462, 704, 463, 1432, 716, 476, 728, 488, 740, 1389, 
                500, 752, 512, 764, 524, 1444, 776, 536, 788, 548, 800, 1401, 
                560, 812, 572, 824, 584, 1456, 836, 596, 848, 608, 860, 1413, 
                620, 872, 632, 884, 644, 1468, 896, 656, 908, 668, 920, 1425, 
                680, 932, 692}], 
               Line3DBox[{464, 705, 465, 1433, 717, 477, 1437, 729, 489, 741, 
                501, 753, 513, 765, 525, 1445, 777, 537, 1449, 789, 549, 801, 
                561, 813, 573, 825, 585, 1457, 837, 597, 1461, 849, 609, 861, 
                621, 873, 633, 885, 645, 1469, 897, 657, 1473, 909, 669, 921, 
                681, 933, 693}]}, {}, {}}},
            VertexNormals->CompressedData["
1:eJztXHdcVdeyRtSQXIwlLzbQBCtiS0Ts4KiJil3BAlGjYgMVkaggitKS2Btq
MKiIvWBHRNG4QLAiKigovYnAoYnGjnLP86zZ/rK4E9jmnCt5efwzv7PYbPae
8s3Mt2adJjYOFlO1tbS0wqpraVVVysYd1/Xd55LBBAn/v65ab2lb1+zpoNsM
ZbdG/mOLi/PF64G4z99l/YPr+YOtH40xt9VNZShHVfXrvMY8G7T+489DaN18
YtYNvWimkukAnWtbdd6fW1ns+H/H7oRdonq4TfPzf8DQIvyz7HXKvjzOwZBL
jHfqenU9D/cn7lfRmvarSmtfQwJv9d/+nbcpl+dQ/3L10IaIX7R3S8HuaJc2
gl007YcawpkPbnfh/RnqgbIvfsbfC3HKDAU/kRtfcu+vrjgl/INc17jdNYy3
VFxT70H5g9x4lIsn1P3VhUuVze5UPKorvqjnpOKOej91PQ+V3+Xirdz7fDC7
y8yzlD9ouk6m/AHjEO1ZXrxTz8OfW5Li81dU/3LrB7nXy7U71Z9S9qXiiFqn
7oPvg+8n+rmof3XlZQpvSTuWY3dNPeef1w9l/fk969sK46Rc+8qtx+TGqVz/
pPQm1w8pHFMXvlH1Qzn+VsZ/W/45PpSxu/D3jLhvufmd0rOm/Vmu3lDvrQm7
/9X8JZcHoPBBtKuQX95XvrfdNb0ut57XdJ9O2UtuPaCu+38ou1P4TOGw3Otl
1qfvWc9XHGfkxl0511e4j/uL9lW73eXqX66e/7wPKovP6qrnqbxJxh2xLrcO
/1B2p/RG6UdufpTrP1TdRelTbp0s1+7UOvU86urfNW13ufqn9KZpPVP+Jrcf
UdfzyMUHuff9UHZXFz5Q/q+u+Kok9dI7KRP//y52Vxc+q8sfPhh+yrQv9b4a
90MN211dfqIuHFCb3f+e9q20dv+7+1Ult+8/1u6aXq8gL1pZJCPe6x+/bhw+
4ZPIw2kMpV+PzPii7Vmw6eKTxa7e9xjKuzd9irulKkCx8ea0nl+ksQOGehvN
TCMgd/tmW/t2eRBgmtjHpvoFppIxMGD+aV+nCYWkP33vUFjzQtc01nF6rFPG
5Az4ZMK5FO219yuNf6tbz77tS0v8otIZymxDL4uvQzPhTeCj49UiM9nuhG5r
R+jfYntbh9WNj6bnPZ4cT3OK3RsIT7n8OrCZxaabRVDsZv6g96VweMTlSP2d
4xt0LwKDMSGNT5SkS/dZGdk3/HtnBZj5HUrssSCLJc751CjU/DhYD76RZrkj
G856v6jWuEkGSy0JKfl0ZSJ8tG+TbqBrhffB31s/9mN9ptSakMRmcekb8umK
7oU5+F6MvxfD9zqQ1/bZ5U4pjEs423N00pzb2dAm7k2NL/xDWcS/Gurc3pcK
3UfFe0W65cHnngWj8xxD2ano+v2bfXYHvEN2KUz0CyU9JAt6oPRG+XkF/fm9
9WOxYrjxk41zTfG58HmoPq7oXyOMey2MYiiPFvT2Hte7EDxa1/OKPZjAVPIa
vDJffC98eD76DSsW9Mz1yAxVepX06djwhtGj4CRm4nfkwpGu9wElVU9Q16sr
LtKa7z/EGgWzs+PbVlvdJoGNsQl70bxWAQwtjbQ4H3UHJXM40ia64cx8cCf0
QOmN25vb/YJk9w2hD2bPz73LzJKnux1od5FlBIfeSDUpUJt+hHXp98eXOj2d
UyOCJXnqDOsbkcaCLvW5tviaAvSi2gTEP8xkVjcftOqaEMgeuk8Nmp6dQ8bL
EK6fIYJ+krg+zwn6rFZ31JllE+PYCd+ckbWfxoBuzji3Bo75YAu6P9rP84aq
JRHxWwyT4PWorL5wNp+MiwFGG80MCq6yEbE+U3IPZ8Cu1JK5HYzo/pTSD4Ub
Jwj9GId1KHYvvMt0WqT8eOZyOrPc1DrMOjwbPp7X0KT9pDj2046wEc+Pp8NH
y52WW3fMkfwG/Qj1g36DfoT+M7n9C8v9k0IlOf5+4r2TC4qA+zH6NaA/U+8F
Kn9C/4J07ld2gp7fcD1vsx/YatY38exZ/+/Xx/6eDgbWPjWf9Kfni+TOIcR9
sctw86vLUtw9bb7yZd7sIojbdnSqaYv7bPKZTtsnW4VB+xqLh4xalAPal2tq
d7scxlTyODz+aZCX/9YiKBzdJz8gh4FhA6ud7rOz4BezRpN07bNhRu22VzwD
b0myqP4xn5DfCkgcfqHKf+wRl5gHuR8yrh+GfojPgc+Fz1MeLyrq4TH/f8+E
/9t2bBXv0sNbwPjhvj11hyQzq6z6B/Y4KOOI+x/GK/oh9X+5P6F/SX7F9cJQ
on6o/fRuMyevtTgUy/Jszl/ZOyYFPsuufaikikLCscMCjnE9g6hnIR6l/QgK
f4x4nrjI8wbmC4wXDyFeEHeGCPHF45DxuITqPB7NetxIb5aXABEhTV/1GxnP
tBYtmB30pQLji2HewPjicchQYjxqcT/QEvwz4EDEsR69Y9iFN8NWjNuVBpst
T9i8DM/FOIVy8Py99+t3nE3RH9wiHMZNHlp73oQHjEsyf1F47nDoTLSfwxnQ
fuVZc06zO+C1IKJuq06FpN15fS9JrPOp/EjFKc/fksQ8Tr3vFI4XiB+IG714
HsW8irhH5XeqfqfyF+WHDdtY64wp9TKdfODI3ozF96DfauObM9cVkHancDvO
ed/PUTa3Ycbneu1d12VJkupPKf0I92F4H+q9OB7CI6Ev0OZ5woXnDcTD7ip8
AI4PDPGB47z0XIjzmLcwj2F8UTyPuvRD5Vmsv7EeR39uFZOSV/9RGJT0jV1l
UeM+W/ry+tJ7y3IA6w+sR7AOwTxqJeiH4zw8E/RJ6YfizQbZ1ug6aWkCaHX5
zmzk5SjYMyww5DvDfLL+kasf6r1QP4cF/RQS9S31/Dw+ged3KU45zrCqKpxh
iDNy9UOtU9fJ1Q+FD9jfYr+LfS7WCVpCnUA9F89/mA8B82BVXicHCnVyi94z
GplapEmyRrunjR4ayefhtbk/oX/t5X6lLv1Q61gfY72MeRmfA58Ln4fSG6+X
GK+XAOsluXqg9OlaP9+xu2OcJIMD+0afvpoHfpPYapu66ZLMnWzeLOLVfbXp
h1rHOB/I4x7jXS5uUM9HvRelB3X5YSXj52THKbl/8df0UGn1I3ed11tYdwBR
d6lLL+XyYJpeF+pqhnU15w0Z5xEl/vC/bI/3fi+KZ8P6kucNqc7EPsRf1ZdI
/UjPjnVCPmsRy1Cubmw0LmogPS+EdRjWZUI9xnjdoi7+/73101HYB9nG90Hs
iL4b+TixP0Be/olQNyL/fFrgnyl+g1rv2bbGnN8MEhiX/LNC4/qh9oMec774
ocAbF/D68qFQZ3pyXoP3X1JfGfX7fpvBx9abiv5DzfNvavD649DbGUzfacSk
UXpXQSXf8YdiH0fxkOqKC6p/p+Z1sZ/xFPprN77uJqxj/35E6N8pvk7T/POc
JQsiDrvGM5RT83r+2t9RQfLz6AcFgj9Q8U35j9PNHrkB4RFsHpftguOTPVoU
wUFiX4bCGXXph8IN4T5SX488tb3AV1PxS83rIi+GPBnW4WMbW+YH1rnDYta2
i/9X/btgOKbPHWf9fKnuwToI6x8qLqj5sRPEfSj9UO9L8au8f2C8/mXYRyDf
h/wf8n7UfiWlN4qfp3gtxBk9AWe4HwL3Q0A/TLzjq7v19w3nRBxDfuaxkBfK
4+cp/vmFwD9T/DzFPyO/1pPzbciz4d8jH1zePiOVF6rw/rm6wK9S+7m8TkD+
RuJttAR/wD6I3L/g/HOEwD97EryfgPNSv4z8tZGw7ynyz6ULVX5I8fMU/0zy
8wT/jDyvyPdSOEOtj+b7grhPiPuDIp7g/pfc82LO1bOd3V/f5jKcGS9LCOxV
UiDmZYZ52VDov7qWM38+/1LB+GUntjHLFW5d0k2TYGbvZ1YBgfmy+XmKf6bw
h8rvcvMX/4y/B2l/WabduR8y7oeAfijs50r7KXL5eYp/NhP4edzvpvIyx2fk
2ySejcpf+D74fojziMt2Aj7z/Vzg+7mA+7nq5ufFuQtuL+D2Ymgvf8JPOB4C
x0Nx/7HMHN2bS6rrVfLd9XL5VYr/UZd+qH0EKn4p3pjaV6HOszgS/qYu/lld
/DyFD8D7N/hDP0frTS6vxXGYcRwGxOFG267sTmgWIckSD8dB24yLpPcQ30+w
S7l1sqb5Z8yX3O8kf5M9z0zMicnlReXyz5rWD7Uul59XF/+ssPdbmjv0HuRy
2cnfulPma4X0WSGsfyh+ntrXEOKCEXFB9c3S57pG1lNzP0+W5NIVQ1Zt+jHn
H8fPC3yJlB8pPf+X5sz/Mj+m6XWKpxJ4SNEPK7xO9XHUvLE75/HcBR6P4kXl
rmuIH660dud4x1Ai7lE8mw3vo/jcyjnsp6h+llo/TPBmVNxRc0QU7yd3nZqz
xf4B+wmZc+mV1u75qnlI1ko1D8lwHpKaM9R7+3ee57iUeC2ci8L5INynE/hq
CX+xXuc8hMQ/UHMv2O/1EvgiXh8zXi9LdbLceBf6LIl34ucTGJ/Tl+bz5dqd
wk/KLmMInoTio/g8K+PzrZIdked3F/h88ryAqi5nXMIrXp8LPAA7x3mAnsS8
HBVf1PNQdQjVB1F67knMLRsR9XYSYV+uf5xnB9S/XLtT+MnrMIYS6zGKd6Xm
Xan7U/NX1PkRCp8pvEV8PMh/j+tUXkA/EPfFyvseBvF66jmB2JekziXhfnod
YT8dz+fgfimuD+bzr1zCHM5rUXan+GE/1Zw88Dl5hnPycufhKXymeBtqjpGK
U4qf//NzPWXvj/NVOG+Fc1bUPghVB+J5CTw/gTwbNUftQdSHyMu3FXh1LWLu
DvOBper80znMCziPgvMpmO8EPZb7/TnU9RyXpPNhAi6VyQtyrydxi+M+5gHE
f/RX9F/0W3FfDHlgzq+BPZ8HR57NjZjrRj0gf4a8GdWHUjwLNbcv9/5y+zh1
2Z2aC6XyAvU9XdQ+Fz8/C/z8LMPzsxRPTp1n+fP6+YKUNzAvII6LeYE6l0Tx
MNT+L4XDlJ+oq3/n85RSHSrUJ6TdY/l+KfqhyP/g/he1X5ZIxDtVp2Hdw3FP
2pfEOgnrJsR5nj8wn0h4iHUn7lMhj6f1H39o3pj3G9h/SOewqDqQmpOkzs1p
2u5q6vvJfSieh/i+Tdn9GlEPWKdi3Yp+Ipdfxb6su9CXaRo/qf1BPreBcxyA
8xvU94FQ5/sqm92pdQqHKdzG8yN4LvPNH/G5wvsR1LlOdcURhee8b5Ek9i8U
/0Nd/xd5+w9ud7nr1LmbCu4LSOt4XpfXdVI/QtXtyN+IfA61LhfPMc7thXin
8EFD9qX0LtqlwusU703Ne8vlryroN+/9/BQ/7Nlg+09dWiUzdy5HD7/xcSOX
HLJPx3kFnF+QzreWPvH9ZV84zOHy5JFOKV6mRbL529y1W2xqP70nrXvUW2fa
y7lA4/qh1oU5XWm/adte3W6LSkPZDi5bfzsrzlSZT88p7BwbZQWyIC4bxpht
nXCjiORRxX4H658N9Q9ljOl1gq1/Ky9Aj8yojT18iuCh0BeM4n2BXH+r5fHq
2nntSOZQ9U53l0UZcCLTu6CV6bv55yu2R7r1uJwOu3bUNJq2ha7PKV6Umj+n
eGOqLqXuQ/Gf5ZzHKfP8FI/n+Ty9vp1HPPPiEnROeZbOVoCNan4M+PwYw/kx
qn6earI/4dKPaewo7HcYujIGzEa6fjb7Wi7gHPZhoc8y4zwYl/yzAoblmAZa
Tr8lyfDD8/s9iCkg51f5/Tnv944nNNq12Hf+AnfQ4TJs+1djF5QWkfqR+72v
VJ+L86aPBb6Lmv/R6fvb0MjL7+y+3l03vbrSD0MLelxfczCB6V00MFz3axSz
tz7iUqspzr2X5a+QP8JzAyJfocKbK7C6b/LWMzZF5BxmLDEfS81h3vrZ/I7n
vAQW81ZeAxenZ88DJubDaY4LZwR8KCLm+oS4lfKOXL6IwgEXPmeJc5c450PN
xYn77sQcoySpOUAB9yX+hJ8zZ9oCX0HFC/dnxv2ZoT8jz35CmFvG+VH8/8hj
8DgFHqcM45SauxDnDFDWmr3dxmbbbRZTMvdV4vIsQEnph+wf/+ifDP2zyULj
ieH7EsB5T7BF1OZ4dr3WfGtzJT5QPAPuf+N+OOIk90/g/snQP6m6nZrbpOKC
x6/0Hhi/cucMqTmrOm/1HM4U6/fv7DhO2V9xeW37uBffeij7n256n1n1uS9J
uX0BdQ6Lyi/UPC01L8fPfeD35wGe+6DqZ3X1NVR/in2jrfA9BvoODjdKA9Og
yS7rauGmERDQa+vwSTEK6Tw/nu/H+We582lUP0itx10tMfWukizJrk1W/aCz
Tn36Udd6g92Zu52Vdcnr9jlJNTumsQ4NU2elbXjnj9xPGX7m5wWkfU70c35+
BMTzI+jvPA6kzzYvO/T5fMo9SRZePD1+1O8KkocxFvwQv79x+PpnLu2UfRpK
s5kGRSXv369VuN7m+mBl9MPYSXPlepvYopFblev8M1l3TYqccaGLEh9Tm0QX
jN6fAP5PG1v1r/g5x3Kf/7YK1xnHe/wMOTL7FyoP6m3Z4PCVUxzT5zKr+Ea9
05fzyHNJ3M/Q7yR/43US1k2A9dJPX/32ZZx9HOuY43Spc6Cyzu9aa7HnV8q+
b7rvLjA7CVf6WM6ZmpEJu5K6WQcV5/C8VhZvDVS4wDhOMMQH6jlrvu07Epmq
34iHicb9k+YqcfIHon/0uzxiZvL047DIqbC7tlMWczhqlfN6Zzb/vyfZ85sT
9jlnZLKwrk62+4vpfbFvUuxuKu4HsiFc9jTw3TjxhpRP2QJVPgXMpzpuM5fX
mnJRkqP2+u4tqF8Ew9asumdpd1GSUc8a73FRrluY6bmctUiTZOBKey8TI2U9
k1x45eDAX1ijCZsPT62ZxD6JS616NjQf/GMN1uQsSYRqo3Tu9jXIYF3hzbT6
Hg/AxHJIcGqvW2D3xRG76RcyofNcjzHbYyrMf0rvGz/vkUn8qVhYafXbuu5D
U9jxB3czlmvT+bfe83bNHE5FwEDLsFb+H92D4dGrinuY0Of0KXzwmOLctZlf
OCwbZm7dXukfKOU+fyOedwyEvIO4H8tll4rhf5n4bR4/u9eZS6msKZdZTRus
iLvyAHRTDR5/t9EdFE+m7Rhmex30mn87c3ZH+ntQ5eLbc5/ShGvBoSzq0MGS
yBlp7MuOF39OapEHIbwfCBb6gm+vLXQPmhPHbu24Mi3icTQMLgppdMonH/C6
08L1S2vvsJ3UL41l7sqZev1VKlSzWPjRSYcHZF9P9bn9N80LCVkUy0Y5LS1q
4BQDm1brz3pyPB8aHB3j5pofCge6tPM9sfEO2AU+Nk/XKoT8Wo6F922DJLls
S69+7pfkfz9exwvbdL+Yu4+FB3TbZtv0DqsSGlnr9ehC8hxi5JG2Y0YsvQ11
uyxZ8tE3AVCUNn1iY/tCaOHo/231KmEMpXWf5A5NlXVpnR9815tkRLOfj1t+
PHRwHGjlrXffsCMf8trtOjiw/3X2PzMcs3vZu7I7B3s+mdipiMRn/p4MJb4v
1xtwvTHU2w+cN+zE+y6UO5uODn6UGwZXdnhntS5NZmPvDnhWJzcPlsQuqxX3
Uwy8SfILWOsTyy4/6zzM+GA+2C08HVnXMBnmeax02Ot1j1nEnskzDs6FEZ6b
8qKVcdvSZ/WgXUERoJ+z4Hx3ZfzKPc9yZG90wo4pMaxV5uvpaydlQvyart3W
n8+uaF0n+flRnwOxWwpS4Ory/WnVtIOhW/zLoBopeWScjhsUeKt9n0QYz+XG
5bcGdVlJ78Oqq+6i6qiLV/dsswhMBTgzYMeU67eh34iW3Z+/yH3fukhj9c/z
0Ubr2vQ+wVTyAvRVHPrI2KcIjrGa9Vs/TGc1ljQY+51JEmjrXI9zcVDfvCtV
/1QQJ6X726nqDcbrDYb1xnHjlI6jx2ewiSFVtUyqXWOJzxNeXrDJhaE873LJ
MP+eDjBtF77vMER2apr2XDeF1Zw59LBrh3xlHzbu0Yo5p+DKLzO+vPEkBabX
eBjsn5xH8odU/UPF7/SAoP3O1WNYiE47x/SzyczT6tys48kKWK3ib2Gtir9l
yN9OWParY1ZUOlPhchy0NBpwcL5+DqxIT524MyeIKR5FD7fqfgvcPneNMYkt
lF3/BGmNC3U9nYySDR3kOiWkSQ4Yvhzk3S8jge2xPd9JZ8wtKI65lF2YLOEM
K1XhDCDOfDn3xC3DnxMkWZzp7Da3IBdC7bwtNl+KkeSGjaVjAhrT398ozpci
bxB3zLyJV+A1iMkauuJr3zQ2a/ugwe5LFbA/5seWpso6rN6p2MdbdivrtiCX
+ZN30/XDD1muY3WVde+Tpw9s/rfudfl4xIxMZbxHbfh6aHHSNfDvPLLxoqqR
rFpWPU+2qlCyK/c7yb6bOi/O8k6OZnFbvHQ3zroLc5eFfb/Mlj4nQuGA3P6X
wqvOA+r/cmxzNHRaU23lJ73vwE3j2nGTPi2Q8LEcnJTkvwHb/LXl
             
             "]], {}, {{}, {}}},
          Axes->True,
          AxesLabel->{None, None, None},
          BoxRatios->{1, 1, 0.4},
          DisplayFunction->Identity,
          FaceGridsStyle->Automatic,
          Method->{"DefaultBoundaryStyle" -> Directive[
              GrayLevel[0.3]], 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "RotationControl" -> "Globe"},
          PlotRange->{Full, Full, All},
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}},
          Ticks->{Automatic, Automatic, Automatic}], 
         Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
4phf4fv8Ai99jPMEv+FH/Kbc70mfQn3CT7udWpn6s/0kT3I/F/DzPTcD/G6J
d+0nfNvPPbzvS7zTJ3zbT3DbT+KYX/6OqZX5fO5rvcQ7fcK3/YjfLfGu/YRv
+wEvfRLH/Arf/id47ltfzPYTvu0n/Vd0XS/x/J7SJ/zgNwP8bol3+nxbXpc+
/p7vS7zrn8Nv91X6gJc+xCl9/N6plXn+Rbf1Ek+c0if84DcD/G6Jd/kV/txK
1jG69mOcJ/jtvkof8NKHOKUPv2c1tTLjp/y+9RKvedYF/Oh5M8DvlnjV+1f4
5n1wn1+Joz7hz3+UpQ946ZM47XeUPuGnH55amfF3dF0v8fp9F/BzPzfgtp/E
sf2Eb/8DXt+fOPbP4bf7Kn3AS5/Eab+v9Ame+5la2eZjNW5cL/Gu/YQf/GaA
3y3xrv2Eb/sJbvtJHNtP+PMfZekTfvt9pU/wNu4tfYJnHjG1Mr5Avm+9xLv2
E37wG3DbT+LYfsK3/YDX9yeO7Sd820/Kdr+lT/A2ryx9gmceOrWyfa7mresl
nnlc6RN+8vEG3PaTOLaf8G0/W3jfl3j5XU/g7XeUPsGbz1D6pGy+ROkTPD7G
1Mr2//I91ks8PkDp0/DMi0uf4LafxLH9hD+3kvWaGs9/X+LJi9IneGsnpU/w
5lOVPsGbr1X6pIwPNrWy+bLlm62XePy30ie4/Vlw2098X9tP+Laf8DP//Q7e
8qL0Cd7aSekTvP3u0id4u8/SJ/hE2Xzp+I2lT8PjW5Y+DT/S/xU/93O3xMt3
/QpfXze47SdxbD/BbT/Bm+9d+gRv/nnpE1wfPte/tTL65Dp+ZPT5veHxXaNP
4sRPy/0lTp6z0SdxHD8njs+vxMk4N/okTusPS5/EyfMt+iRO45U+iRPeROl6
RK7jR0afP7cyvqvjBdcREmduvzP6JI7Pr8RxXeBPS7z0+fMSL30SR381cfTt
E8fP68tbxo+MPlmnSTuJPolzR4lfUvokjv1P4ujPMy8sfT4s+aVP4jTeyf6j
6Vb6JI7+fJ5nyZc11/EjLyjTTqJP4sytjD6Jo2+hnxR9Esf2kzjprxx32H4S
x/bzlyVe+jA/WE2tzHgo+bLmOn5kPp91Hf3DxNFfTZy5/c7o83HJL30SR381
cWw/iWP7SRz9+Z+X+BvjgJqfTa3MeDr5suZafbKuk3lc9Ekc56eJY/tJnLnh
0SdxbD+JY/v5tOQfGTev9Od/WeKlz6clvppamftLvqy5jg7RJ+MS2w8+Yv0/
cfTPviz53XzX9mOc6PNliZc++lLR5/MSL32+LPHV1D7n+cPoo3+ccVZw/MOK
E779NO3nhL9Y6wz45yvHU4mTfhf8yHxspT+Gb/fmeB3/sPyglNEHH730EY8+
uVYX/WZ9RNpPxXF+Kj/6fF3yS5/Esf3gX5Y+4Kup4eZD9Mnvy/dEn+D5XPTx
HFTiwS99gtt+3G8XfYwTfYLjP1cc20/46kOc1dRwffg1vHxP9AmO/1xx1Dv8
ufGiD/FLH/chRZ+/L/HSB7z00c/HRwi/9PG+puXvKjz6ZHyW74k+wfGfXX8o
fcK3/QSfl593naf04feUPsHNL9dDog9xSp/gaSdTw/Xho4/rBtHH9Zbo43k0
55c8v06sa5U+nuf6Tml+0T+VPpz/Kn2IU/r4HJgarg8ffVgfKH1YVyl9PCeV
73GdSv/P/gc/v+7H9cCnZZnvK304J1X6sO5a+gTP839quOeVos8P8OgjHn08
3xR9wlef4LYfzytFH/nRJ/j8R1n6cJ6o9PmxxEuf4Bk/Ti2e53qaPuWLoU/5
jPjPR/38+KCcx4k+b+IZ/+Ln53sqDvpUHNpPxcm+jPi24NGn4mT+MS3j1bws
+nheJvp4Xkbfl/ZTcdTHdXLnB4x/Ks7crqNP8M/Lz3f7gKIPeOkTPPPXqcVx
3SP6uF4UfVxniz4+H6IP696lD+O10sdxXPRhf0rpw7yq9AEvfdhHVvrof0wt
jusb0cd1oegzWE+rOLYf1/9dt7T9BOf5V3GSL+6Pa3jpE7zlS+nDfsPSJ3j8
s6nF8VxD9PFcQ/TxXEP08ZxC9OGcQunDOYXSx3MH0YdzBKUP5whKn+AtX0of
zguUPsHjv7r/O2X2N+c6Pu4ZvPhz5+DxpS7B48dcgceHuAZnX1rwbh4cPNfs
v3CeUbjnv4J73jN4+g38oRp3Pw/4+JE1zsLH7dbzgue5ulvi9Txh3aX60QO4
57z0iVPv+utn8NI/n4PnuXYJnvHAFXjGUdfg7jsc+QHi7j9i/trNC91vkvpy
HBf+ZoDz3F5Z784nXCe03h0/7gY463A17jiAe65Tnzv17vqA607xR11viS/o
OkP8MPz18oHwTd1XWvjcrucB3/l9eM5rPQcU3HO++gSbAZ9xh/s/Cvf8cHDP
kQb3PKF812U9j9TwGp96rsZzOPrTZ0te9bfnS9x9+R3/Cnxu1+zn7uo9uP6W
Ppb+VnjOy613/R7nYda7v+d5wHe/TvqB1wF/O+DvBvz9gH8A9zySfmjqXX/9
bMA/H+CXXKcerwb4Nbj9vPwZXF9TXF8BH7Hz8x4H/A04++E6PvPDiv86wPXJ
gztutt7FD+BpD55z430+3frA2fF93PNF0YFzOJV3nieh3rv4twP+DD7yp/WP
5bs/mHP93e/fgLsP0vgv4NR74bx3oOPj/1de7wf8AzjvYet8+tS7/vTZ8X38
HJz3s3X8qwHf8y28r6njz+DtuvO3Ui/6gta78R8HfPYfO57v+C/g7neUvwW3
3uXvwd3PFNxzsK4zpJ/XXz87vo+fgyfO5QC/GuDXA/x2gM/g9vOuv+lr2s8b
/3HA3wxw91Wz37dbL3UfLfs7u/i7AX8P7v4217GT766TJN9dHzg7vo+fgycO
5xVP1HvHvx7w8cOqH5jBGdd164euCzGu6+I/Dvgb8PY7Kt+D896ebj38dcDf
gif+bsDfL/Fuv2PwjM9bvXc+fc6N60+fwed9Td160SU45z8Lp967dTn2a1vv
3Tqw+wuo98KZv3d89iF63qNwzj+UX515q+fvM8/V3069bAf8HXjm0Xtw978G
z3w8+e46Q/Jdf/1syS/f4Bzcc872W/j3K/Nd3PUi189d53d90uf7YF9Ax3cf
E+d/uv077puLT+V+1eC+XyG4vn18sB14fLM9uPuh3Qea9zK4TpL3OLg+oO/L
+5q69TrWGTzX3a0Ps651ot67/QgzOPXe7X9x3b59vtsPwnt73pg3d/v7kqfu
i0yeut82fPcpx8f2/RnxvV2PiE++B59aeQCP3+4+8fj2nl9Je/PcT9aVPI+Y
/SSe48z5AveHpj91X236U/f9u8/b94W4j9v3ZHi+332XqXf3G86tdJ8L51m7
86nuawjueaD0L/q66V/0ddO/4NPWeDH73dPvp3/IPu/g0cX360SXj+Dp9z6B
u2/S/cmeg+dcdYd7bjX9teft0l97zix8zw8lnz03k3z2eZl8xkdduX4WPHGT
X+kvomfyy/cQ+b6iuf1+fMiV8/LgyTvP/bgvIXj2M+P71XzmN3y85EXyS/xn
8Pb7u/MiwT0nEdzz2bl/z3Xl/j3PFPzH+/hJPy3tRz8tfP2x5O/vS7+rdGj5
1e0j/QDOPvVuveETeOJ8eT9O9z6qtAfPvXFev9un6jkn9pN1/B/gObeOf1XP
XcfNee56LjHvT8Cnqvr9dek7Fd7yq8P/Ch5dRu+H8FxXrj3/nH2D+DY138Bv
qXr/Df8k/09+if88wH8Bz/1+HvDdd2x+GcdzNuYX7xc56WME18eIzvoSyaPf
lz5D9UvJryc+9+H4Pv8jeO7nE3j0+QKeevdcrPnl/kDfA8Hzq4vj+9vYh+f7
Wt7wDWp87Hns8PEN6vy7/kDa06/L+X4911p+Ha1Pzy+O3uvAez4KZ3xYePZ9
OV+OL+A8N+Oc35bz1hoXtfzqzruzD6jaD/unqp18HuDupya/Ru+J6d6v8wM8
82Hnj5k/O38M7nww4+Tfl/O7Gle3/OrOtX8Aj24fweP/fAKPnl/A8Zu798H4
no+54b4fJfnpe3dST74PLPXqe+YyL3W+lvPsztdyjtv5Ws4vOy9Lv+8574zf
PR+f/Ve+tyP3O4On3/AcVdqZ58/cdxg8+eZ80jzzfXKek0g79/0QqXf3n6Rd
RR/3af0Envr1PJzvVfI9Ur5fIfnpewXST7GeXuNnfYH0A9Fn8B6vbrxKv1y/
03Xb8Js+3TjnJ/D0R6yL+T6twnPNelbp6ft0cu5mO8BZh6rxR/RxXMG+1679
OH5wvaP9/ujj+3KiT/ec8v0ftJ/uvV+eR0/e4QPXvm792+zX1b/NOI99l77X
p3uOeI45zwt9QvdTJu8y/+c9iDXuYT9bt587uO+fzLzYfXvBnffqJ+AbdO/j
Ct/xK/upOh9cvcL39+f+7V+Cq0+u/V7wxD95n+slbv/VzQeZ9zmf6eaVzONS
dusZjFc63Sfi+T4x8PpccPVxftnid+N52pn9ePHxC1zvK30Yn68Yh3f60E+f
GFeXzzUt/6//cqK/rDL4zPemneLDll9NHgb3e2scgm9ScZj3+v7L7r2qvNel
ex+t46L0M5wz6PzH4O4Da3jnd4Tvun741nf4jr8bfnT8lzj2I7mP+AuMfyof
Gf90+q6X31txk0/6qo6LOO/e+T74h55/qnp3ndh5C+c1u3UR/VnGqfZ33fw5
OOs3Xf+JjvrIo/Ok9otdv4Y+7i+qPB+cD5X/5viH/cT2hye/P7/v6X38jfHP
iedIt85+scTdD+J6t/2f/pHn0fM7i896revab45/2OdduqqHzyWf58w/C/9w
/H/O5TW9
            "], {{
              {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], 
               Specularity[
                GrayLevel[1], 3], 
               StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmgf41tP7x5/nc86JSBRpIEW2SFSoSGWVEEKiNJCRbAlJCWWv7JmEMpKS
XfbIlj1+9t57/19v79v1v67Odb+e0+d5vp/n85xzj/d92g4bvcuhVa1W+1+q
1fhXa86oMzR3EROn8eJSXlwInwpfAk+FT4cvg8+BT4QvgE+HD4fPhCfDR8Bn
wWfDJ8DnwxfAE+GL4XPhcfCF8PnwBHgq/DSjG3//TV4/B/eC34Wfh3vrXuFT
uX4UdgpzDZhbmbES4wzmj2H+HObPg0+GL4LnM1rx/w/yehHcHX5L98o1x2LP
Ze4S+Ez4Cvga+HL4evh2fde6X09n/jrsTczfpmcT/3cp82dhr2T+Mvg8+Cr4
Bn123a/r8XxXZMzj/1pg72XyLrglfD88l3E14xrGnfqMeH0dn3kl9gaunZb8
/zPga+ErdF9wiWeg73k3c9N0/xpccy32Rq65HD5fnwk/w9iCa9/m9Uvw9vAH
8CPwhvDL8MPwBvBL8CTeewh2MnMPMdoz/yKvH4c3gV+Fn4C7wK/Bj8Id4cXw
nrx3FezezA2EW8P7wHvAreBB8FbY9RjrM4Ywvw52OPN7wavCg+Hd4Gb6PHhX
eAV4D/gxxsb8rVd4vTvzLbF7MTcAbgEPhF9kbMc17/N6Bey6jHUYSzHaMFbV
c+OaVbALueYpeDP4DXg57JqMNfQ3mN8R+zHzr8G7wJ/Cr+ue4M/gxXA/+CN4
2XhfO60/5tfCPsP8k/Cm8OvwvZX//qPwPXBr+GF4aWzbuL/7mF8N+zjz98Or
w0/CCyt/jxfgBfDa8HPwA5X/5tNwz3iu7bW+eSYXaI3x/1fDl2itVH5vU65/
tu77bAIvis9fHn6+7memZ9es5jXQPNawvp++53/PSVbvfy32svba7/Cx8N/w
N/B+8A/wV/BQ+Dv4a3gY/D18HHY4Y4T+j/kDsD8x/xk8CP4qvmNj+Cl4bFyr
z/2W+f2xPzL/Jbyv5uK5LQM/EftOPu++utdGx1g/L8Abxbp9Fe4avuhluHOs
7edi/WtfPAuvH3thcax//aZtYm3pN9Tv2xD7SN2/p+YahR+Qr72n7r2rPfyf
P5NdItak7IJYG0vq2dft0zL8QOy1lWPdap3osx+Db5Z/lQ9kfMH8Psx/Ax+N
HVLzc/lE+xD7BfMfw7vDn8OfwnvCX8LvwTvEen5DexV+B34T7hn++X9wX/hD
+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
6ybbzZlfR3mc1iTcLvl9m8AbJ9cCveDV4MW6F3h1+BWtAbhDcn3Ro/J9qY7Q
e7pHDFXM1d9RHfFz/P1f43Xn5LltuKYL/FvN8fpj7J81+9ZNmf8dux3zXVPt
X9FO8V3P5of4e5sw/2PNdWgn+Cd4a3jL5Nx+p8q1asOI71vBS0VM75lcj+wC
L2BNT+H1vtgtsCVygM0jr1BO0i25Ztmh8nP6tw6K5/11vN6Qa77Abhm5hPQ0
aV99k+s7aWvbJddu0s2kuXWIXGj9iI3/aW9bRd4wNOKOYpnyHGlu0tmUn0iL
k3a3Y3KOKl1O9e/Jco2V69wJWrKKjVzzAryR9j72ZcZLNecw7SKPGhaxUjFO
+p7uQ7Vq/+RcV/mYatgekdsol9s6YutGEc8Vo3tFXqQcqX3y79pd3xH+CO4G
rwd/CHetfF+f1Hxdb+aXjZxK9/dZzbXrM4wPYh09k6wbd+f32jq55h1QWZ/s
FPmnctE+kRvsF3mCcowRkW8of+gQ96vvIJ1zy8jflH8qD1curdxTOajyadXs
yvGU904qzkEbYR9K1qykXT2crH92LY4RineKU4q/4+N3+SviVz380tTwe6rz
5oYvbRH+Sn5J/kfxUTFOcVsxULFQ9Zzq2cbhuxS/FJs6x77WHtceeSf8T6fw
RdrvulYxTzG4dfhwxSnVoDPDT8pXK/YpjqvuVF3TpvI6Xxx+QPWrcstW4Z9n
hz9Xf0GavPTMs5LzWGny0uelh0u3l+YvrV46v3oQ0sekhUobvxGeWVnDnwHf
XFm/l44/ve7ehzR56fCKbcpLpI+pJlYeu0rlWDw9/H/j8OGKC6pZLwt/rlpZ
9bvikera2yMuqP6+PmJBk4hZil+6R2l5N9Xty96LNfl9+Gz5J/nqx2qOU/Lz
j8rvVl6/WsfP1uzDH8GuU7lulqaxeuxT5Q/Ko1Rz31NzLqG98xzcIfbU87GX
tW+0f16s2Z8/hW0fcedJeP3Kv79izJPh/5+uObb+F2+eCH8gvyA9RXtT97hh
5e+2KO77h/h++jzFBV27ZuU9+lJ8xq/xPPRdFe8UmzqFn/8g9vvX4Tf1fx0j
lnWOuKOYqBgnf/pqXLdp+Ar5DcUXvV8xdLPwJ/It/8U/xUPFqQX6HSKuLaw5
f1BM1D12jPilWKZ493q8T7/Hn+GH9Fzl//XdFEO1ZtXLmV9370l2buWezl3w
nfCNyb2kjuz9KjsP2ba4Rlb9qxq/nr0OtR4bZK8rra9G2bnK9lz/V3IutE1x
ja++mPpo4+ExdffIxiXrHmfDpyVrVurlqR+nvp76dycn6yHnyQ8la1BnwGPh
Q+vu2S2dvUe0V05kHFl3r1D1vvqG6iFKc1B/UL3FJbJzue24t1+Sc+Ct4abZ
/kp+q3m2H5A/+D459+4l7Srbz8jfqM5Vz0K9i8eTtXpp9m2z17/2wXfJdUTP
4rpVPkt+7ufkPLw3858mx7gt4U+SY98WxVrf+Jr97hfhP+VHv0yuF3rIP4fv
lQ/+NnydfN5XyXXEVlxzSrIGpd6odAD1OtV3U76gWl69V/X+7oBnV+4PzoHv
qOyf1DvUa/Vh1atVD1dxSfWttCfVsLITKuebQ+P/1BuSj5lVue84Nz5L/dDZ
2Nsr9x/n6fMr6/a3wLdW1upnwbdU1u9nhs9Sj+lW7G2VdaFhdWtH6puqt/pf
H1VW16k2H4w9ubJONRw+pbIuJX1KOqa0DmllJ1TOC6R36LXqbmllJzE/Jlm7
O71yHT0QHldZM9kNPr5yzb5n3RqLcp894rOeSO7NdSvWnXatW1NSfJY2pns5
lvkD69bEpDtJH5NWJt1J9zipsm6wT936lWK+NAjpCtLN9BnSphTjpVn1j5xA
/6/vMKG4b7oEdmFxPBuKPb5YY/o5tE1pnk1C85Su8g62RXaN8540hOy+fNPQ
DFUvSVeUTq78Sfr/wGxdrkFo+8oLpfNLq5H+LH1mYvYZAOmrE0I7Wim0U2lK
0kKXya6/pD8fyxhbt+a8HHxTzZr58tm1j7TZI0J3lRZ6ZHbvXhrp6dm9Iemx
47L7+C1Dg5VmKz12t+weh3oQg7M1Q2mhKbsuk/45MjRbaaovJ8drxe1Xk/ss
92bXueqL3Qe/mNwLuyu7hlX/a352Xaz+ozTtO5P7qjNC+1LvU5rYB8l6gWrn
15M1EdXOfyfXbtK73kvuSz4Mv5OsO6imVh9hWs39hQOz++zShKXlStuXrrtk
du2pXsOwbL1WOvDwbJ1WOvNbyb3UB7Nr9mE16/P6W+pZq9+helz9sjvhu5N7
x9Kg1BORnqY+yGfJtaT6Dptka4/qy+yc3Zf/B9s3O4dXLr9Ndl2g+qB/dr9J
zczts7VT9WvUb1Luq/pDvSTl+cr3d8/WZqX/bwo3qbv31Cdba/0Tu1e2hqy9
sG+25two9HDtSeXOzbJjqdb/kGx9WL0G9U3Uq1LfZ8vs8wDqoWyWrQOr5zUo
W0NeMrR35fPK6wdka7aJ+X7wmnX3udSHkvauvpL6OOo3qaezbrb2q17Vhtka
r/pc6nmp16M+V7tszVl9MfW21NP5ItaPzg+oZ6S+j2p89YB2zNah1YP7OFnv
US/p62RNSX2fMdlnbNR3WD07L1Ov7Q+uubBmDVZ9IulJ6hn9kKxBqbfVO/ts
hvpQ6sGpv6a+m/pf0qWk2aq/plxMvbaW2bmbfEur7Pzuff3+2fmbenC/JmtZ
6jvcB69Xs+YpfbhNzbrxbclnHqbH8181nrn8lfykcoH9s331Hnyv/bL98O7w
wdn+fGDxfpHfVpwcX3zmQ7+X1lWrWG8HZfv5PWO/yN/KZ+8ba3ifiO/TI9Yr
X1JOrh7TSdnxVzmOYrfqFPWzlGvNjpxKudOsiOnyY4qnyqFGZ/v/vfi7h2XH
tUHFOcY1EfcnZ+daZ8beaRb7QutHua+0hPWzNZl+vLdHttahWn+rbN1gV9Wk
2ZqD9mDXbA1BtXu3XPtXx9iFay7LzgdUx1ydXQepNjo3O9dSPTQlO99TrNEe
bBx7/JTs3Gxy7HdpGrtxTadsLWVneKNsPWSnYv+gmnoA3CFbM9kRXi9bj9qh
eL8or1Z+vVa2jtG32Ocop1dNr/3yWeTFa2brS324pnO2VtMfnpSdQ0pLGZ+d
Zw4pzrsujxxMOqd0SOmf0h57wjOzNcleNeuQ6kFIh1e/QzH08cgnlVuqtlL/
Ufmkahn1RpWXzotceqXsOkh9UtXm6u/fCq+YXYupZ6qcU+coZmfX7NJXVb9L
/1QtL21TOoM0WOmlM5LPi6kvo5ykX+SryvnbRx57c/KZL/VHHkw+u6U+gnRa
5bfSZtVD0fkS9U0UB3vX3GfRmtFZrN+y4/JDkUs3ya5l1CN+MvkclPosynWn
Rn6rnoX6MupTqBejHtCc8A9zwieMzc6LlMsflZ377a0cJjt3GgwfnZ3j7VNc
m0iLUB9Zuf3CmnvT6neor6QeyiPJ583U+9AZgEWR26uWUQ6vmkL1hWpY9bLb
ZNew6hErz1cNq56yev3qoahf/2zyWTj1jF6Ae9TcS1Ic17k4nQfQGQbVvG1j
37WKPXhRdu0j7eGm4p6E6qkpxWcfV8feWqwDav1rr+n8VTt4erFmrVrm9mId
aufwdSPDR80rzjXl967MPvun/t0NxTqy6rXbirVF7bv5xbWWfN2I4nNLWm93
FefE8qWzQ8PS3jkn+0yg7vPu4ppNflV98AvDJ5xZfJ5yreLvqzNjaxf/vjr/
2VzzxWcBpf/PLNYutZfVc1Qtof7j3GJdTz7hlmLNVD7t0uxzjOsVn4W4NJ7n
rGJtdIdYM+NiLe1ffA5JeZr6+Ko31K8/q/gsqe7t7OJzq/rMU4v72bpP+Uad
G9QZg07h3+Rn9is+76W8aFqx1q/68fTis62rYK/NPlOp3mi38NXysRcUn5tU
n2J48Rky7f3zis+VdtB9FZ+nVJ0+rPjcmPzPhcXnF9X7mFx8hrVN+LGJEXcO
KD5rpVz0quzznBvqtys+p7t+cd92Wvhz9XyvCj9/Vvb5U515OLf43JXee31x
r6J3+GTFlO4RF3TGVfd8R7F2rNgxsvjslHLmDhFrFJsUU3Q2VfdwVMQyxb4z
is8Ha50fVHw+THmp+s6q/XTW5ZLsc7XqQSsO6vytvvulxedT1bdaM2KZ/P+B
xWenlKufWNwXV354ZfH5S2mzNxb3wKQVKO6PitxAcVPnQlU3nVDcg5ffO634
bGsr7Jxi3VzxdErER8Xle4u1D8XuccVnCJQD31+sd8h33VOsZSjWX1J8zlg9
NeUPOtuszz+k+Iya8v+rYfV1pCFcUXyuVPXmjOIelTScm4v7EIp31xX3tKRL
nFR8/lU59gPFeoF86cXF51bV17uquL8lXeLBYr1GMfHy4vO+0oovyD5fpzMw
U4vPpKqvd2H2eTzt9/uKNSD57UmRP0yOfEDnw7Uv7izuBygfuKz4rLZ6fGdy
zTl1n40ZHfmD8rpri/tn0jquKe6fSRv5Pxtzp5Y=
                   "]], 
                  Polygon3DBox[CompressedData["
1:eJw1mgn8V8P3xu+dO5OlsiSVlDYikUqRLJEtoSwVQhtl+ZE9JJIk2ZWULNkT
lWSJUMm+7yFbqez7li3+z7tn/r1e59U5d+be7/3MnXPOc54zzQadcsjQUOhf
VRRR/70v48uyKA6W/oqutZX9hvSVkm1kb5SK4iyNnyk5TTe8q/GV0g/Q+PMa
Hya7u+z+ktNln6M5x0m/SPoluvdN6Vtp7kaSpzR3veTxIZJjNfczXftZ+iCN
f6x72st+V/rXkjay62r+sNLvcLrmj5CMlH6xxuZr7GTN7yy7p+QEXXuW+6W3
0/0zZA/WnC9kHyT7ZdkbyD5J9v8kx+tZjWRfIn0M7yz7cslV0q/U3Kc01kBy
Yem/yd8+XvZ30o/U8xZrzqf6ez/IPpq1lD1V9gTZ90hulF1P80dIP09yru5f
P/lvnyg5TvYQ2V9L76P739D842R/I/sw2W/Jbix7rOzJeu6l0jeRjCr9Tufr
/oayL5I+UeNjpdeXnC97fPD6b5r82y6WjNL8Y2WvkL6/nv+cnn+b5k2SPUNy
s+zbZU+WPlNyi+wTNP976Udp/nuyb9H4eNnTJFNkH6PxZdL34fvKfkvjn8ne
V/Yi2XU0fprsUyUn6+9vLHs4ayEZJvsSyTjpl2nuwuR35F3Hyl4g+yM971vZ
h+t5b+vahsnPOkVykuaeKPtH6QM0/qHGb9X862RPl9wk+w7ZN0ifJZkq+yzZ
+0nvx36WPUb2MdJ7sMdkb6bnXVb6nXi3NyST9ewbJP9V/mZ8u3Okz+VdZJ/B
t5A9T/YDet4D/G3Jbbo2U/Z90q/P6ztH9hx0ye2yH5L9CHMld8p+W8+7WX/r
FkmU/k60PlWSpL8nuUP6nZJ1pT9R2o83kcwNXlPWdpSe9WSyz+K7F8h+XPY2
yX/7Ls29Wnrr5He9U/ZV0reVTOXbs3917/3Be2FyXr/HdK2v/tYRkndkzwre
O5Pyfumm+2/TWD1dv0f6Ys2/vfA7ryP90ehvyR5nr58l+xz2s+59QvbWkhvZ
WzxTY/vyfsQPPW8avqNrQzU2XPMfJb5Ef5spxDTpE6L941qNX6Hxe3Xf3dh5
v+6ja5M0dQOuS3+B/SZ7DO+k8edljy587WvZuxMfpNfQ/FulXxftb+M1dqXs
q6P97WrZl8u+L9g3xmf//1rj/+r+1ZItpH8smSl9lqSu9E+i9fslG0fvafb2
eay1nref5G6+r547Xfq8ck3oLhpIHtG1DzR/mvR7JOtJf1jX5rK3+Maa+KDs
h6XfKrlD9ozg2DQh+8dnuudB3fuQpKH0ZZI5ha9tIn2JZLr0eyXrSz9b9x9I
vJacofvbJD+bPXOTxmdrfHbpb3irxi8K9rX9cn4YLXsg+SPff4rsLtJ7EZNl
/6hn1JZeS7K99G8kQXpJHpH+rP7fjL0keVz3viq7pfQNJQtkvyy7BWshmS/7
RdnNpdeWPCn74uB35zecyffW/800VkvyhMa+199YW9fWkrRhr+nabtIPJWaT
34JjxTH5/gui88mYyvH3delb6ll1JAs190xJN/IDMZDfHx0PL60cz8/Q+N6y
+xLTdO1bjVelf3Mr5mp8T+If8VPjp8veS/oRkqGyv4t+1xqSbaW3Tf7292je
tdKflt5Y77K2ZJ6uPS67vvSQ98+o4HfrluPhucG59NgcD5vqGVfwPXV9nPSt
kmMBeYL9P0R/8wTZZ2vuI7JbJfsuMfd6jbWTfSd7j/0g+8rofHiV5l+mse2S
Y980Pe8a6c3wqdI5mFz8lP5vpHddS/KY5jRP9uVrmKPxzZP3MnkX/7s0Gi9c
Xvl9F5SOjcTIRzXnydK+U+V4+UP0XqspaS+9ie65vHQOGCt7C9kTS+eUa2Vv
mRzryJvEl1P1/+6ye0tO0kNbJsd67hmv+S2SYwF5k9/7P/3fKe+/4zS/s+yl
YBPJ1rJrac5OPEvXx0j/Wc/YSHYdSWfpn+IDmtuKvaXx5bJfAqsR+5P9+UXZ
L2T/XSp5jmdr/Kxk/2bseWKI9F8l9fXsepJdwXfEEI011fxTk30O39tF73Yf
WEr26xrfTuPnJOcrYgUxo5L+ueQ16a9KNpO+Ivq3bav5Zyfnr8f4FjkfvC+Z
J72Fxk/T+J+yN9PfO0r2CNlr6e/WD853v1XOJ9w7lz3N9+DDav7OGrs3OZ4+
o0tP5/hKvEVfRA6R/oukrub30TOHa/7K6Hd9RdJY+g66/qH0HyXt9cyVsn/j
W8n+TPZL0bmYnPxDZXxA/Cam/ys7kEM1fxtihsbeIibybD3nFI3V1JxNwQS6
9o/016P1hro2VOOvRsdyYvof+LuutdTYghx/z5C9peyFxDzWOjo2E6P/rpwP
78/5Bbxysub/qncZInuZ7D803hifkuzJt8l4ghz9i8ZfzHgDDPK97N9kNyi9
R3Yj1ul5v0gfrPGlGv8XTC+ZKHul7BKMFpyPyaf8Jn4b7/hX5Xw7JeMp8uvv
sjchnmnOecn5lzEw11cafyX62/OOv8ruqHlLWHtJO9kfESMKrwlrA156KOcv
8NMB+LCef7DmPoxvZX/7TdJR177iG0l/U9JceieNf8rfknTQ+D/4sO7vr+vn
6/7non/rdZLPqRFkHyv9GMknYNjoWuYn8pnm/y27OTmGGAuekTSV3gPsp/FF
0WvJMz7N8WCZ9N8lO4A3ZbctnSOOkb2z7BUa+1Oyo+xBsluVzlH9ZO8SXLv9
JekEPpe9dekc21/2sbJbl45ZA2QPkb1d6ZwySPbxsrfP+eBY2bvK/py9JdmJ
ekB2h5zPB1NfyW5TOkcNBLPr9wwsjMnB5vOjsXl/yRIwabTeT/KB7A66/z3p
30rasn+SfYd3PERzo67VDfa5Hwnayb+H3zVS+pfR9Sp167my/5W9FTlY0lP6
h9G+gg/hS+ClJ8n1YIKMb/Ct+ZINpP8XvZ6s6wWa/yz5TWPHS5ZXzlPkKzA7
eAocDZ4G04P3H4+ulagRqRXnRdeKYOZ3Nd5V9qYa2x9spvEnomtHaixqrT/B
CYXv+UrP3lHyEftJsr3ueSY6FuHT+Pb2Gl+MrxGTNb5a4y1L73n2/l/Re489
x957OjoW4MP4cpH9sXbl+PQHzy2M0b/Usxvo+lbBPlYn+n2Ij+SULSvHS/yR
nNRSdg09o72e0Q7Mkv3pk8I5aSuNdwmu7d/N75uS57LHD9P8PcBg7I3s3+to
fAeNdSQngM2S9x/7cDT1bc5XjSvnl67BsWFJjt8NczxoVDk/rpW8v9nnFyXz
De8U3gPNK68n78aeaUE+BpdIP494HbxfWW/WY/PKmJ14u0nlfEx84t3JQVvo
WpOc75pUzpdNc75rWnm/3h1caz1Yuh4kZhA78KGPZK8LzpB+Nj4NFgzOTR/m
/bCu5u9Yeo2O1rOnB2OtR0vjf2Iu8WrdHItf0Pj7zNe1ByrjRPAiNQP1Z81k
fAJOuTg55xC76+VclHL+26AyPlikeW+R73Tt7so1KfF6o8r5fBA5WeN76Nrj
1FPBe3Vx9vfXibca7yr7Sdkvs7/I57IfyfGHeIaPb1s5fhOfwTytZO8m+6vC
37BNjo/LC2OQ1jkeEi/BLPBZ9XI+blgZD8Xk+EccHCW9NrhZ4yMkq6XX1rWd
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
6g==
                   "]], Polygon3DBox[CompressedData["
1:eJwt1XlMl3UcB/CfgLd5oGDiAaZlm1ameRTeJ4EgoCAKCrbVOpa2jul0mpmG
F+KFeHX9UatZLrt02bV0WU07QAUVVNSCtvqj2mxtNno96/vHl8/zfn0/3+fh
9/y+z/Mb+NDS/CVxsViszGhrZPszMT4Wmw3btonFhiXEYg1Gb9aXvaMnUc7R
N5nlsY76hrPZbArLZ53YvawzK2albBArZblsGpvLurJRbCjbxfawcraXDWNV
bC/bwPaxWWwCy2EJbCi7k+1gu9mLrIoNYdtZFVvLdrE8Np0VsG5sNJvPVrLN
bAl7gg1mlWwnW822sSK2gm1iT7LHWRnbxPaF/289m8G6sH7hXv3ruAObry5k
qfqK9Q1ne9gBVsFeZQmskC1gKayQtWdFrIQNYAtYF1bCythgVsYeZEnsdnbM
dbuwRWwd2xU+x0p2D6tm+9kW9gqbybqxVHbY2jhWyJaxcvaovodZMVvNtrJn
2FOshK1h29gy9iwrZeWsOnwfa9hC9gLbzpaz59g8tpxtYI+xR9hiVsFeDvdl
E1vAVrEK9jRbyuJZAZvP+rAC1mrks0LWi+XK/fVtYFvC2nXsoPG9XCPf5fN+
Zv5GdA/V7LCvJsnTre3I+rA39f3t+DA/I9frGcNOsiPsArvEprAadpRdZJfZ
VFbLJjtfvNqTH2C/O57AWqP9aOxmzazF2jR1cPguB8p/RXuLZbJWli5/aNTJ
F11jHDtlfpLzxamJfD/7zfEgtlXdwVbprbRuHDsn/yJn6/vG/BWeog4I+6C3
3GykRudgn7A0eby15+Vfrc1np81PYx3UW/kb7Ibjf6LnVc0N74jpcrq+Wvma
nKHvuPkprK2axF9jfzi+Gb1P1DnhHZEpXzb6sP7sPX3J8iHjJ/msnhHsK/PX
WD81jX/E+spTXaMdS2avsz8dX4/2hzqQfcz6yceMRrnJ+WayOvP3Wfs1Oxeu
8S6r0XeL2iPc5zbyHH1ZrDg8v5PZXJbDFoVnfwa7n52WG+Xx1h41n8LWqxvD
++V5fWPZKbkhfL9Honcry1CLeFLk0V5hm1lleAY3skyWzrLCfrmDfWFcka/r
mcUaonehvjx1cXiXZOkZzb6Vz4c9/r75Mew7doGNZR+wL/U2sZ/DHmpkI/Qd
Z7Xh2XqLndB3nbWE/XKV9da3Vn0pvF9W6HmA/ShfCc/M5+Z/4J3UruH5uBn/
/w/VHHVeuAd5eiZGP16sO6t22BJ9djZOnRX9wOkbEj2TRnJ0v9lB3EOuN3pG
/1PYu53l48Y1uTk6P2syP8r5TrI6NpIdYp/qu8Suhv1cz86y7mqvsJ/bySOt
PSGf0Xc3e9t8BktUbwv7r72+/wApwdm4
                   "]]}],
                Lighting->{{"Ambient", 
                   RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
                  "Directional", 
                   RGBColor[
                   0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                   ImageScaled[{0, 2, 2}]}, {"Directional", 
                   RGBColor[
                   0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                   ImageScaled[{2, 2, 2}]}, {"Directional", 
                   RGBColor[
                   0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                   ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
              {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ckqhWEAx+HPPM/DXkJxA0JxAzLEDQjFgqVQZC8UN6BwjuGY55AkSTLe
gnALQnneLH495/8uvvMNFT3DnUNJURRNKVnhd7liKVFUxzO28JndHNSk3u0F
fnOVhalRdMFXfarK/mUDi120jTVsUod67X6OcpwznOOyVrTmZmJcZ5wbXA3n
4UwJe4ObTHCLm0Fth+wd7nCXu9zjvg60Zx+GzaNwxmOeaEmL7meW0xzjCPvY
rkb12NVsZRHr+eN5P/SiSvuc+Yzzy3ua54QG9GZ38ZHNPGUty1SqJ9cs4QOL
ec+i8J5VoDs7n7fM4w1zmaNsXdtZvGImL5nBdKXpwk4N35cp4f+T/r//H6DV
Qbw=
                "]]}, 
              {GrayLevel[0.2], 
               Line3DBox[{935, 1186, 934, 706, 936, 1330, 1426, 937, 1331, 
                1427, 938, 1187, 939, 1188, 940, 709, 941, 1332, 1428, 942, 
                1333, 1429, 943, 1189, 944, 1190, 945, 712, 946, 1334, 1430, 
                947, 1335, 1431, 948, 1191, 949, 1192, 950, 715, 951, 1336, 
                1432, 952, 1337, 1433, 953, 1193, 954}], 
               Line3DBox[{956, 1194, 955, 1378, 1195, 957, 719, 958, 1338, 
                1434, 959, 1196, 960, 1197, 961, 1379, 1198, 962, 722, 963, 
                1339, 1435, 964, 1199, 965, 1200, 966, 1380, 1201, 967, 725, 
                968, 1340, 1436, 969, 1202, 970, 1203, 971, 1381, 1204, 972, 
                728, 973, 1341, 1437, 974, 1205, 975}], 
               Line3DBox[{977, 1206, 976, 1382, 1207, 978, 1383, 1208, 979, 
                732, 980, 1209, 981, 1210, 982, 1384, 1211, 983, 1385, 1212, 
                984, 735, 985, 1213, 986, 1214, 987, 1386, 1215, 988, 1387, 
                1216, 989, 738, 990, 1217, 991, 1218, 992, 1388, 1219, 993, 
                1389, 1220, 994, 741, 995, 1221, 996}], 
               Line3DBox[{106, 107, 502, 108, 503, 109, 504, 110, 111, 112, 
                505, 113, 506, 114, 507, 115, 116, 117, 508, 118, 509, 119, 
                510, 120, 121, 122, 511, 123, 512, 124, 513, 125, 126}], 
               Line3DBox[{998, 1222, 997, 766, 999, 1342, 1438, 1000, 1343, 
                1439, 1001, 1223, 1002, 1224, 1003, 769, 1004, 1344, 1440, 
                1005, 1345, 1441, 1006, 1225, 1007, 1226, 1008, 772, 1009, 
                1346, 1442, 1010, 1347, 1443, 1011, 1227, 1012, 1228, 1013, 
                775, 1014, 1348, 1444, 1015, 1349, 1445, 1016, 1229, 1017}], 
               Line3DBox[{1019, 1230, 1018, 1390, 1231, 1020, 779, 1021, 1350,
                 1446, 1022, 1232, 1023, 1233, 1024, 1391, 1234, 1025, 782, 
                1026, 1351, 1447, 1027, 1235, 1028, 1236, 1029, 1392, 1237, 
                1030, 785, 1031, 1352, 1448, 1032, 1238, 1033, 1239, 1034, 
                1393, 1240, 1035, 788, 1036, 1353, 1449, 1037, 1241, 1038}], 
               Line3DBox[{1040, 1242, 1039, 1394, 1243, 1041, 1395, 1244, 
                1042, 792, 1043, 1245, 1044, 1246, 1045, 1396, 1247, 1046, 
                1397, 1248, 1047, 795, 1048, 1249, 1049, 1250, 1050, 1398, 
                1251, 1051, 1399, 1252, 1052, 798, 1053, 1253, 1054, 1254, 
                1055, 1400, 1255, 1056, 1401, 1256, 1057, 801, 1058, 1257, 
                1059}], 
               Line3DBox[{211, 212, 562, 213, 563, 214, 564, 215, 216, 217, 
                565, 218, 566, 219, 567, 220, 221, 222, 568, 223, 569, 224, 
                570, 225, 226, 227, 571, 228, 572, 229, 573, 230, 231}], 
               Line3DBox[{1061, 1258, 1060, 826, 1062, 1354, 1450, 1063, 1355,
                 1451, 1064, 1259, 1065, 1260, 1066, 829, 1067, 1356, 1452, 
                1068, 1357, 1453, 1069, 1261, 1070, 1262, 1071, 832, 1072, 
                1358, 1454, 1073, 1359, 1455, 1074, 1263, 1075, 1264, 1076, 
                835, 1077, 1360, 1456, 1078, 1361, 1457, 1079, 1265, 1080}], 
               Line3DBox[{1082, 1266, 1081, 1402, 1267, 1083, 839, 1084, 1362,
                 1458, 1085, 1268, 1086, 1269, 1087, 1403, 1270, 1088, 842, 
                1089, 1363, 1459, 1090, 1271, 1091, 1272, 1092, 1404, 1273, 
                1093, 845, 1094, 1364, 1460, 1095, 1274, 1096, 1275, 1097, 
                1405, 1276, 1098, 848, 1099, 1365, 1461, 1100, 1277, 1101}], 
               Line3DBox[{1103, 1278, 1102, 1406, 1279, 1104, 1407, 1280, 
                1105, 852, 1106, 1281, 1107, 1282, 1108, 1408, 1283, 1109, 
                1409, 1284, 1110, 855, 1111, 1285, 1112, 1286, 1113, 1410, 
                1287, 1114, 1411, 1288, 1115, 858, 1116, 1289, 1117, 1290, 
                1118, 1412, 1291, 1119, 1413, 1292, 1120, 861, 1121, 1293, 
                1122}], 
               Line3DBox[{316, 317, 622, 318, 623, 319, 624, 320, 321, 322, 
                625, 323, 626, 324, 627, 325, 326, 327, 628, 328, 629, 329, 
                630, 330, 331, 332, 631, 333, 632, 334, 633, 335, 336}], 
               Line3DBox[{1124, 1294, 1123, 886, 1125, 1366, 1462, 1126, 1367,
                 1463, 1127, 1295, 1128, 1296, 1129, 889, 1130, 1368, 1464, 
                1131, 1369, 1465, 1132, 1297, 1133, 1298, 1134, 892, 1135, 
                1370, 1466, 1136, 1371, 1467, 1137, 1299, 1138, 1300, 1139, 
                895, 1140, 1372, 1468, 1141, 1373, 1469, 1142, 1301, 1143}], 
               Line3DBox[{1145, 1302, 1144, 1414, 1303, 1146, 899, 1147, 1374,
                 1470, 1148, 1304, 1149, 1305, 1150, 1415, 1306, 1151, 902, 
                1152, 1375, 1471, 1153, 1307, 1154, 1308, 1155, 1416, 1309, 
                1156, 905, 1157, 1376, 1472, 1158, 1310, 1159, 1311, 1160, 
                1417, 1312, 1161, 908, 1162, 1377, 1473, 1163, 1313, 1164}], 
               Line3DBox[{1166, 1314, 1165, 1418, 1315, 1167, 1419, 1316, 
                1168, 912, 1169, 1317, 1170, 1318, 1171, 1420, 1319, 1172, 
                1421, 1320, 1173, 915, 1174, 1321, 1175, 1322, 1176, 1422, 
                1323, 1177, 1423, 1324, 1178, 918, 1179, 1325, 1180, 1326, 
                1181, 1424, 1327, 1182, 1425, 1328, 1183, 921, 1184, 1329, 
                1185}]}, 
              {GrayLevel[0.2], 
               Line3DBox[{442, 694, 443, 706, 466, 718, 1378, 478, 730, 1382, 
                490, 742, 502, 754, 514, 766, 526, 778, 1390, 538, 790, 1394, 
                550, 802, 562, 814, 574, 826, 586, 838, 1402, 598, 850, 1406, 
                610, 862, 622, 874, 634, 886, 646, 898, 1414, 658, 910, 1418, 
                670, 922, 682}], 
               Line3DBox[{444, 695, 445, 1426, 707, 467, 719, 479, 731, 1383, 
                491, 743, 503, 755, 515, 1438, 767, 527, 779, 539, 791, 1395, 
                551, 803, 563, 815, 575, 1450, 827, 587, 839, 599, 851, 1407, 
                611, 863, 623, 875, 635, 1462, 887, 647, 899, 659, 911, 1419, 
                671, 923, 683}], 
               Line3DBox[{446, 696, 447, 1427, 708, 468, 1434, 720, 480, 732, 
                492, 744, 504, 756, 516, 1439, 768, 528, 1446, 780, 540, 792, 
                552, 804, 564, 816, 576, 1451, 828, 588, 1458, 840, 600, 852, 
                612, 864, 624, 876, 636, 1463, 888, 648, 1470, 900, 660, 912, 
                672, 924, 684}], 
               Line3DBox[{6, 27, 939, 48, 960, 69, 981, 90, 111, 132, 1002, 
                153, 1023, 174, 1044, 195, 216, 237, 1065, 258, 1086, 279, 
                1107, 300, 321, 342, 1128, 363, 1149, 384, 1170, 405, 426}], 
               Line3DBox[{448, 697, 449, 709, 469, 721, 1379, 481, 733, 1384, 
                493, 745, 505, 757, 517, 769, 529, 781, 1391, 541, 793, 1396, 
                553, 805, 565, 817, 577, 829, 589, 841, 1403, 601, 853, 1408, 
                613, 865, 625, 877, 637, 889, 649, 901, 1415, 661, 913, 1420, 
                673, 925, 685}], 
               Line3DBox[{450, 698, 451, 1428, 710, 470, 722, 482, 734, 1385, 
                494, 746, 506, 758, 518, 1440, 770, 530, 782, 542, 794, 1397, 
                554, 806, 566, 818, 578, 1452, 830, 590, 842, 602, 854, 1409, 
                614, 866, 626, 878, 638, 1464, 890, 650, 902, 662, 914, 1421, 
                674, 926, 686}], 
               Line3DBox[{452, 699, 453, 1429, 711, 471, 1435, 723, 483, 735, 
                495, 747, 507, 759, 519, 1441, 771, 531, 1447, 783, 543, 795, 
                555, 807, 567, 819, 579, 1453, 831, 591, 1459, 843, 603, 855, 
                615, 867, 627, 879, 639, 1465, 891, 651, 1471, 903, 663, 915, 
                675, 927, 687}], 
               Line3DBox[{11, 32, 944, 53, 965, 74, 986, 95, 116, 137, 1007, 
                158, 1028, 179, 1049, 200, 221, 242, 1070, 263, 1091, 284, 
                1112, 305, 326, 347, 1133, 368, 1154, 389, 1175, 410, 431}], 
               Line3DBox[{454, 700, 455, 712, 472, 724, 1380, 484, 736, 1386, 
                496, 748, 508, 760, 520, 772, 532, 784, 1392, 544, 796, 1398, 
                556, 808, 568, 820, 580, 832, 592, 844, 1404, 604, 856, 1410, 
                616, 868, 628, 880, 640, 892, 652, 904, 1416, 664, 916, 1422, 
                676, 928, 688}], 
               Line3DBox[{456, 701, 457, 1430, 713, 473, 725, 485, 737, 1387, 
                497, 749, 509, 761, 521, 1442, 773, 533, 785, 545, 797, 1399, 
                557, 809, 569, 821, 581, 1454, 833, 593, 845, 605, 857, 1411, 
                617, 869, 629, 881, 641, 1466, 893, 653, 905, 665, 917, 1423, 
                677, 929, 689}], 
               Line3DBox[{458, 702, 459, 1431, 714, 474, 1436, 726, 486, 738, 
                498, 750, 510, 762, 522, 1443, 774, 534, 1448, 786, 546, 798, 
                558, 810, 570, 822, 582, 1455, 834, 594, 1460, 846, 606, 858, 
                618, 870, 630, 882, 642, 1467, 894, 654, 1472, 906, 666, 918, 
                678, 930, 690}], 
               Line3DBox[{16, 37, 949, 58, 970, 79, 991, 100, 121, 142, 1012, 
                163, 1033, 184, 1054, 205, 226, 247, 1075, 268, 1096, 289, 
                1117, 310, 331, 352, 1138, 373, 1159, 394, 1180, 415, 436}], 
               Line3DBox[{460, 703, 461, 715, 475, 727, 1381, 487, 739, 1388, 
                499, 751, 511, 763, 523, 775, 535, 787, 1393, 547, 799, 1400, 
                559, 811, 571, 823, 583, 835, 595, 847, 1405, 607, 859, 1412, 
                619, 871, 631, 883, 643, 895, 655, 907, 1417, 667, 919, 1424, 
                679, 931, 691}], 
               Line3DBox[{462, 704, 463, 1432, 716, 476, 728, 488, 740, 1389, 
                500, 752, 512, 764, 524, 1444, 776, 536, 788, 548, 800, 1401, 
                560, 812, 572, 824, 584, 1456, 836, 596, 848, 608, 860, 1413, 
                620, 872, 632, 884, 644, 1468, 896, 656, 908, 668, 920, 1425, 
                680, 932, 692}], 
               Line3DBox[{464, 705, 465, 1433, 717, 477, 1437, 729, 489, 741, 
                501, 753, 513, 765, 525, 1445, 777, 537, 1449, 789, 549, 801, 
                561, 813, 573, 825, 585, 1457, 837, 597, 1461, 849, 609, 861, 
                621, 873, 633, 885, 645, 1469, 897, 657, 1473, 909, 669, 921, 
                681, 933, 693}]}, {}, {}}},
            VertexNormals->CompressedData["
1:eJztXHdcVdeyRtSQXIwlLzbQBCtiS0Ts4KiJil3BAlGjYgMVkaggitKS2Btq
MKiIvWBHRNG4QLAiKigovYnAoYnGjnLP86zZ/rK4E9jmnCt5efwzv7PYbPae
8s3Mt2adJjYOFlO1tbS0wqpraVVVysYd1/Xd55LBBAn/v65ab2lb1+zpoNsM
ZbdG/mOLi/PF64G4z99l/YPr+YOtH40xt9VNZShHVfXrvMY8G7T+489DaN18
YtYNvWimkukAnWtbdd6fW1ns+H/H7oRdonq4TfPzf8DQIvyz7HXKvjzOwZBL
jHfqenU9D/cn7lfRmvarSmtfQwJv9d/+nbcpl+dQ/3L10IaIX7R3S8HuaJc2
gl007YcawpkPbnfh/RnqgbIvfsbfC3HKDAU/kRtfcu+vrjgl/INc17jdNYy3
VFxT70H5g9x4lIsn1P3VhUuVze5UPKorvqjnpOKOej91PQ+V3+Xirdz7fDC7
y8yzlD9ouk6m/AHjEO1ZXrxTz8OfW5Li81dU/3LrB7nXy7U71Z9S9qXiiFqn
7oPvg+8n+rmof3XlZQpvSTuWY3dNPeef1w9l/fk969sK46Rc+8qtx+TGqVz/
pPQm1w8pHFMXvlH1Qzn+VsZ/W/45PpSxu/D3jLhvufmd0rOm/Vmu3lDvrQm7
/9X8JZcHoPBBtKuQX95XvrfdNb0ut57XdJ9O2UtuPaCu+38ou1P4TOGw3Otl
1qfvWc9XHGfkxl0511e4j/uL9lW73eXqX66e/7wPKovP6qrnqbxJxh2xLrcO
/1B2p/RG6UdufpTrP1TdRelTbp0s1+7UOvU86urfNW13ufqn9KZpPVP+Jrcf
UdfzyMUHuff9UHZXFz5Q/q+u+Kok9dI7KRP//y52Vxc+q8sfPhh+yrQv9b4a
90MN211dfqIuHFCb3f+e9q20dv+7+1Ult+8/1u6aXq8gL1pZJCPe6x+/bhw+
4ZPIw2kMpV+PzPii7Vmw6eKTxa7e9xjKuzd9irulKkCx8ea0nl+ksQOGehvN
TCMgd/tmW/t2eRBgmtjHpvoFppIxMGD+aV+nCYWkP33vUFjzQtc01nF6rFPG
5Az4ZMK5FO219yuNf6tbz77tS0v8otIZymxDL4uvQzPhTeCj49UiM9nuhG5r
R+jfYntbh9WNj6bnPZ4cT3OK3RsIT7n8OrCZxaabRVDsZv6g96VweMTlSP2d
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
             
             "]], {}, {{}, {}}},
          Axes->True,
          AxesLabel->{None, None, None},
          BoxRatios->{1, 1, 0.4},
          DisplayFunction->Identity,
          FaceGridsStyle->Automatic,
          Method->{"DefaultBoundaryStyle" -> Directive[
              GrayLevel[0.3]], 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "RotationControl" -> "Globe"},
          PlotRange->{Full, Full, All},
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}},
          Ticks->{Automatic, Automatic, Automatic}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.9072586654423847`*^9},
 CellLabel->
  "Out[308]=",ExpressionUUID->"6d8de41d-d2f3-41bb-ae24-4c1d88fe2135"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"displayGrids", "[", 
  RowBox[{
   RowBox[{"Sequence", " ", "@@", " ", 
    RowBox[{"Import", "[", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"logDir", ",", " ", "\"\<coupling_21/log_1584000.mx\>\""}], 
      "]"}], "]"}]}], ",", " ", "blueColourRules"}], "]"}]], "Code",
 CellChangeTimes->{{3.906317533437263*^9, 
  3.9063175437987223`*^9}},ExpressionUUID->"ab4f3c93-b88d-4261-aa50-\
ed3b4033f205"]
},
WindowSize->{927.75, 786.},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.0 for Linux x86 (64-bit) (December 2, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["DarkStyle for Notebooks", "Title"], 
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Tongue menu cells", "Section"], 
         Cell[
          StyleData[
          "WolframAlphaShort", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "WolframAlphaLong", "Backspace" -> "Input"}, EvaluationMode -> 
          "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaShortInput", StyleDefinitions -> StyleData["Input"]], 
          EvaluationMode -> "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]], 
              CellBaseline -> Baseline], None}, {None, None}}, ShowCodeAssist -> 
          False, FormatType -> TextForm, FontFamily -> "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaLong", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "Input", "Backspace" -> "WolframAlphaShort"}, 
          EvaluationMode -> "WolframAlphaLong", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[WolframAlphaPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData["WolframAlphaFullOutput"], 
          CellMargins -> {{20, 10}, {Inherited, Inherited}}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ExternalLanguage"], CellFrame -> 1, 
             CellMargins -> {{66, 10}, {8, 8}}, 
             StyleKeyMapping -> {"Backspace" -> "Input"}, Evaluatable -> True,
              EvaluationMode -> "ExternalLanguage", CellGroupingRules -> 
             "InputGrouping", StripStyleOnPaste -> True, 
             CellEvaluationLanguage -> "Python", 
             CellFrameMargins -> {{4, 8}, {8, 8}}, CellFrameColor -> 
             RGBColor[0.2549, 0.23137, 0.42549], CellFrameLabels -> {{
                Cell[
                 BoxData[
                  DynamicBox[
                   ToBoxes[
                   ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged; 
                    FrontEnd`Private`MakeExternalLanguageMenu[
                    ExternalEvaluate`FE`GetDefaultCellEvaluationLanguage[], 
                    ExternalEvaluate`FE`GetExternalLanguageMenuData[]], 
                    StandardForm], 
                   TrackedSymbols :> {
                    ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged}, 
                   ImageSizeCache -> {
                    35., {10.64208984375, 17.35791015625}}]], "Output", 
                 Background -> None, CellFrame -> 0], None}, {None, None}}, 
             CellFrameLabelMargins -> 0, AllowInlineCells -> False, 
             Hyphenation -> False, AutoQuoteCharacters -> {}, 
             PasteAutoQuoteCharacters -> {}, LanguageCategory -> "Formula", 
             ScriptLevel -> 1, MenuSortingValue -> 1800, FontFamily -> Dynamic[
               CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
             FontColor -> GrayLevel[0.97], Background -> 
             RGBColor[0.18, 0.172, 0.22]], 
            Cell[
             StyleData["ExternalLanguage", "Presentation"], 
             CellMargins -> {{101, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "SlideShow"], ShowGroupOpener -> 
             False, CellMargins -> {{110, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "Printout"], 
             CellMargins -> {{48, 10}, {8, 8}}, 
             CellFrameMargins -> {{2, 8}, {8, 8}}]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Notebook options settings", "Section"], 
         Cell[
          StyleData[All, "Working"], InitializationCellEvaluation -> False, 
          DockedCells -> None, DefaultNewCellStyle -> "Code", 
          ShowPredictiveInterface -> False], 
         Cell[
          StyleData["Notebook"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0., 0.8, 1], "HoverColor" -> 
            RGBColor[0.78, 0.64, 1], "Thickness" -> 1.3, "Widths" -> {2, 8}}, 
          StyleKeyMapping -> {
           "==" -> "WolframAlphaLong", "Backspace" -> "WolframAlphaShort", 
            "=" -> "WolframAlphaShort", "*" -> "Item", ">" -> 
            "ExternalLanguage", "Backspace" -> "Code"}, 
          AutoStyleOptions -> {
           "CommentStyle" -> {
             FontColor -> RGBColor[0.89, 0.56, 1., 0.95], ShowAutoStyles -> 
              False, ShowSyntaxStyles -> False, AutoNumberFormatting -> 
              False}, "ExcessArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "FunctionLocalVariableStyle" -> {
             FontColor -> RGBColor[0.52549, 0.843137, 1.]}, 
            "GraphicsCompatibilityProblemStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "LocalScopeConflictStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "LocalVariableStyle" -> {
             FontColor -> RGBColor[0., 0.8200000000000001, 0.32]}, 
            "MissingArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "MisspelledWordStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "NoKernelPresentStyle" -> {
             FontColor -> 
              RGBColor[
               0.16470588235294117`, 0.6313725490196078, 0.596078431372549]}, 
            "PatternVariableStyle" -> {
             FontColor -> RGBColor[0.11, 1., 0.08], FontSlant -> "Italic"}, 
            "StringStyle" -> {
             FontColor -> RGBColor[0.98, 0.71, 0.], ShowAutoStyles -> False, 
              ShowSyntaxStyles -> False, AutoNumberFormatting -> False}, 
            "UndefinedSymbolStyle" -> {FontColor -> RGBColor[0.42, 0.94, 1]}, 
            "UnknownOptionStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "UnwantedAssignmentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 
                0.1843137254901961]}}, 
          CodeAssistOptions -> {
           "AutoConvertEnable" -> False, 
            "HeadHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}, "MatchHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}}, TranslationOptions -> {"Language" -> None}, FontColor -> 
          RGBColor[0, 0.7, 1], Background -> GrayLevel[0.15]], 
         Cell[
          StyleData["DialogStyle"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["NotebookObject"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["LinguisticAssistant"], FontColor -> 
          RGBColor[0, 0.7, 1]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Title and Section Cells", "Section"], 
         Cell[
          StyleData["Title"], FontColor -> GrayLevel[1]], 
         Cell[
          StyleData["Chapter"], FontColor -> RGBColor[0.8, 0.8, 0.8]], 
         Cell[
          StyleData["Subchapter"], FontColor -> RGBColor[0.65, 0.05, 0.65]], 
         Cell[
          StyleData["Subtitle"], FontColor -> 
          RGBColor[0.196078, 0.694118, 0.862745]], 
         Cell[
          StyleData["Subsubtitle"], FontColor -> 
          RGBColor[0.196078, 0.394118, 0.562745]], 
         Cell[
          StyleData["Subsubtitle"]], 
         Cell[
          StyleData["Section"], FontColor -> 
          RGBColor[
           0.1399099717708095, 0.5224231326771954, 0.6501869230182346]], 
         Cell[
          StyleData["Subsection"], FontColor -> GrayLevel[0.749996]], 
         Cell[
          StyleData["Subsubsection"], FontColor -> 
          RGBColor[0.823529, 0.490654, 0.202274]], 
         Cell[
          StyleData["Subsubsubsection"], FontColor -> 
          RGBColor[0.954147, 0.694224, 0.124651]], 
         Cell[
          StyleData["Subsubsubsubsection"], FontColor -> 
          RGBColor[0.913237, 0.365469, 0.0854353]], 
         Cell[
          StyleData["Text"], FontFamily -> "Gill Sans Light", FontSize -> 14, 
          FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
          GrayLevel[0.683803]], 
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[0, 0.7, 1]], CellMargins -> {{81, 10}, {4, 8}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "Subitem", "*" -> "Subitem"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "Item", 
          CounterAssignments -> {{"Subitem", 0}, {"Subsubitem", 0}}, 
          MenuSortingValue -> 1600, FontFamily -> "Source Sans Pro", FontSize -> 
          15], 
         Cell[
          StyleData["ItemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubsubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          CellGroupData[{
            Cell["Chapter", "Subsection"], 
            Cell[
             StyleData["Chapter"], CounterIncrements -> "Chapter", 
             CounterAssignments -> {{"Subchapter", 0}, {"Section", 0}, {
               "Equation", 0}, {"Figure", 0}, {"Subsubtitle", 0}, {
               "Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1150, 
             MenuCommandKey :> "2"], 
            Cell[
             StyleData["Subchapter"], CellDingbat -> 
             StyleBox["\[MathematicaIcon]", Alignment -> Baseline, 
               RGBColor[0., 0.043, 0.9]], CounterIncrements -> "Subchapter", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1200, 
             MenuCommandKey :> "3"]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Input and Output cells", "Section"], 
         Cell[
          StyleData["Code"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontWeight -> Plain, FontColor -> GrayLevel[1], 
          Background -> GrayLevel[0.1]], 
         Cell[
          StyleData["InitializationCell"], 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellFrameMargins -> {{10, 10}, {5, 5}}, CellFrameLabelMargins -> -5,
           FontColor -> GrayLevel[1], Background -> GrayLevel[0.25]], 
         Cell[
          StyleData["Input"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontColor -> GrayLevel[0.7]], 
         Cell[
          StyleData["Output"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontSize -> 13], 
         
         Cell[
          StyleData["Message"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          RGBColor[
           0.704600595101854, 0.24277103837644007`, 0.22278171969176777`]], 
         Cell[
          StyleData["Print"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          GrayLevel[0.3]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["misc", "Section"], 
         Cell[
          StyleData["InformationCell"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.760174, 0.600641, 0.675288]}, FontColor -> 
          GrayLevel[0.3]], 
         Cell[
          StyleData["InformationLink"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["InformationLinkLF"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["CellLabel"], 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontSize -> 9]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Formulas and Programming", "Section"], 
         Cell[
          StyleData["DisplayFormula"], FontColor -> GrayLevel[0.85]], 
         Cell[
          StyleData["DisplayFormulaNumbered"], FontColor -> GrayLevel[0.85]], 
         
         Cell[
          StyleData["Program"], CellFrameColor -> GrayLevel[0.4]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          TextData[{"Styles for ", 
            StyleBox["Mathematica", FontSlant -> "Italic"], 
            " System\[Hyphen]specific Elements"}], "Section", 
          CellChangeTimes -> {{3.601920784160323*^9, 3.60192078489342*^9}, 
            3.60356525124664*^9, {3.6037117681643677`*^9, 
            3.6037117683195887`*^9}}], 
         Cell[
          CellGroupData[{
            Cell["FormatType Styles", "Subsection"], 
            Cell[
             StyleData["StandardForm"]], 
            Cell[
             StyleData["CellExpression"], FontColor -> GrayLevel[0], 
             Background -> GrayLevel[0.75]], 
            Cell[
             StyleData["CellLabel"], FontSize -> 9, FontColor -> 
             RGBColor[0.603861, 0.615915, 0.607843]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
            "Graphics Styles", "Subsection", 
             CellChangeTimes -> {{3.603565272271762*^9, 
              3.603565284491351*^9}}], 
            Cell[
             StyleData["GraphicsAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["GraphicsFrame"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["Graphics3DAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Arial", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]]}, 
           Open]]}, Open]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "13.0 for Linux x86 (64-bit) (December 2, 2021)", StyleDefinitions -> 
  "Default.nb"],
ExpressionUUID->"84f3de0a-0d84-46cb-a381-654e193d7d35"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 254, 5, 27, "Input",ExpressionUUID->"ccd3e227-a6c0-4673-9247-965b041328ac"],
Cell[815, 27, 160, 3, 35, "Text",ExpressionUUID->"7ca1d755-3490-4dec-9324-a43511d4d242"],
Cell[978, 32, 523, 13, 62, "Code",ExpressionUUID->"ebae49cf-8b58-4921-8a9d-f7e44ea0234b"],
Cell[1504, 47, 292, 8, 57, "Text",ExpressionUUID->"685b8f17-9041-4799-8cd0-f9988ef4cbca"],
Cell[1799, 57, 3080, 85, 344, "Code",ExpressionUUID->"6c41c651-013e-4e44-9f1f-4aff284c593c"],
Cell[4882, 144, 337, 7, 80, "Text",ExpressionUUID->"34226dcd-589c-4b8c-9404-7108a5175185"],
Cell[5222, 153, 22910, 580, 1803, "Code",ExpressionUUID->"698d248a-498b-48b1-856a-96ca1ac9964e"],
Cell[CellGroupData[{
Cell[28157, 737, 692, 12, 38, "Code",ExpressionUUID->"9eae7779-6611-466c-b4da-e135a9e0b764"],
Cell[28852, 751, 133812, 2191, 605, "Output",ExpressionUUID->"8239e021-501a-4405-b4ec-a66eacd9946b"]
}, Open  ]],
Cell[162679, 2945, 244, 4, 35, "Text",ExpressionUUID->"838ed675-18b6-471f-87c6-8e111749f395"],
Cell[CellGroupData[{
Cell[162948, 2953, 7631, 192, 648, "Code",ExpressionUUID->"6c781b18-8496-4136-8407-0bc2cea9ec39"],
Cell[170582, 3147, 2147, 41, 308, "Output",ExpressionUUID->"e825614a-ffca-4189-bdf2-c437b95f6cbd"]
}, Open  ]],
Cell[172744, 3191, 23944, 558, 2271, "Code",ExpressionUUID->"26a7099b-d8c0-45e4-aea9-5dfb5beb1f6b"],
Cell[196691, 3751, 213, 9, 124, "Text",ExpressionUUID->"9bee187d-e51f-4545-9b66-7d53566249a6"],
Cell[196907, 3762, 3118, 78, 344, "Code",ExpressionUUID->"1853123a-5fe1-4d29-8057-a868494262bd"],
Cell[200028, 3842, 1350, 35, 250, "Code",ExpressionUUID->"cbcb5368-faac-41c4-95b2-57026a030aec"],
Cell[CellGroupData[{
Cell[201403, 3881, 444, 9, 38, "Code",ExpressionUUID->"1c8eeaa0-0eff-4a55-8570-87f764c53467"],
Cell[201850, 3892, 105615, 1790, 628, "Output",ExpressionUUID->"b9ecfc89-edf8-42c1-811e-685fa8af3856"]
}, Open  ]],
Cell[307480, 5685, 531, 11, 124, "Text",ExpressionUUID->"46a3a831-0d98-43c5-ad74-c16d7ad6fa55"],
Cell[CellGroupData[{
Cell[308036, 5700, 516, 9, 38, "Code",ExpressionUUID->"0b6cc787-dcb9-4e33-a5db-df9d319ab59d"],
Cell[CellGroupData[{
Cell[308577, 5713, 377, 9, 25, "Print",ExpressionUUID->"daa01159-4c4b-456e-8793-91134bdd765a"],
Cell[308957, 5724, 373, 9, 25, "Print",ExpressionUUID->"245fb182-8c01-4ae6-82f3-49b76497b599"]
}, Open  ]],
Cell[309345, 5736, 440, 10, 31, "Message",ExpressionUUID->"e522afd6-2ad2-4c87-9828-46646dd4f003"],
Cell[CellGroupData[{
Cell[309810, 5750, 494, 11, 25, "Print",ExpressionUUID->"c6336191-d2ac-4db9-8e8d-9e3b3b53bd00"],
Cell[310307, 5763, 175, 4, 25, "Print",ExpressionUUID->"dc0cabec-20e7-4b14-a4b6-994d897d2de2"],
Cell[310485, 5769, 453, 11, 25, "Print",ExpressionUUID->"b8b5b1a0-5681-4c8a-b04f-dbd7a63dc997"]
}, Open  ]],
Cell[310953, 5783, 101044, 1685, 618, "Output",ExpressionUUID->"6d8de41d-d2f3-41bb-ae24-4c1d88fe2135"]
}, Open  ]],
Cell[412012, 7471, 428, 10, 38, "Code",ExpressionUUID->"ab4f3c93-b88d-4261-aa50-ed3b4033f205"]
}
]
*)

